

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 05 16:35:26 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 23/03/2023 GMT
    84                           ; 
    85                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   007A9E                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _lcd1
   123   007A9E  02                 	db	2
   124   007A9F  0A                 	db	10
   125   007AA0  12                 	db	18
   126   007AA1  1A                 	db	26
   127   007AA2  22                 	db	34
   128   007AA3  2A                 	db	42
   129                           
   130                           ;initializer for _lcd_counter
   131   007AA4  01                 	db	1
   132                           
   133                           	psect	idataBANK1
   134   007A2C                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _port_registers
   138   007A2C  80                 	db	128
   139   007A2D  0F                 	db	15
   140   007A2E  81                 	db	129
   141   007A2F  0F                 	db	15
   142   007A30  82                 	db	130
   143   007A31  0F                 	db	15
   144   007A32  83                 	db	131
   145   007A33  0F                 	db	15
   146   007A34  84                 	db	132
   147   007A35  0F                 	db	15
   148                           
   149                           ;initializer for _lat_registers
   150   007A36  89                 	db	137
   151   007A37  0F                 	db	15
   152   007A38  8A                 	db	138
   153   007A39  0F                 	db	15
   154   007A3A  8B                 	db	139
   155   007A3B  0F                 	db	15
   156   007A3C  8C                 	db	140
   157   007A3D  0F                 	db	15
   158   007A3E  8D                 	db	141
   159   007A3F  0F                 	db	15
   160                           
   161                           ;initializer for _tris_registers
   162   007A40  92                 	db	146
   163   007A41  0F                 	db	15
   164   007A42  93                 	db	147
   165   007A43  0F                 	db	15
   166   007A44  94                 	db	148
   167   007A45  0F                 	db	15
   168   007A46  95                 	db	149
   169   007A47  0F                 	db	15
   170   007A48  96                 	db	150
   171   007A49  0F                 	db	15
   172                           
   173                           ;initializer for _keypad
   174   007A4A  03                 	db	3
   175   007A4B  0B                 	db	11
   176   007A4C  13                 	db	19
   177   007A4D  1B                 	db	27
   178   007A4E  63                 	db	99
   179   007A4F  6B                 	db	107
   180   007A50  73                 	db	115
   181   007A51  7B                 	db	123
   182                           
   183                           	psect	idataBANK2
   184   007A8E                     __pidataBANK2:
   185                           	callstack 0
   186                           
   187                           ;initializer for _keypad_values
   188   007A8E  37                 	db	55
   189   007A8F  38                 	db	56
   190   007A90  39                 	db	57
   191   007A91  2F                 	db	47
   192   007A92  34                 	db	52
   193   007A93  35                 	db	53
   194   007A94  36                 	db	54
   195   007A95  2A                 	db	42
   196   007A96  31                 	db	49
   197   007A97  32                 	db	50
   198   007A98  33                 	db	51
   199   007A99  2D                 	db	45
   200   007A9A  23                 	db	35
   201   007A9B  30                 	db	48
   202   007A9C  3D                 	db	61
   203   007A9D  2B                 	db	43
   204                           
   205                           	psect	smallconst
   206   001000                     __psmallconst:
   207                           	callstack 0
   208   001000  00                 	db	0
   209   001001                     _dp_l:
   210                           	callstack 0
   211   001001  0000               	dw	0
   212   001003  0000               	dw	0
   213   001005  CFDC               	dw	53212
   214   001007  35D1               	dw	13777
   215   001009                     __end_of_dp_l:
   216                           	callstack 0
   217   001009                     _dp_h:
   218                           	callstack 0
   219   001009  0000               	dw	0
   220   00100B  0000               	dw	0
   221   00100D  C000               	dw	49152
   222   00100F  3F15               	dw	16149
   223   001011                     __end_of_dp_h:
   224                           	callstack 0
   225   001011                     _bp:
   226                           	callstack 0
   227   001011  0000               	dw	0
   228   001013  3F80               	dw	16256
   229   001015  0000               	dw	0
   230   001017  3FC0               	dw	16320
   231   001019                     __end_of_bp:
   232                           	callstack 0
   233   001019  A570               	dw	42352
   234   00101B  36EC               	dw	14060
   235   00101D                     __end_of_ivln2_l:
   236                           	callstack 0
   237   00101D  AA3B               	dw	43579
   238   00101F  3FB8               	dw	16312
   239   001021                     __end_of_ivln2:
   240                           	callstack 0
   241   001021  384F               	dw	14415
   242   001023  3F76               	dw	16246
   243   001025                     __end_of_cp:
   244                           	callstack 0
   245   001025  AA3C               	dw	43580
   246   001027  3338               	dw	13112
   247   001029                     __end_of_ovt:
   248                           	callstack 0
   249   001029  BE8C               	dw	48780
   250   00102B  35BF               	dw	13759
   251   00102D                     __end_of_lg2_l:
   252                           	callstack 0
   253   00102D  7200               	dw	29184
   254   00102F  3F31               	dw	16177
   255   001031                     __end_of_lg2_h:
   256                           	callstack 0
   257   001031  7218               	dw	29208
   258   001033  3F31               	dw	16177
   259   001035                     __end_of_lg2:
   260                           	callstack 0
   261   001035  BB4C               	dw	47948
   262   001037  3331               	dw	13105
   263   001039                     __end_of_P5:
   264                           	callstack 0
   265   001039  EA0E               	dw	59918
   266   00103B  B5DD               	dw	46557
   267   00103D                     __end_of_P4:
   268                           	callstack 0
   269   00103D  B355               	dw	45909
   270   00103F  388A               	dw	14474
   271   001041                     __end_of_P3:
   272                           	callstack 0
   273   001041  0B61               	dw	2913
   274   001043  BB36               	dw	47926
   275   001045                     __end_of_P2:
   276                           	callstack 0
   277   001045  AAAB               	dw	43691
   278   001047  3E2A               	dw	15914
   279   001049                     __end_of_P1:
   280                           	callstack 0
   281   001049  F142               	dw	61762
   282   00104B  3E53               	dw	15955
   283   00104D                     __end_of_L6:
   284                           	callstack 0
   285   00104D  3255               	dw	12885
   286   00104F  3E6C               	dw	15980
   287   001051                     __end_of_L5:
   288                           	callstack 0
   289   001051  A305               	dw	41733
   290   001053  3E8B               	dw	16011
   291   001055                     __end_of_L4:
   292                           	callstack 0
   293   001055  AAAB               	dw	43691
   294   001057  3EAA               	dw	16042
   295   001059                     __end_of_L3:
   296                           	callstack 0
   297   001059  6DB7               	dw	28087
   298   00105B  3EDB               	dw	16091
   299   00105D                     __end_of_L2:
   300                           	callstack 0
   301   00105D  999A               	dw	39322
   302   00105F  3F19               	dw	16153
   303   001061                     __end_of_L1:
   304                           	callstack 0
   305   001061  0000               	dw	0
   306   001063  4B80               	dw	19328
   307   001065                     __end_of_two24:
   308                           	callstack 0
   309   001065  AA00               	dw	43520
   310   001067  3FB8               	dw	16312
   311   001069                     __end_of_ivln2_h:
   312                           	callstack 0
   313   001069  23C6               	dw	9158
   314   00106B  B8F6               	dw	47350
   315   00106D                     __end_of_cp_l:
   316                           	callstack 0
   317   00106D  4000               	dw	16384
   318   00106F  3F76               	dw	16246
   319   001071                     __end_of_cp_h:
   320                           	callstack 0
   321   000000                     _PORTE	set	3972
   322   000000                     _PORTD	set	3971
   323   000000                     _PORTC	set	3970
   324   000000                     _PORTB	set	3969
   325   000000                     _PORTA	set	3968
   326   000000                     _LATA	set	3977
   327   000000                     _TRISA	set	3986
   328   000000                     _TRISE	set	3990
   329   000000                     _TRISD	set	3989
   330   000000                     _TRISC	set	3988
   331   000000                     _TRISB	set	3987
   332   000000                     _LATE	set	3981
   333   000000                     _LATD	set	3980
   334   000000                     _LATC	set	3979
   335   000000                     _LATB	set	3978
   336   001071                     STR_8:
   337   001071  20                 	db	32
   338   001072  20                 	db	32
   339   001073  20                 	db	32
   340   001074  20                 	db	32
   341   001075  20                 	db	32
   342   001076  20                 	db	32
   343   001077  20                 	db	32
   344   001078  20                 	db	32
   345   001079  20                 	db	32
   346   00107A  20                 	db	32
   347   00107B  20                 	db	32
   348   00107C  20                 	db	32
   349   00107D  20                 	db	32
   350   00107E  20                 	db	32
   351   00107F  20                 	db	32
   352   001080  20                 	db	32
   353   001081  20                 	db	32
   354   001082  20                 	db	32
   355   001083  20                 	db	32
   356   001084  20                 	db	32
   357   001085  20                 	db	32
   358   001086  20                 	db	32
   359   001087  20                 	db	32
   360   001088  20                 	db	32
   361   001089  20                 	db	32
   362   00108A  20                 	db	32
   363   00108B  20                 	db	32
   364   00108C  00                 	db	0
   365   00108D                     STR_7:
   366   00108D  68                 	db	104	;'h'
   367   00108E  69                 	db	105	;'i'
   368   00108F  6E                 	db	110	;'n'
   369   001090  74                 	db	116	;'t'
   370   001091  3A                 	db	58	;':'
   371   001092  6D                 	db	109	;'m'
   372   001093  61                 	db	97	;'a'
   373   001094  78                 	db	120	;'x'
   374   001095  20                 	db	32
   375   001096  32                 	db	50	;'2'
   376   001097  20                 	db	32
   377   001098  6F                 	db	111	;'o'
   378   001099  70                 	db	112	;'p'
   379   00109A  65                 	db	101	;'e'
   380   00109B  72                 	db	114	;'r'
   381   00109C  61                 	db	97	;'a'
   382   00109D  74                 	db	116	;'t'
   383   00109E  69                 	db	105	;'i'
   384   00109F  6F                 	db	111	;'o'
   385   0010A0  6E                 	db	110	;'n'
   386   0010A1  21                 	db	33
   387   0010A2  21                 	db	33
   388   0010A3  00                 	db	0
   389   0010A4                     STR_3:
   390   0010A4  68                 	db	104	;'h'
   391   0010A5  69                 	db	105	;'i'
   392   0010A6  6E                 	db	110	;'n'
   393   0010A7  74                 	db	116	;'t'
   394   0010A8  3A                 	db	58	;':'
   395   0010A9  6D                 	db	109	;'m'
   396   0010AA  61                 	db	97	;'a'
   397   0010AB  78                 	db	120	;'x'
   398   0010AC  20                 	db	32
   399   0010AD  34                 	db	52	;'4'
   400   0010AE  20                 	db	32
   401   0010AF  64                 	db	100	;'d'
   402   0010B0  69                 	db	105	;'i'
   403   0010B1  67                 	db	103	;'g'
   404   0010B2  69                 	db	105	;'i'
   405   0010B3  74                 	db	116	;'t'
   406   0010B4  73                 	db	115	;'s'
   407   0010B5  00                 	db	0
   408   0010B6                     STR_1:
   409   0010B6  73                 	db	115	;'s'
   410   0010B7  79                 	db	121	;'y'
   411   0010B8  6E                 	db	110	;'n'
   412   0010B9  74                 	db	116	;'t'
   413   0010BA  61                 	db	97	;'a'
   414   0010BB  78                 	db	120	;'x'
   415   0010BC  20                 	db	32
   416   0010BD  65                 	db	101	;'e'
   417   0010BE  72                 	db	114	;'r'
   418   0010BF  72                 	db	114	;'r'
   419   0010C0  6F                 	db	111	;'o'
   420   0010C1  72                 	db	114	;'r'
   421   0010C2  20                 	db	32
   422   0010C3  21                 	db	33
   423   0010C4  00                 	db	0
   424   0010C5                     STR_15:
   425   0010C5  63                 	db	99	;'c'
   426   0010C6  61                 	db	97	;'a'
   427   0010C7  6C                 	db	108	;'l'
   428   0010C8  63                 	db	99	;'c'
   429   0010C9  20                 	db	32
   430   0010CA  69                 	db	105	;'i'
   431   0010CB  73                 	db	115	;'s'
   432   0010CC  20                 	db	32
   433   0010CD  72                 	db	114	;'r'
   434   0010CE  65                 	db	101	;'e'
   435   0010CF  61                 	db	97	;'a'
   436   0010D0  64                 	db	100	;'d'
   437   0010D1  79                 	db	121	;'y'
   438   0010D2  00                 	db	0
   439   0010D3                     STR_11:
   440   0010D3  25                 	db	37
   441   0010D4  2E                 	db	46
   442   0010D5  32                 	db	50	;'2'
   443   0010D6  66                 	db	102	;'f'
   444   0010D7  00                 	db	0
   445   0010D8                     STR_16:
   446   0010D8  69                 	db	105	;'i'
   447   0010D9  6E                 	db	110	;'n'
   448   0010DA  66                 	db	102	;'f'
   449   0010DB  00                 	db	0
   450   0010DC                     STR_19:
   451   0010DC  6E                 	db	110	;'n'
   452   0010DD  61                 	db	97	;'a'
   453   0010DE  6E                 	db	110	;'n'
   454   0010DF  00                 	db	0
   455   0010E0                     STR_12:
   456   0010E0  25                 	db	37
   457   0010E1  69                 	db	105	;'i'
   458   0010E2  00                 	db	0
   459   0010E3  00                 	db	0	; dummy byte at the end
   460   000000                     
   461                           ; #config settings
   462                           
   463                           	psect	cinit
   464   007226                     __pcinit:
   465                           	callstack 0
   466   007226                     start_initialization:
   467                           	callstack 0
   468   007226                     __initialization:
   469                           	callstack 0
   470                           
   471                           ; Initialize objects allocated to BANK2 (16 bytes)
   472                           ; load TBLPTR registers with __pidataBANK2
   473   007226  0E8E               	movlw	low __pidataBANK2
   474   007228  6EF6               	movwf	tblptrl,c
   475   00722A  0E7A               	movlw	high __pidataBANK2
   476   00722C  6EF7               	movwf	tblptrh,c
   477   00722E  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   478   007230  6EF8               	movwf	tblptru,c
   479   007232  EE02  F050         	lfsr	0,__pdataBANK2
   480   007236  EE10 F010          	lfsr	1,16
   481   00723A                     copy_data0:
   482   00723A  0009               	tblrd		*+
   483   00723C  CFF5 FFEE          	movff	tablat,postinc0
   484   007240  50E5               	movf	postdec1,w,c
   485   007242  50E1               	movf	fsr1l,w,c
   486   007244  E1FA               	bnz	copy_data0
   487                           
   488                           ; Initialize objects allocated to BANK1 (38 bytes)
   489                           ; load TBLPTR registers with __pidataBANK1
   490   007246  0E2C               	movlw	low __pidataBANK1
   491   007248  6EF6               	movwf	tblptrl,c
   492   00724A  0E7A               	movlw	high __pidataBANK1
   493   00724C  6EF7               	movwf	tblptrh,c
   494   00724E  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   495   007250  6EF8               	movwf	tblptru,c
   496   007252  EE01  F0B8         	lfsr	0,__pdataBANK1
   497   007256  EE10 F026          	lfsr	1,38
   498   00725A                     copy_data1:
   499   00725A  0009               	tblrd		*+
   500   00725C  CFF5 FFEE          	movff	tablat,postinc0
   501   007260  50E5               	movf	postdec1,w,c
   502   007262  50E1               	movf	fsr1l,w,c
   503   007264  E1FA               	bnz	copy_data1
   504                           
   505                           ; Initialize objects allocated to BANK0 (7 bytes)
   506                           ; load TBLPTR registers with __pidataBANK0
   507   007266  0E9E               	movlw	low __pidataBANK0
   508   007268  6EF6               	movwf	tblptrl,c
   509   00726A  0E7A               	movlw	high __pidataBANK0
   510   00726C  6EF7               	movwf	tblptrh,c
   511   00726E  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   512   007270  6EF8               	movwf	tblptru,c
   513   007272  EE00  F0F9         	lfsr	0,__pdataBANK0
   514   007276  EE10 F007          	lfsr	1,7
   515   00727A                     copy_data2:
   516   00727A  0009               	tblrd		*+
   517   00727C  CFF5 FFEE          	movff	tablat,postinc0
   518   007280  50E5               	movf	postdec1,w,c
   519   007282  50E1               	movf	fsr1l,w,c
   520   007284  E1FA               	bnz	copy_data2
   521                           
   522                           ; Clear objects allocated to BANK2 (80 bytes)
   523   007286  EE02  F000         	lfsr	0,__pbssBANK2
   524   00728A  0E50               	movlw	80
   525   00728C                     clear_0:
   526   00728C  6AEE               	clrf	postinc0,c
   527   00728E  06E8               	decf	wreg,f,c
   528   007290  E1FD               	bnz	clear_0
   529                           
   530                           ; Clear objects allocated to BANK1 (28 bytes)
   531   007292  EE01  F0DE         	lfsr	0,__pbssBANK1
   532   007296  0E1C               	movlw	28
   533   007298                     clear_1:
   534   007298  6AEE               	clrf	postinc0,c
   535   00729A  06E8               	decf	wreg,f,c
   536   00729C  E1FD               	bnz	clear_1
   537                           
   538                           ; Clear objects allocated to BANK0 (39 bytes)
   539   00729E  EE00  F0D2         	lfsr	0,__pbssBANK0
   540   0072A2  0E27               	movlw	39
   541   0072A4                     clear_2:
   542   0072A4  6AEE               	clrf	postinc0,c
   543   0072A6  06E8               	decf	wreg,f,c
   544   0072A8  E1FD               	bnz	clear_2
   545   0072AA                     end_of_initialization:
   546                           	callstack 0
   547   0072AA                     __end_of__initialization:
   548                           	callstack 0
   549   0072AA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   550   0072AC  6EF8               	movwf	tblptru,c
   551   0072AE  0100               	movlb	0
   552   0072B0  EFFB  F01E         	goto	_main	;jump to C main() function
   553                           
   554                           	psect	bssBANK0
   555   0000D2                     __pbssBANK0:
   556                           	callstack 0
   557   0000D2                     _width:
   558                           	callstack 0
   559   0000D2                     	ds	2
   560   0000D4                     _prec:
   561                           	callstack 0
   562   0000D4                     	ds	2
   563   0000D6                     _flags:
   564                           	callstack 0
   565   0000D6                     	ds	1
   566   0000D7                     ecu_relay_off@F3487:
   567                           	callstack 0
   568   0000D7                     	ds	1
   569   0000D8                     ecu_relay_on@F3482:
   570                           	callstack 0
   571   0000D8                     	ds	1
   572   0000D9                     ecu_relay_initialize@F3477:
   573                           	callstack 0
   574   0000D9                     	ds	1
   575   0000DA                     ecu_led_turn_toggle@F3498:
   576                           	callstack 0
   577   0000DA                     	ds	1
   578   0000DB                     ecu_led_turn_off@F3493:
   579                           	callstack 0
   580   0000DB                     	ds	1
   581   0000DC                     ecu_led_turn_on@F3488:
   582                           	callstack 0
   583   0000DC                     	ds	1
   584   0000DD                     ecu_led_initialize@F3483:
   585                           	callstack 0
   586   0000DD                     	ds	1
   587   0000DE                     _keypad_value:
   588                           	callstack 0
   589   0000DE                     	ds	1
   590   0000DF                     _total_result:
   591                           	callstack 0
   592   0000DF                     	ds	4
   593   0000E3                     _result:
   594                           	callstack 0
   595   0000E3                     	ds	4
   596   0000E7                     _num3_val:
   597                           	callstack 0
   598   0000E7                     	ds	4
   599   0000EB                     _num2_val:
   600                           	callstack 0
   601   0000EB                     	ds	4
   602   0000EF                     _num1_val:
   603                           	callstack 0
   604   0000EF                     	ds	4
   605   0000F3                     _operation3:
   606                           	callstack 0
   607   0000F3                     	ds	1
   608   0000F4                     _operation2:
   609                           	callstack 0
   610   0000F4                     	ds	1
   611   0000F5                     _operation:
   612                           	callstack 0
   613   0000F5                     	ds	1
   614   0000F6                     _counter_num3:
   615                           	callstack 0
   616   0000F6                     	ds	1
   617   0000F7                     _counter_num2:
   618                           	callstack 0
   619   0000F7                     	ds	1
   620   0000F8                     _counter_num1:
   621                           	callstack 0
   622   0000F8                     	ds	1
   623                           
   624                           	psect	dataBANK0
   625   0000F9                     __pdataBANK0:
   626                           	callstack 0
   627   0000F9                     _lcd1:
   628                           	callstack 0
   629   0000F9                     	ds	6
   630   0000FF                     _lcd_counter:
   631                           	callstack 0
   632   0000FF                     	ds	1
   633                           
   634                           	psect	bssBANK1
   635   0001DE                     __pbssBANK1:
   636                           	callstack 0
   637   0001DE                     floorf@F521:
   638                           	callstack 0
   639   0001DE                     	ds	4
   640   0001E2                     ___fpclassifyf@F465:
   641                           	callstack 0
   642   0001E2                     	ds	4
   643   0001E6                     _errno:
   644                           	callstack 0
   645   0001E6                     	ds	2
   646   0001E8                     _temp_result:
   647                           	callstack 0
   648   0001E8                     	ds	2
   649   0001EA                     _temp2:
   650                           	callstack 0
   651   0001EA                     	ds	2
   652   0001EC                     _temp1:
   653                           	callstack 0
   654   0001EC                     	ds	2
   655   0001EE                     _num3:
   656                           	callstack 0
   657   0001EE                     	ds	4
   658   0001F2                     _num2:
   659                           	callstack 0
   660   0001F2                     	ds	4
   661   0001F6                     _num1:
   662                           	callstack 0
   663   0001F6                     	ds	4
   664                           
   665                           	psect	dataBANK1
   666   0001B8                     __pdataBANK1:
   667                           	callstack 0
   668   0001B8                     _port_registers:
   669                           	callstack 0
   670   0001B8                     	ds	10
   671   0001C2                     _lat_registers:
   672                           	callstack 0
   673   0001C2                     	ds	10
   674   0001CC                     _tris_registers:
   675                           	callstack 0
   676   0001CC                     	ds	10
   677   0001D6                     _keypad:
   678                           	callstack 0
   679   0001D6                     	ds	8
   680                           
   681                           	psect	bssBANK2
   682   000200                     __pbssBANK2:
   683                           	callstack 0
   684   000200                     _dbuf:
   685                           	callstack 0
   686   000200                     	ds	80
   687                           
   688                           	psect	dataBANK2
   689   000250                     __pdataBANK2:
   690                           	callstack 0
   691   000250                     _keypad_values:
   692                           	callstack 0
   693   000250                     	ds	16
   694                           
   695                           	psect	cstackBANK1
   696   000100                     __pcstackBANK1:
   697                           	callstack 0
   698   000100                     _powf$2103:
   699                           	callstack 0
   700   000100                     send_the_result_to_LCD@result_str:
   701                           	callstack 0
   702                           
   703                           ; 80 bytes @ 0x0
   704   000100                     	ds	4
   705   000104                     _powf$2104:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x4
   709   000104                     	ds	4
   710   000108                     _powf$2108:
   711                           	callstack 0
   712                           
   713                           ; 4 bytes @ 0x8
   714   000108                     	ds	4
   715   00010C                     _powf$2109:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0xC
   719   00010C                     	ds	4
   720   000110                     _powf$2110:
   721                           	callstack 0
   722                           
   723                           ; 4 bytes @ 0x10
   724   000110                     	ds	4
   725   000114                     _powf$2111:
   726                           	callstack 0
   727                           
   728                           ; 4 bytes @ 0x14
   729   000114                     	ds	4
   730   000118                     _powf$2112:
   731                           	callstack 0
   732                           
   733                           ; 4 bytes @ 0x18
   734   000118                     	ds	4
   735   00011C                     powf@t2:
   736                           	callstack 0
   737                           
   738                           ; 4 bytes @ 0x1C
   739   00011C                     	ds	4
   740   000120                     powf@z_h:
   741                           	callstack 0
   742                           
   743                           ; 4 bytes @ 0x20
   744   000120                     	ds	4
   745   000124                     powf@z_l:
   746                           	callstack 0
   747                           
   748                           ; 4 bytes @ 0x24
   749   000124                     	ds	4
   750   000128                     powf@i:
   751                           	callstack 0
   752                           
   753                           ; 4 bytes @ 0x28
   754   000128                     	ds	4
   755   00012C                     powf@y1:
   756                           	callstack 0
   757                           
   758                           ; 4 bytes @ 0x2C
   759   00012C                     	ds	4
   760   000130                     powf@s_l:
   761                           	callstack 0
   762                           
   763                           ; 4 bytes @ 0x30
   764   000130                     	ds	4
   765   000134                     powf@t_l:
   766                           	callstack 0
   767                           
   768                           ; 4 bytes @ 0x34
   769   000134                     	ds	4
   770   000138                     _powf$2102:
   771                           	callstack 0
   772                           
   773                           ; 4 bytes @ 0x38
   774   000138                     	ds	4
   775   00013C                     _powf$2106:
   776                           	callstack 0
   777                           
   778                           ; 4 bytes @ 0x3C
   779   00013C                     	ds	4
   780   000140                     _powf$2107:
   781                           	callstack 0
   782                           
   783                           ; 4 bytes @ 0x40
   784   000140                     	ds	4
   785   000144                     powf@w:
   786                           	callstack 0
   787                           
   788                           ; 4 bytes @ 0x44
   789   000144                     	ds	4
   790   000148                     _powf$2098:
   791                           	callstack 0
   792                           
   793                           ; 4 bytes @ 0x48
   794   000148                     	ds	4
   795   00014C                     _powf$2100:
   796                           	callstack 0
   797                           
   798                           ; 4 bytes @ 0x4C
   799   00014C                     	ds	4
   800   000150                     _send_the_result_to_LCD$2097:
   801                           	callstack 0
   802   000150                     powf@r:
   803                           	callstack 0
   804                           
   805                           ; 4 bytes @ 0x50
   806   000150                     	ds	4
   807   000154                     powf@yisint:
   808                           	callstack 0
   809                           
   810                           ; 4 bytes @ 0x54
   811   000154                     	ds	4
   812   000158                     powf@s:
   813                           	callstack 0
   814                           
   815                           ; 4 bytes @ 0x58
   816   000158                     	ds	4
   817   00015C                     _powf$2099:
   818                           	callstack 0
   819                           
   820                           ; 4 bytes @ 0x5C
   821   00015C                     	ds	4
   822   000160                     _powf$2105:
   823                           	callstack 0
   824                           
   825                           ; 4 bytes @ 0x60
   826   000160                     	ds	4
   827   000164                     powf@sn:
   828                           	callstack 0
   829                           
   830                           ; 4 bytes @ 0x64
   831   000164                     	ds	4
   832   000168                     powf@hx:
   833                           	callstack 0
   834                           
   835                           ; 4 bytes @ 0x68
   836   000168                     	ds	4
   837   00016C                     powf@p_l:
   838                           	callstack 0
   839                           
   840                           ; 4 bytes @ 0x6C
   841   00016C                     	ds	4
   842   000170                     powf@t_h:
   843                           	callstack 0
   844                           
   845                           ; 4 bytes @ 0x70
   846   000170                     	ds	4
   847   000174                     powf@s_h:
   848                           	callstack 0
   849                           
   850                           ; 4 bytes @ 0x74
   851   000174                     	ds	4
   852   000178                     powf@ax:
   853                           	callstack 0
   854                           
   855                           ; 4 bytes @ 0x78
   856   000178                     	ds	4
   857   00017C                     powf@u:
   858                           	callstack 0
   859                           
   860                           ; 4 bytes @ 0x7C
   861   00017C                     	ds	4
   862   000180                     powf@v:
   863                           	callstack 0
   864                           
   865                           ; 4 bytes @ 0x80
   866   000180                     	ds	4
   867   000184                     powf@hy:
   868                           	callstack 0
   869                           
   870                           ; 4 bytes @ 0x84
   871   000184                     	ds	4
   872   000188                     powf@n:
   873                           	callstack 0
   874                           
   875                           ; 4 bytes @ 0x88
   876   000188                     	ds	4
   877   00018C                     powf@t1:
   878                           	callstack 0
   879                           
   880                           ; 4 bytes @ 0x8C
   881   00018C                     	ds	4
   882   000190                     powf@s2:
   883                           	callstack 0
   884                           
   885                           ; 4 bytes @ 0x90
   886   000190                     	ds	4
   887   000194                     powf@iy:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x94
   891   000194                     	ds	4
   892   000198                     powf@is:
   893                           	callstack 0
   894                           
   895                           ; 4 bytes @ 0x98
   896   000198                     	ds	4
   897   00019C                     _powf$2101:
   898                           	callstack 0
   899                           
   900                           ; 4 bytes @ 0x9C
   901   00019C                     	ds	4
   902   0001A0                     powf@p_h:
   903                           	callstack 0
   904                           
   905                           ; 4 bytes @ 0xA0
   906   0001A0                     	ds	4
   907   0001A4                     powf@k:
   908                           	callstack 0
   909                           
   910                           ; 4 bytes @ 0xA4
   911   0001A4                     	ds	4
   912   0001A8                     powf@j:
   913                           	callstack 0
   914                           
   915                           ; 4 bytes @ 0xA8
   916   0001A8                     	ds	4
   917   0001AC                     powf@ix:
   918                           	callstack 0
   919                           
   920                           ; 4 bytes @ 0xAC
   921   0001AC                     	ds	4
   922   0001B0                     powf@t:
   923                           	callstack 0
   924                           
   925                           ; 4 bytes @ 0xB0
   926   0001B0                     	ds	4
   927   0001B4                     powf@z:
   928                           	callstack 0
   929                           
   930                           ; 4 bytes @ 0xB4
   931   0001B4                     	ds	4
   932                           
   933                           	psect	cstackBANK0
   934   000080                     __pcstackBANK0:
   935                           	callstack 0
   936   000080                     convert_arr_to_float@arr:
   937                           	callstack 0
   938   000080                     efgtoa@ne:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x0
   942   000080                     	ds	2
   943   000082                     convert_arr_to_float@counter_num:
   944                           	callstack 0
   945   000082                     efgtoa@p:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x2
   949   000082                     	ds	1
   950   000083                     convert_arr_to_float@num_value:
   951                           	callstack 0
   952                           
   953                           ; 1 bytes @ 0x3
   954   000083                     	ds	1
   955   000084                     ??_convert_arr_to_float:
   956   000084                     efgtoa@t:
   957                           	callstack 0
   958                           
   959                           ; 2 bytes @ 0x4
   960   000084                     	ds	2
   961   000086                     _efgtoa$1541:
   962                           	callstack 0
   963                           
   964                           ; 2 bytes @ 0x6
   965   000086                     	ds	1
   966   000087                     _convert_arr_to_float$2095:
   967                           	callstack 0
   968                           
   969                           ; 4 bytes @ 0x7
   970   000087                     	ds	1
   971   000088                     efgtoa@pp:
   972                           	callstack 0
   973                           
   974                           ; 1 bytes @ 0x8
   975   000088                     	ds	1
   976   000089                     efgtoa@mode:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x9
   980   000089                     	ds	1
   981   00008A                     efgtoa@nmode:
   982                           	callstack 0
   983                           
   984                           ; 1 bytes @ 0xA
   985   00008A                     	ds	1
   986   00008B                     efgtoa@d:
   987                           	callstack 0
   988   00008B                     _convert_arr_to_float$2096:
   989                           	callstack 0
   990                           
   991                           ; 4 bytes @ 0xB
   992   00008B                     	ds	2
   993   00008D                     efgtoa@m:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0xD
   997   00008D                     	ds	2
   998   00008F                     convert_arr_to_float@count_power:
   999                           	callstack 0
  1000   00008F                     efgtoa@e:
  1001                           	callstack 0
  1002                           
  1003                           ; 2 bytes @ 0xF
  1004   00008F                     	ds	1
  1005   000090                     convert_arr_to_float@count:
  1006                           	callstack 0
  1007                           
  1008                           ; 1 bytes @ 0x10
  1009   000090                     	ds	1
  1010   000091                     efgtoa@w:
  1011                           	callstack 0
  1012                           
  1013                           ; 2 bytes @ 0x11
  1014   000091                     	ds	2
  1015   000093                     efgtoa@ou:
  1016                           	callstack 0
  1017                           
  1018                           ; 4 bytes @ 0x13
  1019   000093                     	ds	4
  1020   000097                     efgtoa@i:
  1021                           	callstack 0
  1022                           
  1023                           ; 2 bytes @ 0x17
  1024   000097                     	ds	2
  1025   000099                     efgtoa@h:
  1026                           	callstack 0
  1027                           
  1028                           ; 4 bytes @ 0x19
  1029   000099                     	ds	4
  1030   00009D                     efgtoa@l:
  1031                           	callstack 0
  1032                           
  1033                           ; 4 bytes @ 0x1D
  1034   00009D                     	ds	4
  1035   0000A1                     efgtoa@sign:
  1036                           	callstack 0
  1037                           
  1038                           ; 1 bytes @ 0x21
  1039   0000A1                     	ds	1
  1040   0000A2                     efgtoa@g:
  1041                           	callstack 0
  1042                           
  1043                           ; 4 bytes @ 0x22
  1044   0000A2                     	ds	4
  1045   0000A6                     efgtoa@n:
  1046                           	callstack 0
  1047                           
  1048                           ; 2 bytes @ 0x26
  1049   0000A6                     	ds	2
  1050   0000A8                     efgtoa@u:
  1051                           	callstack 0
  1052                           
  1053                           ; 4 bytes @ 0x28
  1054   0000A8                     	ds	4
  1055   0000AC                     vfpfcnvrt@convarg:
  1056                           	callstack 0
  1057                           
  1058                           ; 4 bytes @ 0x2C
  1059   0000AC                     	ds	4
  1060   0000B0                     vfpfcnvrt@c:
  1061                           	callstack 0
  1062                           
  1063                           ; 1 bytes @ 0x30
  1064   0000B0                     	ds	1
  1065   0000B1                     vfpfcnvrt@cp:
  1066                           	callstack 0
  1067                           
  1068                           ; 1 bytes @ 0x31
  1069   0000B1                     	ds	1
  1070   0000B2                     ?_sprintf:
  1071                           	callstack 0
  1072   0000B2                     sprintf@s:
  1073                           	callstack 0
  1074                           
  1075                           ; 2 bytes @ 0x32
  1076   0000B2                     	ds	2
  1077   0000B4                     sprintf@fmt:
  1078                           	callstack 0
  1079                           
  1080                           ; 1 bytes @ 0x34
  1081   0000B4                     	ds	5
  1082   0000B9                     sprintf@ap:
  1083                           	callstack 0
  1084                           
  1085                           ; 1 bytes @ 0x39
  1086   0000B9                     	ds	1
  1087   0000BA                     sprintf@f:
  1088                           	callstack 0
  1089                           
  1090                           ; 12 bytes @ 0x3A
  1091   0000BA                     	ds	12
  1092   0000C6                     convert_int_to_string@value:
  1093                           	callstack 0
  1094   0000C6                     convert_float_to_string@value:
  1095                           	callstack 0
  1096                           
  1097                           ; 4 bytes @ 0x46
  1098   0000C6                     	ds	2
  1099   0000C8                     convert_int_to_string@str:
  1100                           	callstack 0
  1101                           
  1102                           ; 2 bytes @ 0x48
  1103   0000C8                     	ds	2
  1104   0000CA                     convert_float_to_string@str:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0x4A
  1108   0000CA                     	ds	2
  1109   0000CC                     send_the_result_to_LCD@result:
  1110                           	callstack 0
  1111                           
  1112                           ; 4 bytes @ 0x4C
  1113   0000CC                     	ds	4
  1114   0000D0                     ??_main:
  1115                           
  1116                           ; 1 bytes @ 0x50
  1117   0000D0                     	ds	2
  1118                           
  1119                           	psect	cstackCOMRAM
  1120   000001                     __pcstackCOMRAM:
  1121                           	callstack 0
  1122   000001                     ?___fpclassifyf:
  1123                           	callstack 0
  1124   000001                     ?___wmul:
  1125                           	callstack 0
  1126   000001                     ?___awdiv:
  1127                           	callstack 0
  1128   000001                     ?___awmod:
  1129                           	callstack 0
  1130   000001                     ?_labs:
  1131                           	callstack 0
  1132   000001                     ?_sqrtf:
  1133                           	callstack 0
  1134   000001                     ?___flneg:
  1135                           	callstack 0
  1136   000001                     ?___fltol:
  1137                           	callstack 0
  1138   000001                     initialize_var@count:
  1139                           	callstack 0
  1140   000001                     gpio_pin_direction_initialize@_pin_config:
  1141                           	callstack 0
  1142   000001                     gpio_pin_write_logic@_pin_config:
  1143                           	callstack 0
  1144   000001                     gpio_pin_read_logic@_pin_config:
  1145                           	callstack 0
  1146   000001                     ___wmul@multiplier:
  1147                           	callstack 0
  1148   000001                     ___awdiv@dividend:
  1149                           	callstack 0
  1150   000001                     ___awmod@dividend:
  1151                           	callstack 0
  1152   000001                     memset@dest:
  1153                           	callstack 0
  1154   000001                     memcpy@d1:
  1155                           	callstack 0
  1156   000001                     fputc@c:
  1157                           	callstack 0
  1158   000001                     strcpy@dest:
  1159                           	callstack 0
  1160   000001                     ___fleq@ff1:
  1161                           	callstack 0
  1162   000001                     ___flneg@f1:
  1163                           	callstack 0
  1164   000001                     ___fltol@f1:
  1165                           	callstack 0
  1166   000001                     ___fpclassifyf@x:
  1167                           	callstack 0
  1168   000001                     labs@a:
  1169                           	callstack 0
  1170   000001                     sqrtf@x:
  1171                           	callstack 0
  1172                           
  1173                           ; 4 bytes @ 0x0
  1174   000001                     	ds	2
  1175   000003                     ??_gpio_pin_direction_initialize:
  1176   000003                     gpio_pin_write_logic@logic:
  1177                           	callstack 0
  1178   000003                     gpio_pin_read_logic@logic:
  1179                           	callstack 0
  1180   000003                     fputc@fp:
  1181                           	callstack 0
  1182   000003                     strcpy@src:
  1183                           	callstack 0
  1184   000003                     ___wmul@multiplicand:
  1185                           	callstack 0
  1186   000003                     ___awdiv@divisor:
  1187                           	callstack 0
  1188   000003                     ___awmod@divisor:
  1189                           	callstack 0
  1190   000003                     memset@c:
  1191                           	callstack 0
  1192   000003                     memcpy@s1:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x2
  1196   000003                     	ds	1
  1197   000004                     ??_gpio_pin_write_logic:
  1198   000004                     ??_gpio_pin_read_logic:
  1199   000004                     ??_fputc:
  1200   000004                     ??_strcpy:
  1201                           
  1202                           ; 1 bytes @ 0x3
  1203   000004                     	ds	1
  1204   000005                     ??___fpclassifyf:
  1205   000005                     ??_labs:
  1206   000005                     ??_sqrtf:
  1207   000005                     ??___fltol:
  1208   000005                     ___awdiv@counter:
  1209                           	callstack 0
  1210   000005                     ___awmod@counter:
  1211                           	callstack 0
  1212   000005                     ___wmul@product:
  1213                           	callstack 0
  1214   000005                     memset@n:
  1215                           	callstack 0
  1216   000005                     memcpy@n:
  1217                           	callstack 0
  1218   000005                     strcpy@d:
  1219                           	callstack 0
  1220   000005                     ___fleq@ff2:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x4
  1224   000005                     	ds	1
  1225   000006                     ___awdiv@sign:
  1226                           	callstack 0
  1227   000006                     ___awmod@sign:
  1228                           	callstack 0
  1229                           
  1230                           ; 1 bytes @ 0x5
  1231   000006                     	ds	1
  1232   000007                     ?_abs:
  1233                           	callstack 0
  1234   000007                     ?_read_prec_or_width:
  1235                           	callstack 0
  1236   000007                     read_prec_or_width@fmt:
  1237                           	callstack 0
  1238   000007                     memcpy@tmp:
  1239                           	callstack 0
  1240   000007                     ___awdiv@quotient:
  1241                           	callstack 0
  1242   000007                     memset@p:
  1243                           	callstack 0
  1244   000007                     abs@a:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x6
  1248   000007                     	ds	1
  1249   000008                     read_prec_or_width@ap:
  1250                           	callstack 0
  1251   000008                     memcpy@d:
  1252                           	callstack 0
  1253                           
  1254                           ; 2 bytes @ 0x7
  1255   000008                     	ds	1
  1256   000009                     ??_abs:
  1257   000009                     ??___fleq:
  1258   000009                     gpio_pin_direction_initialize@ret:
  1259                           	callstack 0
  1260   000009                     ___fltol@sign1:
  1261                           	callstack 0
  1262   000009                     read_prec_or_width@c:
  1263                           	callstack 0
  1264   000009                     ___fpclassifyf@e:
  1265                           	callstack 0
  1266   000009                     fputs@s:
  1267                           	callstack 0
  1268                           
  1269                           ; 2 bytes @ 0x8
  1270   000009                     	ds	1
  1271   00000A                     gpio_pin_write_logic@ret:
  1272                           	callstack 0
  1273   00000A                     ___fltol@exp1:
  1274                           	callstack 0
  1275   00000A                     read_prec_or_width@n:
  1276                           	callstack 0
  1277   00000A                     memcpy@s:
  1278                           	callstack 0
  1279   00000A                     sqrtf@s:
  1280                           	callstack 0
  1281                           
  1282                           ; 4 bytes @ 0x9
  1283   00000A                     	ds	1
  1284   00000B                     ?___xxtofl:
  1285                           	callstack 0
  1286   00000B                     lcd_send_4bit@lcd:
  1287                           	callstack 0
  1288   00000B                     lcd_4bit_send_enable_enable@lcd:
  1289                           	callstack 0
  1290   00000B                     fputs@fp:
  1291                           	callstack 0
  1292   00000B                     ecu_keypad_get_value@keypad:
  1293                           	callstack 0
  1294   00000B                     gpio_pin_initialize@_pin_config:
  1295                           	callstack 0
  1296   00000B                     ___xxtofl@val:
  1297                           	callstack 0
  1298   00000B                     ___fpclassifyf@u:
  1299                           	callstack 0
  1300                           
  1301                           ; 4 bytes @ 0xA
  1302   00000B                     	ds	1
  1303   00000C                     ??_lcd_4bit_send_enable_enable:
  1304   00000C                     lcd_send_4bit@command_data:
  1305                           	callstack 0
  1306   00000C                     fputs@c:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0xB
  1310   00000C                     	ds	1
  1311   00000D                     ??_gpio_pin_initialize:
  1312   00000D                     ??_lcd_send_4bit:
  1313   00000D                     lcd_4bit_send_enable_enable@ret:
  1314                           	callstack 0
  1315   00000D                     ecu_keypad_get_value@value:
  1316                           	callstack 0
  1317   00000D                     fputs@i:
  1318                           	callstack 0
  1319                           
  1320                           ; 2 bytes @ 0xC
  1321   00000D                     	ds	1
  1322   00000E                     ??_ecu_keypad_get_value:
  1323   00000E                     lcd_send_4bit@ret:
  1324                           	callstack 0
  1325   00000E                     gpio_pin_initialize@ret:
  1326                           	callstack 0
  1327   00000E                     sqrtf@i:
  1328                           	callstack 0
  1329                           
  1330                           ; 4 bytes @ 0xD
  1331   00000E                     	ds	1
  1332   00000F                     ??___xxtofl:
  1333   00000F                     lcd_4bit_send_command@lcd:
  1334                           	callstack 0
  1335   00000F                     lcd_4bit_send_char_data@lcd:
  1336                           	callstack 0
  1337   00000F                     pad@fp:
  1338                           	callstack 0
  1339   00000F                     ecu_keypad_initialize@keypad:
  1340                           	callstack 0
  1341                           
  1342                           ; 2 bytes @ 0xE
  1343   00000F                     	ds	1
  1344   000010                     lcd_4bit_send_command@command:
  1345                           	callstack 0
  1346   000010                     lcd_4bit_send_char_data@data:
  1347                           	callstack 0
  1348   000010                     ecu_keypad_get_value@column_val:
  1349                           	callstack 0
  1350   000010                     pad@buf:
  1351                           	callstack 0
  1352                           
  1353                           ; 2 bytes @ 0xF
  1354   000010                     	ds	1
  1355   000011                     ??_ecu_keypad_initialize:
  1356   000011                     lcd_4bit_send_command@ret:
  1357                           	callstack 0
  1358   000011                     lcd_4bit_send_char_data@ret:
  1359                           	callstack 0
  1360   000011                     ecu_keypad_get_value@clear_rows_counter:
  1361                           	callstack 0
  1362                           
  1363                           ; 1 bytes @ 0x10
  1364   000011                     	ds	1
  1365   000012                     lcd_4bit_initialize@lcd:
  1366                           	callstack 0
  1367   000012                     lcd_4bit_set_curser@lcd:
  1368                           	callstack 0
  1369   000012                     ecu_keypad_get_value@rows:
  1370                           	callstack 0
  1371   000012                     pad@p:
  1372                           	callstack 0
  1373   000012                     sqrtf@q:
  1374                           	callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x11
  1377   000012                     	ds	1
  1378   000013                     ??_lcd_4bit_initialize:
  1379   000013                     lcd_4bit_set_curser@row:
  1380                           	callstack 0
  1381   000013                     ecu_keypad_initialize@rows:
  1382                           	callstack 0
  1383   000013                     ecu_keypad_get_value@columns:
  1384                           	callstack 0
  1385   000013                     ___xxtofl@sign:
  1386                           	callstack 0
  1387                           
  1388                           ; 1 bytes @ 0x12
  1389   000013                     	ds	1
  1390   000014                     ??_pad:
  1391   000014                     lcd_4bit_initialize@counter:
  1392                           	callstack 0
  1393   000014                     lcd_4bit_set_curser@column:
  1394                           	callstack 0
  1395   000014                     ecu_keypad_initialize@columns:
  1396                           	callstack 0
  1397   000014                     ___xxtofl@exp:
  1398                           	callstack 0
  1399                           
  1400                           ; 1 bytes @ 0x13
  1401   000014                     	ds	1
  1402   000015                     ??_lcd_4bit_set_curser:
  1403   000015                     lcd_4bit_initialize@ret:
  1404                           	callstack 0
  1405   000015                     pad@i:
  1406                           	callstack 0
  1407   000015                     ___xxtofl@arg:
  1408                           	callstack 0
  1409                           
  1410                           ; 4 bytes @ 0x14
  1411   000015                     	ds	1
  1412   000016                     sqrtf@t:
  1413                           	callstack 0
  1414                           
  1415                           ; 4 bytes @ 0x15
  1416   000016                     	ds	1
  1417   000017                     lcd_4bit_set_curser@ret:
  1418                           	callstack 0
  1419   000017                     dtoa@fp:
  1420                           	callstack 0
  1421                           
  1422                           ; 1 bytes @ 0x16
  1423   000017                     	ds	1
  1424   000018                     lcd_4bit_send_char_data_pos@lcd:
  1425                           	callstack 0
  1426   000018                     lcd_4bit_send_string_pos@lcd:
  1427                           	callstack 0
  1428   000018                     dtoa@d:
  1429                           	callstack 0
  1430                           
  1431                           ; 2 bytes @ 0x17
  1432   000018                     	ds	1
  1433   000019                     ?___flmul:
  1434                           	callstack 0
  1435   000019                     lcd_4bit_send_char_data_pos@row:
  1436                           	callstack 0
  1437   000019                     lcd_4bit_send_string_pos@row:
  1438                           	callstack 0
  1439   000019                     ___flmul@b:
  1440                           	callstack 0
  1441                           
  1442                           ; 4 bytes @ 0x18
  1443   000019                     	ds	1
  1444   00001A                     lcd_4bit_send_char_data_pos@column:
  1445                           	callstack 0
  1446   00001A                     lcd_4bit_send_string_pos@column:
  1447                           	callstack 0
  1448   00001A                     _dtoa$1510:
  1449                           	callstack 0
  1450   00001A                     sqrtf@m:
  1451                           	callstack 0
  1452                           
  1453                           ; 4 bytes @ 0x19
  1454   00001A                     	ds	1
  1455   00001B                     lcd_4bit_send_char_data_pos@data:
  1456                           	callstack 0
  1457   00001B                     lcd_4bit_send_string_pos@str:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x1A
  1461   00001B                     	ds	1
  1462   00001C                     lcd_4bit_send_char_data_pos@ret:
  1463                           	callstack 0
  1464   00001C                     dtoa@w:
  1465                           	callstack 0
  1466                           
  1467                           ; 2 bytes @ 0x1B
  1468   00001C                     	ds	1
  1469   00001D                     get_number_and_operartion@num:
  1470                           	callstack 0
  1471   00001D                     get_third_number_and_third_operartion@num:
  1472                           	callstack 0
  1473   00001D                     ___flmul@a:
  1474                           	callstack 0
  1475                           
  1476                           ; 4 bytes @ 0x1C
  1477   00001D                     	ds	1
  1478   00001E                     dtoa@p:
  1479                           	callstack 0
  1480   00001E                     sqrtf@r:
  1481                           	callstack 0
  1482                           
  1483                           ; 4 bytes @ 0x1D
  1484   00001E                     	ds	1
  1485   00001F                     get_number_and_operartion@counter_num:
  1486                           	callstack 0
  1487   00001F                     get_third_number_and_third_operartion@counter_num:
  1488                           	callstack 0
  1489                           
  1490                           ; 1 bytes @ 0x1E
  1491   00001F                     	ds	1
  1492   000020                     get_number_and_operartion@lcd_counter:
  1493                           	callstack 0
  1494   000020                     get_third_number_and_third_operartion@lcd_counter:
  1495                           	callstack 0
  1496   000020                     dtoa@s:
  1497                           	callstack 0
  1498                           
  1499                           ; 1 bytes @ 0x1F
  1500   000020                     	ds	1
  1501   000021                     ??___flmul:
  1502   000021                     get_number_and_operartion@operation:
  1503                           	callstack 0
  1504   000021                     get_third_number_and_third_operartion@operation:
  1505                           	callstack 0
  1506   000021                     dtoa@i:
  1507                           	callstack 0
  1508                           
  1509                           ; 2 bytes @ 0x20
  1510   000021                     	ds	1
  1511   000022                     ??_get_number_and_operartion:
  1512   000022                     ??_get_third_number_and_third_operartion:
  1513   000022                     sqrtf@ix:
  1514                           	callstack 0
  1515                           
  1516                           ; 4 bytes @ 0x21
  1517   000022                     	ds	2
  1518   000024                     get_number_and_operartion@keypad_value:
  1519                           	callstack 0
  1520   000024                     get_third_number_and_third_operartion@keypad_value:
  1521                           	callstack 0
  1522                           
  1523                           ; 1 bytes @ 0x23
  1524   000024                     	ds	1
  1525   000025                     ___flmul@sign:
  1526                           	callstack 0
  1527                           
  1528                           ; 1 bytes @ 0x24
  1529   000025                     	ds	1
  1530   000026                     ___flmul@aexp:
  1531                           	callstack 0
  1532                           
  1533                           ; 1 bytes @ 0x25
  1534   000026                     	ds	1
  1535   000027                     ___flmul@bexp:
  1536                           	callstack 0
  1537                           
  1538                           ; 1 bytes @ 0x26
  1539   000027                     	ds	1
  1540   000028                     ___flmul@grs:
  1541                           	callstack 0
  1542                           
  1543                           ; 4 bytes @ 0x27
  1544   000028                     	ds	4
  1545   00002C                     ___flmul@prod:
  1546                           	callstack 0
  1547                           
  1548                           ; 4 bytes @ 0x2B
  1549   00002C                     	ds	4
  1550   000030                     ___flmul@temp:
  1551                           	callstack 0
  1552                           
  1553                           ; 2 bytes @ 0x2F
  1554   000030                     	ds	2
  1555   000032                     ?___fladd:
  1556                           	callstack 0
  1557   000032                     ?_scalbnf:
  1558                           	callstack 0
  1559   000032                     multiplication_operation@num1_val:
  1560                           	callstack 0
  1561   000032                     ___fladd@b:
  1562                           	callstack 0
  1563   000032                     scalbnf@x:
  1564                           	callstack 0
  1565                           
  1566                           ; 4 bytes @ 0x31
  1567   000032                     	ds	4
  1568   000036                     scalbnf@n:
  1569                           	callstack 0
  1570   000036                     multiplication_operation@num2_val:
  1571                           	callstack 0
  1572   000036                     ___fladd@a:
  1573                           	callstack 0
  1574                           
  1575                           ; 4 bytes @ 0x35
  1576   000036                     	ds	2
  1577   000038                     ??_scalbnf:
  1578                           
  1579                           ; 1 bytes @ 0x37
  1580   000038                     	ds	2
  1581   00003A                     ??___fladd:
  1582   00003A                     multiplication_operation@result:
  1583                           	callstack 0
  1584                           
  1585                           ; 1 bytes @ 0x39
  1586   00003A                     	ds	1
  1587   00003B                     
  1588                           ; 1 bytes @ 0x3A
  1589   00003B                     	ds	1
  1590   00003C                     scalbnf@u:
  1591                           	callstack 0
  1592                           
  1593                           ; 4 bytes @ 0x3B
  1594   00003C                     	ds	2
  1595   00003E                     ___fladd@signs:
  1596                           	callstack 0
  1597                           
  1598                           ; 1 bytes @ 0x3D
  1599   00003E                     	ds	1
  1600   00003F                     ___fladd@aexp:
  1601                           	callstack 0
  1602                           
  1603                           ; 1 bytes @ 0x3E
  1604   00003F                     	ds	1
  1605   000040                     ___fladd@bexp:
  1606                           	callstack 0
  1607   000040                     scalbnf@y:
  1608                           	callstack 0
  1609                           
  1610                           ; 4 bytes @ 0x3F
  1611   000040                     	ds	1
  1612   000041                     ___fladd@grs:
  1613                           	callstack 0
  1614                           
  1615                           ; 1 bytes @ 0x40
  1616   000041                     	ds	1
  1617   000042                     ?___fldiv:
  1618                           	callstack 0
  1619   000042                     sum_operation@num1_val:
  1620                           	callstack 0
  1621   000042                     ___fldiv@b:
  1622                           	callstack 0
  1623                           
  1624                           ; 4 bytes @ 0x41
  1625   000042                     	ds	4
  1626   000046                     sum_operation@num2_val:
  1627                           	callstack 0
  1628   000046                     ___fldiv@a:
  1629                           	callstack 0
  1630                           
  1631                           ; 4 bytes @ 0x45
  1632   000046                     	ds	4
  1633   00004A                     ??___fldiv:
  1634   00004A                     sum_operation@result:
  1635                           	callstack 0
  1636                           
  1637                           ; 1 bytes @ 0x49
  1638   00004A                     	ds	1
  1639   00004B                     
  1640                           ; 1 bytes @ 0x4A
  1641   00004B                     	ds	3
  1642   00004E                     ___fldiv@rem:
  1643                           	callstack 0
  1644                           
  1645                           ; 4 bytes @ 0x4D
  1646   00004E                     	ds	4
  1647   000052                     ___fldiv@sign:
  1648                           	callstack 0
  1649                           
  1650                           ; 1 bytes @ 0x51
  1651   000052                     	ds	1
  1652   000053                     ___fldiv@new_exp:
  1653                           	callstack 0
  1654                           
  1655                           ; 2 bytes @ 0x52
  1656   000053                     	ds	2
  1657   000055                     ___fldiv@grs:
  1658                           	callstack 0
  1659                           
  1660                           ; 4 bytes @ 0x54
  1661   000055                     	ds	4
  1662   000059                     ___fldiv@bexp:
  1663                           	callstack 0
  1664                           
  1665                           ; 1 bytes @ 0x58
  1666   000059                     	ds	1
  1667   00005A                     ___fldiv@aexp:
  1668                           	callstack 0
  1669                           
  1670                           ; 1 bytes @ 0x59
  1671   00005A                     	ds	1
  1672   00005B                     ?___flsub:
  1673                           	callstack 0
  1674   00005B                     ?_floorf:
  1675                           	callstack 0
  1676   00005B                     Division_operation@num1_val:
  1677                           	callstack 0
  1678   00005B                     ___flsub@b:
  1679                           	callstack 0
  1680   00005B                     floorf@x:
  1681                           	callstack 0
  1682                           
  1683                           ; 4 bytes @ 0x5A
  1684   00005B                     	ds	4
  1685   00005F                     ??_floorf:
  1686   00005F                     Division_operation@num2_val:
  1687                           	callstack 0
  1688   00005F                     ___flsub@a:
  1689                           	callstack 0
  1690                           
  1691                           ; 4 bytes @ 0x5E
  1692   00005F                     	ds	4
  1693   000063                     Division_operation@result:
  1694                           	callstack 0
  1695   000063                     subtraction_operation@num1_val:
  1696                           	callstack 0
  1697   000063                     ___flge@ff1:
  1698                           	callstack 0
  1699                           
  1700                           ; 4 bytes @ 0x62
  1701   000063                     	ds	1
  1702   000064                     
  1703                           ; 1 bytes @ 0x63
  1704   000064                     	ds	1
  1705   000065                     floorf@m:
  1706                           	callstack 0
  1707                           
  1708                           ; 4 bytes @ 0x64
  1709   000065                     	ds	2
  1710   000067                     subtraction_operation@num2_val:
  1711                           	callstack 0
  1712   000067                     ___flge@ff2:
  1713                           	callstack 0
  1714                           
  1715                           ; 4 bytes @ 0x66
  1716   000067                     	ds	2
  1717   000069                     floorf@e:
  1718                           	callstack 0
  1719                           
  1720                           ; 2 bytes @ 0x68
  1721   000069                     	ds	2
  1722   00006B                     ??___flge:
  1723   00006B                     subtraction_operation@result:
  1724                           	callstack 0
  1725   00006B                     floorf@u:
  1726                           	callstack 0
  1727                           
  1728                           ; 4 bytes @ 0x6A
  1729   00006B                     	ds	1
  1730   00006C                     
  1731                           ; 1 bytes @ 0x6B
  1732   00006C                     	ds	3
  1733   00006F                     ?_powf:
  1734                           	callstack 0
  1735   00006F                     efgtoa@fp:
  1736                           	callstack 0
  1737   00006F                     powf@x:
  1738                           	callstack 0
  1739                           
  1740                           ; 4 bytes @ 0x6E
  1741   00006F                     	ds	1
  1742   000070                     efgtoa@f:
  1743                           	callstack 0
  1744                           
  1745                           ; 4 bytes @ 0x6F
  1746   000070                     	ds	3
  1747   000073                     powf@y:
  1748                           	callstack 0
  1749                           
  1750                           ; 4 bytes @ 0x72
  1751   000073                     	ds	1
  1752   000074                     efgtoa@c:
  1753                           	callstack 0
  1754                           
  1755                           ; 1 bytes @ 0x73
  1756   000074                     	ds	1
  1757   000075                     ??_efgtoa:
  1758                           
  1759                           ; 1 bytes @ 0x74
  1760   000075                     	ds	2
  1761   000077                     ??_powf:
  1762   000077                     vfpfcnvrt@fp:
  1763                           	callstack 0
  1764                           
  1765                           ; 1 bytes @ 0x76
  1766   000077                     	ds	1
  1767   000078                     vfpfcnvrt@fmt:
  1768                           	callstack 0
  1769                           
  1770                           ; 1 bytes @ 0x77
  1771   000078                     	ds	1
  1772   000079                     vfpfcnvrt@ap:
  1773                           	callstack 0
  1774                           
  1775                           ; 1 bytes @ 0x78
  1776   000079                     	ds	1
  1777   00007A                     ??_vfpfcnvrt:
  1778                           
  1779                           ; 1 bytes @ 0x79
  1780   00007A                     	ds	2
  1781   00007C                     ?_vfprintf:
  1782                           	callstack 0
  1783   00007C                     vfprintf@fp:
  1784                           	callstack 0
  1785                           
  1786                           ; 1 bytes @ 0x7B
  1787   00007C                     	ds	1
  1788   00007D                     vfprintf@fmt:
  1789                           	callstack 0
  1790                           
  1791                           ; 1 bytes @ 0x7C
  1792   00007D                     	ds	1
  1793   00007E                     vfprintf@ap:
  1794                           	callstack 0
  1795                           
  1796                           ; 1 bytes @ 0x7D
  1797   00007E                     	ds	1
  1798   00007F                     vfprintf@cfmt:
  1799                           	callstack 0
  1800                           
  1801                           ; 1 bytes @ 0x7E
  1802   00007F                     	ds	1
  1803   000080                     
  1804                           ; 1 bytes @ 0x7F
  1805 ;;
  1806 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1807 ;;
  1808 ;; *************** function _main *****************
  1809 ;; Defined at:
  1810 ;;		line 13 in file "newmain.c"
  1811 ;; Parameters:    Size  Location     Type
  1812 ;;		None
  1813 ;; Auto vars:     Size  Location     Type
  1814 ;;		None
  1815 ;; Return value:  Size  Location     Type
  1816 ;;                  2  641[None  ] int 
  1817 ;; Registers used:
  1818 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1819 ;; Tracked objects:
  1820 ;;		On entry : 0/0
  1821 ;;		On exit  : 0/0
  1822 ;;		Unchanged: 0/0
  1823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1824 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1825 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1826 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1827 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1828 ;;Total ram usage:        2 bytes
  1829 ;; Hardware stack levels required when called: 10
  1830 ;; This function calls:
  1831 ;;		_Application_Initialization
  1832 ;;		_Division_operation
  1833 ;;		___fltol
  1834 ;;		_convert_arr_to_float
  1835 ;;		_get_number_and_operartion
  1836 ;;		_get_third_number_and_third_operartion
  1837 ;;		_initialize_var
  1838 ;;		_lcd_4bit_send_command
  1839 ;;		_lcd_4bit_send_string_pos
  1840 ;;		_multiplication_operation
  1841 ;;		_send_the_result_to_LCD
  1842 ;;		_subtraction_operation
  1843 ;;		_sum_operation
  1844 ;; This function is called by:
  1845 ;;		Startup code after reset
  1846 ;; This function uses a non-reentrant model
  1847 ;;
  1848                           
  1849                           	psect	text0
  1850   003DF6                     __ptext0:
  1851                           	callstack 0
  1852   003DF6                     _main:
  1853                           	callstack 21
  1854   003DF6                     
  1855                           ;newmain.c: 14:     Application_Initialization();
  1856   003DF6  EC53  F03D         	call	_Application_Initialization	;wreg free
  1857   003DFA                     l12825:
  1858                           
  1859                           ;newmain.c: 18:     initialize_var();
  1860   003DFA  EC4F  F036         	call	_initialize_var	;wreg free
  1861   003DFE                     
  1862                           ;newmain.c: 20:     lcd_4bit_send_command(&lcd1,0x01);
  1863   003DFE  0EF9               	movlw	low _lcd1
  1864   003E00  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1865   003E02  0E01               	movlw	1
  1866   003E04  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1867   003E06  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  1868   003E0A                     
  1869                           ;newmain.c: 21:     lcd_4bit_send_string_pos(&lcd1,2,1,"calc is ready");
  1870   003E0A  0EF9               	movlw	low _lcd1
  1871   003E0C  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1872   003E0E  0E02               	movlw	2
  1873   003E10  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  1874   003E12  0E01               	movlw	1
  1875   003E14  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  1876   003E16  0EC5               	movlw	low STR_15
  1877   003E18  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  1878   003E1A  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1879   003E1C  A4D8               	btfss	status,2,c
  1880   003E1E  0E10               	movlw	high __smallconst
  1881   003E20  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1882   003E22  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  1883   003E26                     
  1884                           ;newmain.c: 22:  _delay((unsigned long)((1000)*(8000000ul/4000.0)));
  1885   003E26  0E0B               	movlw	11
  1886   003E28  0100               	movlb	0	; () banked
  1887   003E2A  6FD1               	movwf	(??_main+1)& (0+255),b
  1888   003E2C  0E26               	movlw	38
  1889   003E2E  6FD0               	movwf	??_main& (0+255),b
  1890   003E30  0E5D               	movlw	93
  1891   003E32                     u13477:
  1892   003E32  2EE8               	decfsz	wreg,f,c
  1893   003E34  D7FE               	bra	u13477
  1894   003E36  2FD0               	decfsz	??_main& (0+255),f,b
  1895   003E38  D7FC               	bra	u13477
  1896   003E3A  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  1897   003E3C  D7FA               	bra	u13477
  1898   003E3E  D000               	nop2	
  1899   003E40                     
  1900                           ;newmain.c: 23:  lcd_4bit_send_command(&lcd1,0x01);
  1901   003E40  0EF9               	movlw	low _lcd1
  1902   003E42  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1903   003E44  0E01               	movlw	1
  1904   003E46  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1905   003E48  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  1906   003E4C                     
  1907                           ;newmain.c: 25:     get_number_and_operartion(num1,&counter_num1,&lcd_counter,&operation
      +                          );
  1908   003E4C  0EF6               	movlw	low _num1
  1909   003E4E  6E1D               	movwf	get_number_and_operartion@num^0,c
  1910   003E50  0E01               	movlw	high _num1
  1911   003E52  6E1E               	movwf	(get_number_and_operartion@num+1)^0,c
  1912   003E54  0EF8               	movlw	low _counter_num1
  1913   003E56  6E1F               	movwf	get_number_and_operartion@counter_num^0,c
  1914   003E58  0EFF               	movlw	low _lcd_counter
  1915   003E5A  6E20               	movwf	get_number_and_operartion@lcd_counter^0,c
  1916   003E5C  0EF5               	movlw	low _operation
  1917   003E5E  6E21               	movwf	get_number_and_operartion@operation^0,c
  1918   003E60  ECA2  F02C         	call	_get_number_and_operartion	;wreg free
  1919   003E64                     
  1920                           ;newmain.c: 26:     convert_arr_to_float( num1,counter_num1,&num1_val);
  1921   003E64  0EF6               	movlw	low _num1
  1922   003E66  0100               	movlb	0	; () banked
  1923   003E68  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1924   003E6A  0E01               	movlw	high _num1
  1925   003E6C  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1926   003E6E  C0F8  F082         	movff	_counter_num1,convert_arr_to_float@counter_num
  1927   003E72  0EEF               	movlw	low _num1_val
  1928   003E74  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1929   003E76  ECC7  F032         	call	_convert_arr_to_float	;wreg free
  1930   003E7A                     
  1931                           ;newmain.c: 27:      temp1 = num1_val;
  1932   003E7A  C0EF  F001         	movff	_num1_val,___fltol@f1
  1933   003E7E  C0F0  F002         	movff	_num1_val+1,___fltol@f1+1
  1934   003E82  C0F1  F003         	movff	_num1_val+2,___fltol@f1+2
  1935   003E86  C0F2  F004         	movff	_num1_val+3,___fltol@f1+3
  1936   003E8A  ECE3  F033         	call	___fltol	;wreg free
  1937   003E8E  C001  F1EC         	movff	?___fltol,_temp1
  1938   003E92  C002  F1ED         	movff	?___fltol+1,_temp1+1
  1939   003E96                     
  1940                           ;newmain.c: 28:     get_number_and_operartion(num2,&counter_num2,&lcd_counter,&operation
      +                          2);
  1941   003E96  0EF2               	movlw	low _num2
  1942   003E98  6E1D               	movwf	get_number_and_operartion@num^0,c
  1943   003E9A  0E01               	movlw	high _num2
  1944   003E9C  6E1E               	movwf	(get_number_and_operartion@num+1)^0,c
  1945   003E9E  0EF7               	movlw	low _counter_num2
  1946   003EA0  6E1F               	movwf	get_number_and_operartion@counter_num^0,c
  1947   003EA2  0EFF               	movlw	low _lcd_counter
  1948   003EA4  6E20               	movwf	get_number_and_operartion@lcd_counter^0,c
  1949   003EA6  0EF4               	movlw	low _operation2
  1950   003EA8  6E21               	movwf	get_number_and_operartion@operation^0,c
  1951   003EAA  ECA2  F02C         	call	_get_number_and_operartion	;wreg free
  1952   003EAE                     
  1953                           ;newmain.c: 29:     convert_arr_to_float( num2,counter_num2,&num2_val);
  1954   003EAE  0EF2               	movlw	low _num2
  1955   003EB0  0100               	movlb	0	; () banked
  1956   003EB2  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1957   003EB4  0E01               	movlw	high _num2
  1958   003EB6  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1959   003EB8  C0F7  F082         	movff	_counter_num2,convert_arr_to_float@counter_num
  1960   003EBC  0EEB               	movlw	low _num2_val
  1961   003EBE  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1962   003EC0  ECC7  F032         	call	_convert_arr_to_float	;wreg free
  1963   003EC4                     
  1964                           ;newmain.c: 30:     temp2 = num2_val;
  1965   003EC4  C0EB  F001         	movff	_num2_val,___fltol@f1
  1966   003EC8  C0EC  F002         	movff	_num2_val+1,___fltol@f1+1
  1967   003ECC  C0ED  F003         	movff	_num2_val+2,___fltol@f1+2
  1968   003ED0  C0EE  F004         	movff	_num2_val+3,___fltol@f1+3
  1969   003ED4  ECE3  F033         	call	___fltol	;wreg free
  1970   003ED8  C001  F1EA         	movff	?___fltol,_temp2
  1971   003EDC  C002  F1EB         	movff	?___fltol+1,_temp2+1
  1972   003EE0                     
  1973                           ;newmain.c: 32:     if(operation2 == '='){}
  1974   003EE0  0E3D               	movlw	61
  1975   003EE2  0100               	movlb	0	; () banked
  1976   003EE4  19F4               	xorwf	_operation2& (0+255),w,b
  1977   003EE6  A4D8               	btfss	status,2,c
  1978   003EE8  EF78  F01F         	goto	u13421
  1979   003EEC  EF7A  F01F         	goto	u13420
  1980   003EF0                     u13421:
  1981   003EF0  EF7C  F01F         	goto	l12851
  1982   003EF4                     u13420:
  1983   003EF4  EF93  F01F         	goto	l12855
  1984   003EF8                     l12851:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;newmain.c: 34:     get_third_number_and_third_operartion(num3,&counter_num3,&lcd_counte
      +                          r,&operation3);
  1988   003EF8  0EEE               	movlw	low _num3
  1989   003EFA  6E1D               	movwf	get_third_number_and_third_operartion@num^0,c
  1990   003EFC  0E01               	movlw	high _num3
  1991   003EFE  6E1E               	movwf	(get_third_number_and_third_operartion@num+1)^0,c
  1992   003F00  0EF6               	movlw	low _counter_num3
  1993   003F02  6E1F               	movwf	get_third_number_and_third_operartion@counter_num^0,c
  1994   003F04  0EFF               	movlw	low _lcd_counter
  1995   003F06  6E20               	movwf	get_third_number_and_third_operartion@lcd_counter^0,c
  1996   003F08  0EF3               	movlw	low _operation3
  1997   003F0A  6E21               	movwf	get_third_number_and_third_operartion@operation^0,c
  1998   003F0C  ECF8  F029         	call	_get_third_number_and_third_operartion	;wreg free
  1999   003F10                     
  2000                           ;newmain.c: 35:     convert_arr_to_float( num3,counter_num3,&num3_val);
  2001   003F10  0EEE               	movlw	low _num3
  2002   003F12  0100               	movlb	0	; () banked
  2003   003F14  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  2004   003F16  0E01               	movlw	high _num3
  2005   003F18  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  2006   003F1A  C0F6  F082         	movff	_counter_num3,convert_arr_to_float@counter_num
  2007   003F1E  0EE7               	movlw	low _num3_val
  2008   003F20  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  2009   003F22  ECC7  F032         	call	_convert_arr_to_float	;wreg free
  2010   003F26                     l12855:
  2011                           
  2012                           ;newmain.c: 38:     if((operation2 == '*' || operation2 == '/') && (operation == '+' || 
      +                          operation == '-'))
  2013   003F26  0E2A               	movlw	42
  2014   003F28  0100               	movlb	0	; () banked
  2015   003F2A  19F4               	xorwf	_operation2& (0+255),w,b
  2016   003F2C  B4D8               	btfsc	status,2,c
  2017   003F2E  EF9B  F01F         	goto	u13431
  2018   003F32  EF9D  F01F         	goto	u13430
  2019   003F36                     u13431:
  2020   003F36  EFA6  F01F         	goto	l12859
  2021   003F3A                     u13430:
  2022   003F3A                     
  2023                           ; BSR set to: 0
  2024   003F3A  0E2F               	movlw	47
  2025   003F3C  19F4               	xorwf	_operation2& (0+255),w,b
  2026   003F3E  A4D8               	btfss	status,2,c
  2027   003F40  EFA4  F01F         	goto	u13441
  2028   003F44  EFA6  F01F         	goto	u13440
  2029   003F48                     u13441:
  2030   003F48  EFCD  F020         	goto	l12895
  2031   003F4C                     u13440:
  2032   003F4C                     l12859:
  2033                           
  2034                           ; BSR set to: 0
  2035   003F4C  0E2B               	movlw	43
  2036   003F4E  19F5               	xorwf	_operation& (0+255),w,b
  2037   003F50  B4D8               	btfsc	status,2,c
  2038   003F52  EFAD  F01F         	goto	u13451
  2039   003F56  EFAF  F01F         	goto	u13450
  2040   003F5A                     u13451:
  2041   003F5A  EFE6  F01F         	goto	l12869
  2042   003F5E                     u13450:
  2043   003F5E                     
  2044                           ; BSR set to: 0
  2045   003F5E  0E2D               	movlw	45
  2046   003F60  19F5               	xorwf	_operation& (0+255),w,b
  2047   003F62  A4D8               	btfss	status,2,c
  2048   003F64  EFB6  F01F         	goto	u13461
  2049   003F68  EFB8  F01F         	goto	u13460
  2050   003F6C                     u13461:
  2051   003F6C  EFCD  F020         	goto	l12895
  2052   003F70                     u13460:
  2053   003F70  EFE6  F01F         	goto	l12869
  2054   003F74                     l12863:
  2055                           
  2056                           ; BSR set to: 0
  2057   003F74  C0EB  F032         	movff	_num2_val,multiplication_operation@num1_val
  2058   003F78  C0EC  F033         	movff	_num2_val+1,multiplication_operation@num1_val+1
  2059   003F7C  C0ED  F034         	movff	_num2_val+2,multiplication_operation@num1_val+2
  2060   003F80  C0EE  F035         	movff	_num2_val+3,multiplication_operation@num1_val+3
  2061   003F84  C0E7  F036         	movff	_num3_val,multiplication_operation@num2_val
  2062   003F88  C0E8  F037         	movff	_num3_val+1,multiplication_operation@num2_val+1
  2063   003F8C  C0E9  F038         	movff	_num3_val+2,multiplication_operation@num2_val+2
  2064   003F90  C0EA  F039         	movff	_num3_val+3,multiplication_operation@num2_val+3
  2065   003F94  0EE3               	movlw	low _result
  2066   003F96  6E3A               	movwf	multiplication_operation@result^0,c
  2067   003F98  EC30  F03C         	call	_multiplication_operation	;wreg free
  2068   003F9C  EF27  F020         	goto	l12877
  2069   003FA0                     l12865:
  2070                           
  2071                           ; BSR set to: 0
  2072   003FA0  C0EB  F05B         	movff	_num2_val,Division_operation@num1_val
  2073   003FA4  C0EC  F05C         	movff	_num2_val+1,Division_operation@num1_val+1
  2074   003FA8  C0ED  F05D         	movff	_num2_val+2,Division_operation@num1_val+2
  2075   003FAC  C0EE  F05E         	movff	_num2_val+3,Division_operation@num1_val+3
  2076   003FB0  C0E7  F05F         	movff	_num3_val,Division_operation@num2_val
  2077   003FB4  C0E8  F060         	movff	_num3_val+1,Division_operation@num2_val+1
  2078   003FB8  C0E9  F061         	movff	_num3_val+2,Division_operation@num2_val+2
  2079   003FBC  C0EA  F062         	movff	_num3_val+3,Division_operation@num2_val+3
  2080   003FC0  0EE3               	movlw	low _result
  2081   003FC2  6E63               	movwf	Division_operation@result^0,c
  2082   003FC4  EC6C  F03C         	call	_Division_operation	;wreg free
  2083   003FC8  EF27  F020         	goto	l12877
  2084   003FCC                     l12869:
  2085                           
  2086                           ; BSR set to: 0
  2087   003FCC  51F4               	movf	_operation2& (0+255),w,b
  2088   003FCE  6FD0               	movwf	??_main& (0+255),b
  2089   003FD0  6BD1               	clrf	(??_main+1)& (0+255),b
  2090                           
  2091                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2092                           ; Switch size 1, requested type "simple"
  2093                           ; Number of cases is 1, Range of values is 0 to 0
  2094                           ; switch strategies available:
  2095                           ; Name         Instructions Cycles
  2096                           ; simple_byte            4     3 (average)
  2097                           ;	Chosen strategy is simple_byte
  2098   003FD2  51D1               	movf	(??_main+1)& (0+255),w,b
  2099   003FD4  0A00               	xorlw	0	; case 0
  2100   003FD6  B4D8               	btfsc	status,2,c
  2101   003FD8  EFF0  F01F         	goto	l13289
  2102   003FDC  EF27  F020         	goto	l12877
  2103   003FE0                     l13289:
  2104                           
  2105                           ; BSR set to: 0
  2106                           ; Switch size 1, requested type "simple"
  2107                           ; Number of cases is 2, Range of values is 42 to 47
  2108                           ; switch strategies available:
  2109                           ; Name         Instructions Cycles
  2110                           ; simple_byte            7     4 (average)
  2111                           ;	Chosen strategy is simple_byte
  2112   003FE0  51D0               	movf	??_main& (0+255),w,b
  2113   003FE2  0A2A               	xorlw	42	; case 42
  2114   003FE4  B4D8               	btfsc	status,2,c
  2115   003FE6  EFBA  F01F         	goto	l12863
  2116   003FEA  0A05               	xorlw	5	; case 47
  2117   003FEC  B4D8               	btfsc	status,2,c
  2118   003FEE  EFD0  F01F         	goto	l12865
  2119   003FF2  EF27  F020         	goto	l12877
  2120   003FF6                     l12871:
  2121                           
  2122                           ; BSR set to: 0
  2123   003FF6  C0EF  F042         	movff	_num1_val,sum_operation@num1_val
  2124   003FFA  C0F0  F043         	movff	_num1_val+1,sum_operation@num1_val+1
  2125   003FFE  C0F1  F044         	movff	_num1_val+2,sum_operation@num1_val+2
  2126   004002  C0F2  F045         	movff	_num1_val+3,sum_operation@num1_val+3
  2127   004006  C0E3  F046         	movff	_result,sum_operation@num2_val
  2128   00400A  C0E4  F047         	movff	_result+1,sum_operation@num2_val+1
  2129   00400E  C0E5  F048         	movff	_result+2,sum_operation@num2_val+2
  2130   004012  C0E6  F049         	movff	_result+3,sum_operation@num2_val+3
  2131   004016  0EDF               	movlw	low _total_result
  2132   004018  6E4A               	movwf	sum_operation@result^0,c
  2133   00401A  ECF4  F03B         	call	_sum_operation	;wreg free
  2134   00401E  EF49  F020         	goto	l12883
  2135   004022                     l12873:
  2136                           
  2137                           ; BSR set to: 0
  2138   004022  C0EF  F063         	movff	_num1_val,subtraction_operation@num1_val
  2139   004026  C0F0  F064         	movff	_num1_val+1,subtraction_operation@num1_val+1
  2140   00402A  C0F1  F065         	movff	_num1_val+2,subtraction_operation@num1_val+2
  2141   00402E  C0F2  F066         	movff	_num1_val+3,subtraction_operation@num1_val+3
  2142   004032  C0E3  F067         	movff	_result,subtraction_operation@num2_val
  2143   004036  C0E4  F068         	movff	_result+1,subtraction_operation@num2_val+1
  2144   00403A  C0E5  F069         	movff	_result+2,subtraction_operation@num2_val+2
  2145   00403E  C0E6  F06A         	movff	_result+3,subtraction_operation@num2_val+3
  2146   004042  0EDF               	movlw	low _total_result
  2147   004044  6E6B               	movwf	subtraction_operation@result^0,c
  2148   004046  EC12  F03C         	call	_subtraction_operation	;wreg free
  2149   00404A  EF49  F020         	goto	l12883
  2150   00404E                     l12877:
  2151   00404E  0100               	movlb	0	; () banked
  2152   004050  51F5               	movf	_operation& (0+255),w,b
  2153   004052  6FD0               	movwf	??_main& (0+255),b
  2154   004054  6BD1               	clrf	(??_main+1)& (0+255),b
  2155                           
  2156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2157                           ; Switch size 1, requested type "simple"
  2158                           ; Number of cases is 1, Range of values is 0 to 0
  2159                           ; switch strategies available:
  2160                           ; Name         Instructions Cycles
  2161                           ; simple_byte            4     3 (average)
  2162                           ;	Chosen strategy is simple_byte
  2163   004056  51D1               	movf	(??_main+1)& (0+255),w,b
  2164   004058  0A00               	xorlw	0	; case 0
  2165   00405A  B4D8               	btfsc	status,2,c
  2166   00405C  EF32  F020         	goto	l13291
  2167   004060  EF49  F020         	goto	l12883
  2168   004064                     l13291:
  2169                           
  2170                           ; BSR set to: 0
  2171                           ; Switch size 1, requested type "simple"
  2172                           ; Number of cases is 2, Range of values is 43 to 45
  2173                           ; switch strategies available:
  2174                           ; Name         Instructions Cycles
  2175                           ; simple_byte            7     4 (average)
  2176                           ;	Chosen strategy is simple_byte
  2177   004064  51D0               	movf	??_main& (0+255),w,b
  2178   004066  0A2B               	xorlw	43	; case 43
  2179   004068  B4D8               	btfsc	status,2,c
  2180   00406A  EFFB  F01F         	goto	l12871
  2181   00406E  0A06               	xorlw	6	; case 45
  2182   004070  B4D8               	btfsc	status,2,c
  2183   004072  EF11  F020         	goto	l12873
  2184   004076  EF49  F020         	goto	l12883
  2185   00407A                     l12879:
  2186                           
  2187                           ; BSR set to: 0
  2188   00407A  C0DF  F0CC         	movff	_total_result,send_the_result_to_LCD@result
  2189   00407E  C0E0  F0CD         	movff	_total_result+1,send_the_result_to_LCD@result+1
  2190   004082  C0E1  F0CE         	movff	_total_result+2,send_the_result_to_LCD@result+2
  2191   004086  C0E2  F0CF         	movff	_total_result+3,send_the_result_to_LCD@result+3
  2192   00408A  ECE0  F035         	call	_send_the_result_to_LCD	;wreg free
  2193   00408E  EFB0  F021         	goto	l12919
  2194   004092                     l12883:
  2195   004092  0100               	movlb	0	; () banked
  2196   004094  51F3               	movf	_operation3& (0+255),w,b
  2197   004096  6FD0               	movwf	??_main& (0+255),b
  2198   004098  6BD1               	clrf	(??_main+1)& (0+255),b
  2199                           
  2200                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2201                           ; Switch size 1, requested type "simple"
  2202                           ; Number of cases is 1, Range of values is 0 to 0
  2203                           ; switch strategies available:
  2204                           ; Name         Instructions Cycles
  2205                           ; simple_byte            4     3 (average)
  2206                           ;	Chosen strategy is simple_byte
  2207   00409A  51D1               	movf	(??_main+1)& (0+255),w,b
  2208   00409C  0A00               	xorlw	0	; case 0
  2209   00409E  B4D8               	btfsc	status,2,c
  2210   0040A0  EF54  F020         	goto	l13293
  2211   0040A4  EFB0  F021         	goto	l12919
  2212   0040A8                     l13293:
  2213                           
  2214                           ; BSR set to: 0
  2215                           ; Switch size 1, requested type "simple"
  2216                           ; Number of cases is 5, Range of values is 42 to 61
  2217                           ; switch strategies available:
  2218                           ; Name         Instructions Cycles
  2219                           ; simple_byte           16     9 (average)
  2220                           ;	Chosen strategy is simple_byte
  2221   0040A8  51D0               	movf	??_main& (0+255),w,b
  2222   0040AA  0A2A               	xorlw	42	; case 42
  2223   0040AC  B4D8               	btfsc	status,2,c
  2224   0040AE  EFB0  F021         	goto	l12919
  2225   0040B2  0A01               	xorlw	1	; case 43
  2226   0040B4  B4D8               	btfsc	status,2,c
  2227   0040B6  EFB0  F021         	goto	l12919
  2228   0040BA  0A06               	xorlw	6	; case 45
  2229   0040BC  B4D8               	btfsc	status,2,c
  2230   0040BE  EFB0  F021         	goto	l12919
  2231   0040C2  0A02               	xorlw	2	; case 47
  2232   0040C4  B4D8               	btfsc	status,2,c
  2233   0040C6  EFB0  F021         	goto	l12919
  2234   0040CA  0A12               	xorlw	18	; case 61
  2235   0040CC  B4D8               	btfsc	status,2,c
  2236   0040CE  EF3D  F020         	goto	l12879
  2237   0040D2  EFB0  F021         	goto	l12919
  2238   0040D6                     l12885:
  2239                           
  2240                           ; BSR set to: 0
  2241   0040D6  C0EF  F042         	movff	_num1_val,sum_operation@num1_val
  2242   0040DA  C0F0  F043         	movff	_num1_val+1,sum_operation@num1_val+1
  2243   0040DE  C0F1  F044         	movff	_num1_val+2,sum_operation@num1_val+2
  2244   0040E2  C0F2  F045         	movff	_num1_val+3,sum_operation@num1_val+3
  2245   0040E6  C0EB  F046         	movff	_num2_val,sum_operation@num2_val
  2246   0040EA  C0EC  F047         	movff	_num2_val+1,sum_operation@num2_val+1
  2247   0040EE  C0ED  F048         	movff	_num2_val+2,sum_operation@num2_val+2
  2248   0040F2  C0EE  F049         	movff	_num2_val+3,sum_operation@num2_val+3
  2249   0040F6  0EE3               	movlw	low _result
  2250   0040F8  6E4A               	movwf	sum_operation@result^0,c
  2251   0040FA  ECF4  F03B         	call	_sum_operation	;wreg free
  2252   0040FE  EF52  F021         	goto	l12909
  2253   004102                     l12887:
  2254                           
  2255                           ; BSR set to: 0
  2256   004102  C0EF  F063         	movff	_num1_val,subtraction_operation@num1_val
  2257   004106  C0F0  F064         	movff	_num1_val+1,subtraction_operation@num1_val+1
  2258   00410A  C0F1  F065         	movff	_num1_val+2,subtraction_operation@num1_val+2
  2259   00410E  C0F2  F066         	movff	_num1_val+3,subtraction_operation@num1_val+3
  2260   004112  C0EB  F067         	movff	_num2_val,subtraction_operation@num2_val
  2261   004116  C0EC  F068         	movff	_num2_val+1,subtraction_operation@num2_val+1
  2262   00411A  C0ED  F069         	movff	_num2_val+2,subtraction_operation@num2_val+2
  2263   00411E  C0EE  F06A         	movff	_num2_val+3,subtraction_operation@num2_val+3
  2264   004122  0EE3               	movlw	low _result
  2265   004124  6E6B               	movwf	subtraction_operation@result^0,c
  2266   004126  EC12  F03C         	call	_subtraction_operation	;wreg free
  2267   00412A  EF52  F021         	goto	l12909
  2268   00412E                     l12889:
  2269                           
  2270                           ; BSR set to: 0
  2271   00412E  C0EF  F032         	movff	_num1_val,multiplication_operation@num1_val
  2272   004132  C0F0  F033         	movff	_num1_val+1,multiplication_operation@num1_val+1
  2273   004136  C0F1  F034         	movff	_num1_val+2,multiplication_operation@num1_val+2
  2274   00413A  C0F2  F035         	movff	_num1_val+3,multiplication_operation@num1_val+3
  2275   00413E  C0EB  F036         	movff	_num2_val,multiplication_operation@num2_val
  2276   004142  C0EC  F037         	movff	_num2_val+1,multiplication_operation@num2_val+1
  2277   004146  C0ED  F038         	movff	_num2_val+2,multiplication_operation@num2_val+2
  2278   00414A  C0EE  F039         	movff	_num2_val+3,multiplication_operation@num2_val+3
  2279   00414E  0EE3               	movlw	low _result
  2280   004150  6E3A               	movwf	multiplication_operation@result^0,c
  2281   004152  EC30  F03C         	call	_multiplication_operation	;wreg free
  2282   004156  EF52  F021         	goto	l12909
  2283   00415A                     l12891:
  2284                           
  2285                           ; BSR set to: 0
  2286   00415A  C0EF  F05B         	movff	_num1_val,Division_operation@num1_val
  2287   00415E  C0F0  F05C         	movff	_num1_val+1,Division_operation@num1_val+1
  2288   004162  C0F1  F05D         	movff	_num1_val+2,Division_operation@num1_val+2
  2289   004166  C0F2  F05E         	movff	_num1_val+3,Division_operation@num1_val+3
  2290   00416A  C0EB  F05F         	movff	_num2_val,Division_operation@num2_val
  2291   00416E  C0EC  F060         	movff	_num2_val+1,Division_operation@num2_val+1
  2292   004172  C0ED  F061         	movff	_num2_val+2,Division_operation@num2_val+2
  2293   004176  C0EE  F062         	movff	_num2_val+3,Division_operation@num2_val+3
  2294   00417A  0EE3               	movlw	low _result
  2295   00417C  6E63               	movwf	Division_operation@result^0,c
  2296   00417E  EC6C  F03C         	call	_Division_operation	;wreg free
  2297   004182  EF52  F021         	goto	l12909
  2298   004186                     l672:
  2299                           
  2300                           ; BSR set to: 0
  2301   004186  C0EF  F0E3         	movff	_num1_val,_result
  2302   00418A  C0F0  F0E4         	movff	_num1_val+1,_result+1
  2303   00418E  C0F1  F0E5         	movff	_num1_val+2,_result+2
  2304   004192  C0F2  F0E6         	movff	_num1_val+3,_result+3
  2305   004196  EF52  F021         	goto	l12909
  2306   00419A                     l12895:
  2307                           
  2308                           ; BSR set to: 0
  2309   00419A  51F5               	movf	_operation& (0+255),w,b
  2310   00419C  6FD0               	movwf	??_main& (0+255),b
  2311   00419E  6BD1               	clrf	(??_main+1)& (0+255),b
  2312                           
  2313                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2314                           ; Switch size 1, requested type "simple"
  2315                           ; Number of cases is 1, Range of values is 0 to 0
  2316                           ; switch strategies available:
  2317                           ; Name         Instructions Cycles
  2318                           ; simple_byte            4     3 (average)
  2319                           ;	Chosen strategy is simple_byte
  2320   0041A0  51D1               	movf	(??_main+1)& (0+255),w,b
  2321   0041A2  0A00               	xorlw	0	; case 0
  2322   0041A4  B4D8               	btfsc	status,2,c
  2323   0041A6  EFD7  F020         	goto	l13295
  2324   0041AA  EF52  F021         	goto	l12909
  2325   0041AE                     l13295:
  2326                           
  2327                           ; BSR set to: 0
  2328                           ; Switch size 1, requested type "simple"
  2329                           ; Number of cases is 5, Range of values is 42 to 61
  2330                           ; switch strategies available:
  2331                           ; Name         Instructions Cycles
  2332                           ; simple_byte           16     9 (average)
  2333                           ;	Chosen strategy is simple_byte
  2334   0041AE  51D0               	movf	??_main& (0+255),w,b
  2335   0041B0  0A2A               	xorlw	42	; case 42
  2336   0041B2  B4D8               	btfsc	status,2,c
  2337   0041B4  EF97  F020         	goto	l12889
  2338   0041B8  0A01               	xorlw	1	; case 43
  2339   0041BA  B4D8               	btfsc	status,2,c
  2340   0041BC  EF6B  F020         	goto	l12885
  2341   0041C0  0A06               	xorlw	6	; case 45
  2342   0041C2  B4D8               	btfsc	status,2,c
  2343   0041C4  EF81  F020         	goto	l12887
  2344   0041C8  0A02               	xorlw	2	; case 47
  2345   0041CA  B4D8               	btfsc	status,2,c
  2346   0041CC  EFAD  F020         	goto	l12891
  2347   0041D0  0A12               	xorlw	18	; case 61
  2348   0041D2  B4D8               	btfsc	status,2,c
  2349   0041D4  EFC3  F020         	goto	l672
  2350   0041D8  EF52  F021         	goto	l12909
  2351   0041DC                     l12897:
  2352                           
  2353                           ; BSR set to: 0
  2354   0041DC  C0E3  F042         	movff	_result,sum_operation@num1_val
  2355   0041E0  C0E4  F043         	movff	_result+1,sum_operation@num1_val+1
  2356   0041E4  C0E5  F044         	movff	_result+2,sum_operation@num1_val+2
  2357   0041E8  C0E6  F045         	movff	_result+3,sum_operation@num1_val+3
  2358   0041EC  C0E7  F046         	movff	_num3_val,sum_operation@num2_val
  2359   0041F0  C0E8  F047         	movff	_num3_val+1,sum_operation@num2_val+1
  2360   0041F4  C0E9  F048         	movff	_num3_val+2,sum_operation@num2_val+2
  2361   0041F8  C0EA  F049         	movff	_num3_val+3,sum_operation@num2_val+3
  2362   0041FC  0EDF               	movlw	low _total_result
  2363   0041FE  6E4A               	movwf	sum_operation@result^0,c
  2364   004200  ECF4  F03B         	call	_sum_operation	;wreg free
  2365   004204  EF80  F021         	goto	l12915
  2366   004208                     l12899:
  2367                           
  2368                           ; BSR set to: 0
  2369   004208  C0E3  F063         	movff	_result,subtraction_operation@num1_val
  2370   00420C  C0E4  F064         	movff	_result+1,subtraction_operation@num1_val+1
  2371   004210  C0E5  F065         	movff	_result+2,subtraction_operation@num1_val+2
  2372   004214  C0E6  F066         	movff	_result+3,subtraction_operation@num1_val+3
  2373   004218  C0E7  F067         	movff	_num3_val,subtraction_operation@num2_val
  2374   00421C  C0E8  F068         	movff	_num3_val+1,subtraction_operation@num2_val+1
  2375   004220  C0E9  F069         	movff	_num3_val+2,subtraction_operation@num2_val+2
  2376   004224  C0EA  F06A         	movff	_num3_val+3,subtraction_operation@num2_val+3
  2377   004228  0EDF               	movlw	low _total_result
  2378   00422A  6E6B               	movwf	subtraction_operation@result^0,c
  2379   00422C  EC12  F03C         	call	_subtraction_operation	;wreg free
  2380   004230  EF80  F021         	goto	l12915
  2381   004234                     l12901:
  2382                           
  2383                           ; BSR set to: 0
  2384   004234  C0E3  F032         	movff	_result,multiplication_operation@num1_val
  2385   004238  C0E4  F033         	movff	_result+1,multiplication_operation@num1_val+1
  2386   00423C  C0E5  F034         	movff	_result+2,multiplication_operation@num1_val+2
  2387   004240  C0E6  F035         	movff	_result+3,multiplication_operation@num1_val+3
  2388   004244  C0E7  F036         	movff	_num3_val,multiplication_operation@num2_val
  2389   004248  C0E8  F037         	movff	_num3_val+1,multiplication_operation@num2_val+1
  2390   00424C  C0E9  F038         	movff	_num3_val+2,multiplication_operation@num2_val+2
  2391   004250  C0EA  F039         	movff	_num3_val+3,multiplication_operation@num2_val+3
  2392   004254  0EDF               	movlw	low _total_result
  2393   004256  6E3A               	movwf	multiplication_operation@result^0,c
  2394   004258  EC30  F03C         	call	_multiplication_operation	;wreg free
  2395   00425C  EF80  F021         	goto	l12915
  2396   004260                     l12903:
  2397                           
  2398                           ; BSR set to: 0
  2399   004260  C0E3  F05B         	movff	_result,Division_operation@num1_val
  2400   004264  C0E4  F05C         	movff	_result+1,Division_operation@num1_val+1
  2401   004268  C0E5  F05D         	movff	_result+2,Division_operation@num1_val+2
  2402   00426C  C0E6  F05E         	movff	_result+3,Division_operation@num1_val+3
  2403   004270  C0E7  F05F         	movff	_num3_val,Division_operation@num2_val
  2404   004274  C0E8  F060         	movff	_num3_val+1,Division_operation@num2_val+1
  2405   004278  C0E9  F061         	movff	_num3_val+2,Division_operation@num2_val+2
  2406   00427C  C0EA  F062         	movff	_num3_val+3,Division_operation@num2_val+3
  2407   004280  0EDF               	movlw	low _total_result
  2408   004282  6E63               	movwf	Division_operation@result^0,c
  2409   004284  EC6C  F03C         	call	_Division_operation	;wreg free
  2410   004288  EF80  F021         	goto	l12915
  2411   00428C                     l12905:
  2412                           
  2413                           ; BSR set to: 0
  2414   00428C  C0E3  F0CC         	movff	_result,send_the_result_to_LCD@result
  2415   004290  C0E4  F0CD         	movff	_result+1,send_the_result_to_LCD@result+1
  2416   004294  C0E5  F0CE         	movff	_result+2,send_the_result_to_LCD@result+2
  2417   004298  C0E6  F0CF         	movff	_result+3,send_the_result_to_LCD@result+3
  2418   00429C  ECE0  F035         	call	_send_the_result_to_LCD	;wreg free
  2419   0042A0  EF80  F021         	goto	l12915
  2420   0042A4                     l12909:
  2421   0042A4  0100               	movlb	0	; () banked
  2422   0042A6  51F4               	movf	_operation2& (0+255),w,b
  2423   0042A8  6FD0               	movwf	??_main& (0+255),b
  2424   0042AA  6BD1               	clrf	(??_main+1)& (0+255),b
  2425                           
  2426                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2427                           ; Switch size 1, requested type "simple"
  2428                           ; Number of cases is 1, Range of values is 0 to 0
  2429                           ; switch strategies available:
  2430                           ; Name         Instructions Cycles
  2431                           ; simple_byte            4     3 (average)
  2432                           ;	Chosen strategy is simple_byte
  2433   0042AC  51D1               	movf	(??_main+1)& (0+255),w,b
  2434   0042AE  0A00               	xorlw	0	; case 0
  2435   0042B0  B4D8               	btfsc	status,2,c
  2436   0042B2  EF5D  F021         	goto	l13297
  2437   0042B6  EF80  F021         	goto	l12915
  2438   0042BA                     l13297:
  2439                           
  2440                           ; BSR set to: 0
  2441                           ; Switch size 1, requested type "simple"
  2442                           ; Number of cases is 5, Range of values is 42 to 61
  2443                           ; switch strategies available:
  2444                           ; Name         Instructions Cycles
  2445                           ; simple_byte           16     9 (average)
  2446                           ;	Chosen strategy is simple_byte
  2447   0042BA  51D0               	movf	??_main& (0+255),w,b
  2448   0042BC  0A2A               	xorlw	42	; case 42
  2449   0042BE  B4D8               	btfsc	status,2,c
  2450   0042C0  EF1A  F021         	goto	l12901
  2451   0042C4  0A01               	xorlw	1	; case 43
  2452   0042C6  B4D8               	btfsc	status,2,c
  2453   0042C8  EFEE  F020         	goto	l12897
  2454   0042CC  0A06               	xorlw	6	; case 45
  2455   0042CE  B4D8               	btfsc	status,2,c
  2456   0042D0  EF04  F021         	goto	l12899
  2457   0042D4  0A02               	xorlw	2	; case 47
  2458   0042D6  B4D8               	btfsc	status,2,c
  2459   0042D8  EF30  F021         	goto	l12903
  2460   0042DC  0A12               	xorlw	18	; case 61
  2461   0042DE  B4D8               	btfsc	status,2,c
  2462   0042E0  EF46  F021         	goto	l12905
  2463   0042E4  EF80  F021         	goto	l12915
  2464   0042E8                     l12911:
  2465                           
  2466                           ; BSR set to: 0
  2467   0042E8  C0DF  F0CC         	movff	_total_result,send_the_result_to_LCD@result
  2468   0042EC  C0E0  F0CD         	movff	_total_result+1,send_the_result_to_LCD@result+1
  2469   0042F0  C0E1  F0CE         	movff	_total_result+2,send_the_result_to_LCD@result+2
  2470   0042F4  C0E2  F0CF         	movff	_total_result+3,send_the_result_to_LCD@result+3
  2471   0042F8  ECE0  F035         	call	_send_the_result_to_LCD	;wreg free
  2472   0042FC  EFA2  F021         	goto	l12917
  2473   004300                     l12915:
  2474   004300  0100               	movlb	0	; () banked
  2475   004302  51F3               	movf	_operation3& (0+255),w,b
  2476   004304  6FD0               	movwf	??_main& (0+255),b
  2477   004306  6BD1               	clrf	(??_main+1)& (0+255),b
  2478                           
  2479                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2480                           ; Switch size 1, requested type "simple"
  2481                           ; Number of cases is 1, Range of values is 0 to 0
  2482                           ; switch strategies available:
  2483                           ; Name         Instructions Cycles
  2484                           ; simple_byte            4     3 (average)
  2485                           ;	Chosen strategy is simple_byte
  2486   004308  51D1               	movf	(??_main+1)& (0+255),w,b
  2487   00430A  0A00               	xorlw	0	; case 0
  2488   00430C  B4D8               	btfsc	status,2,c
  2489   00430E  EF8B  F021         	goto	l13299
  2490   004312  EFA2  F021         	goto	l12917
  2491   004316                     l13299:
  2492                           
  2493                           ; BSR set to: 0
  2494                           ; Switch size 1, requested type "simple"
  2495                           ; Number of cases is 5, Range of values is 42 to 61
  2496                           ; switch strategies available:
  2497                           ; Name         Instructions Cycles
  2498                           ; simple_byte           16     9 (average)
  2499                           ;	Chosen strategy is simple_byte
  2500   004316  51D0               	movf	??_main& (0+255),w,b
  2501   004318  0A2A               	xorlw	42	; case 42
  2502   00431A  B4D8               	btfsc	status,2,c
  2503   00431C  EFA2  F021         	goto	l12917
  2504   004320  0A01               	xorlw	1	; case 43
  2505   004322  B4D8               	btfsc	status,2,c
  2506   004324  EFA2  F021         	goto	l12917
  2507   004328  0A06               	xorlw	6	; case 45
  2508   00432A  B4D8               	btfsc	status,2,c
  2509   00432C  EFA2  F021         	goto	l12917
  2510   004330  0A02               	xorlw	2	; case 47
  2511   004332  B4D8               	btfsc	status,2,c
  2512   004334  EFA2  F021         	goto	l12917
  2513   004338  0A12               	xorlw	18	; case 61
  2514   00433A  B4D8               	btfsc	status,2,c
  2515   00433C  EF74  F021         	goto	l12911
  2516   004340  EFA2  F021         	goto	l12917
  2517   004344                     l12917:
  2518                           
  2519                           ;newmain.c: 83:        temp_result = total_result;
  2520   004344  C0DF  F001         	movff	_total_result,___fltol@f1
  2521   004348  C0E0  F002         	movff	_total_result+1,___fltol@f1+1
  2522   00434C  C0E1  F003         	movff	_total_result+2,___fltol@f1+2
  2523   004350  C0E2  F004         	movff	_total_result+3,___fltol@f1+3
  2524   004354  ECE3  F033         	call	___fltol	;wreg free
  2525   004358  C001  F1E8         	movff	?___fltol,_temp_result
  2526   00435C  C002  F1E9         	movff	?___fltol+1,_temp_result+1
  2527   004360                     l12919:
  2528                           
  2529                           ;newmain.c: 88:     _delay((unsigned long)((5000)*(8000000ul/4000.0)));
  2530   004360  0E33               	movlw	51
  2531   004362  0100               	movlb	0	; () banked
  2532   004364  6FD1               	movwf	(??_main+1)& (0+255),b
  2533   004366  0EBB               	movlw	187
  2534   004368  6FD0               	movwf	??_main& (0+255),b
  2535   00436A  0EDF               	movlw	223
  2536   00436C                     u13487:
  2537   00436C  2EE8               	decfsz	wreg,f,c
  2538   00436E  D7FE               	bra	u13487
  2539   004370  2FD0               	decfsz	??_main& (0+255),f,b
  2540   004372  D7FC               	bra	u13487
  2541   004374  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  2542   004376  D7FA               	bra	u13487
  2543   004378  D000               	nop2	
  2544   00437A                     
  2545                           ;newmain.c: 89:  lcd_4bit_send_command(&lcd1,0x01);
  2546   00437A  0EF9               	movlw	low _lcd1
  2547   00437C  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2548   00437E  0E01               	movlw	1
  2549   004380  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2550   004382  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  2551   004386  EFFD  F01E         	goto	l12825
  2552   00438A  EF00  F000         	goto	start
  2553   00438E                     __end_of_main:
  2554                           	callstack 0
  2555                           
  2556 ;; *************** function _sum_operation *****************
  2557 ;; Defined at:
  2558 ;;		line 165 in file "calculator_function/calculator_functions.c"
  2559 ;; Parameters:    Size  Location     Type
  2560 ;;  num1_val        4   65[COMRAM] float 
  2561 ;;  num2_val        4   69[COMRAM] float 
  2562 ;;  result          1   73[COMRAM] PTR float 
  2563 ;;		 -> total_result(4), result(4), 
  2564 ;; Auto vars:     Size  Location     Type
  2565 ;;		None
  2566 ;; Return value:  Size  Location     Type
  2567 ;;                  1    wreg      void 
  2568 ;; Registers used:
  2569 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2570 ;; Tracked objects:
  2571 ;;		On entry : 0/0
  2572 ;;		On exit  : 0/0
  2573 ;;		Unchanged: 0/0
  2574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2575 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2576 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2577 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2578 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2579 ;;Total ram usage:        9 bytes
  2580 ;; Hardware stack levels used: 1
  2581 ;; Hardware stack levels required when called: 1
  2582 ;; This function calls:
  2583 ;;		___fladd
  2584 ;; This function is called by:
  2585 ;;		_main
  2586 ;; This function uses a non-reentrant model
  2587 ;;
  2588                           
  2589                           	psect	text1
  2590   0077E8                     __ptext1:
  2591                           	callstack 0
  2592   0077E8                     _sum_operation:
  2593                           	callstack 29
  2594   0077E8                     
  2595                           ;calculator_function/calculator_functions.c: 166: *result = num1_val+num2_val;
  2596   0077E8  C042  F032         	movff	sum_operation@num1_val,___fladd@b
  2597   0077EC  C043  F033         	movff	sum_operation@num1_val+1,___fladd@b+1
  2598   0077F0  C044  F034         	movff	sum_operation@num1_val+2,___fladd@b+2
  2599   0077F4  C045  F035         	movff	sum_operation@num1_val+3,___fladd@b+3
  2600   0077F8  C046  F036         	movff	sum_operation@num2_val,___fladd@a
  2601   0077FC  C047  F037         	movff	sum_operation@num2_val+1,___fladd@a+1
  2602   007800  C048  F038         	movff	sum_operation@num2_val+2,___fladd@a+2
  2603   007804  C049  F039         	movff	sum_operation@num2_val+3,___fladd@a+3
  2604   007808  ECC7  F021         	call	___fladd	;wreg free
  2605   00780C  504A               	movf	sum_operation@result^0,w,c
  2606   00780E  6ED9               	movwf	fsr2l,c
  2607   007810  6ADA               	clrf	fsr2h,c
  2608   007812  C032  FFDE         	movff	?___fladd,postinc2
  2609   007816  C033  FFDE         	movff	?___fladd+1,postinc2
  2610   00781A  C034  FFDE         	movff	?___fladd+2,postinc2
  2611   00781E  C035  FFDE         	movff	?___fladd+3,postinc2
  2612   007822  0012               	return		;funcret
  2613   007824                     __end_of_sum_operation:
  2614                           	callstack 0
  2615                           
  2616 ;; *************** function _subtraction_operation *****************
  2617 ;; Defined at:
  2618 ;;		line 175 in file "calculator_function/calculator_functions.c"
  2619 ;; Parameters:    Size  Location     Type
  2620 ;;  num1_val        4   98[COMRAM] float 
  2621 ;;  num2_val        4  102[COMRAM] float 
  2622 ;;  result          1  106[COMRAM] PTR float 
  2623 ;;		 -> total_result(4), result(4), 
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;		None
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2635 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2636 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2638 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2639 ;;Total ram usage:        9 bytes
  2640 ;; Hardware stack levels used: 1
  2641 ;; Hardware stack levels required when called: 2
  2642 ;; This function calls:
  2643 ;;		___flsub
  2644 ;; This function is called by:
  2645 ;;		_main
  2646 ;; This function uses a non-reentrant model
  2647 ;;
  2648                           
  2649                           	psect	text2
  2650   007824                     __ptext2:
  2651                           	callstack 0
  2652   007824                     _subtraction_operation:
  2653                           	callstack 28
  2654   007824                     
  2655                           ;calculator_function/calculator_functions.c: 176: *result = num1_val-num2_val;
  2656   007824  C063  F05B         	movff	subtraction_operation@num1_val,___flsub@b
  2657   007828  C064  F05C         	movff	subtraction_operation@num1_val+1,___flsub@b+1
  2658   00782C  C065  F05D         	movff	subtraction_operation@num1_val+2,___flsub@b+2
  2659   007830  C066  F05E         	movff	subtraction_operation@num1_val+3,___flsub@b+3
  2660   007834  C067  F05F         	movff	subtraction_operation@num2_val,___flsub@a
  2661   007838  C068  F060         	movff	subtraction_operation@num2_val+1,___flsub@a+1
  2662   00783C  C069  F061         	movff	subtraction_operation@num2_val+2,___flsub@a+2
  2663   007840  C06A  F062         	movff	subtraction_operation@num2_val+3,___flsub@a+3
  2664   007844  EC52  F03B         	call	___flsub	;wreg free
  2665   007848  506B               	movf	subtraction_operation@result^0,w,c
  2666   00784A  6ED9               	movwf	fsr2l,c
  2667   00784C  6ADA               	clrf	fsr2h,c
  2668   00784E  C05B  FFDE         	movff	?___flsub,postinc2
  2669   007852  C05C  FFDE         	movff	?___flsub+1,postinc2
  2670   007856  C05D  FFDE         	movff	?___flsub+2,postinc2
  2671   00785A  C05E  FFDE         	movff	?___flsub+3,postinc2
  2672   00785E  0012               	return		;funcret
  2673   007860                     __end_of_subtraction_operation:
  2674                           	callstack 0
  2675                           
  2676 ;; *************** function _send_the_result_to_LCD *****************
  2677 ;; Defined at:
  2678 ;;		line 204 in file "calculator_function/calculator_functions.c"
  2679 ;; Parameters:    Size  Location     Type
  2680 ;;  result          4   76[BANK0 ] float 
  2681 ;; Auto vars:     Size  Location     Type
  2682 ;;  result_str     80    0[BANK1 ] float [20]
  2683 ;; Return value:  Size  Location     Type
  2684 ;;                  1    wreg      void 
  2685 ;; Registers used:
  2686 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2687 ;; Tracked objects:
  2688 ;;		On entry : 0/0
  2689 ;;		On exit  : 0/0
  2690 ;;		Unchanged: 0/0
  2691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2692 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2693 ;;      Locals:         0       0      82       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2694 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2695 ;;      Totals:         0       4      82       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2696 ;;Total ram usage:       86 bytes
  2697 ;; Hardware stack levels used: 1
  2698 ;; Hardware stack levels required when called: 9
  2699 ;; This function calls:
  2700 ;;		___flge
  2701 ;;		___fltol
  2702 ;;		___xxtofl
  2703 ;;		_convert_float_to_string
  2704 ;;		_convert_int_to_string
  2705 ;;		_lcd_4bit_send_command
  2706 ;;		_lcd_4bit_send_string_pos
  2707 ;; This function is called by:
  2708 ;;		_main
  2709 ;; This function uses a non-reentrant model
  2710 ;;
  2711                           
  2712                           	psect	text3
  2713   006BC0                     __ptext3:
  2714                           	callstack 0
  2715   006BC0                     _send_the_result_to_LCD:
  2716                           	callstack 21
  2717   006BC0                     
  2718                           ;calculator_function/calculator_functions.c: 205: float32 result_str[20];;calculator_fun
      +                          ction/calculator_functions.c: 206: if(result > (uint32)result){
  2719   006BC0  C0CC  F001         	movff	send_the_result_to_LCD@result,___fltol@f1
  2720   006BC4  C0CD  F002         	movff	send_the_result_to_LCD@result+1,___fltol@f1+1
  2721   006BC8  C0CE  F003         	movff	send_the_result_to_LCD@result+2,___fltol@f1+2
  2722   006BCC  C0CF  F004         	movff	send_the_result_to_LCD@result+3,___fltol@f1+3
  2723   006BD0  ECE3  F033         	call	___fltol	;wreg free
  2724   006BD4  C001  F00B         	movff	?___fltol,___xxtofl@val
  2725   006BD8  C002  F00C         	movff	?___fltol+1,___xxtofl@val+1
  2726   006BDC  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2727   006BDE  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2728   006BE0  0E00               	movlw	0
  2729   006BE2  ECF8  F02F         	call	___xxtofl
  2730   006BE6  C00B  F063         	movff	?___xxtofl,___flge@ff1
  2731   006BEA  C00C  F064         	movff	?___xxtofl+1,___flge@ff1+1
  2732   006BEE  C00D  F065         	movff	?___xxtofl+2,___flge@ff1+2
  2733   006BF2  C00E  F066         	movff	?___xxtofl+3,___flge@ff1+3
  2734   006BF6  C0CC  F067         	movff	send_the_result_to_LCD@result,___flge@ff2
  2735   006BFA  C0CD  F068         	movff	send_the_result_to_LCD@result+1,___flge@ff2+1
  2736   006BFE  C0CE  F069         	movff	send_the_result_to_LCD@result+2,___flge@ff2+2
  2737   006C02  C0CF  F06A         	movff	send_the_result_to_LCD@result+3,___flge@ff2+3
  2738   006C06  EC66  F034         	call	___flge	;wreg free
  2739   006C0A  B0D8               	btfsc	status,0,c
  2740   006C0C  EF0A  F036         	goto	u13391
  2741   006C10  EF0C  F036         	goto	u13390
  2742   006C14                     u13391:
  2743   006C14  EF1D  F036         	goto	l12789
  2744   006C18                     u13390:
  2745   006C18                     
  2746                           ;calculator_function/calculator_functions.c: 207: convert_float_to_string(result,result_
      +                          str);
  2747   006C18  C0CC  F0C6         	movff	send_the_result_to_LCD@result,convert_float_to_string@value
  2748   006C1C  C0CD  F0C7         	movff	send_the_result_to_LCD@result+1,convert_float_to_string@value+1
  2749   006C20  C0CE  F0C8         	movff	send_the_result_to_LCD@result+2,convert_float_to_string@value+2
  2750   006C24  C0CF  F0C9         	movff	send_the_result_to_LCD@result+3,convert_float_to_string@value+3
  2751   006C28  0E00               	movlw	low send_the_result_to_LCD@result_str
  2752   006C2A  0100               	movlb	0	; () banked
  2753   006C2C  6FCA               	movwf	convert_float_to_string@str& (0+255),b
  2754   006C2E  0E01               	movlw	high send_the_result_to_LCD@result_str
  2755   006C30  6FCB               	movwf	(convert_float_to_string@str+1)& (0+255),b
  2756   006C32  EC75  F03B         	call	_convert_float_to_string	;wreg free
  2757                           
  2758                           ;calculator_function/calculator_functions.c: 208: }
  2759   006C36  EF36  F036         	goto	l12793
  2760   006C3A                     l12789:
  2761                           
  2762                           ;calculator_function/calculator_functions.c: 210: convert_int_to_string((uint32)result,(
      +                          uint32)result_str);
  2763   006C3A  C0CC  F001         	movff	send_the_result_to_LCD@result,___fltol@f1
  2764   006C3E  C0CD  F002         	movff	send_the_result_to_LCD@result+1,___fltol@f1+1
  2765   006C42  C0CE  F003         	movff	send_the_result_to_LCD@result+2,___fltol@f1+2
  2766   006C46  C0CF  F004         	movff	send_the_result_to_LCD@result+3,___fltol@f1+3
  2767   006C4A  ECE3  F033         	call	___fltol	;wreg free
  2768   006C4E  C001  F150         	movff	?___fltol,_send_the_result_to_LCD$2097
  2769   006C52  C002  F151         	movff	?___fltol+1,_send_the_result_to_LCD$2097+1
  2770   006C56                     
  2771                           ;calculator_function/calculator_functions.c: 210: convert_int_to_string((uint32)result,(
      +                          uint32)result_str);
  2772   006C56  C150  F0C6         	movff	_send_the_result_to_LCD$2097,convert_int_to_string@value
  2773   006C5A  C151  F0C7         	movff	_send_the_result_to_LCD$2097+1,convert_int_to_string@value+1
  2774   006C5E  0E00               	movlw	low send_the_result_to_LCD@result_str
  2775   006C60  0100               	movlb	0	; () banked
  2776   006C62  6FC8               	movwf	convert_int_to_string@str& (0+255),b
  2777   006C64  0E01               	movlw	high send_the_result_to_LCD@result_str
  2778   006C66  6FC9               	movwf	(convert_int_to_string@str+1)& (0+255),b
  2779   006C68  EC02  F03B         	call	_convert_int_to_string	;wreg free
  2780   006C6C                     l12793:
  2781                           
  2782                           ;calculator_function/calculator_functions.c: 212: lcd_4bit_send_command(&lcd1,0x08);
  2783   006C6C  0EF9               	movlw	low _lcd1
  2784   006C6E  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2785   006C70  0E08               	movlw	8
  2786   006C72  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2787   006C74  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  2788   006C78                     
  2789                           ;calculator_function/calculator_functions.c: 213: lcd_4bit_send_command(&lcd1,0x0C);
  2790   006C78  0EF9               	movlw	low _lcd1
  2791   006C7A  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2792   006C7C  0E0C               	movlw	12
  2793   006C7E  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2794   006C80  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  2795   006C84                     
  2796                           ;calculator_function/calculator_functions.c: 214: lcd_4bit_send_string_pos(&lcd1,3,1,res
      +                          ult_str);
  2797   006C84  0EF9               	movlw	low _lcd1
  2798   006C86  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2799   006C88  0E03               	movlw	3
  2800   006C8A  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  2801   006C8C  0E01               	movlw	1
  2802   006C8E  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  2803   006C90  0E00               	movlw	low send_the_result_to_LCD@result_str
  2804   006C92  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  2805   006C94  0E01               	movlw	high send_the_result_to_LCD@result_str
  2806   006C96  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2807   006C98  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  2808   006C9C  0012               	return		;funcret
  2809   006C9E                     __end_of_send_the_result_to_LCD:
  2810                           	callstack 0
  2811                           
  2812 ;; *************** function _convert_int_to_string *****************
  2813 ;; Defined at:
  2814 ;;		line 469 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  2815 ;; Parameters:    Size  Location     Type
  2816 ;;  value           2   70[BANK0 ] unsigned int 
  2817 ;;  str             2   72[BANK0 ] PTR unsigned char 
  2818 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  2819 ;; Auto vars:     Size  Location     Type
  2820 ;;  ret             1    0        unsigned char 
  2821 ;; Return value:  Size  Location     Type
  2822 ;;                  1    wreg      unsigned char 
  2823 ;; Registers used:
  2824 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2825 ;; Tracked objects:
  2826 ;;		On entry : 0/0
  2827 ;;		On exit  : 0/0
  2828 ;;		Unchanged: 0/0
  2829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2830 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2831 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2832 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2833 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2834 ;;Total ram usage:        4 bytes
  2835 ;; Hardware stack levels used: 1
  2836 ;; Hardware stack levels required when called: 8
  2837 ;; This function calls:
  2838 ;;		_memset
  2839 ;;		_sprintf
  2840 ;; This function is called by:
  2841 ;;		_send_the_result_to_LCD
  2842 ;; This function uses a non-reentrant model
  2843 ;;
  2844                           
  2845                           	psect	text4
  2846   007604                     __ptext4:
  2847                           	callstack 0
  2848   007604                     _convert_int_to_string:
  2849                           	callstack 21
  2850   007604                     
  2851                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 471:     if(((void*)0) == str)
  2852   007604  0100               	movlb	0	; () banked
  2853   007606  51C8               	movf	convert_int_to_string@str& (0+255),w,b
  2854   007608  11C9               	iorwf	(convert_int_to_string@str+1)& (0+255),w,b
  2855   00760A  A4D8               	btfss	status,2,c
  2856   00760C  EF0A  F03B         	goto	u13361
  2857   007610  EF0C  F03B         	goto	u13360
  2858   007614                     u13361:
  2859   007614  EF0E  F03B         	goto	l12751
  2860   007618                     u13360:
  2861   007618                     
  2862                           ; BSR set to: 0
  2863                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 474:     }
  2864   007618  EF29  F03B         	goto	l294
  2865   00761C                     l12751:
  2866                           
  2867                           ; BSR set to: 0
  2868                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 476:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 477:      
      +                             memset(str,'\0',20);
  2869   00761C  C0C8  F001         	movff	convert_int_to_string@str,memset@dest
  2870   007620  C0C9  F002         	movff	convert_int_to_string@str+1,memset@dest+1
  2871   007624  0E00               	movlw	0
  2872   007626  6E04               	movwf	(memset@c+1)^0,c
  2873   007628  0E00               	movlw	0
  2874   00762A  6E03               	movwf	memset@c^0,c
  2875   00762C  0E00               	movlw	0
  2876   00762E  6E06               	movwf	(memset@n+1)^0,c
  2877   007630  0E14               	movlw	20
  2878   007632  6E05               	movwf	memset@n^0,c
  2879   007634  ECC4  F03C         	call	_memset	;wreg free
  2880   007638                     
  2881                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 478:         sprintf(str,"%i",value);
  2882   007638  C0C8  F0B2         	movff	convert_int_to_string@str,sprintf@s
  2883   00763C  C0C9  F0B3         	movff	convert_int_to_string@str+1,sprintf@s+1
  2884   007640  0EE0               	movlw	low STR_12
  2885   007642  0100               	movlb	0	; () banked
  2886   007644  6FB4               	movwf	sprintf@fmt& (0+255),b
  2887   007646  C0C6  F0B5         	movff	convert_int_to_string@value,?_sprintf+3
  2888   00764A  C0C7  F0B6         	movff	convert_int_to_string@value+1,?_sprintf+4
  2889   00764E  EC95  F03B         	call	_sprintf	;wreg free
  2890   007652                     l294:
  2891   007652  0012               	return		;funcret
  2892   007654                     __end_of_convert_int_to_string:
  2893                           	callstack 0
  2894                           
  2895 ;; *************** function _convert_float_to_string *****************
  2896 ;; Defined at:
  2897 ;;		line 154 in file "calculator_function/calculator_functions.c"
  2898 ;; Parameters:    Size  Location     Type
  2899 ;;  value           4   70[BANK0 ] float 
  2900 ;;  str             2   74[BANK0 ] PTR unsigned char 
  2901 ;;		 -> send_the_result_to_LCD@result_str(80), 
  2902 ;; Auto vars:     Size  Location     Type
  2903 ;;		None
  2904 ;; Return value:  Size  Location     Type
  2905 ;;                  1    wreg      void 
  2906 ;; Registers used:
  2907 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2908 ;; Tracked objects:
  2909 ;;		On entry : 0/0
  2910 ;;		On exit  : 0/0
  2911 ;;		Unchanged: 0/0
  2912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2913 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2914 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2915 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2916 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2917 ;;Total ram usage:        6 bytes
  2918 ;; Hardware stack levels used: 1
  2919 ;; Hardware stack levels required when called: 8
  2920 ;; This function calls:
  2921 ;;		_memset
  2922 ;;		_sprintf
  2923 ;; This function is called by:
  2924 ;;		_send_the_result_to_LCD
  2925 ;; This function uses a non-reentrant model
  2926 ;;
  2927                           
  2928                           	psect	text5
  2929   0076EA                     __ptext5:
  2930                           	callstack 0
  2931   0076EA                     _convert_float_to_string:
  2932                           	callstack 21
  2933   0076EA                     
  2934                           ;calculator_function/calculator_functions.c: 155:     memset(str,'\0',20);
  2935   0076EA  C0CA  F001         	movff	convert_float_to_string@str,memset@dest
  2936   0076EE  C0CB  F002         	movff	convert_float_to_string@str+1,memset@dest+1
  2937   0076F2  0E00               	movlw	0
  2938   0076F4  6E04               	movwf	(memset@c+1)^0,c
  2939   0076F6  0E00               	movlw	0
  2940   0076F8  6E03               	movwf	memset@c^0,c
  2941   0076FA  0E00               	movlw	0
  2942   0076FC  6E06               	movwf	(memset@n+1)^0,c
  2943   0076FE  0E14               	movlw	20
  2944   007700  6E05               	movwf	memset@n^0,c
  2945   007702  ECC4  F03C         	call	_memset	;wreg free
  2946   007706                     
  2947                           ;calculator_function/calculator_functions.c: 156:     sprintf(str,"%.2f",value);
  2948   007706  C0CA  F0B2         	movff	convert_float_to_string@str,sprintf@s
  2949   00770A  C0CB  F0B3         	movff	convert_float_to_string@str+1,sprintf@s+1
  2950   00770E  0ED3               	movlw	low STR_11
  2951   007710  0100               	movlb	0	; () banked
  2952   007712  6FB4               	movwf	sprintf@fmt& (0+255),b
  2953   007714  C0C6  F0B5         	movff	convert_float_to_string@value,?_sprintf+3
  2954   007718  C0C7  F0B6         	movff	convert_float_to_string@value+1,?_sprintf+4
  2955   00771C  C0C8  F0B7         	movff	convert_float_to_string@value+2,?_sprintf+5
  2956   007720  C0C9  F0B8         	movff	convert_float_to_string@value+3,?_sprintf+6
  2957   007724  EC95  F03B         	call	_sprintf	;wreg free
  2958   007728  0012               	return		;funcret
  2959   00772A                     __end_of_convert_float_to_string:
  2960                           	callstack 0
  2961                           
  2962 ;; *************** function _sprintf *****************
  2963 ;; Defined at:
  2964 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2965 ;; Parameters:    Size  Location     Type
  2966 ;;  s               2   50[BANK0 ] PTR unsigned char 
  2967 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  2968 ;;  fmt             1   52[BANK0 ] PTR const unsigned char 
  2969 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  2970 ;; Auto vars:     Size  Location     Type
  2971 ;;  f              12   58[BANK0 ] struct _IO_FILE
  2972 ;;  ret             2    0        int 
  2973 ;;  ap              1   57[BANK0 ] PTR void [1]
  2974 ;;		 -> ?_sprintf(2), 
  2975 ;; Return value:  Size  Location     Type
  2976 ;;                  2   50[BANK0 ] int 
  2977 ;; Registers used:
  2978 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2979 ;; Tracked objects:
  2980 ;;		On entry : 0/0
  2981 ;;		On exit  : 0/0
  2982 ;;		Unchanged: 0/0
  2983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2984 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2985 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2986 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2987 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2988 ;;Total ram usage:       20 bytes
  2989 ;; Hardware stack levels used: 1
  2990 ;; Hardware stack levels required when called: 7
  2991 ;; This function calls:
  2992 ;;		_vfprintf
  2993 ;; This function is called by:
  2994 ;;		_convert_float_to_string
  2995 ;;		_convert_int_to_string
  2996 ;;		_convert_byte_to_string
  2997 ;;		_convert_short_to_string
  2998 ;; This function uses a non-reentrant model
  2999 ;;
  3000                           
  3001                           	psect	text6
  3002   00772A                     __ptext6:
  3003                           	callstack 0
  3004   00772A                     _sprintf:
  3005                           	callstack 21
  3006   00772A  0EB5               	movlw	low (?_sprintf+3)
  3007   00772C  0100               	movlb	0	; () banked
  3008   00772E  6FB9               	movwf	sprintf@ap& (0+255),b
  3009   007730  C0B2  F0BA         	movff	sprintf@s,sprintf@f
  3010   007734  C0B3  F0BB         	movff	sprintf@s+1,sprintf@f+1
  3011   007738                     
  3012                           ; BSR set to: 0
  3013   007738  0E00               	movlw	0
  3014   00773A  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  3015   00773C  0E00               	movlw	0
  3016   00773E  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  3017   007740                     
  3018                           ; BSR set to: 0
  3019   007740  0E00               	movlw	0
  3020   007742  6FC5               	movwf	(sprintf@f+11)& (0+255),b
  3021   007744  0E00               	movlw	0
  3022   007746  6FC4               	movwf	(sprintf@f+10)& (0+255),b
  3023   007748                     
  3024                           ; BSR set to: 0
  3025   007748  0EBA               	movlw	low sprintf@f
  3026   00774A  6E7C               	movwf	vfprintf@fp^0,c
  3027   00774C  C0B4  F07D         	movff	sprintf@fmt,vfprintf@fmt
  3028   007750  0EB9               	movlw	low sprintf@ap
  3029   007752  6E7E               	movwf	vfprintf@ap^0,c
  3030   007754  ECD5  F03B         	call	_vfprintf	;wreg free
  3031   007758  0100               	movlb	0	; () banked
  3032   00775A  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  3033   00775C  25B2               	addwf	sprintf@s& (0+255),w,b
  3034   00775E  6ED9               	movwf	fsr2l,c
  3035   007760  51BE               	movf	(sprintf@f+4)& (0+255),w,b
  3036   007762  21B3               	addwfc	(sprintf@s+1)& (0+255),w,b
  3037   007764  6EDA               	movwf	fsr2h,c
  3038   007766  6ADF               	clrf	indf2,c
  3039   007768                     
  3040                           ; BSR set to: 0
  3041   007768  0012               	return		;funcret
  3042   00776A                     __end_of_sprintf:
  3043                           	callstack 0
  3044                           
  3045 ;; *************** function _vfprintf *****************
  3046 ;; Defined at:
  3047 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3048 ;; Parameters:    Size  Location     Type
  3049 ;;  fp              1  123[COMRAM] PTR struct _IO_FILE
  3050 ;;		 -> sprintf@f(12), 
  3051 ;;  fmt             1  124[COMRAM] PTR const unsigned char 
  3052 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  3053 ;;  ap              1  125[COMRAM] PTR PTR void 
  3054 ;;		 -> sprintf@ap(1), 
  3055 ;; Auto vars:     Size  Location     Type
  3056 ;;  cfmt            1  126[COMRAM] PTR unsigned char 
  3057 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  3058 ;; Return value:  Size  Location     Type
  3059 ;;                  2  123[COMRAM] int 
  3060 ;; Registers used:
  3061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3062 ;; Tracked objects:
  3063 ;;		On entry : 0/0
  3064 ;;		On exit  : 0/0
  3065 ;;		Unchanged: 0/0
  3066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3067 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3068 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3070 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3071 ;;Total ram usage:        4 bytes
  3072 ;; Hardware stack levels used: 1
  3073 ;; Hardware stack levels required when called: 6
  3074 ;; This function calls:
  3075 ;;		_vfpfcnvrt
  3076 ;; This function is called by:
  3077 ;;		_sprintf
  3078 ;; This function uses a non-reentrant model
  3079 ;;
  3080                           
  3081                           	psect	text7
  3082   0077AA                     __ptext7:
  3083                           	callstack 0
  3084   0077AA                     _vfprintf:
  3085                           	callstack 21
  3086   0077AA                     
  3087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3088   0077AA  C07D  F07F         	movff	vfprintf@fmt,vfprintf@cfmt
  3089                           
  3090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3091   0077AE  EFE1  F03B         	goto	l12147
  3092   0077B2                     l12145:
  3093                           
  3094                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3095   0077B2  C07C  F077         	movff	vfprintf@fp,vfpfcnvrt@fp
  3096   0077B6  0E7F               	movlw	low vfprintf@cfmt
  3097   0077B8  6E78               	movwf	vfpfcnvrt@fmt^0,c
  3098   0077BA  C07E  F079         	movff	vfprintf@ap,vfpfcnvrt@ap
  3099   0077BE  EC5F  F02B         	call	_vfpfcnvrt	;wreg free
  3100   0077C2                     l12147:
  3101                           
  3102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3103   0077C2  C07F  FFF6         	movff	vfprintf@cfmt,tblptrl
  3104   0077C6                     	if	1	;There is more than 1 active tblptr byte
  3105   0077C6  0E10               	movlw	high __smallconst
  3106   0077C8  6EF7               	movwf	tblptrh,c
  3107   0077CA                     	endif
  3108   0077CA                     	if	0	;tblptru may be non-zero
  3109   0077CA                     	endif
  3110   0077CA                     	if	0	;tblptru may be non-zero
  3111   0077CA                     	endif
  3112   0077CA  0008               	tblrd		*
  3113   0077CC  50F5               	movf	tablat,w,c
  3114   0077CE  0900               	iorlw	0
  3115   0077D0  A4D8               	btfss	status,2,c
  3116   0077D2  EFED  F03B         	goto	u12461
  3117   0077D6  EFEF  F03B         	goto	u12460
  3118   0077DA                     u12461:
  3119   0077DA  EFD9  F03B         	goto	l12145
  3120   0077DE                     u12460:
  3121   0077DE                     
  3122                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3123   0077DE  0E00               	movlw	0
  3124   0077E0  6E7D               	movwf	(?_vfprintf+1)^0,c
  3125   0077E2  0E00               	movlw	0
  3126   0077E4  6E7C               	movwf	?_vfprintf^0,c
  3127   0077E6  0012               	return		;funcret
  3128   0077E8                     __end_of_vfprintf:
  3129                           	callstack 0
  3130                           
  3131 ;; *************** function _vfpfcnvrt *****************
  3132 ;; Defined at:
  3133 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3134 ;; Parameters:    Size  Location     Type
  3135 ;;  fp              1  118[COMRAM] PTR struct _IO_FILE
  3136 ;;		 -> sprintf@f(12), 
  3137 ;;  fmt             1  119[COMRAM] PTR PTR unsigned char 
  3138 ;;		 -> vfprintf@cfmt(1), 
  3139 ;;  ap              1  120[COMRAM] PTR PTR void 
  3140 ;;		 -> sprintf@ap(1), 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  convarg         4   44[BANK0 ] struct .
  3143 ;;  cp              1   49[BANK0 ] PTR unsigned char 
  3144 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  3145 ;;  c               1   48[BANK0 ] unsigned char 
  3146 ;;  done            1    0        _Bool 
  3147 ;; Return value:  Size  Location     Type
  3148 ;;                  1    wreg      void 
  3149 ;; Registers used:
  3150 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3151 ;; Tracked objects:
  3152 ;;		On entry : 0/0
  3153 ;;		On exit  : 0/0
  3154 ;;		Unchanged: 0/0
  3155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3156 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3157 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3158 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3159 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3160 ;;Total ram usage:       11 bytes
  3161 ;; Hardware stack levels used: 1
  3162 ;; Hardware stack levels required when called: 5
  3163 ;; This function calls:
  3164 ;;		_dtoa
  3165 ;;		_efgtoa
  3166 ;;		_fputc
  3167 ;;		_read_prec_or_width
  3168 ;; This function is called by:
  3169 ;;		_vfprintf
  3170 ;; This function uses a non-reentrant model
  3171 ;;
  3172                           
  3173                           	psect	text8
  3174   0056BE                     __ptext8:
  3175                           	callstack 0
  3176   0056BE                     _vfpfcnvrt:
  3177                           	callstack 21
  3178   0056BE                     
  3179                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3180   0056BE  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3181   0056C0  6ED9               	movwf	fsr2l,c
  3182   0056C2  6ADA               	clrf	fsr2h,c
  3183   0056C4  CFDF FFF6          	movff	indf2,tblptrl
  3184   0056C8                     	if	1	;There is more than 1 active tblptr byte
  3185   0056C8  0E10               	movlw	high __smallconst
  3186   0056CA  6EF7               	movwf	tblptrh,c
  3187   0056CC                     	endif
  3188   0056CC                     	if	0	;tblptru may be non-zero
  3189   0056CC                     	endif
  3190   0056CC                     	if	0	;tblptru may be non-zero
  3191   0056CC                     	endif
  3192   0056CC  0008               	tblrd		*
  3193   0056CE  50F5               	movf	tablat,w,c
  3194   0056D0  0A25               	xorlw	37
  3195   0056D2  A4D8               	btfss	status,2,c
  3196   0056D4  EF6E  F02B         	goto	u12411
  3197   0056D8  EF70  F02B         	goto	u12410
  3198   0056DC                     u12411:
  3199   0056DC  EF90  F02C         	goto	l12119
  3200   0056E0                     u12410:
  3201   0056E0                     
  3202                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3203   0056E0  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3204   0056E2  6ED9               	movwf	fsr2l,c
  3205   0056E4  6ADA               	clrf	fsr2h,c
  3206   0056E6  2ADF               	incf	indf2,f,c
  3207   0056E8                     
  3208                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3209   0056E8  0E00               	movlw	0
  3210   0056EA  0100               	movlb	0	; () banked
  3211   0056EC  6FD3               	movwf	(_width+1)& (0+255),b
  3212   0056EE  0E00               	movlw	0
  3213   0056F0  6FD2               	movwf	_width& (0+255),b
  3214   0056F2  C0D2  F0D6         	movff	_width,_flags
  3215   0056F6                     
  3216                           ; BSR set to: 0
  3217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3218   0056F6  69D4               	setf	_prec& (0+255),b
  3219   0056F8  69D5               	setf	(_prec+1)& (0+255),b
  3220   0056FA                     
  3221                           ; BSR set to: 0
  3222                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3223   0056FA  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3224   0056FC  6ED9               	movwf	fsr2l,c
  3225   0056FE  6ADA               	clrf	fsr2h,c
  3226   005700  CFDF FFF6          	movff	indf2,tblptrl
  3227   005704                     	if	1	;There is more than 1 active tblptr byte
  3228   005704  0E10               	movlw	high __smallconst
  3229   005706  6EF7               	movwf	tblptrh,c
  3230   005708                     	endif
  3231   005708                     	if	0	;tblptru may be non-zero
  3232   005708                     	endif
  3233   005708                     	if	0	;tblptru may be non-zero
  3234   005708                     	endif
  3235   005708  0008               	tblrd		*
  3236   00570A  50F5               	movf	tablat,w,c
  3237   00570C  0A2E               	xorlw	46
  3238   00570E  A4D8               	btfss	status,2,c
  3239   005710  EF8C  F02B         	goto	u12421
  3240   005714  EF8E  F02B         	goto	u12420
  3241   005718                     u12421:
  3242   005718  EF9C  F02B         	goto	l12067
  3243   00571C                     u12420:
  3244   00571C                     
  3245                           ; BSR set to: 0
  3246                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3247   00571C  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3248   00571E  6ED9               	movwf	fsr2l,c
  3249   005720  6ADA               	clrf	fsr2h,c
  3250   005722  2ADF               	incf	indf2,f,c
  3251   005724                     
  3252                           ; BSR set to: 0
  3253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3254   005724  C078  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3255   005728  C079  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3256   00572C  EC74  F038         	call	_read_prec_or_width	;wreg free
  3257   005730  C007  F0D4         	movff	?_read_prec_or_width,_prec
  3258   005734  C008  F0D5         	movff	?_read_prec_or_width+1,_prec+1
  3259   005738                     l12067:
  3260                           
  3261                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3262   005738  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3263   00573A  6ED9               	movwf	fsr2l,c
  3264   00573C  6ADA               	clrf	fsr2h,c
  3265   00573E  50DF               	movf	indf2,w,c
  3266   005740  0100               	movlb	0	; () banked
  3267   005742  6FB1               	movwf	vfpfcnvrt@cp& (0+255),b
  3268   005744                     
  3269                           ; BSR set to: 0
  3270                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3271   005744  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3272   005748                     	if	1	;There is more than 1 active tblptr byte
  3273   005748  0E10               	movlw	high __smallconst
  3274   00574A  6EF7               	movwf	tblptrh,c
  3275   00574C                     	endif
  3276   00574C                     	if	0	;tblptru may be non-zero
  3277   00574C                     	endif
  3278   00574C                     	if	0	;tblptru may be non-zero
  3279   00574C                     	endif
  3280   00574C  0008               	tblrd		*
  3281   00574E  50F5               	movf	tablat,w,c
  3282   005750  0A64               	xorlw	100
  3283   005752  B4D8               	btfsc	status,2,c
  3284   005754  EFAE  F02B         	goto	u12431
  3285   005758  EFB0  F02B         	goto	u12430
  3286   00575C                     u12431:
  3287   00575C  EFBE  F02B         	goto	l12073
  3288   005760                     u12430:
  3289   005760                     
  3290                           ; BSR set to: 0
  3291   005760  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3292   005764                     	if	1	;There is more than 1 active tblptr byte
  3293   005764  0E10               	movlw	high __smallconst
  3294   005766  6EF7               	movwf	tblptrh,c
  3295   005768                     	endif
  3296   005768                     	if	0	;tblptru may be non-zero
  3297   005768                     	endif
  3298   005768                     	if	0	;tblptru may be non-zero
  3299   005768                     	endif
  3300   005768  0008               	tblrd		*
  3301   00576A  50F5               	movf	tablat,w,c
  3302   00576C  0A69               	xorlw	105
  3303   00576E  A4D8               	btfss	status,2,c
  3304   005770  EFBC  F02B         	goto	u12441
  3305   005774  EFBE  F02B         	goto	u12440
  3306   005778                     u12441:
  3307   005778  EFD9  F02B         	goto	l12081
  3308   00577C                     u12440:
  3309   00577C                     l12073:
  3310                           
  3311                           ; BSR set to: 0
  3312                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3313   00577C  5079               	movf	vfpfcnvrt@ap^0,w,c
  3314   00577E  6ED9               	movwf	fsr2l,c
  3315   005780  6ADA               	clrf	fsr2h,c
  3316   005782  0E02               	movlw	2
  3317   005784  26DF               	addwf	indf2,f,c
  3318   005786  5CDF               	subwf	indf2,w,c
  3319   005788  6ED9               	movwf	fsr2l,c
  3320   00578A  6ADA               	clrf	fsr2h,c
  3321   00578C  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3322   005790  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3323   005794                     
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3326   005794  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3327   005796  6ED9               	movwf	fsr2l,c
  3328   005798  6ADA               	clrf	fsr2h,c
  3329   00579A  29B1               	incf	vfpfcnvrt@cp& (0+255),w,b
  3330   00579C  6EDF               	movwf	indf2,c
  3331   00579E                     
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3334   00579E  C077  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  3335   0057A2  C0AC  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  3336   0057A6  C0AD  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3337   0057AA  ECD2  F030         	call	_dtoa	;wreg free
  3338   0057AE  EFA1  F02C         	goto	l1498
  3339   0057B2                     l12081:
  3340                           
  3341                           ; BSR set to: 0
  3342                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3343   0057B2  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3344   0057B4  6ED9               	movwf	fsr2l,c
  3345   0057B6  6ADA               	clrf	fsr2h,c
  3346   0057B8  50DF               	movf	indf2,w,c
  3347   0057BA  6FB1               	movwf	vfpfcnvrt@cp& (0+255),b
  3348   0057BC                     
  3349                           ; BSR set to: 0
  3350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3351   0057BC  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3352   0057C0                     	if	1	;There is more than 1 active tblptr byte
  3353   0057C0  0E10               	movlw	high __smallconst
  3354   0057C2  6EF7               	movwf	tblptrh,c
  3355   0057C4                     	endif
  3356   0057C4                     	if	0	;tblptru may be non-zero
  3357   0057C4                     	endif
  3358   0057C4                     	if	0	;tblptru may be non-zero
  3359   0057C4                     	endif
  3360   0057C4  0008               	tblrd		*
  3361   0057C6  CFF5 F0B0          	movff	tablat,vfpfcnvrt@c
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3364   0057CA  EFF2  F02B         	goto	l12093
  3365   0057CE                     l12085:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3369   0057CE  2BB1               	incf	vfpfcnvrt@cp& (0+255),f,b
  3370                           
  3371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  3372   0057D0  EF0B  F02C         	goto	l12095
  3373   0057D4                     l12087:
  3374                           
  3375                           ; BSR set to: 0
  3376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3377   0057D4  0E6C               	movlw	108
  3378   0057D6  6FB0               	movwf	vfpfcnvrt@c& (0+255),b
  3379                           
  3380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  3381   0057D8  EF0B  F02C         	goto	l12095
  3382   0057DC                     l12089:
  3383                           
  3384                           ; BSR set to: 0
  3385                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3386   0057DC  0E00               	movlw	0
  3387   0057DE  6FB0               	movwf	vfpfcnvrt@c& (0+255),b
  3388                           
  3389                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  3390   0057E0  EF0B  F02C         	goto	l12095
  3391   0057E4                     l12093:
  3392                           
  3393                           ; BSR set to: 0
  3394   0057E4  51B0               	movf	vfpfcnvrt@c& (0+255),w,b
  3395   0057E6  6E7A               	movwf	??_vfpfcnvrt^0,c
  3396   0057E8  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3397                           
  3398                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3399                           ; Switch size 1, requested type "simple"
  3400                           ; Number of cases is 1, Range of values is 0 to 0
  3401                           ; switch strategies available:
  3402                           ; Name         Instructions Cycles
  3403                           ; simple_byte            4     3 (average)
  3404                           ;	Chosen strategy is simple_byte
  3405   0057EA  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3406   0057EC  0A00               	xorlw	0	; case 0
  3407   0057EE  B4D8               	btfsc	status,2,c
  3408   0057F0  EFFC  F02B         	goto	l13301
  3409   0057F4  EFEE  F02B         	goto	l12089
  3410   0057F8                     l13301:
  3411                           
  3412                           ; BSR set to: 0
  3413                           ; Switch size 1, requested type "simple"
  3414                           ; Number of cases is 3, Range of values is 76 to 108
  3415                           ; switch strategies available:
  3416                           ; Name         Instructions Cycles
  3417                           ; simple_byte           10     6 (average)
  3418                           ;	Chosen strategy is simple_byte
  3419   0057F8  507A               	movf	??_vfpfcnvrt^0,w,c
  3420   0057FA  0A4C               	xorlw	76	; case 76
  3421   0057FC  B4D8               	btfsc	status,2,c
  3422   0057FE  EFE7  F02B         	goto	l12085
  3423   005802  0A2A               	xorlw	42	; case 102
  3424   005804  B4D8               	btfsc	status,2,c
  3425   005806  EFEA  F02B         	goto	l12087
  3426   00580A  0A0A               	xorlw	10	; case 108
  3427   00580C  B4D8               	btfsc	status,2,c
  3428   00580E  EFE7  F02B         	goto	l12085
  3429   005812  EFEE  F02B         	goto	l12089
  3430   005816                     l12095:
  3431                           
  3432                           ; BSR set to: 0
  3433   005816  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3434   00581A                     	if	1	;There is more than 1 active tblptr byte
  3435   00581A  0E10               	movlw	high __smallconst
  3436   00581C  6EF7               	movwf	tblptrh,c
  3437   00581E                     	endif
  3438   00581E                     	if	0	;tblptru may be non-zero
  3439   00581E                     	endif
  3440   00581E                     	if	0	;tblptru may be non-zero
  3441   00581E                     	endif
  3442   00581E  0008               	tblrd		*
  3443   005820  50F5               	movf	tablat,w,c
  3444   005822  0A66               	xorlw	102
  3445   005824  A4D8               	btfss	status,2,c
  3446   005826  EF17  F02C         	goto	u12451
  3447   00582A  EF19  F02C         	goto	u12450
  3448   00582E                     u12451:
  3449   00582E  EF8A  F02C         	goto	l12115
  3450   005832                     u12450:
  3451   005832  EF43  F02C         	goto	l12103
  3452   005836                     l12097:
  3453                           
  3454                           ; BSR set to: 0
  3455                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3456   005836  5079               	movf	vfpfcnvrt@ap^0,w,c
  3457   005838  6ED9               	movwf	fsr2l,c
  3458   00583A  6ADA               	clrf	fsr2h,c
  3459   00583C  CFDF F07A          	movff	indf2,??_vfpfcnvrt
  3460   005840  0E04               	movlw	4
  3461   005842  26DF               	addwf	indf2,f,c
  3462   005844  507A               	movf	??_vfpfcnvrt^0,w,c
  3463   005846  6ED9               	movwf	fsr2l,c
  3464   005848  6ADA               	clrf	fsr2h,c
  3465   00584A  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3466   00584E  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3467   005852  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg+2
  3468   005856  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+3
  3469                           
  3470                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  3471   00585A  EF58  F02C         	goto	l12105
  3472   00585E                     l12099:
  3473                           
  3474                           ; BSR set to: 0
  3475                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3476   00585E  5079               	movf	vfpfcnvrt@ap^0,w,c
  3477   005860  6ED9               	movwf	fsr2l,c
  3478   005862  6ADA               	clrf	fsr2h,c
  3479   005864  CFDF F07A          	movff	indf2,??_vfpfcnvrt
  3480   005868  0E04               	movlw	4
  3481   00586A  26DF               	addwf	indf2,f,c
  3482   00586C  507A               	movf	??_vfpfcnvrt^0,w,c
  3483   00586E  6ED9               	movwf	fsr2l,c
  3484   005870  6ADA               	clrf	fsr2h,c
  3485   005872  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3486   005876  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3487   00587A  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg+2
  3488   00587E  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+3
  3489                           
  3490                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  3491   005882  EF58  F02C         	goto	l12105
  3492   005886                     l12103:
  3493                           
  3494                           ; BSR set to: 0
  3495   005886  51B0               	movf	vfpfcnvrt@c& (0+255),w,b
  3496   005888  6E7A               	movwf	??_vfpfcnvrt^0,c
  3497   00588A  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3498                           
  3499                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3500                           ; Switch size 1, requested type "simple"
  3501                           ; Number of cases is 1, Range of values is 0 to 0
  3502                           ; switch strategies available:
  3503                           ; Name         Instructions Cycles
  3504                           ; simple_byte            4     3 (average)
  3505                           ;	Chosen strategy is simple_byte
  3506   00588C  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3507   00588E  0A00               	xorlw	0	; case 0
  3508   005890  B4D8               	btfsc	status,2,c
  3509   005892  EF4D  F02C         	goto	l13303
  3510   005896  EF58  F02C         	goto	l12105
  3511   00589A                     l13303:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ; Switch size 1, requested type "simple"
  3515                           ; Number of cases is 2, Range of values is 76 to 108
  3516                           ; switch strategies available:
  3517                           ; Name         Instructions Cycles
  3518                           ; simple_byte            7     4 (average)
  3519                           ;	Chosen strategy is simple_byte
  3520   00589A  507A               	movf	??_vfpfcnvrt^0,w,c
  3521   00589C  0A4C               	xorlw	76	; case 76
  3522   00589E  B4D8               	btfsc	status,2,c
  3523   0058A0  EF2F  F02C         	goto	l12099
  3524   0058A4  0A20               	xorlw	32	; case 108
  3525   0058A6  B4D8               	btfsc	status,2,c
  3526   0058A8  EF1B  F02C         	goto	l12097
  3527   0058AC  EF58  F02C         	goto	l12105
  3528   0058B0                     l12105:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3532   0058B0  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3533   0058B2  6ED9               	movwf	fsr2l,c
  3534   0058B4  6ADA               	clrf	fsr2h,c
  3535   0058B6  29B1               	incf	vfpfcnvrt@cp& (0+255),w,b
  3536   0058B8  6EDF               	movwf	indf2,c
  3537                           
  3538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3539   0058BA  EF74  F02C         	goto	l12113
  3540   0058BE                     l12107:
  3541                           
  3542                           ; BSR set to: 0
  3543                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3544   0058BE  C077  F06F         	movff	vfpfcnvrt@fp,efgtoa@fp
  3545   0058C2  C0AC  F070         	movff	vfpfcnvrt@convarg,efgtoa@f
  3546   0058C6  C0AD  F071         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3547   0058CA  C0AE  F072         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3548   0058CE  C0AF  F073         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3549   0058D2  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3550   0058D6                     	if	1	;There is more than 1 active tblptr byte
  3551   0058D6  0E10               	movlw	high __smallconst
  3552   0058D8  6EF7               	movwf	tblptrh,c
  3553   0058DA                     	endif
  3554   0058DA                     	if	0	;tblptru may be non-zero
  3555   0058DA                     	endif
  3556   0058DA                     	if	0	;tblptru may be non-zero
  3557   0058DA                     	endif
  3558   0058DA  0008               	tblrd		*
  3559   0058DC  CFF5 F074          	movff	tablat,efgtoa@c
  3560   0058E0  EC07  F01A         	call	_efgtoa	;wreg free
  3561   0058E4  EFA1  F02C         	goto	l1498
  3562   0058E8                     l12113:
  3563                           
  3564                           ; BSR set to: 0
  3565   0058E8  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3566   0058EC                     	if	1	;There is more than 1 active tblptr byte
  3567   0058EC  0E10               	movlw	high __smallconst
  3568   0058EE  6EF7               	movwf	tblptrh,c
  3569   0058F0                     	endif
  3570   0058F0                     	if	0	;tblptru may be non-zero
  3571   0058F0                     	endif
  3572   0058F0                     	if	0	;tblptru may be non-zero
  3573   0058F0                     	endif
  3574   0058F0  0008               	tblrd		*
  3575   0058F2  50F5               	movf	tablat,w,c
  3576   0058F4  6E7A               	movwf	??_vfpfcnvrt^0,c
  3577   0058F6  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3578                           
  3579                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3580                           ; Switch size 1, requested type "simple"
  3581                           ; Number of cases is 1, Range of values is 0 to 0
  3582                           ; switch strategies available:
  3583                           ; Name         Instructions Cycles
  3584                           ; simple_byte            4     3 (average)
  3585                           ;	Chosen strategy is simple_byte
  3586   0058F8  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3587   0058FA  0A00               	xorlw	0	; case 0
  3588   0058FC  B4D8               	btfsc	status,2,c
  3589   0058FE  EF83  F02C         	goto	l13305
  3590   005902  EF8A  F02C         	goto	l12115
  3591   005906                     l13305:
  3592                           
  3593                           ; BSR set to: 0
  3594                           ; Switch size 1, requested type "simple"
  3595                           ; Number of cases is 1, Range of values is 102 to 102
  3596                           ; switch strategies available:
  3597                           ; Name         Instructions Cycles
  3598                           ; simple_byte            4     3 (average)
  3599                           ;	Chosen strategy is simple_byte
  3600   005906  507A               	movf	??_vfpfcnvrt^0,w,c
  3601   005908  0A66               	xorlw	102	; case 102
  3602   00590A  B4D8               	btfsc	status,2,c
  3603   00590C  EF5F  F02C         	goto	l12107
  3604   005910  EF8A  F02C         	goto	l12115
  3605   005914                     l12115:
  3606                           
  3607                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3608   005914  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3609   005916  6ED9               	movwf	fsr2l,c
  3610   005918  6ADA               	clrf	fsr2h,c
  3611   00591A  2ADF               	incf	indf2,f,c
  3612   00591C  EFA1  F02C         	goto	l1498
  3613   005920                     l12119:
  3614                           
  3615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3616   005920  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3617   005922  6ED9               	movwf	fsr2l,c
  3618   005924  6ADA               	clrf	fsr2h,c
  3619   005926  CFDF FFF6          	movff	indf2,tblptrl
  3620   00592A                     	if	1	;There is more than 1 active tblptr byte
  3621   00592A  0E10               	movlw	high __smallconst
  3622   00592C  6EF7               	movwf	tblptrh,c
  3623   00592E                     	endif
  3624   00592E                     	if	0	;tblptru may be non-zero
  3625   00592E                     	endif
  3626   00592E                     	if	0	;tblptru may be non-zero
  3627   00592E                     	endif
  3628   00592E  0008               	tblrd		*
  3629   005930  50F5               	movf	tablat,w,c
  3630   005932  6E01               	movwf	fputc@c^0,c
  3631   005934  6A02               	clrf	(fputc@c+1)^0,c
  3632   005936  C077  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3633   00593A  EC15  F037         	call	_fputc	;wreg free
  3634   00593E  EF8A  F02C         	goto	l12115
  3635   005942                     l1498:
  3636   005942  0012               	return		;funcret
  3637   005944                     __end_of_vfpfcnvrt:
  3638                           	callstack 0
  3639                           
  3640 ;; *************** function _read_prec_or_width *****************
  3641 ;; Defined at:
  3642 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3643 ;; Parameters:    Size  Location     Type
  3644 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3645 ;;		 -> vfprintf@cfmt(1), 
  3646 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3647 ;;		 -> sprintf@ap(1), 
  3648 ;; Auto vars:     Size  Location     Type
  3649 ;;  c               1    8[COMRAM] unsigned char 
  3650 ;;  n               2    9[COMRAM] int 
  3651 ;; Return value:  Size  Location     Type
  3652 ;;                  2    6[COMRAM] int 
  3653 ;; Registers used:
  3654 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3655 ;; Tracked objects:
  3656 ;;		On entry : 0/0
  3657 ;;		On exit  : 0/0
  3658 ;;		Unchanged: 0/0
  3659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3660 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3661 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3662 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3663 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3664 ;;Total ram usage:        5 bytes
  3665 ;; Hardware stack levels used: 1
  3666 ;; Hardware stack levels required when called: 1
  3667 ;; This function calls:
  3668 ;;		___wmul
  3669 ;; This function is called by:
  3670 ;;		_vfpfcnvrt
  3671 ;; This function uses a non-reentrant model
  3672 ;;
  3673                           
  3674                           	psect	text9
  3675   0070E8                     __ptext9:
  3676                           	callstack 0
  3677   0070E8                     _read_prec_or_width:
  3678                           	callstack 24
  3679   0070E8                     
  3680                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3681   0070E8  0E00               	movlw	0
  3682   0070EA  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3683   0070EC  0E00               	movlw	0
  3684   0070EE  6E0A               	movwf	read_prec_or_width@n^0,c
  3685   0070F0                     
  3686                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3687   0070F0  5007               	movf	read_prec_or_width@fmt^0,w,c
  3688   0070F2  6ED9               	movwf	fsr2l,c
  3689   0070F4  6ADA               	clrf	fsr2h,c
  3690   0070F6  CFDF FFF6          	movff	indf2,tblptrl
  3691   0070FA                     	if	1	;There is more than 1 active tblptr byte
  3692   0070FA  0E10               	movlw	high __smallconst
  3693   0070FC  6EF7               	movwf	tblptrh,c
  3694   0070FE                     	endif
  3695   0070FE                     	if	0	;tblptru may be non-zero
  3696   0070FE                     	endif
  3697   0070FE                     	if	0	;tblptru may be non-zero
  3698   0070FE                     	endif
  3699   0070FE  0008               	tblrd		*
  3700   007100  50F5               	movf	tablat,w,c
  3701   007102  0A2A               	xorlw	42
  3702   007104  A4D8               	btfss	status,2,c
  3703   007106  EF87  F038         	goto	u5841
  3704   00710A  EF89  F038         	goto	u5840
  3705   00710E                     u5841:
  3706   00710E  EFAF  F038         	goto	l5959
  3707   007112                     u5840:
  3708   007112                     
  3709                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3710   007112  5007               	movf	read_prec_or_width@fmt^0,w,c
  3711   007114  6ED9               	movwf	fsr2l,c
  3712   007116  6ADA               	clrf	fsr2h,c
  3713   007118  2ADF               	incf	indf2,f,c
  3714   00711A                     
  3715                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3716   00711A  5008               	movf	read_prec_or_width@ap^0,w,c
  3717   00711C  6ED9               	movwf	fsr2l,c
  3718   00711E  6ADA               	clrf	fsr2h,c
  3719   007120  0E02               	movlw	2
  3720   007122  26DF               	addwf	indf2,f,c
  3721   007124  5CDF               	subwf	indf2,w,c
  3722   007126  6ED9               	movwf	fsr2l,c
  3723   007128  6ADA               	clrf	fsr2h,c
  3724   00712A  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3725   00712E  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3728   007132  EFC2  F038         	goto	l1486
  3729   007136                     l5955:
  3730                           
  3731                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3732   007136  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3733   00713A  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3734   00713E  0E00               	movlw	0
  3735   007140  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3736   007142  0E0A               	movlw	10
  3737   007144  6E03               	movwf	___wmul@multiplicand^0,c
  3738   007146  EC29  F03D         	call	___wmul	;wreg free
  3739   00714A  5009               	movf	read_prec_or_width@c^0,w,c
  3740   00714C  2401               	addwf	?___wmul^0,w,c
  3741   00714E  6E0A               	movwf	read_prec_or_width@n^0,c
  3742   007150  0E00               	movlw	0
  3743   007152  2002               	addwfc	(?___wmul+1)^0,w,c
  3744   007154  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3745   007156                     
  3746                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3747   007156  5007               	movf	read_prec_or_width@fmt^0,w,c
  3748   007158  6ED9               	movwf	fsr2l,c
  3749   00715A  6ADA               	clrf	fsr2h,c
  3750   00715C  2ADF               	incf	indf2,f,c
  3751   00715E                     l5959:
  3752                           
  3753                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3754   00715E  5007               	movf	read_prec_or_width@fmt^0,w,c
  3755   007160  6ED9               	movwf	fsr2l,c
  3756   007162  6ADA               	clrf	fsr2h,c
  3757   007164  CFDF FFF6          	movff	indf2,tblptrl
  3758   007168                     	if	1	;There is more than 1 active tblptr byte
  3759   007168  0E10               	movlw	high __smallconst
  3760   00716A  6EF7               	movwf	tblptrh,c
  3761   00716C                     	endif
  3762   00716C                     	if	0	;tblptru may be non-zero
  3763   00716C                     	endif
  3764   00716C                     	if	0	;tblptru may be non-zero
  3765   00716C                     	endif
  3766   00716C  0008               	tblrd		*
  3767   00716E  50F5               	movf	tablat,w,c
  3768   007170  0FD0               	addlw	208
  3769   007172  6E09               	movwf	read_prec_or_width@c^0,c
  3770   007174  0E09               	movlw	9
  3771   007176  6409               	cpfsgt	read_prec_or_width@c^0,c
  3772   007178  EFC0  F038         	goto	u5851
  3773   00717C  EFC2  F038         	goto	u5850
  3774   007180                     u5851:
  3775   007180  EF9B  F038         	goto	l5955
  3776   007184                     u5850:
  3777   007184                     l1486:
  3778                           
  3779                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3780   007184  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3781   007188  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3782   00718C  0012               	return		;funcret
  3783   00718E                     __end_of_read_prec_or_width:
  3784                           	callstack 0
  3785                           
  3786 ;; *************** function ___wmul *****************
  3787 ;; Defined at:
  3788 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3789 ;; Parameters:    Size  Location     Type
  3790 ;;  multiplier      2    0[COMRAM] unsigned int 
  3791 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3792 ;; Auto vars:     Size  Location     Type
  3793 ;;  product         2    4[COMRAM] unsigned int 
  3794 ;; Return value:  Size  Location     Type
  3795 ;;                  2    0[COMRAM] unsigned int 
  3796 ;; Registers used:
  3797 ;;		wreg, status,2, status,0, prodl, prodh
  3798 ;; Tracked objects:
  3799 ;;		On entry : 0/0
  3800 ;;		On exit  : 0/0
  3801 ;;		Unchanged: 0/0
  3802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3803 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3804 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3806 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3807 ;;Total ram usage:        6 bytes
  3808 ;; Hardware stack levels used: 1
  3809 ;; This function calls:
  3810 ;;		Nothing
  3811 ;; This function is called by:
  3812 ;;		_read_prec_or_width
  3813 ;; This function uses a non-reentrant model
  3814 ;;
  3815                           
  3816                           	psect	text10
  3817   007A52                     __ptext10:
  3818                           	callstack 0
  3819   007A52                     ___wmul:
  3820                           	callstack 24
  3821   007A52  5001               	movf	___wmul@multiplier^0,w,c
  3822   007A54  0203               	mulwf	___wmul@multiplicand^0,c
  3823   007A56  CFF3 F005          	movff	prodl,___wmul@product
  3824   007A5A  CFF4 F006          	movff	prodh,___wmul@product+1
  3825   007A5E  5001               	movf	___wmul@multiplier^0,w,c
  3826   007A60  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3827   007A62  50F3               	movf	243,w,c
  3828   007A64  2606               	addwf	(___wmul@product+1)^0,f,c
  3829   007A66  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3830   007A68  0203               	mulwf	___wmul@multiplicand^0,c
  3831   007A6A  50F3               	movf	243,w,c
  3832   007A6C  2606               	addwf	(___wmul@product+1)^0,f,c
  3833   007A6E  C005  F001         	movff	___wmul@product,?___wmul
  3834   007A72  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3835   007A76  0012               	return		;funcret
  3836   007A78                     __end_of___wmul:
  3837                           	callstack 0
  3838                           
  3839 ;; *************** function _efgtoa *****************
  3840 ;; Defined at:
  3841 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3842 ;; Parameters:    Size  Location     Type
  3843 ;;  fp              1  110[COMRAM] PTR struct _IO_FILE
  3844 ;;		 -> sprintf@f(12), 
  3845 ;;  f               4  111[COMRAM] PTR struct _IO_FILE
  3846 ;;  c               1  115[COMRAM] unsigned char 
  3847 ;; Auto vars:     Size  Location     Type
  3848 ;;  u               4   40[BANK0 ] struct flui
  3849 ;;  g               4   34[BANK0 ] struct flui
  3850 ;;  l               4   29[BANK0 ] struct flui
  3851 ;;  h               4   25[BANK0 ] struct flui
  3852 ;;  ou              4   19[BANK0 ] struct flui
  3853 ;;  n               2   38[BANK0 ] int 
  3854 ;;  i               2   23[BANK0 ] int 
  3855 ;;  w               2   17[BANK0 ] int 
  3856 ;;  e               2   15[BANK0 ] int 
  3857 ;;  m               2   13[BANK0 ] int 
  3858 ;;  d               2   11[BANK0 ] int 
  3859 ;;  t               2    4[BANK0 ] int 
  3860 ;;  p               2    2[BANK0 ] int 
  3861 ;;  ne              2    0[BANK0 ] int 
  3862 ;;  sign            1   33[BANK0 ] unsigned char 
  3863 ;;  nmode           1   10[BANK0 ] unsigned char 
  3864 ;;  mode            1    9[BANK0 ] unsigned char 
  3865 ;;  pp              1    8[BANK0 ] unsigned char 
  3866 ;;  esign           1    0        unsigned char 
  3867 ;; Return value:  Size  Location     Type
  3868 ;;                  1    wreg      void 
  3869 ;; Registers used:
  3870 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3871 ;; Tracked objects:
  3872 ;;		On entry : 0/0
  3873 ;;		On exit  : 0/0
  3874 ;;		Unchanged: 0/0
  3875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3876 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3877 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3878 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3879 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3880 ;;Total ram usage:       52 bytes
  3881 ;; Hardware stack levels used: 1
  3882 ;; Hardware stack levels required when called: 4
  3883 ;; This function calls:
  3884 ;;		___fladd
  3885 ;;		___fldiv
  3886 ;;		___fleq
  3887 ;;		___flge
  3888 ;;		___flmul
  3889 ;;		___flneg
  3890 ;;		___flsub
  3891 ;;		___fltol
  3892 ;;		___fpclassifyf
  3893 ;;		_floorf
  3894 ;;		_labs
  3895 ;;		_memcpy
  3896 ;;		_pad
  3897 ;;		_strcpy
  3898 ;; This function is called by:
  3899 ;;		_vfpfcnvrt
  3900 ;; This function uses a non-reentrant model
  3901 ;;
  3902                           
  3903                           	psect	text11
  3904   00340E                     __ptext11:
  3905                           	callstack 0
  3906   00340E                     _efgtoa:
  3907                           	callstack 21
  3908   00340E                     
  3909                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3910   00340E  0E00               	movlw	0
  3911   003410  0100               	movlb	0	; () banked
  3912   003412  6FA1               	movwf	efgtoa@sign& (0+255),b
  3913   003414                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3916   003414  C070  F0A2         	movff	efgtoa@f,efgtoa@g
  3917   003418  C071  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  3918   00341C  C072  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  3919   003420  C073  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  3920   003424                     
  3921                           ; BSR set to: 0
  3922                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3923   003424  BFA5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3924   003426  EF19  F01A         	goto	u12090
  3925   00342A  EF17  F01A         	goto	u12091
  3926   00342E                     u12091:
  3927   00342E  EF2D  F01A         	goto	l11841
  3928   003432                     u12090:
  3929   003432                     
  3930                           ; BSR set to: 0
  3931                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3932   003432  0E01               	movlw	1
  3933   003434  6FA1               	movwf	efgtoa@sign& (0+255),b
  3934   003436                     
  3935                           ; BSR set to: 0
  3936                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3937   003436  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  3938   00343A  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3939   00343E  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3940   003442  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3941   003446  ECE0  F03C         	call	___flneg	;wreg free
  3942   00344A  C001  F0A2         	movff	?___flneg,efgtoa@g
  3943   00344E  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  3944   003452  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  3945   003456  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  3946   00345A                     l11841:
  3947                           
  3948                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3949   00345A  0E00               	movlw	0
  3950   00345C  0100               	movlb	0	; () banked
  3951   00345E  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  3952   003460  0E00               	movlw	0
  3953   003462  6FA6               	movwf	efgtoa@n& (0+255),b
  3954   003464                     
  3955                           ; BSR set to: 0
  3956                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3957   003464  C0D2  F091         	movff	_width,efgtoa@w
  3958   003468  C0D3  F092         	movff	_width+1,efgtoa@w+1
  3959   00346C                     
  3960                           ; BSR set to: 0
  3961                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3962   00346C  51A1               	movf	efgtoa@sign& (0+255),w,b
  3963   00346E  B4D8               	btfsc	status,2,c
  3964   003470  EF3C  F01A         	goto	u12101
  3965   003474  EF3E  F01A         	goto	u12100
  3966   003478                     u12101:
  3967   003478  EF52  F01A         	goto	l11855
  3968   00347C                     u12100:
  3969   00347C                     
  3970                           ; BSR set to: 0
  3971                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3972   00347C  51A1               	movf	efgtoa@sign& (0+255),w,b
  3973   00347E  A4D8               	btfss	status,2,c
  3974   003480  EF44  F01A         	goto	u12111
  3975   003484  EF46  F01A         	goto	u12110
  3976   003488                     u12111:
  3977   003488  EF4C  F01A         	goto	l11851
  3978   00348C                     u12110:
  3979   00348C                     
  3980                           ; BSR set to: 0
  3981   00348C  0E00               	movlw	0
  3982   00348E  6F87               	movwf	(_efgtoa$1541+1)& (0+255),b
  3983   003490  0E2B               	movlw	43
  3984   003492  6F86               	movwf	_efgtoa$1541& (0+255),b
  3985   003494  EF50  F01A         	goto	l11853
  3986   003498                     l11851:
  3987                           
  3988                           ; BSR set to: 0
  3989   003498  0E00               	movlw	0
  3990   00349A  6F87               	movwf	(_efgtoa$1541+1)& (0+255),b
  3991   00349C  0E2D               	movlw	45
  3992   00349E  6F86               	movwf	_efgtoa$1541& (0+255),b
  3993   0034A0                     l11853:
  3994                           
  3995                           ; BSR set to: 0
  3996   0034A0  C086  F0A1         	movff	_efgtoa$1541,efgtoa@sign
  3997   0034A4                     l11855:
  3998                           
  3999                           ; BSR set to: 0
  4000                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  4001   0034A4  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  4002   0034A8  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4003   0034AC  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4004   0034B0  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4005   0034B4  ECE8  F034         	call	___fpclassifyf	;wreg free
  4006   0034B8  0401               	decf	?___fpclassifyf^0,w,c
  4007   0034BA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4008   0034BC  A4D8               	btfss	status,2,c
  4009   0034BE  EF63  F01A         	goto	u12121
  4010   0034C2  EF65  F01A         	goto	u12120
  4011   0034C6                     u12121:
  4012   0034C6  EF94  F01A         	goto	l11873
  4013   0034CA                     u12120:
  4014   0034CA                     
  4015                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4016   0034CA  0100               	movlb	0	; () banked
  4017   0034CC  51A1               	movf	efgtoa@sign& (0+255),w,b
  4018   0034CE  B4D8               	btfsc	status,2,c
  4019   0034D0  EF6C  F01A         	goto	u12131
  4020   0034D4  EF6E  F01A         	goto	u12130
  4021   0034D8                     u12131:
  4022   0034D8  EF77  F01A         	goto	l11865
  4023   0034DC                     u12130:
  4024   0034DC                     
  4025                           ; BSR set to: 0
  4026                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4027   0034DC  C0A1  F200         	movff	efgtoa@sign,_dbuf
  4028   0034E0                     
  4029                           ; BSR set to: 0
  4030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  4031   0034E0  0791               	decf	efgtoa@w& (0+255),f,b
  4032   0034E2  A0D8               	btfss	status,0,c
  4033   0034E4  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4034   0034E6                     
  4035                           ; BSR set to: 0
  4036                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4037   0034E6  0E00               	movlw	0
  4038   0034E8  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  4039   0034EA  0E01               	movlw	1
  4040   0034EC  6FA6               	movwf	efgtoa@n& (0+255),b
  4041   0034EE                     l11865:
  4042                           
  4043                           ; BSR set to: 0
  4044                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4045   0034EE  0E00               	movlw	low _dbuf
  4046   0034F0  25A6               	addwf	efgtoa@n& (0+255),w,b
  4047   0034F2  6E01               	movwf	strcpy@dest^0,c
  4048   0034F4  0E02               	movlw	high _dbuf
  4049   0034F6  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4050   0034F8  6E02               	movwf	(strcpy@dest+1)^0,c
  4051   0034FA  0ED8               	movlw	low STR_16
  4052   0034FC  6E03               	movwf	strcpy@src^0,c
  4053   0034FE  EC8A  F03C         	call	_strcpy	;wreg free
  4054   003502                     l11867:
  4055                           
  4056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4057   003502  0100               	movlb	0	; () banked
  4058   003504  0EFD               	movlw	253
  4059   003506  2791               	addwf	efgtoa@w& (0+255),f,b
  4060   003508  0EFF               	movlw	255
  4061   00350A  2392               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4062   00350C                     
  4063                           ; BSR set to: 0
  4064                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4065   00350C  C06F  F00F         	movff	efgtoa@fp,pad@fp
  4066   003510  0E00               	movlw	low _dbuf
  4067   003512  6E10               	movwf	pad@buf^0,c
  4068   003514  0E02               	movlw	high _dbuf
  4069   003516  6E11               	movwf	(pad@buf+1)^0,c
  4070   003518  C091  F012         	movff	efgtoa@w,pad@p
  4071   00351C  C092  F013         	movff	efgtoa@w+1,pad@p+1
  4072   003520  EC46  F03A         	call	_pad	;wreg free
  4073   003524  EFFA  F01E         	goto	l1441
  4074   003528                     l11873:
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4077   003528  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  4078   00352C  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4079   003530  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4080   003534  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4081   003538  ECE8  F034         	call	___fpclassifyf	;wreg free
  4082   00353C  5001               	movf	?___fpclassifyf^0,w,c
  4083   00353E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4084   003540  A4D8               	btfss	status,2,c
  4085   003542  EFA5  F01A         	goto	u12141
  4086   003546  EFA7  F01A         	goto	u12140
  4087   00354A                     u12141:
  4088   00354A  EFC5  F01A         	goto	l11891
  4089   00354E                     u12140:
  4090   00354E                     
  4091                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  4092   00354E  0100               	movlb	0	; () banked
  4093   003550  51A1               	movf	efgtoa@sign& (0+255),w,b
  4094   003552  B4D8               	btfsc	status,2,c
  4095   003554  EFAE  F01A         	goto	u12151
  4096   003558  EFB0  F01A         	goto	u12150
  4097   00355C                     u12151:
  4098   00355C  EFB9  F01A         	goto	l11883
  4099   003560                     u12150:
  4100   003560                     
  4101                           ; BSR set to: 0
  4102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  4103   003560  C0A1  F200         	movff	efgtoa@sign,_dbuf
  4104   003564                     
  4105                           ; BSR set to: 0
  4106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  4107   003564  0791               	decf	efgtoa@w& (0+255),f,b
  4108   003566  A0D8               	btfss	status,0,c
  4109   003568  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4110   00356A                     
  4111                           ; BSR set to: 0
  4112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4113   00356A  0E00               	movlw	0
  4114   00356C  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  4115   00356E  0E01               	movlw	1
  4116   003570  6FA6               	movwf	efgtoa@n& (0+255),b
  4117   003572                     l11883:
  4118                           
  4119                           ; BSR set to: 0
  4120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  4121   003572  0E00               	movlw	low _dbuf
  4122   003574  25A6               	addwf	efgtoa@n& (0+255),w,b
  4123   003576  6E01               	movwf	strcpy@dest^0,c
  4124   003578  0E02               	movlw	high _dbuf
  4125   00357A  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4126   00357C  6E02               	movwf	(strcpy@dest+1)^0,c
  4127   00357E  0EDC               	movlw	low STR_19
  4128   003580  6E03               	movwf	strcpy@src^0,c
  4129   003582  EC8A  F03C         	call	_strcpy	;wreg free
  4130   003586  EF81  F01A         	goto	l11867
  4131   00358A                     l11891:
  4132                           
  4133                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  4134   00358A  0E00               	movlw	0
  4135   00358C  0100               	movlb	0	; () banked
  4136   00358E  6FA8               	movwf	efgtoa@u& (0+255),b
  4137   003590  0E00               	movlw	0
  4138   003592  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4139   003594  0E80               	movlw	128
  4140   003596  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4141   003598  0E3F               	movlw	63
  4142   00359A  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4143                           
  4144                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  4145   00359C  0E00               	movlw	0
  4146   00359E  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4147   0035A0  0E00               	movlw	0
  4148   0035A2  6F8F               	movwf	efgtoa@e& (0+255),b
  4149   0035A4                     
  4150                           ; BSR set to: 0
  4151                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  4152   0035A4  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  4153   0035A8  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4154   0035AC  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4155   0035B0  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4156   0035B4  0E00               	movlw	0
  4157   0035B6  6E05               	movwf	___fleq@ff2^0,c
  4158   0035B8  0E00               	movlw	0
  4159   0035BA  6E06               	movwf	(___fleq@ff2+1)^0,c
  4160   0035BC  0E00               	movlw	0
  4161   0035BE  6E07               	movwf	(___fleq@ff2+2)^0,c
  4162   0035C0  0E00               	movlw	0
  4163   0035C2  6E08               	movwf	(___fleq@ff2+3)^0,c
  4164   0035C4  ECCA  F037         	call	___fleq	;wreg free
  4165   0035C8  B0D8               	btfsc	status,0,c
  4166   0035CA  EFE9  F01A         	goto	u12161
  4167   0035CE  EFEB  F01A         	goto	u12160
  4168   0035D2                     u12161:
  4169   0035D2  EFCA  F01B         	goto	l1444
  4170   0035D6                     u12160:
  4171   0035D6  EFF8  F01A         	goto	l11899
  4172   0035DA                     l1446:
  4173                           
  4174                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  4175   0035DA  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4176   0035DE  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4177   0035E2  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4178   0035E6  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4179   0035EA                     
  4180                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  4181   0035EA  0100               	movlb	0	; () banked
  4182   0035EC  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4183   0035EE  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4184   0035F0                     l11899:
  4185                           
  4186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4187   0035F0  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4188   0035F4  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4189   0035F8  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4190   0035FC  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4191   003600  0E00               	movlw	0
  4192   003602  6E1D               	movwf	___flmul@a^0,c
  4193   003604  0E00               	movlw	0
  4194   003606  6E1E               	movwf	(___flmul@a+1)^0,c
  4195   003608  0E20               	movlw	32
  4196   00360A  6E1F               	movwf	(___flmul@a+2)^0,c
  4197   00360C  0E41               	movlw	65
  4198   00360E  6E20               	movwf	(___flmul@a+3)^0,c
  4199   003610  EC27  F024         	call	___flmul	;wreg free
  4200   003614  C019  F093         	movff	?___flmul,efgtoa@ou
  4201   003618  C01A  F094         	movff	?___flmul+1,efgtoa@ou+1
  4202   00361C  C01B  F095         	movff	?___flmul+2,efgtoa@ou+2
  4203   003620  C01C  F096         	movff	?___flmul+3,efgtoa@ou+3
  4204   003624  0100               	movlb	0	; () banked
  4205   003626  5193               	movf	efgtoa@ou& (0+255),w,b
  4206   003628  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4207   00362A  6E01               	movwf	labs@a^0,c
  4208   00362C  5194               	movf	(efgtoa@ou+1)& (0+255),w,b
  4209   00362E  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4210   003630  6E02               	movwf	(labs@a+1)^0,c
  4211   003632  5195               	movf	(efgtoa@ou+2)& (0+255),w,b
  4212   003634  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4213   003636  6E03               	movwf	(labs@a+2)^0,c
  4214   003638  5196               	movf	(efgtoa@ou+3)& (0+255),w,b
  4215   00363A  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4216   00363C  6E04               	movwf	(labs@a+3)^0,c
  4217   00363E  ECD7  F03A         	call	_labs	;wreg free
  4218   003642  BE04               	btfsc	(?_labs+3)^0,7,c
  4219   003644  EF2F  F01B         	goto	u12171
  4220   003648  5004               	movf	(?_labs+3)^0,w,c
  4221   00364A  1003               	iorwf	(?_labs+2)^0,w,c
  4222   00364C  1002               	iorwf	(?_labs+1)^0,w,c
  4223   00364E  E109               	bnz	u12170
  4224   003650  0E02               	movlw	2
  4225   003652  5C01               	subwf	?_labs^0,w,c
  4226   003654  A0D8               	btfss	status,0,c
  4227   003656  EF2F  F01B         	goto	u12171
  4228   00365A  EF31  F01B         	goto	u12170
  4229   00365E                     u12171:
  4230   00365E  EFED  F01A         	goto	l1446
  4231   003662                     u12170:
  4232   003662  C093  F063         	movff	efgtoa@ou,___flge@ff1
  4233   003666  C094  F064         	movff	efgtoa@ou+1,___flge@ff1+1
  4234   00366A  C095  F065         	movff	efgtoa@ou+2,___flge@ff1+2
  4235   00366E  C096  F066         	movff	efgtoa@ou+3,___flge@ff1+3
  4236   003672  C0A2  F067         	movff	efgtoa@g,___flge@ff2
  4237   003676  C0A3  F068         	movff	efgtoa@g+1,___flge@ff2+1
  4238   00367A  C0A4  F069         	movff	efgtoa@g+2,___flge@ff2+2
  4239   00367E  C0A5  F06A         	movff	efgtoa@g+3,___flge@ff2+3
  4240   003682  EC66  F034         	call	___flge	;wreg free
  4241   003686  A0D8               	btfss	status,0,c
  4242   003688  EF48  F01B         	goto	u12181
  4243   00368C  EF4A  F01B         	goto	u12180
  4244   003690                     u12181:
  4245   003690  EFED  F01A         	goto	l1446
  4246   003694                     u12180:
  4247   003694                     
  4248                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4249   003694  0100               	movlb	0	; () banked
  4250   003696  51A8               	movf	efgtoa@u& (0+255),w,b
  4251   003698  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4252   00369A  6E01               	movwf	labs@a^0,c
  4253   00369C  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4254   00369E  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4255   0036A0  6E02               	movwf	(labs@a+1)^0,c
  4256   0036A2  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4257   0036A4  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4258   0036A6  6E03               	movwf	(labs@a+2)^0,c
  4259   0036A8  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4260   0036AA  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4261   0036AC  6E04               	movwf	(labs@a+3)^0,c
  4262   0036AE  ECD7  F03A         	call	_labs	;wreg free
  4263   0036B2  BE04               	btfsc	(?_labs+3)^0,7,c
  4264   0036B4  EF69  F01B         	goto	u12190
  4265   0036B8  5004               	movf	(?_labs+3)^0,w,c
  4266   0036BA  1003               	iorwf	(?_labs+2)^0,w,c
  4267   0036BC  1002               	iorwf	(?_labs+1)^0,w,c
  4268   0036BE  E107               	bnz	u12191
  4269   0036C0  0E02               	movlw	2
  4270   0036C2  5C01               	subwf	?_labs^0,w,c
  4271   0036C4  B0D8               	btfsc	status,0,c
  4272   0036C6  EF67  F01B         	goto	u12191
  4273   0036CA  EF69  F01B         	goto	u12190
  4274   0036CE                     u12191:
  4275   0036CE  EFB1  F01B         	goto	l11917
  4276   0036D2                     u12190:
  4277   0036D2                     l11907:
  4278                           
  4279                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  4280   0036D2  C0A8  F0A2         	movff	efgtoa@u,efgtoa@g
  4281   0036D6  C0A9  F0A3         	movff	efgtoa@u+1,efgtoa@g+1
  4282   0036DA  C0AA  F0A4         	movff	efgtoa@u+2,efgtoa@g+2
  4283   0036DE  C0AB  F0A5         	movff	efgtoa@u+3,efgtoa@g+3
  4284                           
  4285                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  4286   0036E2  EFCA  F01B         	goto	l1444
  4287   0036E6                     l11909:
  4288                           
  4289                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  4290   0036E6  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4291   0036EA  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4292   0036EE  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4293   0036F2  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4294   0036F6  0E00               	movlw	0
  4295   0036F8  6E46               	movwf	___fldiv@a^0,c
  4296   0036FA  0E00               	movlw	0
  4297   0036FC  6E47               	movwf	(___fldiv@a+1)^0,c
  4298   0036FE  0E20               	movlw	32
  4299   003700  6E48               	movwf	(___fldiv@a+2)^0,c
  4300   003702  0E41               	movlw	65
  4301   003704  6E49               	movwf	(___fldiv@a+3)^0,c
  4302   003706  EC2B  F028         	call	___fldiv	;wreg free
  4303   00370A  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4304   00370E  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4305   003712  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4306   003716  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4307   00371A                     
  4308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  4309   00371A  0100               	movlb	0	; () banked
  4310   00371C  078F               	decf	efgtoa@e& (0+255),f,b
  4311   00371E  A0D8               	btfss	status,0,c
  4312   003720  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  4313   003722                     
  4314                           ; BSR set to: 0
  4315                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4316   003722  51A8               	movf	efgtoa@u& (0+255),w,b
  4317   003724  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4318   003726  6E01               	movwf	labs@a^0,c
  4319   003728  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4320   00372A  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4321   00372C  6E02               	movwf	(labs@a+1)^0,c
  4322   00372E  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4323   003730  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4324   003732  6E03               	movwf	(labs@a+2)^0,c
  4325   003734  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4326   003736  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4327   003738  6E04               	movwf	(labs@a+3)^0,c
  4328   00373A  ECD7  F03A         	call	_labs	;wreg free
  4329   00373E  BE04               	btfsc	(?_labs+3)^0,7,c
  4330   003740  EFAF  F01B         	goto	u12200
  4331   003744  5004               	movf	(?_labs+3)^0,w,c
  4332   003746  1003               	iorwf	(?_labs+2)^0,w,c
  4333   003748  1002               	iorwf	(?_labs+1)^0,w,c
  4334   00374A  E107               	bnz	u12201
  4335   00374C  0E02               	movlw	2
  4336   00374E  5C01               	subwf	?_labs^0,w,c
  4337   003750  B0D8               	btfsc	status,0,c
  4338   003752  EFAD  F01B         	goto	u12201
  4339   003756  EFAF  F01B         	goto	u12200
  4340   00375A                     u12201:
  4341   00375A  EFB1  F01B         	goto	l11917
  4342   00375E                     u12200:
  4343   00375E  EF69  F01B         	goto	l11907
  4344   003762                     l11917:
  4345                           
  4346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4347   003762  C0A2  F063         	movff	efgtoa@g,___flge@ff1
  4348   003766  C0A3  F064         	movff	efgtoa@g+1,___flge@ff1+1
  4349   00376A  C0A4  F065         	movff	efgtoa@g+2,___flge@ff1+2
  4350   00376E  C0A5  F066         	movff	efgtoa@g+3,___flge@ff1+3
  4351   003772  C0A8  F067         	movff	efgtoa@u,___flge@ff2
  4352   003776  C0A9  F068         	movff	efgtoa@u+1,___flge@ff2+1
  4353   00377A  C0AA  F069         	movff	efgtoa@u+2,___flge@ff2+2
  4354   00377E  C0AB  F06A         	movff	efgtoa@u+3,___flge@ff2+3
  4355   003782  EC66  F034         	call	___flge	;wreg free
  4356   003786  A0D8               	btfss	status,0,c
  4357   003788  EFC8  F01B         	goto	u12211
  4358   00378C  EFCA  F01B         	goto	u12210
  4359   003790                     u12211:
  4360   003790  EF73  F01B         	goto	l11909
  4361   003794                     u12210:
  4362   003794                     l1444:
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4365   003794  C074  F089         	movff	efgtoa@c,efgtoa@mode
  4366                           
  4367                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4368   003798  C089  F08A         	movff	efgtoa@mode,efgtoa@nmode
  4369   00379C                     
  4370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4371   00379C  0100               	movlb	0	; () banked
  4372   00379E  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  4373   0037A0  EFD4  F01B         	goto	u12221
  4374   0037A4  EFD6  F01B         	goto	u12220
  4375   0037A8                     u12221:
  4376   0037A8  EFDC  F01B         	goto	l11923
  4377   0037AC                     u12220:
  4378   0037AC                     
  4379                           ; BSR set to: 0
  4380   0037AC  C0D4  F082         	movff	_prec,efgtoa@p
  4381   0037B0  C0D5  F083         	movff	_prec+1,efgtoa@p+1
  4382   0037B4  EFE0  F01B         	goto	l11925
  4383   0037B8                     l11923:
  4384                           
  4385                           ; BSR set to: 0
  4386   0037B8  0E00               	movlw	0
  4387   0037BA  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  4388   0037BC  0E06               	movlw	6
  4389   0037BE  6F82               	movwf	efgtoa@p& (0+255),b
  4390   0037C0                     l11925:
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4394   0037C0  C082  F08D         	movff	efgtoa@p,efgtoa@m
  4395   0037C4  C083  F08E         	movff	efgtoa@p+1,efgtoa@m+1
  4396   0037C8                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4399   0037C8  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4400   0037CA  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4401   0037CC                     
  4402                           ; BSR set to: 0
  4403                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4404   0037CC  0E66               	movlw	102
  4405   0037CE  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4406   0037D0  A4D8               	btfss	status,2,c
  4407   0037D2  EFED  F01B         	goto	u12231
  4408   0037D6  EFEF  F01B         	goto	u12230
  4409   0037DA                     u12231:
  4410   0037DA  EF0F  F01C         	goto	l11939
  4411   0037DE                     u12230:
  4412   0037DE                     
  4413                           ; BSR set to: 0
  4414                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4415   0037DE  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4416   0037E0  EFF6  F01B         	goto	u12240
  4417   0037E4  EFF4  F01B         	goto	u12241
  4418   0037E8                     u12241:
  4419   0037E8  EF02  F01C         	goto	l11935
  4420   0037EC                     u12240:
  4421   0037EC                     
  4422                           ; BSR set to: 0
  4423                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4424   0037EC  0E00               	movlw	0
  4425   0037EE  6FA8               	movwf	efgtoa@u& (0+255),b
  4426   0037F0  0E00               	movlw	0
  4427   0037F2  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4428   0037F4  0E80               	movlw	128
  4429   0037F6  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4430   0037F8  0E3F               	movlw	63
  4431   0037FA  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4432                           
  4433                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4434   0037FC  0E00               	movlw	0
  4435   0037FE  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4436   003800  0E00               	movlw	0
  4437   003802  6F8F               	movwf	efgtoa@e& (0+255),b
  4438   003804                     l11935:
  4439                           
  4440                           ; BSR set to: 0
  4441                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4442   003804  0E67               	movlw	103
  4443   003806  1989               	xorwf	efgtoa@mode& (0+255),w,b
  4444   003808  B4D8               	btfsc	status,2,c
  4445   00380A  EF09  F01C         	goto	u12251
  4446   00380E  EF0B  F01C         	goto	u12250
  4447   003812                     u12251:
  4448   003812  EF0F  F01C         	goto	l11939
  4449   003816                     u12250:
  4450   003816                     
  4451                           ; BSR set to: 0
  4452                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4453   003816  518F               	movf	efgtoa@e& (0+255),w,b
  4454   003818  278D               	addwf	efgtoa@m& (0+255),f,b
  4455   00381A  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  4456   00381C  238E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4457   00381E                     l11939:
  4458                           
  4459                           ; BSR set to: 0
  4460                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4461   00381E  0E00               	movlw	0
  4462   003820  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4463   003822  0E00               	movlw	0
  4464   003824  6F97               	movwf	efgtoa@i& (0+255),b
  4465   003826                     
  4466                           ; BSR set to: 0
  4467                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4468   003826  C0A2  F099         	movff	efgtoa@g,efgtoa@h
  4469   00382A  C0A3  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  4470   00382E  C0A4  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  4471   003832  C0A5  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  4472   003836                     
  4473                           ; BSR set to: 0
  4474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4475   003836  C0A8  F093         	movff	efgtoa@u,efgtoa@ou
  4476   00383A  C0A9  F094         	movff	efgtoa@u+1,efgtoa@ou+1
  4477   00383E  C0AA  F095         	movff	efgtoa@u+2,efgtoa@ou+2
  4478   003842  C0AB  F096         	movff	efgtoa@u+3,efgtoa@ou+3
  4479                           
  4480                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4481   003846  EFA0  F01C         	goto	l11953
  4482   00384A                     l11945:
  4483                           
  4484                           ; BSR set to: 0
  4485                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4486   00384A  C099  F042         	movff	efgtoa@h,___fldiv@b
  4487   00384E  C09A  F043         	movff	efgtoa@h+1,___fldiv@b+1
  4488   003852  C09B  F044         	movff	efgtoa@h+2,___fldiv@b+2
  4489   003856  C09C  F045         	movff	efgtoa@h+3,___fldiv@b+3
  4490   00385A  C0A8  F046         	movff	efgtoa@u,___fldiv@a
  4491   00385E  C0A9  F047         	movff	efgtoa@u+1,___fldiv@a+1
  4492   003862  C0AA  F048         	movff	efgtoa@u+2,___fldiv@a+2
  4493   003866  C0AB  F049         	movff	efgtoa@u+3,___fldiv@a+3
  4494   00386A  EC2B  F028         	call	___fldiv	;wreg free
  4495   00386E  C042  F05B         	movff	?___fldiv,floorf@x
  4496   003872  C043  F05C         	movff	?___fldiv+1,floorf@x+1
  4497   003876  C044  F05D         	movff	?___fldiv+2,floorf@x+2
  4498   00387A  C045  F05E         	movff	?___fldiv+3,floorf@x+3
  4499   00387E  ECEF  F02E         	call	_floorf	;wreg free
  4500   003882  C05B  F09D         	movff	?_floorf,efgtoa@l
  4501   003886  C05C  F09E         	movff	?_floorf+1,efgtoa@l+1
  4502   00388A  C05D  F09F         	movff	?_floorf+2,efgtoa@l+2
  4503   00388E  C05E  F0A0         	movff	?_floorf+3,efgtoa@l+3
  4504                           
  4505                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4506   003892  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4507   003896  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4508   00389A  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4509   00389E  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4510   0038A2  ECE3  F033         	call	___fltol	;wreg free
  4511   0038A6  C001  F08B         	movff	?___fltol,efgtoa@d
  4512   0038AA  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  4513   0038AE                     
  4514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4515   0038AE  C099  F05B         	movff	efgtoa@h,___flsub@b
  4516   0038B2  C09A  F05C         	movff	efgtoa@h+1,___flsub@b+1
  4517   0038B6  C09B  F05D         	movff	efgtoa@h+2,___flsub@b+2
  4518   0038BA  C09C  F05E         	movff	efgtoa@h+3,___flsub@b+3
  4519   0038BE  C09D  F01D         	movff	efgtoa@l,___flmul@a
  4520   0038C2  C09E  F01E         	movff	efgtoa@l+1,___flmul@a+1
  4521   0038C6  C09F  F01F         	movff	efgtoa@l+2,___flmul@a+2
  4522   0038CA  C0A0  F020         	movff	efgtoa@l+3,___flmul@a+3
  4523   0038CE  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4524   0038D2  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4525   0038D6  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4526   0038DA  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4527   0038DE  EC27  F024         	call	___flmul	;wreg free
  4528   0038E2  C019  F05F         	movff	?___flmul,___flsub@a
  4529   0038E6  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  4530   0038EA  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  4531   0038EE  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  4532   0038F2  EC52  F03B         	call	___flsub	;wreg free
  4533   0038F6  C05B  F099         	movff	?___flsub,efgtoa@h
  4534   0038FA  C05C  F09A         	movff	?___flsub+1,efgtoa@h+1
  4535   0038FE  C05D  F09B         	movff	?___flsub+2,efgtoa@h+2
  4536   003902  C05E  F09C         	movff	?___flsub+3,efgtoa@h+3
  4537   003906                     
  4538                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4539   003906  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4540   00390A  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4541   00390E  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4542   003912  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4543   003916  0E00               	movlw	0
  4544   003918  6E46               	movwf	___fldiv@a^0,c
  4545   00391A  0E00               	movlw	0
  4546   00391C  6E47               	movwf	(___fldiv@a+1)^0,c
  4547   00391E  0E20               	movlw	32
  4548   003920  6E48               	movwf	(___fldiv@a+2)^0,c
  4549   003922  0E41               	movlw	65
  4550   003924  6E49               	movwf	(___fldiv@a+3)^0,c
  4551   003926  EC2B  F028         	call	___fldiv	;wreg free
  4552   00392A  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4553   00392E  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4554   003932  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4555   003936  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4556   00393A                     
  4557                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4558   00393A  0100               	movlb	0	; () banked
  4559   00393C  4B97               	infsnz	efgtoa@i& (0+255),f,b
  4560   00393E  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  4561   003940                     l11953:
  4562                           
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4565   003940  518D               	movf	efgtoa@m& (0+255),w,b
  4566   003942  5D97               	subwf	efgtoa@i& (0+255),w,b
  4567   003944  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4568   003946  0A80               	xorlw	128
  4569   003948  6E75               	movwf	??_efgtoa^0,c
  4570   00394A  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  4571   00394C  0A80               	xorlw	128
  4572   00394E  5875               	subwfb	??_efgtoa^0,w,c
  4573   003950  A0D8               	btfss	status,0,c
  4574   003952  EFAD  F01C         	goto	u12261
  4575   003956  EFAF  F01C         	goto	u12260
  4576   00395A                     u12261:
  4577   00395A  EF25  F01C         	goto	l11945
  4578   00395E                     u12260:
  4579   00395E                     
  4580                           ; BSR set to: 0
  4581                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4582   00395E  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4583   003962  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4584   003966  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4585   00396A  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4586   00396E  0E00               	movlw	0
  4587   003970  6E1D               	movwf	___flmul@a^0,c
  4588   003972  0E00               	movlw	0
  4589   003974  6E1E               	movwf	(___flmul@a+1)^0,c
  4590   003976  0EA0               	movlw	160
  4591   003978  6E1F               	movwf	(___flmul@a+2)^0,c
  4592   00397A  0E40               	movlw	64
  4593   00397C  6E20               	movwf	(___flmul@a+3)^0,c
  4594   00397E  EC27  F024         	call	___flmul	;wreg free
  4595   003982  C019  F09D         	movff	?___flmul,efgtoa@l
  4596   003986  C01A  F09E         	movff	?___flmul+1,efgtoa@l+1
  4597   00398A  C01B  F09F         	movff	?___flmul+2,efgtoa@l+2
  4598   00398E  C01C  F0A0         	movff	?___flmul+3,efgtoa@l+3
  4599   003992                     
  4600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4601   003992  C099  F063         	movff	efgtoa@h,___flge@ff1
  4602   003996  C09A  F064         	movff	efgtoa@h+1,___flge@ff1+1
  4603   00399A  C09B  F065         	movff	efgtoa@h+2,___flge@ff1+2
  4604   00399E  C09C  F066         	movff	efgtoa@h+3,___flge@ff1+3
  4605   0039A2  C09D  F067         	movff	efgtoa@l,___flge@ff2
  4606   0039A6  C09E  F068         	movff	efgtoa@l+1,___flge@ff2+1
  4607   0039AA  C09F  F069         	movff	efgtoa@l+2,___flge@ff2+2
  4608   0039AE  C0A0  F06A         	movff	efgtoa@l+3,___flge@ff2+3
  4609   0039B2  EC66  F034         	call	___flge	;wreg free
  4610   0039B6  B0D8               	btfsc	status,0,c
  4611   0039B8  EFE0  F01C         	goto	u12271
  4612   0039BC  EFE2  F01C         	goto	u12270
  4613   0039C0                     u12271:
  4614   0039C0  EFED  F01C         	goto	l11961
  4615   0039C4                     u12270:
  4616   0039C4                     
  4617                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4618   0039C4  0E00               	movlw	0
  4619   0039C6  0100               	movlb	0	; () banked
  4620   0039C8  6F9D               	movwf	efgtoa@l& (0+255),b
  4621   0039CA  0E00               	movlw	0
  4622   0039CC  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4623   0039CE  0E00               	movlw	0
  4624   0039D0  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4625   0039D2  0E00               	movlw	0
  4626   0039D4  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4627                           
  4628                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  4629   0039D6  EF16  F01D         	goto	l11967
  4630   0039DA                     l11961:
  4631                           
  4632                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4633   0039DA  C099  F001         	movff	efgtoa@h,___fleq@ff1
  4634   0039DE  C09A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4635   0039E2  C09B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4636   0039E6  C09C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4637   0039EA  C09D  F005         	movff	efgtoa@l,___fleq@ff2
  4638   0039EE  C09E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4639   0039F2  C09F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4640   0039F6  C0A0  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4641   0039FA  ECCA  F037         	call	___fleq	;wreg free
  4642   0039FE  A0D8               	btfss	status,0,c
  4643   003A00  EF04  F01D         	goto	u12281
  4644   003A04  EF06  F01D         	goto	u12280
  4645   003A08                     u12281:
  4646   003A08  EF16  F01D         	goto	l11967
  4647   003A0C                     u12280:
  4648   003A0C  0100               	movlb	0	; () banked
  4649   003A0E  B18B               	btfsc	efgtoa@d& (0+255),0,b
  4650   003A10  EF0C  F01D         	goto	u12291
  4651   003A14  EF0E  F01D         	goto	u12290
  4652   003A18                     u12291:
  4653   003A18  EF16  F01D         	goto	l11967
  4654   003A1C                     u12290:
  4655   003A1C                     
  4656                           ; BSR set to: 0
  4657                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4658   003A1C  0E00               	movlw	0
  4659   003A1E  6F9D               	movwf	efgtoa@l& (0+255),b
  4660   003A20  0E00               	movlw	0
  4661   003A22  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4662   003A24  0E00               	movlw	0
  4663   003A26  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4664   003A28  0E00               	movlw	0
  4665   003A2A  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4666   003A2C                     l11967:
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4669   003A2C  C0A2  F032         	movff	efgtoa@g,___fladd@b
  4670   003A30  C0A3  F033         	movff	efgtoa@g+1,___fladd@b+1
  4671   003A34  C0A4  F034         	movff	efgtoa@g+2,___fladd@b+2
  4672   003A38  C0A5  F035         	movff	efgtoa@g+3,___fladd@b+3
  4673   003A3C  C09D  F036         	movff	efgtoa@l,___fladd@a
  4674   003A40  C09E  F037         	movff	efgtoa@l+1,___fladd@a+1
  4675   003A44  C09F  F038         	movff	efgtoa@l+2,___fladd@a+2
  4676   003A48  C0A0  F039         	movff	efgtoa@l+3,___fladd@a+3
  4677   003A4C  ECC7  F021         	call	___fladd	;wreg free
  4678   003A50  C032  F099         	movff	?___fladd,efgtoa@h
  4679   003A54  C033  F09A         	movff	?___fladd+1,efgtoa@h+1
  4680   003A58  C034  F09B         	movff	?___fladd+2,efgtoa@h+2
  4681   003A5C  C035  F09C         	movff	?___fladd+3,efgtoa@h+3
  4682   003A60                     
  4683                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4684   003A60  C099  F063         	movff	efgtoa@h,___flge@ff1
  4685   003A64  C09A  F064         	movff	efgtoa@h+1,___flge@ff1+1
  4686   003A68  C09B  F065         	movff	efgtoa@h+2,___flge@ff1+2
  4687   003A6C  C09C  F066         	movff	efgtoa@h+3,___flge@ff1+3
  4688   003A70  0E00               	movlw	0
  4689   003A72  6E1D               	movwf	___flmul@a^0,c
  4690   003A74  0E00               	movlw	0
  4691   003A76  6E1E               	movwf	(___flmul@a+1)^0,c
  4692   003A78  0E20               	movlw	32
  4693   003A7A  6E1F               	movwf	(___flmul@a+2)^0,c
  4694   003A7C  0E41               	movlw	65
  4695   003A7E  6E20               	movwf	(___flmul@a+3)^0,c
  4696   003A80  C093  F019         	movff	efgtoa@ou,___flmul@b
  4697   003A84  C094  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  4698   003A88  C095  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  4699   003A8C  C096  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  4700   003A90  EC27  F024         	call	___flmul	;wreg free
  4701   003A94  C019  F067         	movff	?___flmul,___flge@ff2
  4702   003A98  C01A  F068         	movff	?___flmul+1,___flge@ff2+1
  4703   003A9C  C01B  F069         	movff	?___flmul+2,___flge@ff2+2
  4704   003AA0  C01C  F06A         	movff	?___flmul+3,___flge@ff2+3
  4705   003AA4  EC66  F034         	call	___flge	;wreg free
  4706   003AA8  A0D8               	btfss	status,0,c
  4707   003AAA  EF59  F01D         	goto	u12301
  4708   003AAE  EF5B  F01D         	goto	u12300
  4709   003AB2                     u12301:
  4710   003AB2  EF84  F01D         	goto	l11979
  4711   003AB6                     u12300:
  4712   003AB6                     
  4713                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  4714   003AB6  0100               	movlb	0	; () banked
  4715   003AB8  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4716   003ABA  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4717   003ABC                     
  4718                           ; BSR set to: 0
  4719                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4720   003ABC  C093  F019         	movff	efgtoa@ou,___flmul@b
  4721   003AC0  C094  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  4722   003AC4  C095  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  4723   003AC8  C096  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  4724   003ACC  0E00               	movlw	0
  4725   003ACE  6E1D               	movwf	___flmul@a^0,c
  4726   003AD0  0E00               	movlw	0
  4727   003AD2  6E1E               	movwf	(___flmul@a+1)^0,c
  4728   003AD4  0E20               	movlw	32
  4729   003AD6  6E1F               	movwf	(___flmul@a+2)^0,c
  4730   003AD8  0E41               	movlw	65
  4731   003ADA  6E20               	movwf	(___flmul@a+3)^0,c
  4732   003ADC  EC27  F024         	call	___flmul	;wreg free
  4733   003AE0  C019  F093         	movff	?___flmul,efgtoa@ou
  4734   003AE4  C01A  F094         	movff	?___flmul+1,efgtoa@ou+1
  4735   003AE8  C01B  F095         	movff	?___flmul+2,efgtoa@ou+2
  4736   003AEC  C01C  F096         	movff	?___flmul+3,efgtoa@ou+3
  4737   003AF0                     
  4738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4739   003AF0  0E66               	movlw	102
  4740   003AF2  0100               	movlb	0	; () banked
  4741   003AF4  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4742   003AF6  A4D8               	btfss	status,2,c
  4743   003AF8  EF80  F01D         	goto	u12311
  4744   003AFC  EF82  F01D         	goto	u12310
  4745   003B00                     u12311:
  4746   003B00  EF84  F01D         	goto	l11979
  4747   003B04                     u12310:
  4748   003B04                     
  4749                           ; BSR set to: 0
  4750                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  4751   003B04  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4752   003B06  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4753   003B08                     l11979:
  4754                           
  4755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4756   003B08  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4757   003B0C  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4758   003B10  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4759   003B14  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4760   003B18                     
  4761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4762   003B18  C08F  F080         	movff	efgtoa@e,efgtoa@ne
  4763   003B1C  C090  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  4764   003B20                     
  4765                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4766   003B20  0E00               	movlw	0
  4767   003B22  0100               	movlb	0	; () banked
  4768   003B24  6F88               	movwf	efgtoa@pp& (0+255),b
  4769   003B26                     
  4770                           ; BSR set to: 0
  4771                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4772   003B26  0E00               	movlw	0
  4773   003B28  6F85               	movwf	(efgtoa@t+1)& (0+255),b
  4774   003B2A  0E00               	movlw	0
  4775   003B2C  6F84               	movwf	efgtoa@t& (0+255),b
  4776   003B2E                     
  4777                           ; BSR set to: 0
  4778                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4779   003B2E  0E00               	movlw	0
  4780   003B30  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4781   003B32  0E00               	movlw	0
  4782   003B34  6F97               	movwf	efgtoa@i& (0+255),b
  4783                           
  4784                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4785   003B36  EF82  F01E         	goto	l12029
  4786   003B3A                     l11989:
  4787                           
  4788                           ; BSR set to: 0
  4789                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4790   003B3A  C099  F042         	movff	efgtoa@h,___fldiv@b
  4791   003B3E  C09A  F043         	movff	efgtoa@h+1,___fldiv@b+1
  4792   003B42  C09B  F044         	movff	efgtoa@h+2,___fldiv@b+2
  4793   003B46  C09C  F045         	movff	efgtoa@h+3,___fldiv@b+3
  4794   003B4A  C0A8  F046         	movff	efgtoa@u,___fldiv@a
  4795   003B4E  C0A9  F047         	movff	efgtoa@u+1,___fldiv@a+1
  4796   003B52  C0AA  F048         	movff	efgtoa@u+2,___fldiv@a+2
  4797   003B56  C0AB  F049         	movff	efgtoa@u+3,___fldiv@a+3
  4798   003B5A  EC2B  F028         	call	___fldiv	;wreg free
  4799   003B5E  C042  F05B         	movff	?___fldiv,floorf@x
  4800   003B62  C043  F05C         	movff	?___fldiv+1,floorf@x+1
  4801   003B66  C044  F05D         	movff	?___fldiv+2,floorf@x+2
  4802   003B6A  C045  F05E         	movff	?___fldiv+3,floorf@x+3
  4803   003B6E  ECEF  F02E         	call	_floorf	;wreg free
  4804   003B72  C05B  F09D         	movff	?_floorf,efgtoa@l
  4805   003B76  C05C  F09E         	movff	?_floorf+1,efgtoa@l+1
  4806   003B7A  C05D  F09F         	movff	?_floorf+2,efgtoa@l+2
  4807   003B7E  C05E  F0A0         	movff	?_floorf+3,efgtoa@l+3
  4808                           
  4809                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4810   003B82  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4811   003B86  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4812   003B8A  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4813   003B8E  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4814   003B92  ECE3  F033         	call	___fltol	;wreg free
  4815   003B96  BE02               	btfsc	(?___fltol+1)^0,7,c
  4816   003B98  EFD9  F01D         	goto	u12320
  4817   003B9C  5002               	movf	(?___fltol+1)^0,w,c
  4818   003B9E  E107               	bnz	u12321
  4819   003BA0  0E0A               	movlw	10
  4820   003BA2  5C01               	subwf	?___fltol^0,w,c
  4821   003BA4  B0D8               	btfsc	status,0,c
  4822   003BA6  EFD7  F01D         	goto	u12321
  4823   003BAA  EFD9  F01D         	goto	u12320
  4824   003BAE                     u12321:
  4825   003BAE  EFE9  F01D         	goto	l11993
  4826   003BB2                     u12320:
  4827   003BB2  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4828   003BB6  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4829   003BBA  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4830   003BBE  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4831   003BC2  ECE3  F033         	call	___fltol	;wreg free
  4832   003BC6  C001  F08B         	movff	?___fltol,efgtoa@d
  4833   003BCA  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  4834   003BCE  EFEE  F01D         	goto	l1474
  4835   003BD2                     l11993:
  4836   003BD2  0E00               	movlw	0
  4837   003BD4  0100               	movlb	0	; () banked
  4838   003BD6  6F8C               	movwf	(efgtoa@d+1)& (0+255),b
  4839   003BD8  0E09               	movlw	9
  4840   003BDA  6F8B               	movwf	efgtoa@d& (0+255),b
  4841   003BDC                     l1474:
  4842                           
  4843                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4844   003BDC  0100               	movlb	0	; () banked
  4845   003BDE  5188               	movf	efgtoa@pp& (0+255),w,b
  4846   003BE0  A4D8               	btfss	status,2,c
  4847   003BE2  EFF5  F01D         	goto	u12331
  4848   003BE6  EFF7  F01D         	goto	u12330
  4849   003BEA                     u12331:
  4850   003BEA  EF1F  F01E         	goto	l12013
  4851   003BEE                     u12330:
  4852   003BEE                     
  4853                           ; BSR set to: 0
  4854   003BEE  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4855   003BF0  EFFE  F01D         	goto	u12340
  4856   003BF4  EFFC  F01D         	goto	u12341
  4857   003BF8                     u12341:
  4858   003BF8  EF1F  F01E         	goto	l12013
  4859   003BFC                     u12340:
  4860   003BFC                     
  4861                           ; BSR set to: 0
  4862                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4863   003BFC  0E00               	movlw	low _dbuf
  4864   003BFE  25A6               	addwf	efgtoa@n& (0+255),w,b
  4865   003C00  6ED9               	movwf	fsr2l,c
  4866   003C02  0E02               	movlw	high _dbuf
  4867   003C04  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4868   003C06  6EDA               	movwf	fsr2h,c
  4869   003C08  0E2E               	movlw	46
  4870   003C0A  6EDF               	movwf	indf2,c
  4871   003C0C                     
  4872                           ; BSR set to: 0
  4873   003C0C  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4874   003C0E  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4875   003C10                     
  4876                           ; BSR set to: 0
  4877                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4878   003C10  0791               	decf	efgtoa@w& (0+255),f,b
  4879   003C12  A0D8               	btfss	status,0,c
  4880   003C14  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4881   003C16                     
  4882                           ; BSR set to: 0
  4883                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4884   003C16  0E01               	movlw	1
  4885   003C18  6F88               	movwf	efgtoa@pp& (0+255),b
  4886   003C1A  EF1F  F01E         	goto	l12013
  4887   003C1E                     l12005:
  4888                           
  4889                           ; BSR set to: 0
  4890                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4891   003C1E  0E00               	movlw	low _dbuf
  4892   003C20  25A6               	addwf	efgtoa@n& (0+255),w,b
  4893   003C22  6ED9               	movwf	fsr2l,c
  4894   003C24  0E02               	movlw	high _dbuf
  4895   003C26  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4896   003C28  6EDA               	movwf	fsr2h,c
  4897   003C2A  0E30               	movlw	48
  4898   003C2C  6EDF               	movwf	indf2,c
  4899   003C2E                     
  4900                           ; BSR set to: 0
  4901   003C2E  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4902   003C30  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4903   003C32                     
  4904                           ; BSR set to: 0
  4905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4906   003C32  0791               	decf	efgtoa@w& (0+255),f,b
  4907   003C34  A0D8               	btfss	status,0,c
  4908   003C36  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4909   003C38                     
  4910                           ; BSR set to: 0
  4911                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4912   003C38  0784               	decf	efgtoa@t& (0+255),f,b
  4913   003C3A  A0D8               	btfss	status,0,c
  4914   003C3C  0785               	decf	(efgtoa@t+1)& (0+255),f,b
  4915   003C3E                     l12013:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4919   003C3E  5184               	movf	efgtoa@t& (0+255),w,b
  4920   003C40  1185               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4921   003C42  A4D8               	btfss	status,2,c
  4922   003C44  EF26  F01E         	goto	u12351
  4923   003C48  EF28  F01E         	goto	u12350
  4924   003C4C                     u12351:
  4925   003C4C  EF0F  F01E         	goto	l12005
  4926   003C50                     u12350:
  4927   003C50                     
  4928                           ; BSR set to: 0
  4929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4930   003C50  0E00               	movlw	low _dbuf
  4931   003C52  25A6               	addwf	efgtoa@n& (0+255),w,b
  4932   003C54  6ED9               	movwf	fsr2l,c
  4933   003C56  0E02               	movlw	high _dbuf
  4934   003C58  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4935   003C5A  6EDA               	movwf	fsr2h,c
  4936   003C5C  518B               	movf	efgtoa@d& (0+255),w,b
  4937   003C5E  0F30               	addlw	48
  4938   003C60  6EDF               	movwf	indf2,c
  4939   003C62                     
  4940                           ; BSR set to: 0
  4941   003C62  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4942   003C64  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4943   003C66                     
  4944                           ; BSR set to: 0
  4945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4946   003C66  0791               	decf	efgtoa@w& (0+255),f,b
  4947   003C68  A0D8               	btfss	status,0,c
  4948   003C6A  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4949   003C6C                     
  4950                           ; BSR set to: 0
  4951                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4952   003C6C  C099  F05B         	movff	efgtoa@h,___flsub@b
  4953   003C70  C09A  F05C         	movff	efgtoa@h+1,___flsub@b+1
  4954   003C74  C09B  F05D         	movff	efgtoa@h+2,___flsub@b+2
  4955   003C78  C09C  F05E         	movff	efgtoa@h+3,___flsub@b+3
  4956   003C7C  C09D  F01D         	movff	efgtoa@l,___flmul@a
  4957   003C80  C09E  F01E         	movff	efgtoa@l+1,___flmul@a+1
  4958   003C84  C09F  F01F         	movff	efgtoa@l+2,___flmul@a+2
  4959   003C88  C0A0  F020         	movff	efgtoa@l+3,___flmul@a+3
  4960   003C8C  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4961   003C90  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4962   003C94  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4963   003C98  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4964   003C9C  EC27  F024         	call	___flmul	;wreg free
  4965   003CA0  C019  F05F         	movff	?___flmul,___flsub@a
  4966   003CA4  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  4967   003CA8  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  4968   003CAC  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  4969   003CB0  EC52  F03B         	call	___flsub	;wreg free
  4970   003CB4  C05B  F099         	movff	?___flsub,efgtoa@h
  4971   003CB8  C05C  F09A         	movff	?___flsub+1,efgtoa@h+1
  4972   003CBC  C05D  F09B         	movff	?___flsub+2,efgtoa@h+2
  4973   003CC0  C05E  F09C         	movff	?___flsub+3,efgtoa@h+3
  4974   003CC4                     
  4975                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4976   003CC4  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4977   003CC8  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4978   003CCC  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4979   003CD0  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4980   003CD4  0E00               	movlw	0
  4981   003CD6  6E46               	movwf	___fldiv@a^0,c
  4982   003CD8  0E00               	movlw	0
  4983   003CDA  6E47               	movwf	(___fldiv@a+1)^0,c
  4984   003CDC  0E20               	movlw	32
  4985   003CDE  6E48               	movwf	(___fldiv@a+2)^0,c
  4986   003CE0  0E41               	movlw	65
  4987   003CE2  6E49               	movwf	(___fldiv@a+3)^0,c
  4988   003CE4  EC2B  F028         	call	___fldiv	;wreg free
  4989   003CE8  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4990   003CEC  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4991   003CF0  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4992   003CF4  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4993   003CF8                     
  4994                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4995   003CF8  0100               	movlb	0	; () banked
  4996   003CFA  0780               	decf	efgtoa@ne& (0+255),f,b
  4997   003CFC  A0D8               	btfss	status,0,c
  4998   003CFE  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  4999   003D00                     
  5000                           ; BSR set to: 0
  5001                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  5002   003D00  4B97               	infsnz	efgtoa@i& (0+255),f,b
  5003   003D02  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  5004   003D04                     l12029:
  5005                           
  5006                           ; BSR set to: 0
  5007                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5008   003D04  518D               	movf	efgtoa@m& (0+255),w,b
  5009   003D06  5D97               	subwf	efgtoa@i& (0+255),w,b
  5010   003D08  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5011   003D0A  0A80               	xorlw	128
  5012   003D0C  6E75               	movwf	??_efgtoa^0,c
  5013   003D0E  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  5014   003D10  0A80               	xorlw	128
  5015   003D12  5875               	subwfb	??_efgtoa^0,w,c
  5016   003D14  B0D8               	btfsc	status,0,c
  5017   003D16  EF8F  F01E         	goto	u12361
  5018   003D1A  EF91  F01E         	goto	u12360
  5019   003D1E                     u12361:
  5020   003D1E  EF9F  F01E         	goto	l12033
  5021   003D22                     u12360:
  5022   003D22                     
  5023                           ; BSR set to: 0
  5024   003D22  BFA7               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5025   003D24  EF9D  F01E         	goto	u12371
  5026   003D28  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5027   003D2A  E109               	bnz	u12370
  5028   003D2C  0E4B               	movlw	75
  5029   003D2E  5DA6               	subwf	efgtoa@n& (0+255),w,b
  5030   003D30  A0D8               	btfss	status,0,c
  5031   003D32  EF9D  F01E         	goto	u12371
  5032   003D36  EF9F  F01E         	goto	u12370
  5033   003D3A                     u12371:
  5034   003D3A  EF9D  F01D         	goto	l11989
  5035   003D3E                     u12370:
  5036   003D3E                     l12033:
  5037                           
  5038                           ; BSR set to: 0
  5039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5040   003D3E  0E00               	movlw	0
  5041   003D40  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  5042   003D42  0E4F               	movlw	79
  5043   003D44  6F97               	movwf	efgtoa@i& (0+255),b
  5044   003D46                     
  5045                           ; BSR set to: 0
  5046                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5047   003D46  0E00               	movlw	low _dbuf
  5048   003D48  2597               	addwf	efgtoa@i& (0+255),w,b
  5049   003D4A  6ED9               	movwf	fsr2l,c
  5050   003D4C  0E02               	movlw	high _dbuf
  5051   003D4E  2198               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5052   003D50  6EDA               	movwf	fsr2h,c
  5053   003D52  6ADF               	clrf	indf2,c
  5054   003D54                     
  5055                           ; BSR set to: 0
  5056                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5057   003D54  0E00               	movlw	low _dbuf
  5058   003D56  6E75               	movwf	??_efgtoa^0,c
  5059   003D58  0E02               	movlw	high _dbuf
  5060   003D5A  6E76               	movwf	(??_efgtoa+1)^0,c
  5061   003D5C  51A6               	movf	efgtoa@n& (0+255),w,b
  5062   003D5E  5E75               	subwf	??_efgtoa^0,f,c
  5063   003D60  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5064   003D62  5A76               	subwfb	(??_efgtoa+1)^0,f,c
  5065   003D64  5197               	movf	efgtoa@i& (0+255),w,b
  5066   003D66  2475               	addwf	??_efgtoa^0,w,c
  5067   003D68  6E01               	movwf	memcpy@d1^0,c
  5068   003D6A  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5069   003D6C  2076               	addwfc	(??_efgtoa+1)^0,w,c
  5070   003D6E  6E02               	movwf	(memcpy@d1+1)^0,c
  5071   003D70  0E00               	movlw	low _dbuf
  5072   003D72  6E03               	movwf	memcpy@s1^0,c
  5073   003D74  0E02               	movlw	high _dbuf
  5074   003D76  6E04               	movwf	(memcpy@s1+1)^0,c
  5075   003D78  C0A6  F005         	movff	efgtoa@n,memcpy@n
  5076   003D7C  C0A7  F006         	movff	efgtoa@n+1,memcpy@n+1
  5077   003D80  EC2A  F03B         	call	_memcpy	;wreg free
  5078   003D84                     
  5079                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5080   003D84  0100               	movlb	0	; () banked
  5081   003D86  51A6               	movf	efgtoa@n& (0+255),w,b
  5082   003D88  5D97               	subwf	efgtoa@i& (0+255),w,b
  5083   003D8A  6FA6               	movwf	efgtoa@n& (0+255),b
  5084   003D8C  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5085   003D8E  5998               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5086   003D90  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  5087   003D92                     
  5088                           ; BSR set to: 0
  5089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5090   003D92  51A1               	movf	efgtoa@sign& (0+255),w,b
  5091   003D94  A4D8               	btfss	status,2,c
  5092   003D96  EFCF  F01E         	goto	u12381
  5093   003D9A  EFD2  F01E         	goto	u12380
  5094   003D9E                     u12381:
  5095   003D9E  0E01               	movlw	1
  5096   003DA0  EFD3  F01E         	goto	u12390
  5097   003DA4                     u12380:
  5098   003DA4  0E00               	movlw	0
  5099   003DA6                     u12390:
  5100   003DA6  6F97               	movwf	efgtoa@i& (0+255),b
  5101   003DA8  6B98               	clrf	(efgtoa@i+1)& (0+255),b
  5102   003DAA                     
  5103                           ; BSR set to: 0
  5104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5105   003DAA  51A1               	movf	efgtoa@sign& (0+255),w,b
  5106   003DAC  B4D8               	btfsc	status,2,c
  5107   003DAE  EFDB  F01E         	goto	u12401
  5108   003DB2  EFDD  F01E         	goto	u12400
  5109   003DB6                     u12401:
  5110   003DB6  EFE8  F01E         	goto	l12047
  5111   003DBA                     u12400:
  5112   003DBA                     
  5113                           ; BSR set to: 0
  5114                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5115   003DBA  07A6               	decf	efgtoa@n& (0+255),f,b
  5116   003DBC  A0D8               	btfss	status,0,c
  5117   003DBE  07A7               	decf	(efgtoa@n+1)& (0+255),f,b
  5118   003DC0  0E00               	movlw	low _dbuf
  5119   003DC2  25A6               	addwf	efgtoa@n& (0+255),w,b
  5120   003DC4  6ED9               	movwf	fsr2l,c
  5121   003DC6  0E02               	movlw	high _dbuf
  5122   003DC8  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5123   003DCA  6EDA               	movwf	fsr2h,c
  5124   003DCC  C0A1  FFDF         	movff	efgtoa@sign,indf2
  5125   003DD0                     l12047:
  5126                           
  5127                           ; BSR set to: 0
  5128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  5129   003DD0  5197               	movf	efgtoa@i& (0+255),w,b
  5130   003DD2  5F91               	subwf	efgtoa@w& (0+255),f,b
  5131   003DD4  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5132   003DD6  5B92               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5133   003DD8                     
  5134                           ; BSR set to: 0
  5135                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5136   003DD8  C06F  F00F         	movff	efgtoa@fp,pad@fp
  5137   003DDC  0E00               	movlw	low _dbuf
  5138   003DDE  25A6               	addwf	efgtoa@n& (0+255),w,b
  5139   003DE0  6E10               	movwf	pad@buf^0,c
  5140   003DE2  0E02               	movlw	high _dbuf
  5141   003DE4  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5142   003DE6  6E11               	movwf	(pad@buf+1)^0,c
  5143   003DE8  C091  F012         	movff	efgtoa@w,pad@p
  5144   003DEC  C092  F013         	movff	efgtoa@w+1,pad@p+1
  5145   003DF0  EC46  F03A         	call	_pad	;wreg free
  5146   003DF4                     l1441:
  5147   003DF4  0012               	return		;funcret
  5148   003DF6                     __end_of_efgtoa:
  5149                           	callstack 0
  5150                           
  5151 ;; *************** function _strcpy *****************
  5152 ;; Defined at:
  5153 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  5154 ;; Parameters:    Size  Location     Type
  5155 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5156 ;;		 -> dbuf(80), 
  5157 ;;  src             1    2[COMRAM] PTR const unsigned char 
  5158 ;;		 -> STR_19(4), STR_16(4), 
  5159 ;; Auto vars:     Size  Location     Type
  5160 ;;  d               2    4[COMRAM] PTR unsigned char 
  5161 ;;		 -> dbuf(80), 
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  2    0[COMRAM] PTR unsigned char 
  5164 ;; Registers used:
  5165 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5171 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5172 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5173 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5174 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5175 ;;Total ram usage:        6 bytes
  5176 ;; Hardware stack levels used: 1
  5177 ;; This function calls:
  5178 ;;		Nothing
  5179 ;; This function is called by:
  5180 ;;		_efgtoa
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text12
  5185   007914                     __ptext12:
  5186                           	callstack 0
  5187   007914                     _strcpy:
  5188                           	callstack 24
  5189   007914  C001  F005         	movff	strcpy@dest,strcpy@d
  5190   007918  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  5191   00791C                     l8143:
  5192   00791C  2A03               	incf	strcpy@src^0,f,c
  5193   00791E  0403               	decf	strcpy@src^0,w,c
  5194   007920  6E04               	movwf	??_strcpy^0,c
  5195   007922  C004  FFF6         	movff	??_strcpy,tblptrl
  5196   007926                     	if	1	;There is more than 1 active tblptr byte
  5197   007926  0E10               	movlw	high __smallconst
  5198   007928  6EF7               	movwf	tblptrh,c
  5199   00792A                     	endif
  5200   00792A                     	if	0	;tblptru may be non-zero
  5201   00792A                     	endif
  5202   00792A                     	if	0	;tblptru may be non-zero
  5203   00792A                     	endif
  5204   00792A  C005  FFD9         	movff	strcpy@d,fsr2l
  5205   00792E  C006  FFDA         	movff	strcpy@d+1,fsr2h
  5206   007932  4A05               	infsnz	strcpy@d^0,f,c
  5207   007934  2A06               	incf	(strcpy@d+1)^0,f,c
  5208   007936  0008               	tblrd		*
  5209   007938  CFF5 FFDF          	movff	tablat,indf2
  5210   00793C  50DF               	movf	indf2,w,c
  5211   00793E  A4D8               	btfss	status,2,c
  5212   007940  EFA4  F03C         	goto	u8061
  5213   007944  EFA6  F03C         	goto	u8060
  5214   007948                     u8061:
  5215   007948  EF8E  F03C         	goto	l8143
  5216   00794C                     u8060:
  5217   00794C  0012               	return		;funcret
  5218   00794E                     __end_of_strcpy:
  5219                           	callstack 0
  5220                           
  5221 ;; *************** function _memcpy *****************
  5222 ;; Defined at:
  5223 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  5224 ;; Parameters:    Size  Location     Type
  5225 ;;  d1              2    0[COMRAM] PTR void 
  5226 ;;		 -> dbuf(80), 
  5227 ;;  s1              2    2[COMRAM] PTR const void 
  5228 ;;		 -> dbuf(80), 
  5229 ;;  n               2    4[COMRAM] unsigned int 
  5230 ;; Auto vars:     Size  Location     Type
  5231 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5232 ;;		 -> dbuf(80), 
  5233 ;;  d               2    7[COMRAM] PTR unsigned char 
  5234 ;;		 -> dbuf(80), 
  5235 ;;  tmp             1    6[COMRAM] unsigned char 
  5236 ;; Return value:  Size  Location     Type
  5237 ;;                  2    0[COMRAM] PTR void 
  5238 ;; Registers used:
  5239 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5240 ;; Tracked objects:
  5241 ;;		On entry : 0/0
  5242 ;;		On exit  : 0/0
  5243 ;;		Unchanged: 0/0
  5244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5245 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5246 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5247 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5248 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5249 ;;Total ram usage:       11 bytes
  5250 ;; Hardware stack levels used: 1
  5251 ;; This function calls:
  5252 ;;		Nothing
  5253 ;; This function is called by:
  5254 ;;		_efgtoa
  5255 ;; This function uses a non-reentrant model
  5256 ;;
  5257                           
  5258                           	psect	text13
  5259   007654                     __ptext13:
  5260                           	callstack 0
  5261   007654                     _memcpy:
  5262                           	callstack 24
  5263   007654  C003  F00A         	movff	memcpy@s1,memcpy@s
  5264   007658  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  5265   00765C  C001  F008         	movff	memcpy@d1,memcpy@d
  5266   007660  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  5267   007664  EF44  F03B         	goto	l8155
  5268   007668                     l8147:
  5269   007668  C00A  FFD9         	movff	memcpy@s,fsr2l
  5270   00766C  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  5271   007670  50DF               	movf	indf2,w,c
  5272   007672  6E07               	movwf	memcpy@tmp^0,c
  5273   007674  4A0A               	infsnz	memcpy@s^0,f,c
  5274   007676  2A0B               	incf	(memcpy@s+1)^0,f,c
  5275   007678  C008  FFD9         	movff	memcpy@d,fsr2l
  5276   00767C  C009  FFDA         	movff	memcpy@d+1,fsr2h
  5277   007680  C007  FFDF         	movff	memcpy@tmp,indf2
  5278   007684  4A08               	infsnz	memcpy@d^0,f,c
  5279   007686  2A09               	incf	(memcpy@d+1)^0,f,c
  5280   007688                     l8155:
  5281   007688  0605               	decf	memcpy@n^0,f,c
  5282   00768A  A0D8               	btfss	status,0,c
  5283   00768C  0606               	decf	(memcpy@n+1)^0,f,c
  5284   00768E  2805               	incf	memcpy@n^0,w,c
  5285   007690  E106               	bnz	u8071
  5286   007692  2806               	incf	(memcpy@n+1)^0,w,c
  5287   007694  A4D8               	btfss	status,2,c
  5288   007696  EF4F  F03B         	goto	u8071
  5289   00769A  EF51  F03B         	goto	u8070
  5290   00769E                     u8071:
  5291   00769E  EF34  F03B         	goto	l8147
  5292   0076A2                     u8070:
  5293   0076A2  0012               	return		;funcret
  5294   0076A4                     __end_of_memcpy:
  5295                           	callstack 0
  5296                           
  5297 ;; *************** function _labs *****************
  5298 ;; Defined at:
  5299 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  5300 ;; Parameters:    Size  Location     Type
  5301 ;;  a               4    0[COMRAM] long 
  5302 ;; Auto vars:     Size  Location     Type
  5303 ;;		None
  5304 ;; Return value:  Size  Location     Type
  5305 ;;                  4    0[COMRAM] long 
  5306 ;; Registers used:
  5307 ;;		wreg, status,2, status,0
  5308 ;; Tracked objects:
  5309 ;;		On entry : 0/0
  5310 ;;		On exit  : 0/0
  5311 ;;		Unchanged: 0/0
  5312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5315 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5316 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5317 ;;Total ram usage:        8 bytes
  5318 ;; Hardware stack levels used: 1
  5319 ;; This function calls:
  5320 ;;		Nothing
  5321 ;; This function is called by:
  5322 ;;		_efgtoa
  5323 ;; This function uses a non-reentrant model
  5324 ;;
  5325                           
  5326                           	psect	text14
  5327   0075AE                     __ptext14:
  5328                           	callstack 0
  5329   0075AE                     _labs:
  5330                           	callstack 24
  5331   0075AE  BE04               	btfsc	(labs@a+3)^0,7,c
  5332   0075B0  EFDC  F03A         	goto	u5271
  5333   0075B4  EFDE  F03A         	goto	u5270
  5334   0075B8                     u5271:
  5335   0075B8  EFE8  F03A         	goto	l5613
  5336   0075BC                     u5270:
  5337   0075BC  C001  F001         	movff	labs@a,?_labs
  5338   0075C0  C002  F002         	movff	labs@a+1,?_labs+1
  5339   0075C4  C003  F003         	movff	labs@a+2,?_labs+2
  5340   0075C8  C004  F004         	movff	labs@a+3,?_labs+3
  5341   0075CC  EF01  F03B         	goto	l1558
  5342   0075D0                     l5613:
  5343   0075D0  C001  F005         	movff	labs@a,??_labs
  5344   0075D4  C002  F006         	movff	labs@a+1,??_labs+1
  5345   0075D8  C003  F007         	movff	labs@a+2,??_labs+2
  5346   0075DC  C004  F008         	movff	labs@a+3,??_labs+3
  5347   0075E0  1E05               	comf	??_labs^0,f,c
  5348   0075E2  1E06               	comf	(??_labs+1)^0,f,c
  5349   0075E4  1E07               	comf	(??_labs+2)^0,f,c
  5350   0075E6  1E08               	comf	(??_labs+3)^0,f,c
  5351   0075E8  2A05               	incf	??_labs^0,f,c
  5352   0075EA  0E00               	movlw	0
  5353   0075EC  2206               	addwfc	(??_labs+1)^0,f,c
  5354   0075EE  2207               	addwfc	(??_labs+2)^0,f,c
  5355   0075F0  2208               	addwfc	(??_labs+3)^0,f,c
  5356   0075F2  C005  F001         	movff	??_labs,?_labs
  5357   0075F6  C006  F002         	movff	??_labs+1,?_labs+1
  5358   0075FA  C007  F003         	movff	??_labs+2,?_labs+2
  5359   0075FE  C008  F004         	movff	??_labs+3,?_labs+3
  5360   007602                     l1558:
  5361   007602  0012               	return		;funcret
  5362   007604                     __end_of_labs:
  5363                           	callstack 0
  5364                           
  5365 ;; *************** function _floorf *****************
  5366 ;; Defined at:
  5367 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  5368 ;; Parameters:    Size  Location     Type
  5369 ;;  x               4   90[COMRAM] float 
  5370 ;; Auto vars:     Size  Location     Type
  5371 ;;  u               4  106[COMRAM] struct .
  5372 ;;  m               4  100[COMRAM] unsigned long 
  5373 ;;  e               2  104[COMRAM] int 
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  4   90[COMRAM] float 
  5376 ;; Registers used:
  5377 ;;		wreg, status,2, status,0
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5383 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5384 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5385 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5386 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5387 ;;Total ram usage:       20 bytes
  5388 ;; Hardware stack levels used: 1
  5389 ;; This function calls:
  5390 ;;		Nothing
  5391 ;; This function is called by:
  5392 ;;		_efgtoa
  5393 ;; This function uses a non-reentrant model
  5394 ;;
  5395                           
  5396                           	psect	text15
  5397   005DDE                     __ptext15:
  5398                           	callstack 0
  5399   005DDE                     _floorf:
  5400                           	callstack 24
  5401   005DDE  C1DE  F06B         	movff	floorf@F521,floorf@u
  5402   005DE2  C1DF  F06C         	movff	floorf@F521+1,floorf@u+1
  5403   005DE6  C1E0  F06D         	movff	floorf@F521+2,floorf@u+2
  5404   005DEA  C1E1  F06E         	movff	floorf@F521+3,floorf@u+3
  5405   005DEE  C05B  F06B         	movff	floorf@x,floorf@u
  5406   005DF2  C05C  F06C         	movff	floorf@x+1,floorf@u+1
  5407   005DF6  C05D  F06D         	movff	floorf@x+2,floorf@u+2
  5408   005DFA  C05E  F06E         	movff	floorf@x+3,floorf@u+3
  5409   005DFE  0E81               	movlw	129
  5410   005E00  6E5F               	movwf	??_floorf^0,c
  5411   005E02  0EFF               	movlw	255
  5412   005E04  6E60               	movwf	(??_floorf+1)^0,c
  5413   005E06  C06B  F061         	movff	floorf@u,??_floorf+2
  5414   005E0A  C06C  F062         	movff	floorf@u+1,??_floorf+3
  5415   005E0E  C06D  F063         	movff	floorf@u+2,??_floorf+4
  5416   005E12  C06E  F064         	movff	floorf@u+3,??_floorf+5
  5417   005E16  0E18               	movlw	24
  5418   005E18  EF13  F02F         	goto	u5280
  5419   005E1C                     u5285:
  5420   005E1C  90D8               	bcf	status,0,c
  5421   005E1E  3264               	rrcf	(??_floorf+5)^0,f,c
  5422   005E20  3263               	rrcf	(??_floorf+4)^0,f,c
  5423   005E22  3262               	rrcf	(??_floorf+3)^0,f,c
  5424   005E24  3261               	rrcf	(??_floorf+2)^0,f,c
  5425   005E26                     u5280:
  5426   005E26  2EE8               	decfsz	wreg,f,c
  5427   005E28  EF0E  F02F         	goto	u5285
  5428   005E2C  5061               	movf	(??_floorf+2)^0,w,c
  5429   005E2E  245F               	addwf	??_floorf^0,w,c
  5430   005E30  6E69               	movwf	floorf@e^0,c
  5431   005E32  0E00               	movlw	0
  5432   005E34  2060               	addwfc	(??_floorf+1)^0,w,c
  5433   005E36  6E6A               	movwf	(floorf@e+1)^0,c
  5434   005E38  BE6A               	btfsc	(floorf@e+1)^0,7,c
  5435   005E3A  EF28  F02F         	goto	u5291
  5436   005E3E  506A               	movf	(floorf@e+1)^0,w,c
  5437   005E40  E109               	bnz	u5290
  5438   005E42  0E17               	movlw	23
  5439   005E44  5C69               	subwf	floorf@e^0,w,c
  5440   005E46  A0D8               	btfss	status,0,c
  5441   005E48  EF28  F02F         	goto	u5291
  5442   005E4C  EF2A  F02F         	goto	u5290
  5443   005E50                     u5291:
  5444   005E50  EF34  F02F         	goto	l5623
  5445   005E54                     u5290:
  5446   005E54                     l5621:
  5447   005E54  C05B  F05B         	movff	floorf@x,?_floorf
  5448   005E58  C05C  F05C         	movff	floorf@x+1,?_floorf+1
  5449   005E5C  C05D  F05D         	movff	floorf@x+2,?_floorf+2
  5450   005E60  C05E  F05E         	movff	floorf@x+3,?_floorf+3
  5451   005E64  EFF7  F02F         	goto	l1544
  5452   005E68                     l5623:
  5453   005E68  BE6A               	btfsc	(floorf@e+1)^0,7,c
  5454   005E6A  EF39  F02F         	goto	u5301
  5455   005E6E  EF3B  F02F         	goto	u5300
  5456   005E72                     u5301:
  5457   005E72  EFAB  F02F         	goto	l5633
  5458   005E76                     u5300:
  5459   005E76  C069  F05F         	movff	floorf@e,??_floorf
  5460   005E7A  0EFF               	movlw	255
  5461   005E7C  6E60               	movwf	(??_floorf+1)^0,c
  5462   005E7E  0EFF               	movlw	255
  5463   005E80  6E61               	movwf	(??_floorf+2)^0,c
  5464   005E82  0E7F               	movlw	127
  5465   005E84  6E62               	movwf	(??_floorf+3)^0,c
  5466   005E86  0E00               	movlw	0
  5467   005E88  6E63               	movwf	(??_floorf+4)^0,c
  5468   005E8A                     u5315:
  5469   005E8A  665F               	tstfsz	??_floorf^0,c
  5470   005E8C  EF4A  F02F         	goto	u5316
  5471   005E90  EF52  F02F         	goto	u5317
  5472   005E94                     u5316:
  5473   005E94  3463               	rlcf	(??_floorf+4)^0,w,c
  5474   005E96  3263               	rrcf	(??_floorf+4)^0,f,c
  5475   005E98  3262               	rrcf	(??_floorf+3)^0,f,c
  5476   005E9A  3261               	rrcf	(??_floorf+2)^0,f,c
  5477   005E9C  3260               	rrcf	(??_floorf+1)^0,f,c
  5478   005E9E  2E5F               	decfsz	??_floorf^0,f,c
  5479   005EA0  EF45  F02F         	goto	u5315
  5480   005EA4                     u5317:
  5481   005EA4  C060  F065         	movff	??_floorf+1,floorf@m
  5482   005EA8  C061  F066         	movff	??_floorf+2,floorf@m+1
  5483   005EAC  C062  F067         	movff	??_floorf+3,floorf@m+2
  5484   005EB0  C063  F068         	movff	??_floorf+4,floorf@m+3
  5485   005EB4  5065               	movf	floorf@m^0,w,c
  5486   005EB6  146B               	andwf	floorf@u^0,w,c
  5487   005EB8  6E5F               	movwf	??_floorf^0,c
  5488   005EBA  5066               	movf	(floorf@m+1)^0,w,c
  5489   005EBC  146C               	andwf	(floorf@u+1)^0,w,c
  5490   005EBE  6E60               	movwf	(??_floorf+1)^0,c
  5491   005EC0  5067               	movf	(floorf@m+2)^0,w,c
  5492   005EC2  146D               	andwf	(floorf@u+2)^0,w,c
  5493   005EC4  6E61               	movwf	(??_floorf+2)^0,c
  5494   005EC6  5068               	movf	(floorf@m+3)^0,w,c
  5495   005EC8  146E               	andwf	(floorf@u+3)^0,w,c
  5496   005ECA  6E62               	movwf	(??_floorf+3)^0,c
  5497   005ECC  505F               	movf	??_floorf^0,w,c
  5498   005ECE  1060               	iorwf	(??_floorf+1)^0,w,c
  5499   005ED0  1061               	iorwf	(??_floorf+2)^0,w,c
  5500   005ED2  1062               	iorwf	(??_floorf+3)^0,w,c
  5501   005ED4  A4D8               	btfss	status,2,c
  5502   005ED6  EF6F  F02F         	goto	u5321
  5503   005EDA  EF71  F02F         	goto	u5320
  5504   005EDE                     u5321:
  5505   005EDE  EF73  F02F         	goto	l5629
  5506   005EE2                     u5320:
  5507   005EE2  EF2A  F02F         	goto	l5621
  5508   005EE6                     l5629:
  5509   005EE6  C06B  F05F         	movff	floorf@u,??_floorf
  5510   005EEA  C06C  F060         	movff	floorf@u+1,??_floorf+1
  5511   005EEE  C06D  F061         	movff	floorf@u+2,??_floorf+2
  5512   005EF2  C06E  F062         	movff	floorf@u+3,??_floorf+3
  5513   005EF6  0E20               	movlw	32
  5514   005EF8  EF83  F02F         	goto	u5330
  5515   005EFC                     u5335:
  5516   005EFC  90D8               	bcf	status,0,c
  5517   005EFE  3262               	rrcf	(??_floorf+3)^0,f,c
  5518   005F00  3261               	rrcf	(??_floorf+2)^0,f,c
  5519   005F02  3260               	rrcf	(??_floorf+1)^0,f,c
  5520   005F04  325F               	rrcf	??_floorf^0,f,c
  5521   005F06                     u5330:
  5522   005F06  2EE8               	decfsz	wreg,f,c
  5523   005F08  EF7E  F02F         	goto	u5335
  5524   005F0C  505F               	movf	??_floorf^0,w,c
  5525   005F0E  1060               	iorwf	(??_floorf+1)^0,w,c
  5526   005F10  1061               	iorwf	(??_floorf+2)^0,w,c
  5527   005F12  1062               	iorwf	(??_floorf+3)^0,w,c
  5528   005F14  B4D8               	btfsc	status,2,c
  5529   005F16  EF8F  F02F         	goto	u5341
  5530   005F1A  EF91  F02F         	goto	u5340
  5531   005F1E                     u5341:
  5532   005F1E  EF99  F02F         	goto	l1547
  5533   005F22                     u5340:
  5534   005F22  5065               	movf	floorf@m^0,w,c
  5535   005F24  266B               	addwf	floorf@u^0,f,c
  5536   005F26  5066               	movf	(floorf@m+1)^0,w,c
  5537   005F28  226C               	addwfc	(floorf@u+1)^0,f,c
  5538   005F2A  5067               	movf	(floorf@m+2)^0,w,c
  5539   005F2C  226D               	addwfc	(floorf@u+2)^0,f,c
  5540   005F2E  5068               	movf	(floorf@m+3)^0,w,c
  5541   005F30  226E               	addwfc	(floorf@u+3)^0,f,c
  5542   005F32                     l1547:
  5543   005F32  1C65               	comf	floorf@m^0,w,c
  5544   005F34  6E5F               	movwf	??_floorf^0,c
  5545   005F36  1C66               	comf	(floorf@m+1)^0,w,c
  5546   005F38  6E60               	movwf	(??_floorf+1)^0,c
  5547   005F3A  1C67               	comf	(floorf@m+2)^0,w,c
  5548   005F3C  6E61               	movwf	(??_floorf+2)^0,c
  5549   005F3E  1C68               	comf	(floorf@m+3)^0,w,c
  5550   005F40  6E62               	movwf	(??_floorf+3)^0,c
  5551   005F42  505F               	movf	??_floorf^0,w,c
  5552   005F44  166B               	andwf	floorf@u^0,f,c
  5553   005F46  5060               	movf	(??_floorf+1)^0,w,c
  5554   005F48  166C               	andwf	(floorf@u+1)^0,f,c
  5555   005F4A  5061               	movf	(??_floorf+2)^0,w,c
  5556   005F4C  166D               	andwf	(floorf@u+2)^0,f,c
  5557   005F4E  5062               	movf	(??_floorf+3)^0,w,c
  5558   005F50  166E               	andwf	(floorf@u+3)^0,f,c
  5559   005F52  EFEF  F02F         	goto	l5641
  5560   005F56                     l5633:
  5561   005F56  C06B  F05F         	movff	floorf@u,??_floorf
  5562   005F5A  C06C  F060         	movff	floorf@u+1,??_floorf+1
  5563   005F5E  C06D  F061         	movff	floorf@u+2,??_floorf+2
  5564   005F62  C06E  F062         	movff	floorf@u+3,??_floorf+3
  5565   005F66  0E20               	movlw	32
  5566   005F68  EFBB  F02F         	goto	u5350
  5567   005F6C                     u5355:
  5568   005F6C  90D8               	bcf	status,0,c
  5569   005F6E  3262               	rrcf	(??_floorf+3)^0,f,c
  5570   005F70  3261               	rrcf	(??_floorf+2)^0,f,c
  5571   005F72  3260               	rrcf	(??_floorf+1)^0,f,c
  5572   005F74  325F               	rrcf	??_floorf^0,f,c
  5573   005F76                     u5350:
  5574   005F76  2EE8               	decfsz	wreg,f,c
  5575   005F78  EFB6  F02F         	goto	u5355
  5576   005F7C  505F               	movf	??_floorf^0,w,c
  5577   005F7E  1060               	iorwf	(??_floorf+1)^0,w,c
  5578   005F80  1061               	iorwf	(??_floorf+2)^0,w,c
  5579   005F82  1062               	iorwf	(??_floorf+3)^0,w,c
  5580   005F84  A4D8               	btfss	status,2,c
  5581   005F86  EFC7  F02F         	goto	u5361
  5582   005F8A  EFC9  F02F         	goto	u5360
  5583   005F8E                     u5361:
  5584   005F8E  EFD3  F02F         	goto	l5637
  5585   005F92                     u5360:
  5586   005F92  0E00               	movlw	0
  5587   005F94  6E6B               	movwf	floorf@u^0,c
  5588   005F96  0E00               	movlw	0
  5589   005F98  6E6C               	movwf	(floorf@u+1)^0,c
  5590   005F9A  0E00               	movlw	0
  5591   005F9C  6E6D               	movwf	(floorf@u+2)^0,c
  5592   005F9E  0E00               	movlw	0
  5593   005FA0  6E6E               	movwf	(floorf@u+3)^0,c
  5594   005FA2  EFEF  F02F         	goto	l5641
  5595   005FA6                     l5637:
  5596   005FA6  90D8               	bcf	status,0,c
  5597   005FA8  346B               	rlcf	floorf@u^0,w,c
  5598   005FAA  6E5F               	movwf	??_floorf^0,c
  5599   005FAC  346C               	rlcf	(floorf@u+1)^0,w,c
  5600   005FAE  6E60               	movwf	(??_floorf+1)^0,c
  5601   005FB0  346D               	rlcf	(floorf@u+2)^0,w,c
  5602   005FB2  6E61               	movwf	(??_floorf+2)^0,c
  5603   005FB4  346E               	rlcf	(floorf@u+3)^0,w,c
  5604   005FB6  6E62               	movwf	(??_floorf+3)^0,c
  5605   005FB8  505F               	movf	??_floorf^0,w,c
  5606   005FBA  1060               	iorwf	(??_floorf+1)^0,w,c
  5607   005FBC  1061               	iorwf	(??_floorf+2)^0,w,c
  5608   005FBE  1062               	iorwf	(??_floorf+3)^0,w,c
  5609   005FC0  B4D8               	btfsc	status,2,c
  5610   005FC2  EFE5  F02F         	goto	u5371
  5611   005FC6  EFE7  F02F         	goto	u5370
  5612   005FCA                     u5371:
  5613   005FCA  EFEF  F02F         	goto	l5641
  5614   005FCE                     u5370:
  5615   005FCE  0E00               	movlw	0
  5616   005FD0  6E6B               	movwf	floorf@u^0,c
  5617   005FD2  0E00               	movlw	0
  5618   005FD4  6E6C               	movwf	(floorf@u+1)^0,c
  5619   005FD6  0E80               	movlw	128
  5620   005FD8  6E6D               	movwf	(floorf@u+2)^0,c
  5621   005FDA  0EBF               	movlw	191
  5622   005FDC  6E6E               	movwf	(floorf@u+3)^0,c
  5623   005FDE                     l5641:
  5624   005FDE  C06B  F05B         	movff	floorf@u,?_floorf
  5625   005FE2  C06C  F05C         	movff	floorf@u+1,?_floorf+1
  5626   005FE6  C06D  F05D         	movff	floorf@u+2,?_floorf+2
  5627   005FEA  C06E  F05E         	movff	floorf@u+3,?_floorf+3
  5628   005FEE                     l1544:
  5629   005FEE  0012               	return		;funcret
  5630   005FF0                     __end_of_floorf:
  5631                           	callstack 0
  5632                           
  5633 ;; *************** function ___fpclassifyf *****************
  5634 ;; Defined at:
  5635 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  5636 ;; Parameters:    Size  Location     Type
  5637 ;;  x               4    0[COMRAM] float 
  5638 ;; Auto vars:     Size  Location     Type
  5639 ;;  u               4   10[COMRAM] struct .
  5640 ;;  e               2    8[COMRAM] int 
  5641 ;; Return value:  Size  Location     Type
  5642 ;;                  2    0[COMRAM] int 
  5643 ;; Registers used:
  5644 ;;		wreg, status,2, status,0
  5645 ;; Tracked objects:
  5646 ;;		On entry : 0/0
  5647 ;;		On exit  : 0/0
  5648 ;;		Unchanged: 0/0
  5649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5650 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5651 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5652 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5653 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5654 ;;Total ram usage:       14 bytes
  5655 ;; Hardware stack levels used: 1
  5656 ;; This function calls:
  5657 ;;		Nothing
  5658 ;; This function is called by:
  5659 ;;		_efgtoa
  5660 ;; This function uses a non-reentrant model
  5661 ;;
  5662                           
  5663                           	psect	text16
  5664   0069D0                     __ptext16:
  5665                           	callstack 0
  5666   0069D0                     ___fpclassifyf:
  5667                           	callstack 24
  5668   0069D0  C1E2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5669   0069D4  C1E3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5670   0069D8  C1E4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5671   0069DC  C1E5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5672   0069E0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5673   0069E4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5674   0069E8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5675   0069EC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5676   0069F0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5677   0069F4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5678   0069F8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5679   0069FC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5680   006A00  0E18               	movlw	24
  5681   006A02  EF08  F035         	goto	u5190
  5682   006A06                     u5195:
  5683   006A06  90D8               	bcf	status,0,c
  5684   006A08  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5685   006A0A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5686   006A0C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5687   006A0E  3205               	rrcf	??___fpclassifyf^0,f,c
  5688   006A10                     u5190:
  5689   006A10  2EE8               	decfsz	wreg,f,c
  5690   006A12  EF03  F035         	goto	u5195
  5691   006A16  5005               	movf	??___fpclassifyf^0,w,c
  5692   006A18  6E09               	movwf	___fpclassifyf@e^0,c
  5693   006A1A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5694   006A1C  5009               	movf	___fpclassifyf@e^0,w,c
  5695   006A1E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5696   006A20  A4D8               	btfss	status,2,c
  5697   006A22  EF15  F035         	goto	u5201
  5698   006A26  EF17  F035         	goto	u5200
  5699   006A2A                     u5201:
  5700   006A2A  EF37  F035         	goto	l5595
  5701   006A2E                     u5200:
  5702   006A2E  90D8               	bcf	status,0,c
  5703   006A30  340B               	rlcf	___fpclassifyf@u^0,w,c
  5704   006A32  6E05               	movwf	??___fpclassifyf^0,c
  5705   006A34  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5706   006A36  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5707   006A38  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5708   006A3A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5709   006A3C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5710   006A3E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5711   006A40  5005               	movf	??___fpclassifyf^0,w,c
  5712   006A42  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5713   006A44  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5714   006A46  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5715   006A48  A4D8               	btfss	status,2,c
  5716   006A4A  EF29  F035         	goto	u5211
  5717   006A4E  EF2B  F035         	goto	u5210
  5718   006A52                     u5211:
  5719   006A52  EF31  F035         	goto	l5591
  5720   006A56                     u5210:
  5721   006A56  0E00               	movlw	0
  5722   006A58  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5723   006A5A  0E02               	movlw	2
  5724   006A5C  6E01               	movwf	?___fpclassifyf^0,c
  5725   006A5E  EF66  F035         	goto	l1530
  5726   006A62                     l5591:
  5727   006A62  0E00               	movlw	0
  5728   006A64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5729   006A66  0E03               	movlw	3
  5730   006A68  6E01               	movwf	?___fpclassifyf^0,c
  5731   006A6A  EF66  F035         	goto	l1530
  5732   006A6E                     l5595:
  5733   006A6E  2809               	incf	___fpclassifyf@e^0,w,c
  5734   006A70  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5735   006A72  A4D8               	btfss	status,2,c
  5736   006A74  EF3E  F035         	goto	u5221
  5737   006A78  EF40  F035         	goto	u5220
  5738   006A7C                     u5221:
  5739   006A7C  EF62  F035         	goto	l5601
  5740   006A80                     u5220:
  5741   006A80  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5742   006A84  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5743   006A88  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5744   006A8C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5745   006A90  0E09               	movlw	9
  5746   006A92                     u5235:
  5747   006A92  90D8               	bcf	status,0,c
  5748   006A94  3605               	rlcf	??___fpclassifyf^0,f,c
  5749   006A96  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5750   006A98  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5751   006A9A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5752   006A9C  2EE8               	decfsz	wreg,f,c
  5753   006A9E  EF49  F035         	goto	u5235
  5754   006AA2  5005               	movf	??___fpclassifyf^0,w,c
  5755   006AA4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5756   006AA6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5757   006AA8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5758   006AAA  B4D8               	btfsc	status,2,c
  5759   006AAC  EF5A  F035         	goto	u5241
  5760   006AB0  EF5D  F035         	goto	u5240
  5761   006AB4                     u5241:
  5762   006AB4  0E01               	movlw	1
  5763   006AB6  EF5E  F035         	goto	u5250
  5764   006ABA                     u5240:
  5765   006ABA  0E00               	movlw	0
  5766   006ABC                     u5250:
  5767   006ABC  6E01               	movwf	?___fpclassifyf^0,c
  5768   006ABE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5769   006AC0  EF66  F035         	goto	l1530
  5770   006AC4                     l5601:
  5771   006AC4  0E00               	movlw	0
  5772   006AC6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5773   006AC8  0E04               	movlw	4
  5774   006ACA  6E01               	movwf	?___fpclassifyf^0,c
  5775   006ACC                     l1530:
  5776   006ACC  0012               	return		;funcret
  5777   006ACE                     __end_of___fpclassifyf:
  5778                           	callstack 0
  5779                           
  5780 ;; *************** function ___fltol *****************
  5781 ;; Defined at:
  5782 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5783 ;; Parameters:    Size  Location     Type
  5784 ;;  f1              4    0[COMRAM] int 
  5785 ;; Auto vars:     Size  Location     Type
  5786 ;;  exp1            1    9[COMRAM] unsigned char 
  5787 ;;  sign1           1    8[COMRAM] unsigned char 
  5788 ;; Return value:  Size  Location     Type
  5789 ;;                  4    0[COMRAM] long 
  5790 ;; Registers used:
  5791 ;;		wreg, status,2, status,0
  5792 ;; Tracked objects:
  5793 ;;		On entry : 0/0
  5794 ;;		On exit  : 0/0
  5795 ;;		Unchanged: 0/0
  5796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5797 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5799 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5800 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5801 ;;Total ram usage:       10 bytes
  5802 ;; Hardware stack levels used: 1
  5803 ;; This function calls:
  5804 ;;		Nothing
  5805 ;; This function is called by:
  5806 ;;		_send_the_result_to_LCD
  5807 ;;		_main
  5808 ;;		_efgtoa
  5809 ;; This function uses a non-reentrant model
  5810 ;;
  5811                           
  5812                           	psect	text17
  5813   0067C6                     __ptext17:
  5814                           	callstack 0
  5815   0067C6                     ___fltol:
  5816                           	callstack 24
  5817   0067C6  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5818   0067C8  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5819   0067CA  6E0A               	movwf	___fltol@exp1^0,c
  5820   0067CC  500A               	movf	___fltol@exp1^0,w,c
  5821   0067CE  A4D8               	btfss	status,2,c
  5822   0067D0  EFEC  F033         	goto	u5091
  5823   0067D4  EFEE  F033         	goto	u5090
  5824   0067D8                     u5091:
  5825   0067D8  EFF8  F033         	goto	l5529
  5826   0067DC                     u5090:
  5827   0067DC                     l5525:
  5828   0067DC  0E00               	movlw	0
  5829   0067DE  6E01               	movwf	?___fltol^0,c
  5830   0067E0  0E00               	movlw	0
  5831   0067E2  6E02               	movwf	(?___fltol+1)^0,c
  5832   0067E4  0E00               	movlw	0
  5833   0067E6  6E03               	movwf	(?___fltol+2)^0,c
  5834   0067E8  0E00               	movlw	0
  5835   0067EA  6E04               	movwf	(?___fltol+3)^0,c
  5836   0067EC  EF65  F034         	goto	l992
  5837   0067F0                     l5529:
  5838   0067F0  C001  F005         	movff	___fltol@f1,??___fltol
  5839   0067F4  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5840   0067F8  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5841   0067FC  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5842   006800  0E20               	movlw	32
  5843   006802  EF08  F034         	goto	u5100
  5844   006806                     u5105:
  5845   006806  90D8               	bcf	status,0,c
  5846   006808  3208               	rrcf	(??___fltol+3)^0,f,c
  5847   00680A  3207               	rrcf	(??___fltol+2)^0,f,c
  5848   00680C  3206               	rrcf	(??___fltol+1)^0,f,c
  5849   00680E  3205               	rrcf	??___fltol^0,f,c
  5850   006810                     u5100:
  5851   006810  2EE8               	decfsz	wreg,f,c
  5852   006812  EF03  F034         	goto	u5105
  5853   006816  5005               	movf	??___fltol^0,w,c
  5854   006818  6E09               	movwf	___fltol@sign1^0,c
  5855   00681A  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5856   00681C  0EFF               	movlw	255
  5857   00681E  1601               	andwf	___fltol@f1^0,f,c
  5858   006820  0EFF               	movlw	255
  5859   006822  1602               	andwf	(___fltol@f1+1)^0,f,c
  5860   006824  0EFF               	movlw	255
  5861   006826  1603               	andwf	(___fltol@f1+2)^0,f,c
  5862   006828  0E00               	movlw	0
  5863   00682A  1604               	andwf	(___fltol@f1+3)^0,f,c
  5864   00682C  0E96               	movlw	150
  5865   00682E  5E0A               	subwf	___fltol@exp1^0,f,c
  5866   006830  BE0A               	btfsc	___fltol@exp1^0,7,c
  5867   006832  EF1F  F034         	goto	u5110
  5868   006836  EF1D  F034         	goto	u5111
  5869   00683A                     u5111:
  5870   00683A  EF35  F034         	goto	l5549
  5871   00683E                     u5110:
  5872   00683E  500A               	movf	___fltol@exp1^0,w,c
  5873   006840  0A80               	xorlw	128
  5874   006842  0F97               	addlw	151
  5875   006844  B0D8               	btfsc	status,0,c
  5876   006846  EF27  F034         	goto	u5121
  5877   00684A  EF29  F034         	goto	u5120
  5878   00684E                     u5121:
  5879   00684E  EF2B  F034         	goto	l5545
  5880   006852                     u5120:
  5881   006852  EFEE  F033         	goto	l5525
  5882   006856                     l5545:
  5883   006856  90D8               	bcf	status,0,c
  5884   006858  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5885   00685A  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5886   00685C  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5887   00685E  3201               	rrcf	___fltol@f1^0,f,c
  5888   006860  3E0A               	incfsz	___fltol@exp1^0,f,c
  5889   006862  EF2B  F034         	goto	l5545
  5890   006866  EF4D  F034         	goto	l5559
  5891   00686A                     l5549:
  5892   00686A  0E1F               	movlw	31
  5893   00686C  640A               	cpfsgt	___fltol@exp1^0,c
  5894   00686E  EF3B  F034         	goto	u5131
  5895   006872  EF3D  F034         	goto	u5130
  5896   006876                     u5131:
  5897   006876  EF45  F034         	goto	l5557
  5898   00687A                     u5130:
  5899   00687A  EFEE  F033         	goto	l5525
  5900   00687E                     l5555:
  5901   00687E  90D8               	bcf	status,0,c
  5902   006880  3601               	rlcf	___fltol@f1^0,f,c
  5903   006882  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5904   006884  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5905   006886  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5906   006888  060A               	decf	___fltol@exp1^0,f,c
  5907   00688A                     l5557:
  5908   00688A  500A               	movf	___fltol@exp1^0,w,c
  5909   00688C  A4D8               	btfss	status,2,c
  5910   00688E  EF4B  F034         	goto	u5141
  5911   006892  EF4D  F034         	goto	u5140
  5912   006896                     u5141:
  5913   006896  EF3F  F034         	goto	l5555
  5914   00689A                     u5140:
  5915   00689A                     l5559:
  5916   00689A  5009               	movf	___fltol@sign1^0,w,c
  5917   00689C  B4D8               	btfsc	status,2,c
  5918   00689E  EF53  F034         	goto	u5151
  5919   0068A2  EF55  F034         	goto	u5150
  5920   0068A6                     u5151:
  5921   0068A6  EF5D  F034         	goto	l5563
  5922   0068AA                     u5150:
  5923   0068AA  1E04               	comf	(___fltol@f1+3)^0,f,c
  5924   0068AC  1E03               	comf	(___fltol@f1+2)^0,f,c
  5925   0068AE  1E02               	comf	(___fltol@f1+1)^0,f,c
  5926   0068B0  6C01               	negf	___fltol@f1^0,c
  5927   0068B2  0E00               	movlw	0
  5928   0068B4  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5929   0068B6  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5930   0068B8  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5931   0068BA                     l5563:
  5932   0068BA  C001  F001         	movff	___fltol@f1,?___fltol
  5933   0068BE  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5934   0068C2  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5935   0068C6  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5936   0068CA                     l992:
  5937   0068CA  0012               	return		;funcret
  5938   0068CC                     __end_of___fltol:
  5939                           	callstack 0
  5940                           
  5941 ;; *************** function ___fleq *****************
  5942 ;; Defined at:
  5943 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5944 ;; Parameters:    Size  Location     Type
  5945 ;;  ff1             4    0[COMRAM] long 
  5946 ;;  ff2             4    4[COMRAM] long 
  5947 ;; Auto vars:     Size  Location     Type
  5948 ;;		None
  5949 ;; Return value:  Size  Location     Type
  5950 ;;		None               void
  5951 ;; Registers used:
  5952 ;;		wreg, status,2, status,0
  5953 ;; Tracked objects:
  5954 ;;		On entry : 0/0
  5955 ;;		On exit  : 0/0
  5956 ;;		Unchanged: 0/0
  5957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5958 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5959 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5960 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5961 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5962 ;;Total ram usage:       12 bytes
  5963 ;; Hardware stack levels used: 1
  5964 ;; This function calls:
  5965 ;;		Nothing
  5966 ;; This function is called by:
  5967 ;;		_efgtoa
  5968 ;; This function uses a non-reentrant model
  5969 ;;
  5970                           
  5971                           	psect	text18
  5972   006F94                     __ptext18:
  5973                           	callstack 0
  5974   006F94                     ___fleq:
  5975                           	callstack 24
  5976   006F94  0E00               	movlw	0
  5977   006F96  1401               	andwf	___fleq@ff1^0,w,c
  5978   006F98  6E09               	movwf	??___fleq^0,c
  5979   006F9A  0E00               	movlw	0
  5980   006F9C  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5981   006F9E  6E0A               	movwf	(??___fleq+1)^0,c
  5982   006FA0  0E80               	movlw	128
  5983   006FA2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5984   006FA4  6E0B               	movwf	(??___fleq+2)^0,c
  5985   006FA6  0E7F               	movlw	127
  5986   006FA8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5987   006FAA  6E0C               	movwf	(??___fleq+3)^0,c
  5988   006FAC  5009               	movf	??___fleq^0,w,c
  5989   006FAE  100A               	iorwf	(??___fleq+1)^0,w,c
  5990   006FB0  100B               	iorwf	(??___fleq+2)^0,w,c
  5991   006FB2  100C               	iorwf	(??___fleq+3)^0,w,c
  5992   006FB4  A4D8               	btfss	status,2,c
  5993   006FB6  EFDF  F037         	goto	u5001
  5994   006FBA  EFE1  F037         	goto	u5000
  5995   006FBE                     u5001:
  5996   006FBE  EFE9  F037         	goto	l5481
  5997   006FC2                     u5000:
  5998   006FC2  0E00               	movlw	0
  5999   006FC4  6E01               	movwf	___fleq@ff1^0,c
  6000   006FC6  0E00               	movlw	0
  6001   006FC8  6E02               	movwf	(___fleq@ff1+1)^0,c
  6002   006FCA  0E00               	movlw	0
  6003   006FCC  6E03               	movwf	(___fleq@ff1+2)^0,c
  6004   006FCE  0E00               	movlw	0
  6005   006FD0  6E04               	movwf	(___fleq@ff1+3)^0,c
  6006   006FD2                     l5481:
  6007   006FD2  0E00               	movlw	0
  6008   006FD4  1405               	andwf	___fleq@ff2^0,w,c
  6009   006FD6  6E09               	movwf	??___fleq^0,c
  6010   006FD8  0E00               	movlw	0
  6011   006FDA  1406               	andwf	(___fleq@ff2+1)^0,w,c
  6012   006FDC  6E0A               	movwf	(??___fleq+1)^0,c
  6013   006FDE  0E80               	movlw	128
  6014   006FE0  1407               	andwf	(___fleq@ff2+2)^0,w,c
  6015   006FE2  6E0B               	movwf	(??___fleq+2)^0,c
  6016   006FE4  0E7F               	movlw	127
  6017   006FE6  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6018   006FE8  6E0C               	movwf	(??___fleq+3)^0,c
  6019   006FEA  5009               	movf	??___fleq^0,w,c
  6020   006FEC  100A               	iorwf	(??___fleq+1)^0,w,c
  6021   006FEE  100B               	iorwf	(??___fleq+2)^0,w,c
  6022   006FF0  100C               	iorwf	(??___fleq+3)^0,w,c
  6023   006FF2  A4D8               	btfss	status,2,c
  6024   006FF4  EFFE  F037         	goto	u5011
  6025   006FF8  EF00  F038         	goto	u5010
  6026   006FFC                     u5011:
  6027   006FFC  EF08  F038         	goto	l5485
  6028   007000                     u5010:
  6029   007000  0E00               	movlw	0
  6030   007002  6E05               	movwf	___fleq@ff2^0,c
  6031   007004  0E00               	movlw	0
  6032   007006  6E06               	movwf	(___fleq@ff2+1)^0,c
  6033   007008  0E00               	movlw	0
  6034   00700A  6E07               	movwf	(___fleq@ff2+2)^0,c
  6035   00700C  0E00               	movlw	0
  6036   00700E  6E08               	movwf	(___fleq@ff2+3)^0,c
  6037   007010                     l5485:
  6038   007010  5005               	movf	___fleq@ff2^0,w,c
  6039   007012  1801               	xorwf	___fleq@ff1^0,w,c
  6040   007014  E10F               	bnz	u5020
  6041   007016  5006               	movf	(___fleq@ff2+1)^0,w,c
  6042   007018  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6043   00701A  E10C               	bnz	u5020
  6044   00701C  5007               	movf	(___fleq@ff2+2)^0,w,c
  6045   00701E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6046   007020  E109               	bnz	u5020
  6047   007022  5008               	movf	(___fleq@ff2+3)^0,w,c
  6048   007024  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6049   007026  B4D8               	btfsc	status,2,c
  6050   007028  EF18  F038         	goto	u5021
  6051   00702C  EF1A  F038         	goto	u5020
  6052   007030                     u5021:
  6053   007030  EF1D  F038         	goto	l5489
  6054   007034                     u5020:
  6055   007034  90D8               	bcf	status,0,c
  6056   007036  EF1E  F038         	goto	l954
  6057   00703A                     l5489:
  6058   00703A  80D8               	bsf	status,0,c
  6059   00703C                     l954:
  6060   00703C  0012               	return		;funcret
  6061   00703E                     __end_of___fleq:
  6062                           	callstack 0
  6063                           
  6064 ;; *************** function _dtoa *****************
  6065 ;; Defined at:
  6066 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6067 ;; Parameters:    Size  Location     Type
  6068 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6069 ;;		 -> sprintf@f(12), 
  6070 ;;  d               2   23[COMRAM] int 
  6071 ;; Auto vars:     Size  Location     Type
  6072 ;;  i               2   32[COMRAM] int 
  6073 ;;  p               2   29[COMRAM] int 
  6074 ;;  w               2   27[COMRAM] int 
  6075 ;;  s               1   31[COMRAM] unsigned char 
  6076 ;; Return value:  Size  Location     Type
  6077 ;;                  1    wreg      void 
  6078 ;; Registers used:
  6079 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6080 ;; Tracked objects:
  6081 ;;		On entry : 0/0
  6082 ;;		On exit  : 0/0
  6083 ;;		Unchanged: 0/0
  6084 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6085 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6086 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6087 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6088 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6089 ;;Total ram usage:       12 bytes
  6090 ;; Hardware stack levels used: 1
  6091 ;; Hardware stack levels required when called: 4
  6092 ;; This function calls:
  6093 ;;		___awdiv
  6094 ;;		___awmod
  6095 ;;		_abs
  6096 ;;		_pad
  6097 ;; This function is called by:
  6098 ;;		_vfpfcnvrt
  6099 ;; This function uses a non-reentrant model
  6100 ;;
  6101                           
  6102                           	psect	text19
  6103   0061A4                     __ptext19:
  6104                           	callstack 0
  6105   0061A4                     _dtoa:
  6106                           	callstack 21
  6107   0061A4                     
  6108                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6109   0061A4  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6110   0061A6  EFD7  F030         	goto	u8081
  6111   0061AA  EFDA  F030         	goto	u8080
  6112   0061AE                     u8081:
  6113   0061AE  0E01               	movlw	1
  6114   0061B0  EFDB  F030         	goto	u8090
  6115   0061B4                     u8080:
  6116   0061B4  0E00               	movlw	0
  6117   0061B6                     u8090:
  6118   0061B6  6E20               	movwf	dtoa@s^0,c
  6119                           
  6120                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6121   0061B8  0100               	movlb	0	; () banked
  6122   0061BA  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  6123   0061BC  EFE4  F030         	goto	u8100
  6124   0061C0  EFE2  F030         	goto	u8101
  6125   0061C4                     u8101:
  6126   0061C4  EFEA  F030         	goto	l1416
  6127   0061C8                     u8100:
  6128   0061C8                     
  6129                           ; BSR set to: 0
  6130   0061C8  0E00               	movlw	0
  6131   0061CA  6E1F               	movwf	(dtoa@p+1)^0,c
  6132   0061CC  0E01               	movlw	1
  6133   0061CE  6E1E               	movwf	dtoa@p^0,c
  6134   0061D0  EFEE  F030         	goto	l1418
  6135   0061D4                     l1416:
  6136                           
  6137                           ; BSR set to: 0
  6138   0061D4  C0D4  F01E         	movff	_prec,dtoa@p
  6139   0061D8  C0D5  F01F         	movff	_prec+1,dtoa@p+1
  6140   0061DC                     l1418:
  6141                           
  6142                           ; BSR set to: 0
  6143                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6144   0061DC  C0D2  F01C         	movff	_width,dtoa@w
  6145   0061E0  C0D3  F01D         	movff	_width+1,dtoa@w+1
  6146   0061E4                     
  6147                           ; BSR set to: 0
  6148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6149   0061E4  5020               	movf	dtoa@s^0,w,c
  6150   0061E6  B4D8               	btfsc	status,2,c
  6151   0061E8  EFF8  F030         	goto	u8111
  6152   0061EC  EFFA  F030         	goto	u8110
  6153   0061F0                     u8111:
  6154   0061F0  EF11  F031         	goto	l1419
  6155   0061F4                     u8110:
  6156   0061F4                     
  6157                           ; BSR set to: 0
  6158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6159   0061F4  061C               	decf	dtoa@w^0,f,c
  6160   0061F6  A0D8               	btfss	status,0,c
  6161   0061F8  061D               	decf	(dtoa@w+1)^0,f,c
  6162   0061FA                     
  6163                           ; BSR set to: 0
  6164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6165   0061FA  5020               	movf	dtoa@s^0,w,c
  6166   0061FC  A4D8               	btfss	status,2,c
  6167   0061FE  EF03  F031         	goto	u8121
  6168   006202  EF05  F031         	goto	u8120
  6169   006206                     u8121:
  6170   006206  EF0B  F031         	goto	l8169
  6171   00620A                     u8120:
  6172   00620A                     
  6173                           ; BSR set to: 0
  6174   00620A  0E00               	movlw	0
  6175   00620C  6E1B               	movwf	(_dtoa$1510+1)^0,c
  6176   00620E  0E2B               	movlw	43
  6177   006210  6E1A               	movwf	_dtoa$1510^0,c
  6178   006212  EF0F  F031         	goto	l8171
  6179   006216                     l8169:
  6180                           
  6181                           ; BSR set to: 0
  6182   006216  0E00               	movlw	0
  6183   006218  6E1B               	movwf	(_dtoa$1510+1)^0,c
  6184   00621A  0E2D               	movlw	45
  6185   00621C  6E1A               	movwf	_dtoa$1510^0,c
  6186   00621E                     l8171:
  6187                           
  6188                           ; BSR set to: 0
  6189   00621E  C01A  F020         	movff	_dtoa$1510,dtoa@s
  6190   006222                     l1419:
  6191                           
  6192                           ; BSR set to: 0
  6193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6194   006222  0E00               	movlw	0
  6195   006224  6E22               	movwf	(dtoa@i+1)^0,c
  6196   006226  0E4F               	movlw	79
  6197   006228  6E21               	movwf	dtoa@i^0,c
  6198   00622A                     
  6199                           ; BSR set to: 0
  6200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6201   00622A  0E00               	movlw	0
  6202   00622C  0102               	movlb	2	; () banked
  6203   00622E  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6204                           
  6205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6206   006230  EF4A  F031         	goto	l8185
  6207   006234                     l8175:
  6208                           
  6209                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6210   006234  0621               	decf	dtoa@i^0,f,c
  6211   006236  A0D8               	btfss	status,0,c
  6212   006238  0622               	decf	(dtoa@i+1)^0,f,c
  6213   00623A                     
  6214                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6215   00623A  0E00               	movlw	low _dbuf
  6216   00623C  2421               	addwf	dtoa@i^0,w,c
  6217   00623E  6ED9               	movwf	fsr2l,c
  6218   006240  0E02               	movlw	high _dbuf
  6219   006242  2022               	addwfc	(dtoa@i+1)^0,w,c
  6220   006244  6EDA               	movwf	fsr2h,c
  6221   006246  C018  F001         	movff	dtoa@d,___awmod@dividend
  6222   00624A  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6223   00624E  0E00               	movlw	0
  6224   006250  6E04               	movwf	(___awmod@divisor+1)^0,c
  6225   006252  0E0A               	movlw	10
  6226   006254  6E03               	movwf	___awmod@divisor^0,c
  6227   006256  EC72  F037         	call	___awmod	;wreg free
  6228   00625A  C001  F007         	movff	?___awmod,abs@a
  6229   00625E  C002  F008         	movff	?___awmod+1,abs@a+1
  6230   006262  ECFC  F03C         	call	_abs	;wreg free
  6231   006266  5007               	movf	?_abs^0,w,c
  6232   006268  0F30               	addlw	48
  6233   00626A  6EDF               	movwf	indf2,c
  6234   00626C                     
  6235                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
  6236   00626C  061E               	decf	dtoa@p^0,f,c
  6237   00626E  A0D8               	btfss	status,0,c
  6238   006270  061F               	decf	(dtoa@p+1)^0,f,c
  6239   006272                     
  6240                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6241   006272  061C               	decf	dtoa@w^0,f,c
  6242   006274  A0D8               	btfss	status,0,c
  6243   006276  061D               	decf	(dtoa@w+1)^0,f,c
  6244   006278                     
  6245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6246   006278  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6247   00627C  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6248   006280  0E00               	movlw	0
  6249   006282  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6250   006284  0E0A               	movlw	10
  6251   006286  6E03               	movwf	___awdiv@divisor^0,c
  6252   006288  ECB3  F036         	call	___awdiv	;wreg free
  6253   00628C  C001  F018         	movff	?___awdiv,dtoa@d
  6254   006290  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6255   006294                     l8185:
  6256                           
  6257                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6258   006294  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6259   006296  EF55  F031         	goto	u8131
  6260   00629A  5022               	movf	(dtoa@i+1)^0,w,c
  6261   00629C  E108               	bnz	u8130
  6262   00629E  0421               	decf	dtoa@i^0,w,c
  6263   0062A0  A0D8               	btfss	status,0,c
  6264   0062A2  EF55  F031         	goto	u8131
  6265   0062A6  EF57  F031         	goto	u8130
  6266   0062AA                     u8131:
  6267   0062AA  EF6D  F031         	goto	l8191
  6268   0062AE                     u8130:
  6269   0062AE  5018               	movf	dtoa@d^0,w,c
  6270   0062B0  1019               	iorwf	(dtoa@d+1)^0,w,c
  6271   0062B2  A4D8               	btfss	status,2,c
  6272   0062B4  EF5E  F031         	goto	u8141
  6273   0062B8  EF60  F031         	goto	u8140
  6274   0062BC                     u8141:
  6275   0062BC  EF1A  F031         	goto	l8175
  6276   0062C0                     u8140:
  6277   0062C0  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  6278   0062C2  EF6D  F031         	goto	u8150
  6279   0062C6  501F               	movf	(dtoa@p+1)^0,w,c
  6280   0062C8  E106               	bnz	u8151
  6281   0062CA  041E               	decf	dtoa@p^0,w,c
  6282   0062CC  B0D8               	btfsc	status,0,c
  6283   0062CE  EF6B  F031         	goto	u8151
  6284   0062D2  EF6D  F031         	goto	u8150
  6285   0062D6                     u8151:
  6286   0062D6  EF1A  F031         	goto	l8175
  6287   0062DA                     u8150:
  6288   0062DA                     l8191:
  6289                           
  6290                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6291   0062DA  5020               	movf	dtoa@s^0,w,c
  6292   0062DC  B4D8               	btfsc	status,2,c
  6293   0062DE  EF73  F031         	goto	u8161
  6294   0062E2  EF75  F031         	goto	u8160
  6295   0062E6                     u8161:
  6296   0062E6  EF80  F031         	goto	l8197
  6297   0062EA                     u8160:
  6298   0062EA                     
  6299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6300   0062EA  0621               	decf	dtoa@i^0,f,c
  6301   0062EC  A0D8               	btfss	status,0,c
  6302   0062EE  0622               	decf	(dtoa@i+1)^0,f,c
  6303   0062F0                     
  6304                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6305   0062F0  0E00               	movlw	low _dbuf
  6306   0062F2  2421               	addwf	dtoa@i^0,w,c
  6307   0062F4  6ED9               	movwf	fsr2l,c
  6308   0062F6  0E02               	movlw	high _dbuf
  6309   0062F8  2022               	addwfc	(dtoa@i+1)^0,w,c
  6310   0062FA  6EDA               	movwf	fsr2h,c
  6311   0062FC  C020  FFDF         	movff	dtoa@s,indf2
  6312   006300                     l8197:
  6313                           
  6314                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6315   006300  C017  F00F         	movff	dtoa@fp,pad@fp
  6316   006304  0E00               	movlw	low _dbuf
  6317   006306  2421               	addwf	dtoa@i^0,w,c
  6318   006308  6E10               	movwf	pad@buf^0,c
  6319   00630A  0E02               	movlw	high _dbuf
  6320   00630C  2022               	addwfc	(dtoa@i+1)^0,w,c
  6321   00630E  6E11               	movwf	(pad@buf+1)^0,c
  6322   006310  C01C  F012         	movff	dtoa@w,pad@p
  6323   006314  C01D  F013         	movff	dtoa@w+1,pad@p+1
  6324   006318  EC46  F03A         	call	_pad	;wreg free
  6325   00631C  0012               	return		;funcret
  6326   00631E                     __end_of_dtoa:
  6327                           	callstack 0
  6328                           
  6329 ;; *************** function _pad *****************
  6330 ;; Defined at:
  6331 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6332 ;; Parameters:    Size  Location     Type
  6333 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6334 ;;		 -> sprintf@f(12), 
  6335 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6336 ;;		 -> dbuf(80), 
  6337 ;;  p               2   17[COMRAM] int 
  6338 ;; Auto vars:     Size  Location     Type
  6339 ;;  i               2   20[COMRAM] int 
  6340 ;; Return value:  Size  Location     Type
  6341 ;;                  1    wreg      void 
  6342 ;; Registers used:
  6343 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6344 ;; Tracked objects:
  6345 ;;		On entry : 0/0
  6346 ;;		On exit  : 0/0
  6347 ;;		Unchanged: 0/0
  6348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6349 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6350 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6351 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6352 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6353 ;;Total ram usage:        8 bytes
  6354 ;; Hardware stack levels used: 1
  6355 ;; Hardware stack levels required when called: 3
  6356 ;; This function calls:
  6357 ;;		_fputc
  6358 ;;		_fputs
  6359 ;; This function is called by:
  6360 ;;		_dtoa
  6361 ;;		_efgtoa
  6362 ;; This function uses a non-reentrant model
  6363 ;;
  6364                           
  6365                           	psect	text20
  6366   00748C                     __ptext20:
  6367                           	callstack 0
  6368   00748C                     _pad:
  6369                           	callstack 21
  6370   00748C                     
  6371                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6372   00748C  BE13               	btfsc	(pad@p+1)^0,7,c
  6373   00748E  EF4D  F03A         	goto	u8040
  6374   007492  EF4B  F03A         	goto	u8041
  6375   007496                     u8041:
  6376   007496  EF51  F03A         	goto	l1408
  6377   00749A                     u8040:
  6378   00749A                     
  6379                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6380   00749A  0E00               	movlw	0
  6381   00749C  6E13               	movwf	(pad@p+1)^0,c
  6382   00749E  0E00               	movlw	0
  6383   0074A0  6E12               	movwf	pad@p^0,c
  6384   0074A2                     l1408:
  6385                           
  6386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6387   0074A2  0E00               	movlw	0
  6388   0074A4  6E16               	movwf	(pad@i+1)^0,c
  6389   0074A6  0E00               	movlw	0
  6390   0074A8  6E15               	movwf	pad@i^0,c
  6391                           
  6392                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6393   0074AA  EF61  F03A         	goto	l8137
  6394   0074AE                     l8133:
  6395                           
  6396                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6397   0074AE  0E00               	movlw	0
  6398   0074B0  6E02               	movwf	(fputc@c+1)^0,c
  6399   0074B2  0E20               	movlw	32
  6400   0074B4  6E01               	movwf	fputc@c^0,c
  6401   0074B6  C00F  F003         	movff	pad@fp,fputc@fp
  6402   0074BA  EC15  F037         	call	_fputc	;wreg free
  6403   0074BE                     
  6404                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6405   0074BE  4A15               	infsnz	pad@i^0,f,c
  6406   0074C0  2A16               	incf	(pad@i+1)^0,f,c
  6407   0074C2                     l8137:
  6408                           
  6409                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6410   0074C2  5012               	movf	pad@p^0,w,c
  6411   0074C4  5C15               	subwf	pad@i^0,w,c
  6412   0074C6  5016               	movf	(pad@i+1)^0,w,c
  6413   0074C8  0A80               	xorlw	128
  6414   0074CA  6E14               	movwf	??_pad^0,c
  6415   0074CC  5013               	movf	(pad@p+1)^0,w,c
  6416   0074CE  0A80               	xorlw	128
  6417   0074D0  5814               	subwfb	??_pad^0,w,c
  6418   0074D2  A0D8               	btfss	status,0,c
  6419   0074D4  EF6E  F03A         	goto	u8051
  6420   0074D8  EF70  F03A         	goto	u8050
  6421   0074DC                     u8051:
  6422   0074DC  EF57  F03A         	goto	l8133
  6423   0074E0                     u8050:
  6424   0074E0                     
  6425                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6426   0074E0  C010  F009         	movff	pad@buf,fputs@s
  6427   0074E4  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6428   0074E8  C00F  F00B         	movff	pad@fp,fputs@fp
  6429   0074EC  ECB5  F03B         	call	_fputs	;wreg free
  6430   0074F0  0012               	return		;funcret
  6431   0074F2                     __end_of_pad:
  6432                           	callstack 0
  6433                           
  6434 ;; *************** function _fputs *****************
  6435 ;; Defined at:
  6436 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6437 ;; Parameters:    Size  Location     Type
  6438 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6439 ;;		 -> dbuf(80), 
  6440 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6441 ;;		 -> sprintf@f(12), 
  6442 ;; Auto vars:     Size  Location     Type
  6443 ;;  i               2   12[COMRAM] int 
  6444 ;;  c               1   11[COMRAM] unsigned char 
  6445 ;; Return value:  Size  Location     Type
  6446 ;;                  2    8[COMRAM] int 
  6447 ;; Registers used:
  6448 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6449 ;; Tracked objects:
  6450 ;;		On entry : 0/0
  6451 ;;		On exit  : 0/0
  6452 ;;		Unchanged: 0/0
  6453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6454 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6455 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6457 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6458 ;;Total ram usage:        6 bytes
  6459 ;; Hardware stack levels used: 1
  6460 ;; Hardware stack levels required when called: 2
  6461 ;; This function calls:
  6462 ;;		_fputc
  6463 ;; This function is called by:
  6464 ;;		_pad
  6465 ;; This function uses a non-reentrant model
  6466 ;;
  6467                           
  6468                           	psect	text21
  6469   00776A                     __ptext21:
  6470                           	callstack 0
  6471   00776A                     _fputs:
  6472                           	callstack 21
  6473   00776A  0E00               	movlw	0
  6474   00776C  6E0E               	movwf	(fputs@i+1)^0,c
  6475   00776E  0E00               	movlw	0
  6476   007770  6E0D               	movwf	fputs@i^0,c
  6477   007772  EFC4  F03B         	goto	l8127
  6478   007776                     l8123:
  6479   007776  C00C  F001         	movff	fputs@c,fputc@c
  6480   00777A  6A02               	clrf	(fputc@c+1)^0,c
  6481   00777C  C00B  F003         	movff	fputs@fp,fputc@fp
  6482   007780  EC15  F037         	call	_fputc	;wreg free
  6483   007784  4A0D               	infsnz	fputs@i^0,f,c
  6484   007786  2A0E               	incf	(fputs@i+1)^0,f,c
  6485   007788                     l8127:
  6486   007788  500D               	movf	fputs@i^0,w,c
  6487   00778A  2409               	addwf	fputs@s^0,w,c
  6488   00778C  6ED9               	movwf	fsr2l,c
  6489   00778E  500E               	movf	(fputs@i+1)^0,w,c
  6490   007790  200A               	addwfc	(fputs@s+1)^0,w,c
  6491   007792  6EDA               	movwf	fsr2h,c
  6492   007794  50DF               	movf	indf2,w,c
  6493   007796  6E0C               	movwf	fputs@c^0,c
  6494   007798  500C               	movf	fputs@c^0,w,c
  6495   00779A  A4D8               	btfss	status,2,c
  6496   00779C  EFD2  F03B         	goto	u8031
  6497   0077A0  EFD4  F03B         	goto	u8030
  6498   0077A4                     u8031:
  6499   0077A4  EFBB  F03B         	goto	l8123
  6500   0077A8                     u8030:
  6501   0077A8  0012               	return		;funcret
  6502   0077AA                     __end_of_fputs:
  6503                           	callstack 0
  6504                           
  6505 ;; *************** function _fputc *****************
  6506 ;; Defined at:
  6507 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6508 ;; Parameters:    Size  Location     Type
  6509 ;;  c               2    0[COMRAM] int 
  6510 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6511 ;;		 -> sprintf@f(12), 
  6512 ;; Auto vars:     Size  Location     Type
  6513 ;;		None
  6514 ;; Return value:  Size  Location     Type
  6515 ;;                  2    0[COMRAM] int 
  6516 ;; Registers used:
  6517 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6518 ;; Tracked objects:
  6519 ;;		On entry : 0/0
  6520 ;;		On exit  : 0/0
  6521 ;;		Unchanged: 0/0
  6522 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6523 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6524 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6525 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6526 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6527 ;;Total ram usage:        8 bytes
  6528 ;; Hardware stack levels used: 1
  6529 ;; Hardware stack levels required when called: 1
  6530 ;; This function calls:
  6531 ;;		_putch
  6532 ;; This function is called by:
  6533 ;;		_pad
  6534 ;;		_vfpfcnvrt
  6535 ;;		_fputs
  6536 ;; This function uses a non-reentrant model
  6537 ;;
  6538                           
  6539                           	psect	text22
  6540   006E2A                     __ptext22:
  6541                           	callstack 0
  6542   006E2A                     _fputc:
  6543                           	callstack 24
  6544   006E2A  5003               	movf	fputc@fp^0,w,c
  6545   006E2C  B4D8               	btfsc	status,2,c
  6546   006E2E  EF1B  F037         	goto	u4021
  6547   006E32  EF1D  F037         	goto	u4020
  6548   006E36                     u4021:
  6549   006E36  EF25  F037         	goto	l4897
  6550   006E3A                     u4020:
  6551   006E3A  5003               	movf	fputc@fp^0,w,c
  6552   006E3C  A4D8               	btfss	status,2,c
  6553   006E3E  EF23  F037         	goto	u4031
  6554   006E42  EF25  F037         	goto	u4030
  6555   006E46                     u4031:
  6556   006E46  EF2A  F037         	goto	l4899
  6557   006E4A                     u4030:
  6558   006E4A                     l4897:
  6559   006E4A  5001               	movf	fputc@c^0,w,c
  6560   006E4C  EC56  F03D         	call	_putch
  6561   006E50  EF71  F037         	goto	l1576
  6562   006E54                     l4899:
  6563   006E54  5003               	movf	fputc@fp^0,w,c
  6564   006E56  6ED9               	movwf	fsr2l,c
  6565   006E58  6ADA               	clrf	fsr2h,c
  6566   006E5A  0E0A               	movlw	10
  6567   006E5C  26D9               	addwf	fsr2l,f,c
  6568   006E5E  50DE               	movf	postinc2,w,c
  6569   006E60  10DE               	iorwf	postinc2,w,c
  6570   006E62  B4D8               	btfsc	status,2,c
  6571   006E64  EF36  F037         	goto	u4041
  6572   006E68  EF38  F037         	goto	u4040
  6573   006E6C                     u4041:
  6574   006E6C  EF51  F037         	goto	l4903
  6575   006E70                     u4040:
  6576   006E70  5003               	movf	fputc@fp^0,w,c
  6577   006E72  6ED9               	movwf	fsr2l,c
  6578   006E74  6ADA               	clrf	fsr2h,c
  6579   006E76  0E0A               	movlw	10
  6580   006E78  26D9               	addwf	fsr2l,f,c
  6581   006E7A  5003               	movf	fputc@fp^0,w,c
  6582   006E7C  6EE1               	movwf	fsr1l,c
  6583   006E7E  6AE2               	clrf	fsr1h,c
  6584   006E80  0E03               	movlw	3
  6585   006E82  26E1               	addwf	fsr1l,f,c
  6586   006E84  50DE               	movf	postinc2,w,c
  6587   006E86  5CE6               	subwf	postinc1,w,c
  6588   006E88  50E6               	movf	postinc1,w,c
  6589   006E8A  0A80               	xorlw	128
  6590   006E8C  6E08               	movwf	(??_fputc+4)^0,c
  6591   006E8E  50DE               	movf	postinc2,w,c
  6592   006E90  0A80               	xorlw	128
  6593   006E92  5808               	subwfb	(??_fputc+4)^0,w,c
  6594   006E94  B0D8               	btfsc	status,0,c
  6595   006E96  EF4F  F037         	goto	u4051
  6596   006E9A  EF51  F037         	goto	u4050
  6597   006E9E                     u4051:
  6598   006E9E  EF71  F037         	goto	l1576
  6599   006EA2                     u4050:
  6600   006EA2                     l4903:
  6601   006EA2  5003               	movf	fputc@fp^0,w,c
  6602   006EA4  6ED9               	movwf	fsr2l,c
  6603   006EA6  6ADA               	clrf	fsr2h,c
  6604   006EA8  0E03               	movlw	3
  6605   006EAA  26D9               	addwf	fsr2l,f,c
  6606   006EAC  CFDE F004          	movff	postinc2,??_fputc
  6607   006EB0  CFDD F005          	movff	postdec2,??_fputc+1
  6608   006EB4  5003               	movf	fputc@fp^0,w,c
  6609   006EB6  6ED9               	movwf	fsr2l,c
  6610   006EB8  6ADA               	clrf	fsr2h,c
  6611   006EBA  CFDE F006          	movff	postinc2,??_fputc+2
  6612   006EBE  CFDD F007          	movff	postdec2,??_fputc+3
  6613   006EC2  5004               	movf	??_fputc^0,w,c
  6614   006EC4  2406               	addwf	(??_fputc+2)^0,w,c
  6615   006EC6  6ED9               	movwf	fsr2l,c
  6616   006EC8  5005               	movf	(??_fputc+1)^0,w,c
  6617   006ECA  2007               	addwfc	(??_fputc+3)^0,w,c
  6618   006ECC  6EDA               	movwf	fsr2h,c
  6619   006ECE  C001  FFDF         	movff	fputc@c,indf2
  6620   006ED2  5003               	movf	fputc@fp^0,w,c
  6621   006ED4  6ED9               	movwf	fsr2l,c
  6622   006ED6  6ADA               	clrf	fsr2h,c
  6623   006ED8  0E03               	movlw	3
  6624   006EDA  26D9               	addwf	fsr2l,f,c
  6625   006EDC  2ADE               	incf	postinc2,f,c
  6626   006EDE  0E00               	movlw	0
  6627   006EE0  22DD               	addwfc	postdec2,f,c
  6628   006EE2                     l1576:
  6629   006EE2  0012               	return		;funcret
  6630   006EE4                     __end_of_fputc:
  6631                           	callstack 0
  6632                           
  6633 ;; *************** function _putch *****************
  6634 ;; Defined at:
  6635 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6636 ;; Parameters:    Size  Location     Type
  6637 ;;  c               1    wreg     unsigned char 
  6638 ;; Auto vars:     Size  Location     Type
  6639 ;;  c               1    0[COMRAM] unsigned char 
  6640 ;; Return value:  Size  Location     Type
  6641 ;;                  1    wreg      void 
  6642 ;; Registers used:
  6643 ;;		wreg
  6644 ;; Tracked objects:
  6645 ;;		On entry : 0/0
  6646 ;;		On exit  : 0/0
  6647 ;;		Unchanged: 0/0
  6648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6649 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6650 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6651 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6652 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6653 ;;Total ram usage:        0 bytes
  6654 ;; Hardware stack levels used: 1
  6655 ;; This function calls:
  6656 ;;		Nothing
  6657 ;; This function is called by:
  6658 ;;		_fputc
  6659 ;; This function uses a non-reentrant model
  6660 ;;
  6661                           
  6662                           	psect	text23
  6663   007AAC                     __ptext23:
  6664                           	callstack 0
  6665   007AAC                     _putch:
  6666                           	callstack 24
  6667   007AAC  0012               	return		;funcret
  6668   007AAE                     __end_of_putch:
  6669                           	callstack 0
  6670                           
  6671 ;; *************** function _abs *****************
  6672 ;; Defined at:
  6673 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6674 ;; Parameters:    Size  Location     Type
  6675 ;;  a               2    6[COMRAM] int 
  6676 ;; Auto vars:     Size  Location     Type
  6677 ;;		None
  6678 ;; Return value:  Size  Location     Type
  6679 ;;                  2    6[COMRAM] int 
  6680 ;; Registers used:
  6681 ;;		wreg, status,2, status,0
  6682 ;; Tracked objects:
  6683 ;;		On entry : 0/0
  6684 ;;		On exit  : 0/0
  6685 ;;		Unchanged: 0/0
  6686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6689 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6690 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6691 ;;Total ram usage:        4 bytes
  6692 ;; Hardware stack levels used: 1
  6693 ;; This function calls:
  6694 ;;		Nothing
  6695 ;; This function is called by:
  6696 ;;		_dtoa
  6697 ;; This function uses a non-reentrant model
  6698 ;;
  6699                           
  6700                           	psect	text24
  6701   0079F8                     __ptext24:
  6702                           	callstack 0
  6703   0079F8                     _abs:
  6704                           	callstack 24
  6705   0079F8  BE08               	btfsc	(abs@a+1)^0,7,c
  6706   0079FA  EF01  F03D         	goto	u5181
  6707   0079FE  EF03  F03D         	goto	u5180
  6708   007A02                     u5181:
  6709   007A02  EF09  F03D         	goto	l1535
  6710   007A06                     u5180:
  6711   007A06  C007  F007         	movff	abs@a,?_abs
  6712   007A0A  C008  F008         	movff	abs@a+1,?_abs+1
  6713   007A0E  EF15  F03D         	goto	l1538
  6714   007A12                     l1535:
  6715   007A12  C007  F009         	movff	abs@a,??_abs
  6716   007A16  C008  F00A         	movff	abs@a+1,??_abs+1
  6717   007A1A  1E09               	comf	??_abs^0,f,c
  6718   007A1C  1E0A               	comf	(??_abs+1)^0,f,c
  6719   007A1E  4A09               	infsnz	??_abs^0,f,c
  6720   007A20  2A0A               	incf	(??_abs+1)^0,f,c
  6721   007A22  C009  F007         	movff	??_abs,?_abs
  6722   007A26  C00A  F008         	movff	??_abs+1,?_abs+1
  6723   007A2A                     l1538:
  6724   007A2A  0012               	return		;funcret
  6725   007A2C                     __end_of_abs:
  6726                           	callstack 0
  6727                           
  6728 ;; *************** function ___awmod *****************
  6729 ;; Defined at:
  6730 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6731 ;; Parameters:    Size  Location     Type
  6732 ;;  dividend        2    0[COMRAM] int 
  6733 ;;  divisor         2    2[COMRAM] int 
  6734 ;; Auto vars:     Size  Location     Type
  6735 ;;  sign            1    5[COMRAM] unsigned char 
  6736 ;;  counter         1    4[COMRAM] unsigned char 
  6737 ;; Return value:  Size  Location     Type
  6738 ;;                  2    0[COMRAM] int 
  6739 ;; Registers used:
  6740 ;;		wreg, status,2, status,0
  6741 ;; Tracked objects:
  6742 ;;		On entry : 0/0
  6743 ;;		On exit  : 0/0
  6744 ;;		Unchanged: 0/0
  6745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6746 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6747 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6748 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6749 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6750 ;;Total ram usage:        6 bytes
  6751 ;; Hardware stack levels used: 1
  6752 ;; This function calls:
  6753 ;;		Nothing
  6754 ;; This function is called by:
  6755 ;;		_dtoa
  6756 ;; This function uses a non-reentrant model
  6757 ;;
  6758                           
  6759                           	psect	text25
  6760   006EE4                     __ptext25:
  6761                           	callstack 0
  6762   006EE4                     ___awmod:
  6763                           	callstack 24
  6764   006EE4  0E00               	movlw	0
  6765   006EE6  6E06               	movwf	___awmod@sign^0,c
  6766   006EE8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6767   006EEA  EF7B  F037         	goto	u4940
  6768   006EEE  EF79  F037         	goto	u4941
  6769   006EF2                     u4941:
  6770   006EF2  EF81  F037         	goto	l5449
  6771   006EF6                     u4940:
  6772   006EF6  6C01               	negf	___awmod@dividend^0,c
  6773   006EF8  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6774   006EFA  B0D8               	btfsc	status,0,c
  6775   006EFC  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6776   006EFE  0E01               	movlw	1
  6777   006F00  6E06               	movwf	___awmod@sign^0,c
  6778   006F02                     l5449:
  6779   006F02  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6780   006F04  EF88  F037         	goto	u4950
  6781   006F08  EF86  F037         	goto	u4951
  6782   006F0C                     u4951:
  6783   006F0C  EF8C  F037         	goto	l5453
  6784   006F10                     u4950:
  6785   006F10  6C03               	negf	___awmod@divisor^0,c
  6786   006F12  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6787   006F14  B0D8               	btfsc	status,0,c
  6788   006F16  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6789   006F18                     l5453:
  6790   006F18  5003               	movf	___awmod@divisor^0,w,c
  6791   006F1A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6792   006F1C  B4D8               	btfsc	status,2,c
  6793   006F1E  EF93  F037         	goto	u4961
  6794   006F22  EF95  F037         	goto	u4960
  6795   006F26                     u4961:
  6796   006F26  EFB9  F037         	goto	l5469
  6797   006F2A                     u4960:
  6798   006F2A  0E01               	movlw	1
  6799   006F2C  6E05               	movwf	___awmod@counter^0,c
  6800   006F2E  EF9D  F037         	goto	l5459
  6801   006F32                     l5457:
  6802   006F32  90D8               	bcf	status,0,c
  6803   006F34  3603               	rlcf	___awmod@divisor^0,f,c
  6804   006F36  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6805   006F38  2A05               	incf	___awmod@counter^0,f,c
  6806   006F3A                     l5459:
  6807   006F3A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6808   006F3C  EFA2  F037         	goto	u4971
  6809   006F40  EFA4  F037         	goto	u4970
  6810   006F44                     u4971:
  6811   006F44  EF99  F037         	goto	l5457
  6812   006F48                     u4970:
  6813   006F48                     l5461:
  6814   006F48  5003               	movf	___awmod@divisor^0,w,c
  6815   006F4A  5C01               	subwf	___awmod@dividend^0,w,c
  6816   006F4C  5004               	movf	(___awmod@divisor+1)^0,w,c
  6817   006F4E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6818   006F50  A0D8               	btfss	status,0,c
  6819   006F52  EFAD  F037         	goto	u4981
  6820   006F56  EFAF  F037         	goto	u4980
  6821   006F5A                     u4981:
  6822   006F5A  EFB3  F037         	goto	l5465
  6823   006F5E                     u4980:
  6824   006F5E  5003               	movf	___awmod@divisor^0,w,c
  6825   006F60  5E01               	subwf	___awmod@dividend^0,f,c
  6826   006F62  5004               	movf	(___awmod@divisor+1)^0,w,c
  6827   006F64  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6828   006F66                     l5465:
  6829   006F66  90D8               	bcf	status,0,c
  6830   006F68  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6831   006F6A  3203               	rrcf	___awmod@divisor^0,f,c
  6832   006F6C  2E05               	decfsz	___awmod@counter^0,f,c
  6833   006F6E  EFA4  F037         	goto	l5461
  6834   006F72                     l5469:
  6835   006F72  5006               	movf	___awmod@sign^0,w,c
  6836   006F74  B4D8               	btfsc	status,2,c
  6837   006F76  EFBF  F037         	goto	u4991
  6838   006F7A  EFC1  F037         	goto	u4990
  6839   006F7E                     u4991:
  6840   006F7E  EFC5  F037         	goto	l5473
  6841   006F82                     u4990:
  6842   006F82  6C01               	negf	___awmod@dividend^0,c
  6843   006F84  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6844   006F86  B0D8               	btfsc	status,0,c
  6845   006F88  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6846   006F8A                     l5473:
  6847   006F8A  C001  F001         	movff	___awmod@dividend,?___awmod
  6848   006F8E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6849   006F92  0012               	return		;funcret
  6850   006F94                     __end_of___awmod:
  6851                           	callstack 0
  6852                           
  6853 ;; *************** function ___awdiv *****************
  6854 ;; Defined at:
  6855 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6856 ;; Parameters:    Size  Location     Type
  6857 ;;  dividend        2    0[COMRAM] int 
  6858 ;;  divisor         2    2[COMRAM] int 
  6859 ;; Auto vars:     Size  Location     Type
  6860 ;;  quotient        2    6[COMRAM] int 
  6861 ;;  sign            1    5[COMRAM] unsigned char 
  6862 ;;  counter         1    4[COMRAM] unsigned char 
  6863 ;; Return value:  Size  Location     Type
  6864 ;;                  2    0[COMRAM] int 
  6865 ;; Registers used:
  6866 ;;		wreg, status,2, status,0
  6867 ;; Tracked objects:
  6868 ;;		On entry : 0/0
  6869 ;;		On exit  : 0/0
  6870 ;;		Unchanged: 0/0
  6871 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6872 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6873 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6874 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6875 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6876 ;;Total ram usage:        8 bytes
  6877 ;; Hardware stack levels used: 1
  6878 ;; This function calls:
  6879 ;;		Nothing
  6880 ;; This function is called by:
  6881 ;;		_dtoa
  6882 ;; This function uses a non-reentrant model
  6883 ;;
  6884                           
  6885                           	psect	text26
  6886   006D66                     __ptext26:
  6887                           	callstack 0
  6888   006D66                     ___awdiv:
  6889                           	callstack 24
  6890   006D66  0E00               	movlw	0
  6891   006D68  6E06               	movwf	___awdiv@sign^0,c
  6892   006D6A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6893   006D6C  EFBC  F036         	goto	u4880
  6894   006D70  EFBA  F036         	goto	u4881
  6895   006D74                     u4881:
  6896   006D74  EFC2  F036         	goto	l5405
  6897   006D78                     u4880:
  6898   006D78  6C03               	negf	___awdiv@divisor^0,c
  6899   006D7A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6900   006D7C  B0D8               	btfsc	status,0,c
  6901   006D7E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6902   006D80  0E01               	movlw	1
  6903   006D82  6E06               	movwf	___awdiv@sign^0,c
  6904   006D84                     l5405:
  6905   006D84  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6906   006D86  EFC9  F036         	goto	u4890
  6907   006D8A  EFC7  F036         	goto	u4891
  6908   006D8E                     u4891:
  6909   006D8E  EFCF  F036         	goto	l5411
  6910   006D92                     u4890:
  6911   006D92  6C01               	negf	___awdiv@dividend^0,c
  6912   006D94  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6913   006D96  B0D8               	btfsc	status,0,c
  6914   006D98  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6915   006D9A  0E01               	movlw	1
  6916   006D9C  1A06               	xorwf	___awdiv@sign^0,f,c
  6917   006D9E                     l5411:
  6918   006D9E  0E00               	movlw	0
  6919   006DA0  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6920   006DA2  0E00               	movlw	0
  6921   006DA4  6E07               	movwf	___awdiv@quotient^0,c
  6922   006DA6  5003               	movf	___awdiv@divisor^0,w,c
  6923   006DA8  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6924   006DAA  B4D8               	btfsc	status,2,c
  6925   006DAC  EFDA  F036         	goto	u4901
  6926   006DB0  EFDC  F036         	goto	u4900
  6927   006DB4                     u4901:
  6928   006DB4  EF04  F037         	goto	l5433
  6929   006DB8                     u4900:
  6930   006DB8  0E01               	movlw	1
  6931   006DBA  6E05               	movwf	___awdiv@counter^0,c
  6932   006DBC  EFE4  F036         	goto	l5419
  6933   006DC0                     l5417:
  6934   006DC0  90D8               	bcf	status,0,c
  6935   006DC2  3603               	rlcf	___awdiv@divisor^0,f,c
  6936   006DC4  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6937   006DC6  2A05               	incf	___awdiv@counter^0,f,c
  6938   006DC8                     l5419:
  6939   006DC8  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6940   006DCA  EFE9  F036         	goto	u4911
  6941   006DCE  EFEB  F036         	goto	u4910
  6942   006DD2                     u4911:
  6943   006DD2  EFE0  F036         	goto	l5417
  6944   006DD6                     u4910:
  6945   006DD6                     l5421:
  6946   006DD6  90D8               	bcf	status,0,c
  6947   006DD8  3607               	rlcf	___awdiv@quotient^0,f,c
  6948   006DDA  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6949   006DDC  5003               	movf	___awdiv@divisor^0,w,c
  6950   006DDE  5C01               	subwf	___awdiv@dividend^0,w,c
  6951   006DE0  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6952   006DE2  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6953   006DE4  A0D8               	btfss	status,0,c
  6954   006DE6  EFF7  F036         	goto	u4921
  6955   006DEA  EFF9  F036         	goto	u4920
  6956   006DEE                     u4921:
  6957   006DEE  EFFE  F036         	goto	l5429
  6958   006DF2                     u4920:
  6959   006DF2  5003               	movf	___awdiv@divisor^0,w,c
  6960   006DF4  5E01               	subwf	___awdiv@dividend^0,f,c
  6961   006DF6  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6962   006DF8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6963   006DFA  8007               	bsf	___awdiv@quotient^0,0,c
  6964   006DFC                     l5429:
  6965   006DFC  90D8               	bcf	status,0,c
  6966   006DFE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6967   006E00  3203               	rrcf	___awdiv@divisor^0,f,c
  6968   006E02  2E05               	decfsz	___awdiv@counter^0,f,c
  6969   006E04  EFEB  F036         	goto	l5421
  6970   006E08                     l5433:
  6971   006E08  5006               	movf	___awdiv@sign^0,w,c
  6972   006E0A  B4D8               	btfsc	status,2,c
  6973   006E0C  EF0A  F037         	goto	u4931
  6974   006E10  EF0C  F037         	goto	u4930
  6975   006E14                     u4931:
  6976   006E14  EF10  F037         	goto	l5437
  6977   006E18                     u4930:
  6978   006E18  6C07               	negf	___awdiv@quotient^0,c
  6979   006E1A  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6980   006E1C  B0D8               	btfsc	status,0,c
  6981   006E1E  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6982   006E20                     l5437:
  6983   006E20  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6984   006E24  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6985   006E28  0012               	return		;funcret
  6986   006E2A                     __end_of___awdiv:
  6987                           	callstack 0
  6988                           
  6989 ;; *************** function _memset *****************
  6990 ;; Defined at:
  6991 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  6992 ;; Parameters:    Size  Location     Type
  6993 ;;  dest            2    0[COMRAM] PTR void 
  6994 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  6995 ;;  c               2    2[COMRAM] int 
  6996 ;;  n               2    4[COMRAM] unsigned int 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;  p               2    6[COMRAM] PTR unsigned char 
  6999 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  7000 ;; Return value:  Size  Location     Type
  7001 ;;                  2    0[COMRAM] PTR void 
  7002 ;; Registers used:
  7003 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7004 ;; Tracked objects:
  7005 ;;		On entry : 0/0
  7006 ;;		On exit  : 0/0
  7007 ;;		Unchanged: 0/0
  7008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7009 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7013 ;;Total ram usage:        8 bytes
  7014 ;; Hardware stack levels used: 1
  7015 ;; This function calls:
  7016 ;;		Nothing
  7017 ;; This function is called by:
  7018 ;;		_convert_float_to_string
  7019 ;;		_convert_int_to_string
  7020 ;;		_convert_byte_to_string
  7021 ;;		_convert_short_to_string
  7022 ;; This function uses a non-reentrant model
  7023 ;;
  7024                           
  7025                           	psect	text27
  7026   007988                     __ptext27:
  7027                           	callstack 0
  7028   007988                     _memset:
  7029                           	callstack 28
  7030   007988  C001  F007         	movff	memset@dest,memset@p
  7031   00798C  C002  F008         	movff	memset@dest+1,memset@p+1
  7032   007990  EFD2  F03C         	goto	l6139
  7033   007994                     l6135:
  7034   007994  C007  FFD9         	movff	memset@p,fsr2l
  7035   007998  C008  FFDA         	movff	memset@p+1,fsr2h
  7036   00799C  C003  FFDF         	movff	memset@c,indf2
  7037   0079A0  4A07               	infsnz	memset@p^0,f,c
  7038   0079A2  2A08               	incf	(memset@p+1)^0,f,c
  7039   0079A4                     l6139:
  7040   0079A4  0605               	decf	memset@n^0,f,c
  7041   0079A6  A0D8               	btfss	status,0,c
  7042   0079A8  0606               	decf	(memset@n+1)^0,f,c
  7043   0079AA  2805               	incf	memset@n^0,w,c
  7044   0079AC  E106               	bnz	u6011
  7045   0079AE  2806               	incf	(memset@n+1)^0,w,c
  7046   0079B0  A4D8               	btfss	status,2,c
  7047   0079B2  EFDD  F03C         	goto	u6011
  7048   0079B6  EFDF  F03C         	goto	u6010
  7049   0079BA                     u6011:
  7050   0079BA  EFCA  F03C         	goto	l6135
  7051   0079BE                     u6010:
  7052   0079BE  0012               	return		;funcret
  7053   0079C0                     __end_of_memset:
  7054                           	callstack 0
  7055                           
  7056 ;; *************** function _multiplication_operation *****************
  7057 ;; Defined at:
  7058 ;;		line 185 in file "calculator_function/calculator_functions.c"
  7059 ;; Parameters:    Size  Location     Type
  7060 ;;  num1_val        4   49[COMRAM] float 
  7061 ;;  num2_val        4   53[COMRAM] float 
  7062 ;;  result          1   57[COMRAM] PTR float 
  7063 ;;		 -> total_result(4), result(4), 
  7064 ;; Auto vars:     Size  Location     Type
  7065 ;;		None
  7066 ;; Return value:  Size  Location     Type
  7067 ;;                  1    wreg      void 
  7068 ;; Registers used:
  7069 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7070 ;; Tracked objects:
  7071 ;;		On entry : 0/0
  7072 ;;		On exit  : 0/0
  7073 ;;		Unchanged: 0/0
  7074 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7075 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7076 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7077 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7078 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7079 ;;Total ram usage:        9 bytes
  7080 ;; Hardware stack levels used: 1
  7081 ;; Hardware stack levels required when called: 1
  7082 ;; This function calls:
  7083 ;;		___flmul
  7084 ;; This function is called by:
  7085 ;;		_main
  7086 ;; This function uses a non-reentrant model
  7087 ;;
  7088                           
  7089                           	psect	text28
  7090   007860                     __ptext28:
  7091                           	callstack 0
  7092   007860                     _multiplication_operation:
  7093                           	callstack 29
  7094   007860                     
  7095                           ;calculator_function/calculator_functions.c: 186: *result = num1_val*num2_val;
  7096   007860  C032  F019         	movff	multiplication_operation@num1_val,___flmul@b
  7097   007864  C033  F01A         	movff	multiplication_operation@num1_val+1,___flmul@b+1
  7098   007868  C034  F01B         	movff	multiplication_operation@num1_val+2,___flmul@b+2
  7099   00786C  C035  F01C         	movff	multiplication_operation@num1_val+3,___flmul@b+3
  7100   007870  C036  F01D         	movff	multiplication_operation@num2_val,___flmul@a
  7101   007874  C037  F01E         	movff	multiplication_operation@num2_val+1,___flmul@a+1
  7102   007878  C038  F01F         	movff	multiplication_operation@num2_val+2,___flmul@a+2
  7103   00787C  C039  F020         	movff	multiplication_operation@num2_val+3,___flmul@a+3
  7104   007880  EC27  F024         	call	___flmul	;wreg free
  7105   007884  503A               	movf	multiplication_operation@result^0,w,c
  7106   007886  6ED9               	movwf	fsr2l,c
  7107   007888  6ADA               	clrf	fsr2h,c
  7108   00788A  C019  FFDE         	movff	?___flmul,postinc2
  7109   00788E  C01A  FFDE         	movff	?___flmul+1,postinc2
  7110   007892  C01B  FFDE         	movff	?___flmul+2,postinc2
  7111   007896  C01C  FFDE         	movff	?___flmul+3,postinc2
  7112   00789A  0012               	return		;funcret
  7113   00789C                     __end_of_multiplication_operation:
  7114                           	callstack 0
  7115                           
  7116 ;; *************** function _initialize_var *****************
  7117 ;; Defined at:
  7118 ;;		line 221 in file "calculator_function/calculator_functions.c"
  7119 ;; Parameters:    Size  Location     Type
  7120 ;;		None
  7121 ;; Auto vars:     Size  Location     Type
  7122 ;;  count           2    0[COMRAM] int 
  7123 ;; Return value:  Size  Location     Type
  7124 ;;                  1    wreg      void 
  7125 ;; Registers used:
  7126 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7127 ;; Tracked objects:
  7128 ;;		On entry : 0/0
  7129 ;;		On exit  : 0/0
  7130 ;;		Unchanged: 0/0
  7131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7132 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7133 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7134 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7135 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7136 ;;Total ram usage:        2 bytes
  7137 ;; Hardware stack levels used: 1
  7138 ;; This function calls:
  7139 ;;		Nothing
  7140 ;; This function is called by:
  7141 ;;		_main
  7142 ;; This function uses a non-reentrant model
  7143 ;;
  7144                           
  7145                           	psect	text29
  7146   006C9E                     __ptext29:
  7147                           	callstack 0
  7148   006C9E                     _initialize_var:
  7149                           	callstack 30
  7150   006C9E                     
  7151                           ;calculator_function/calculator_functions.c: 222:      keypad_value = 0;
  7152   006C9E  0E00               	movlw	0
  7153   006CA0  0100               	movlb	0	; () banked
  7154   006CA2  6FDE               	movwf	_keypad_value& (0+255),b
  7155                           
  7156                           ;calculator_function/calculator_functions.c: 224:      lcd_counter = 1;
  7157   006CA4  0E01               	movlw	1
  7158   006CA6  6FFF               	movwf	_lcd_counter& (0+255),b
  7159                           
  7160                           ;calculator_function/calculator_functions.c: 225:      counter_num1 = 0;
  7161   006CA8  0E00               	movlw	0
  7162   006CAA  6FF8               	movwf	_counter_num1& (0+255),b
  7163                           
  7164                           ;calculator_function/calculator_functions.c: 226:      counter_num2 = 0;
  7165   006CAC  0E00               	movlw	0
  7166   006CAE  6FF7               	movwf	_counter_num2& (0+255),b
  7167                           
  7168                           ;calculator_function/calculator_functions.c: 227:      counter_num3 = 0;
  7169   006CB0  0E00               	movlw	0
  7170   006CB2  6FF6               	movwf	_counter_num3& (0+255),b
  7171                           
  7172                           ;calculator_function/calculator_functions.c: 228:      operation = 0;
  7173   006CB4  0E00               	movlw	0
  7174   006CB6  6FF5               	movwf	_operation& (0+255),b
  7175                           
  7176                           ;calculator_function/calculator_functions.c: 229:      operation2 = 0;
  7177   006CB8  0E00               	movlw	0
  7178   006CBA  6FF4               	movwf	_operation2& (0+255),b
  7179                           
  7180                           ;calculator_function/calculator_functions.c: 230:      operation3 = 0;
  7181   006CBC  0E00               	movlw	0
  7182   006CBE  6FF3               	movwf	_operation3& (0+255),b
  7183                           
  7184                           ;calculator_function/calculator_functions.c: 232:      for(int count = 0;count< 3;count+
      +                          +){
  7185   006CC0  0E00               	movlw	0
  7186   006CC2  6E02               	movwf	(initialize_var@count+1)^0,c
  7187   006CC4  0E00               	movlw	0
  7188   006CC6  6E01               	movwf	initialize_var@count^0,c
  7189   006CC8                     l7141:
  7190                           
  7191                           ;calculator_function/calculator_functions.c: 233:      num1[count] = 0;
  7192   006CC8  0EF6               	movlw	low _num1
  7193   006CCA  2401               	addwf	initialize_var@count^0,w,c
  7194   006CCC  6ED9               	movwf	fsr2l,c
  7195   006CCE  0E01               	movlw	high _num1
  7196   006CD0  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7197   006CD2  6EDA               	movwf	fsr2h,c
  7198   006CD4  6ADF               	clrf	indf2,c
  7199                           
  7200                           ;calculator_function/calculator_functions.c: 234:      num2[count] = 0;
  7201   006CD6  0EF2               	movlw	low _num2
  7202   006CD8  2401               	addwf	initialize_var@count^0,w,c
  7203   006CDA  6ED9               	movwf	fsr2l,c
  7204   006CDC  0E01               	movlw	high _num2
  7205   006CDE  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7206   006CE0  6EDA               	movwf	fsr2h,c
  7207   006CE2  6ADF               	clrf	indf2,c
  7208                           
  7209                           ;calculator_function/calculator_functions.c: 235:      num3[count] = 0;
  7210   006CE4  0EEE               	movlw	low _num3
  7211   006CE6  2401               	addwf	initialize_var@count^0,w,c
  7212   006CE8  6ED9               	movwf	fsr2l,c
  7213   006CEA  0E01               	movlw	high _num3
  7214   006CEC  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7215   006CEE  6EDA               	movwf	fsr2h,c
  7216   006CF0  6ADF               	clrf	indf2,c
  7217   006CF2                     
  7218                           ;calculator_function/calculator_functions.c: 236:      }
  7219   006CF2  4A01               	infsnz	initialize_var@count^0,f,c
  7220   006CF4  2A02               	incf	(initialize_var@count+1)^0,f,c
  7221   006CF6  BE02               	btfsc	(initialize_var@count+1)^0,7,c
  7222   006CF8  EF87  F036         	goto	u7371
  7223   006CFC  5002               	movf	(initialize_var@count+1)^0,w,c
  7224   006CFE  E109               	bnz	u7370
  7225   006D00  0E03               	movlw	3
  7226   006D02  5C01               	subwf	initialize_var@count^0,w,c
  7227   006D04  A0D8               	btfss	status,0,c
  7228   006D06  EF87  F036         	goto	u7371
  7229   006D0A  EF89  F036         	goto	u7370
  7230   006D0E                     u7371:
  7231   006D0E  EF64  F036         	goto	l7141
  7232   006D12                     u7370:
  7233   006D12                     
  7234                           ;calculator_function/calculator_functions.c: 238:      num1_val = 0;
  7235   006D12  0E00               	movlw	0
  7236   006D14  0100               	movlb	0	; () banked
  7237   006D16  6FEF               	movwf	_num1_val& (0+255),b
  7238   006D18  0E00               	movlw	0
  7239   006D1A  6FF0               	movwf	(_num1_val+1)& (0+255),b
  7240   006D1C  0E00               	movlw	0
  7241   006D1E  6FF1               	movwf	(_num1_val+2)& (0+255),b
  7242   006D20  0E00               	movlw	0
  7243   006D22  6FF2               	movwf	(_num1_val+3)& (0+255),b
  7244                           
  7245                           ;calculator_function/calculator_functions.c: 239:      num2_val = 0;
  7246   006D24  0E00               	movlw	0
  7247   006D26  6FEB               	movwf	_num2_val& (0+255),b
  7248   006D28  0E00               	movlw	0
  7249   006D2A  6FEC               	movwf	(_num2_val+1)& (0+255),b
  7250   006D2C  0E00               	movlw	0
  7251   006D2E  6FED               	movwf	(_num2_val+2)& (0+255),b
  7252   006D30  0E00               	movlw	0
  7253   006D32  6FEE               	movwf	(_num2_val+3)& (0+255),b
  7254                           
  7255                           ;calculator_function/calculator_functions.c: 240:      num3_val = 0;
  7256   006D34  0E00               	movlw	0
  7257   006D36  6FE7               	movwf	_num3_val& (0+255),b
  7258   006D38  0E00               	movlw	0
  7259   006D3A  6FE8               	movwf	(_num3_val+1)& (0+255),b
  7260   006D3C  0E00               	movlw	0
  7261   006D3E  6FE9               	movwf	(_num3_val+2)& (0+255),b
  7262   006D40  0E00               	movlw	0
  7263   006D42  6FEA               	movwf	(_num3_val+3)& (0+255),b
  7264                           
  7265                           ;calculator_function/calculator_functions.c: 242:      result = 0;
  7266   006D44  0E00               	movlw	0
  7267   006D46  6FE3               	movwf	_result& (0+255),b
  7268   006D48  0E00               	movlw	0
  7269   006D4A  6FE4               	movwf	(_result+1)& (0+255),b
  7270   006D4C  0E00               	movlw	0
  7271   006D4E  6FE5               	movwf	(_result+2)& (0+255),b
  7272   006D50  0E00               	movlw	0
  7273   006D52  6FE6               	movwf	(_result+3)& (0+255),b
  7274                           
  7275                           ;calculator_function/calculator_functions.c: 243:      total_result = 0;
  7276   006D54  0E00               	movlw	0
  7277   006D56  6FDF               	movwf	_total_result& (0+255),b
  7278   006D58  0E00               	movlw	0
  7279   006D5A  6FE0               	movwf	(_total_result+1)& (0+255),b
  7280   006D5C  0E00               	movlw	0
  7281   006D5E  6FE1               	movwf	(_total_result+2)& (0+255),b
  7282   006D60  0E00               	movlw	0
  7283   006D62  6FE2               	movwf	(_total_result+3)& (0+255),b
  7284   006D64                     
  7285                           ; BSR set to: 0
  7286   006D64  0012               	return		;funcret
  7287   006D66                     __end_of_initialize_var:
  7288                           	callstack 0
  7289                           
  7290 ;; *************** function _get_third_number_and_third_operartion *****************
  7291 ;; Defined at:
  7292 ;;		line 72 in file "calculator_function/calculator_functions.c"
  7293 ;; Parameters:    Size  Location     Type
  7294 ;;  num             2   28[COMRAM] PTR unsigned char 
  7295 ;;		 -> num3(4), 
  7296 ;;  counter_num     1   30[COMRAM] PTR unsigned char 
  7297 ;;		 -> counter_num3(1), 
  7298 ;;  lcd_counter     1   31[COMRAM] PTR unsigned char 
  7299 ;;		 -> lcd_counter(1), 
  7300 ;;  operation       1   32[COMRAM] PTR unsigned char 
  7301 ;;		 -> operation3(1), 
  7302 ;; Auto vars:     Size  Location     Type
  7303 ;;  keypad_value    1   35[COMRAM] unsigned char 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;                  1    wreg      void 
  7306 ;; Registers used:
  7307 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7313 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;Total ram usage:        8 bytes
  7318 ;; Hardware stack levels used: 1
  7319 ;; Hardware stack levels required when called: 5
  7320 ;; This function calls:
  7321 ;;		_ecu_keypad_get_value
  7322 ;;		_lcd_4bit_send_char_data_pos
  7323 ;;		_lcd_4bit_send_string_pos
  7324 ;; This function is called by:
  7325 ;;		_main
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text30
  7330   0053F0                     __ptext30:
  7331                           	callstack 0
  7332   0053F0                     _get_third_number_and_third_operartion:
  7333                           	callstack 25
  7334   0053F0                     
  7335                           ;calculator_function/calculator_functions.c: 72: void get_third_number_and_third_operart
      +                          ion(uint8 *num,uint8 *counter_num,uint8 *lcd_counter,;calculator_function/calculator_fun
      +                          ctions.c: 73:                                            uint8 *operation);calculator_fu
      +                          nction/calculator_functions.c: 74: {;calculator_function/calculator_functions.c: 75: uin
      +                          t8 keypad_value = 0;
  7336   0053F0  0E00               	movlw	0
  7337   0053F2  6E24               	movwf	get_third_number_and_third_operartion@keypad_value^0,c
  7338   0053F4                     l8739:
  7339                           
  7340                           ;calculator_function/calculator_functions.c: 78:         ecu_keypad_get_value(&keypad,&k
      +                          eypad_value);
  7341   0053F4  0ED6               	movlw	low _keypad
  7342   0053F6  6E0B               	movwf	ecu_keypad_get_value@keypad^0,c
  7343   0053F8  0E01               	movlw	high _keypad
  7344   0053FA  6E0C               	movwf	(ecu_keypad_get_value@keypad+1)^0,c
  7345   0053FC  0E24               	movlw	low get_third_number_and_third_operartion@keypad_value
  7346   0053FE  6E0D               	movwf	ecu_keypad_get_value@value^0,c
  7347   005400  EC5B  F033         	call	_ecu_keypad_get_value	;wreg free
  7348   005404                     
  7349                           ;calculator_function/calculator_functions.c: 79:         _delay((unsigned long)((150)*(8
      +                          000000ul/4000.0)));
  7350   005404  0E02               	movlw	2
  7351   005406  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7352   005408  0E86               	movlw	134
  7353   00540A  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7354   00540C  0E99               	movlw	153
  7355   00540E                     u13497:
  7356   00540E  2EE8               	decfsz	wreg,f,c
  7357   005410  D7FE               	bra	u13497
  7358   005412  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7359   005414  D7FC               	bra	u13497
  7360   005416  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7361   005418  D7FA               	bra	u13497
  7362   00541A  0000               	nop	
  7363   00541C                     
  7364                           ;calculator_function/calculator_functions.c: 80:         }while((keypad_value == 0) );
  7365   00541C  5024               	movf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7366   00541E  B4D8               	btfsc	status,2,c
  7367   005420  EF14  F02A         	goto	u8741
  7368   005424  EF16  F02A         	goto	u8740
  7369   005428                     u8741:
  7370   005428  EFFA  F029         	goto	l8739
  7371   00542C                     u8740:
  7372   00542C                     
  7373                           ;calculator_function/calculator_functions.c: 82:         if(keypad_value == '#'){
  7374   00542C  0E23               	movlw	35
  7375   00542E  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7376   005430  A4D8               	btfss	status,2,c
  7377   005432  EF1D  F02A         	goto	u8751
  7378   005436  EF1F  F02A         	goto	u8750
  7379   00543A                     u8751:
  7380   00543A  EF42  F02A         	goto	l8751
  7381   00543E                     u8750:
  7382   00543E                     
  7383                           ;calculator_function/calculator_functions.c: 83:            (*counter_num)--;
  7384   00543E  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7385   005440  6ED9               	movwf	fsr2l,c
  7386   005442  6ADA               	clrf	fsr2h,c
  7387   005444  06DF               	decf	indf2,f,c
  7388                           
  7389                           ;calculator_function/calculator_functions.c: 84:            num[*counter_num] = '\0';
  7390   005446  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7391   005448  6ED9               	movwf	fsr2l,c
  7392   00544A  6ADA               	clrf	fsr2h,c
  7393   00544C  50DF               	movf	indf2,w,c
  7394   00544E  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7395   005450  5022               	movf	??_get_third_number_and_third_operartion^0,w,c
  7396   005452  241D               	addwf	get_third_number_and_third_operartion@num^0,w,c
  7397   005454  6ED9               	movwf	fsr2l,c
  7398   005456  0E00               	movlw	0
  7399   005458  201E               	addwfc	(get_third_number_and_third_operartion@num+1)^0,w,c
  7400   00545A  6EDA               	movwf	fsr2h,c
  7401   00545C  6ADF               	clrf	indf2,c
  7402                           
  7403                           ;calculator_function/calculator_functions.c: 85:            (*lcd_counter)--;
  7404   00545E  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7405   005460  6ED9               	movwf	fsr2l,c
  7406   005462  6ADA               	clrf	fsr2h,c
  7407   005464  06DF               	decf	indf2,f,c
  7408   005466                     
  7409                           ;calculator_function/calculator_functions.c: 86:            lcd_4bit_send_char_data_pos(
      +                          &lcd1,1,*lcd_counter,' ');
  7410   005466  0EF9               	movlw	low _lcd1
  7411   005468  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7412   00546A  0E01               	movlw	1
  7413   00546C  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7414   00546E  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7415   005470  6ED9               	movwf	fsr2l,c
  7416   005472  6ADA               	clrf	fsr2h,c
  7417   005474  50DF               	movf	indf2,w,c
  7418   005476  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7419   005478  0E20               	movlw	32
  7420   00547A  6E1B               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  7421   00547C  EC4E  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7422                           
  7423                           ;calculator_function/calculator_functions.c: 88:         }
  7424   005480  EFFA  F029         	goto	l8739
  7425   005484                     l8751:
  7426                           
  7427                           ;calculator_function/calculator_functions.c: 90:             if(keypad_value == '+'||key
      +                          pad_value == '-'||keypad_value == '*'||keypad_value == '/'){
  7428   005484  0E2B               	movlw	43
  7429   005486  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7430   005488  B4D8               	btfsc	status,2,c
  7431   00548A  EF49  F02A         	goto	u8761
  7432   00548E  EF4B  F02A         	goto	u8760
  7433   005492                     u8761:
  7434   005492  EF66  F02A         	goto	l8759
  7435   005496                     u8760:
  7436   005496  0E2D               	movlw	45
  7437   005498  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7438   00549A  B4D8               	btfsc	status,2,c
  7439   00549C  EF52  F02A         	goto	u8771
  7440   0054A0  EF54  F02A         	goto	u8770
  7441   0054A4                     u8771:
  7442   0054A4  EF66  F02A         	goto	l8759
  7443   0054A8                     u8770:
  7444   0054A8  0E2A               	movlw	42
  7445   0054AA  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7446   0054AC  B4D8               	btfsc	status,2,c
  7447   0054AE  EF5B  F02A         	goto	u8781
  7448   0054B2  EF5D  F02A         	goto	u8780
  7449   0054B6                     u8781:
  7450   0054B6  EF66  F02A         	goto	l8759
  7451   0054BA                     u8780:
  7452   0054BA  0E2F               	movlw	47
  7453   0054BC  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7454   0054BE  A4D8               	btfss	status,2,c
  7455   0054C0  EF64  F02A         	goto	u8791
  7456   0054C4  EF66  F02A         	goto	u8790
  7457   0054C8                     u8791:
  7458   0054C8  EFDA  F02A         	goto	l8773
  7459   0054CC                     u8790:
  7460   0054CC                     l8759:
  7461                           
  7462                           ;calculator_function/calculator_functions.c: 91:                 if(num[0] == 0){
  7463   0054CC  C01D  FFD9         	movff	get_third_number_and_third_operartion@num,fsr2l
  7464   0054D0  C01E  FFDA         	movff	get_third_number_and_third_operartion@num+1,fsr2h
  7465   0054D4  50DF               	movf	indf2,w,c
  7466   0054D6  A4D8               	btfss	status,2,c
  7467   0054D8  EF70  F02A         	goto	u8801
  7468   0054DC  EF72  F02A         	goto	u8800
  7469   0054E0                     u8801:
  7470   0054E0  EFA6  F02A         	goto	l8767
  7471   0054E4                     u8800:
  7472   0054E4                     
  7473                           ;calculator_function/calculator_functions.c: 92:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"syntax error !");
  7474   0054E4  0EF9               	movlw	low _lcd1
  7475   0054E6  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7476   0054E8  0E04               	movlw	4
  7477   0054EA  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7478   0054EC  0E01               	movlw	1
  7479   0054EE  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7480   0054F0  0EB6               	movlw	low STR_1
  7481   0054F2  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7482   0054F4  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7483   0054F6  A4D8               	btfss	status,2,c
  7484   0054F8  0E10               	movlw	high __smallconst
  7485   0054FA  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7486   0054FC  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7487   005500                     
  7488                           ;calculator_function/calculator_functions.c: 93:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7489   005500  0E06               	movlw	6
  7490   005502  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7491   005504  0E13               	movlw	19
  7492   005506  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7493   005508  0EAE               	movlw	174
  7494   00550A                     u13507:
  7495   00550A  2EE8               	decfsz	wreg,f,c
  7496   00550C  D7FE               	bra	u13507
  7497   00550E  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7498   005510  D7FC               	bra	u13507
  7499   005512  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7500   005514  D7FA               	bra	u13507
  7501   005516                     
  7502                           ;calculator_function/calculator_functions.c: 94:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"                  ");
  7503   005516  0EF9               	movlw	low _lcd1
  7504   005518  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7505   00551A  0E04               	movlw	4
  7506   00551C  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7507   00551E  0E01               	movlw	1
  7508   005520  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7509   005522  0E7A               	movlw	low (STR_8+9)
  7510   005524  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7511   005526  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7512   005528  A4D8               	btfss	status,2,c
  7513   00552A  0E10               	movlw	high __smallconst
  7514   00552C  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7515   00552E  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7516                           
  7517                           ;calculator_function/calculator_functions.c: 95:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7518   005532  0E06               	movlw	6
  7519   005534  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7520   005536  0E13               	movlw	19
  7521   005538  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7522   00553A  0EAE               	movlw	174
  7523   00553C                     u13517:
  7524   00553C  2EE8               	decfsz	wreg,f,c
  7525   00553E  D7FE               	bra	u13517
  7526   005540  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7527   005542  D7FC               	bra	u13517
  7528   005544  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7529   005546  D7FA               	bra	u13517
  7530                           
  7531                           ;calculator_function/calculator_functions.c: 96:                 }
  7532   005548  EFFA  F029         	goto	l8739
  7533   00554C                     l8767:
  7534                           
  7535                           ;calculator_function/calculator_functions.c: 98:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"hint:max 2 operation!!");
  7536   00554C  0EF9               	movlw	low _lcd1
  7537   00554E  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7538   005550  0E04               	movlw	4
  7539   005552  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7540   005554  0E01               	movlw	1
  7541   005556  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7542   005558  0E8D               	movlw	low STR_7
  7543   00555A  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7544   00555C  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7545   00555E  A4D8               	btfss	status,2,c
  7546   005560  0E10               	movlw	high __smallconst
  7547   005562  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7548   005564  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7549   005568                     
  7550                           ;calculator_function/calculator_functions.c: 99:                  _delay((unsigned long)
      +                          ((500)*(8000000ul/4000.0)));
  7551   005568  0E06               	movlw	6
  7552   00556A  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7553   00556C  0E13               	movlw	19
  7554   00556E  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7555   005570  0EAE               	movlw	174
  7556   005572                     u13527:
  7557   005572  2EE8               	decfsz	wreg,f,c
  7558   005574  D7FE               	bra	u13527
  7559   005576  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7560   005578  D7FC               	bra	u13527
  7561   00557A  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7562   00557C  D7FA               	bra	u13527
  7563   00557E                     
  7564                           ;calculator_function/calculator_functions.c: 100:                  lcd_4bit_send_string_
      +                          pos(&lcd1,4,1,"                           ");
  7565   00557E  0EF9               	movlw	low _lcd1
  7566   005580  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7567   005582  0E04               	movlw	4
  7568   005584  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7569   005586  0E01               	movlw	1
  7570   005588  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7571   00558A  0E71               	movlw	low STR_8
  7572   00558C  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7573   00558E  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7574   005590  A4D8               	btfss	status,2,c
  7575   005592  0E10               	movlw	high __smallconst
  7576   005594  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7577   005596  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7578                           
  7579                           ;calculator_function/calculator_functions.c: 101:                  _delay((unsigned long
      +                          )((500)*(8000000ul/4000.0)));
  7580   00559A  0E06               	movlw	6
  7581   00559C  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7582   00559E  0E13               	movlw	19
  7583   0055A0  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7584   0055A2  0EAE               	movlw	174
  7585   0055A4                     u13537:
  7586   0055A4  2EE8               	decfsz	wreg,f,c
  7587   0055A6  D7FE               	bra	u13537
  7588   0055A8  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7589   0055AA  D7FC               	bra	u13537
  7590   0055AC  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7591   0055AE  D7FA               	bra	u13537
  7592   0055B0  EFFA  F029         	goto	l8739
  7593   0055B4                     l8773:
  7594   0055B4  0E3D               	movlw	61
  7595   0055B6  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7596   0055B8  A4D8               	btfss	status,2,c
  7597   0055BA  EFE1  F02A         	goto	u8811
  7598   0055BE  EFE3  F02A         	goto	u8810
  7599   0055C2                     u8811:
  7600   0055C2  EFFB  F02A         	goto	l8783
  7601   0055C6                     u8810:
  7602   0055C6                     
  7603                           ;calculator_function/calculator_functions.c: 106:                 *operation = keypad_va
      +                          lue;
  7604   0055C6  5021               	movf	get_third_number_and_third_operartion@operation^0,w,c
  7605   0055C8  6ED9               	movwf	fsr2l,c
  7606   0055CA  6ADA               	clrf	fsr2h,c
  7607   0055CC  C024  FFDF         	movff	get_third_number_and_third_operartion@keypad_value,indf2
  7608   0055D0                     
  7609                           ;calculator_function/calculator_functions.c: 107:                 lcd_4bit_send_char_dat
      +                          a_pos(&lcd1,1,*lcd_counter,keypad_value);
  7610   0055D0  0EF9               	movlw	low _lcd1
  7611   0055D2  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7612   0055D4  0E01               	movlw	1
  7613   0055D6  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7614   0055D8  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7615   0055DA  6ED9               	movwf	fsr2l,c
  7616   0055DC  6ADA               	clrf	fsr2h,c
  7617   0055DE  50DF               	movf	indf2,w,c
  7618   0055E0  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7619   0055E2  C024  F01B         	movff	get_third_number_and_third_operartion@keypad_value,lcd_4bit_send_char_data_pos@da
      +                          ta
  7620   0055E6  EC4E  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7621   0055EA                     
  7622                           ;calculator_function/calculator_functions.c: 108:                 (*lcd_counter)++;
  7623   0055EA  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7624   0055EC  6ED9               	movwf	fsr2l,c
  7625   0055EE  6ADA               	clrf	fsr2h,c
  7626   0055F0  2ADF               	incf	indf2,f,c
  7627                           
  7628                           ;calculator_function/calculator_functions.c: 109:                 break;
  7629   0055F2  EF5E  F02B         	goto	l92
  7630   0055F6                     l8783:
  7631                           
  7632                           ;calculator_function/calculator_functions.c: 112:                 if((*counter_num) < 4)
      +                          {
  7633   0055F6  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7634   0055F8  6ED9               	movwf	fsr2l,c
  7635   0055FA  6ADA               	clrf	fsr2h,c
  7636   0055FC  0E04               	movlw	4
  7637   0055FE  60DF               	cpfslt	indf2,c
  7638   005600  EF04  F02B         	goto	u8821
  7639   005604  EF06  F02B         	goto	u8820
  7640   005608                     u8821:
  7641   005608  EF2A  F02B         	goto	l8793
  7642   00560C                     u8820:
  7643   00560C                     
  7644                           ;calculator_function/calculator_functions.c: 113:                     num[*counter_num] 
      +                          = keypad_value;
  7645   00560C  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7646   00560E  6ED9               	movwf	fsr2l,c
  7647   005610  6ADA               	clrf	fsr2h,c
  7648   005612  50DF               	movf	indf2,w,c
  7649   005614  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7650   005616  5022               	movf	??_get_third_number_and_third_operartion^0,w,c
  7651   005618  241D               	addwf	get_third_number_and_third_operartion@num^0,w,c
  7652   00561A  6ED9               	movwf	fsr2l,c
  7653   00561C  0E00               	movlw	0
  7654   00561E  201E               	addwfc	(get_third_number_and_third_operartion@num+1)^0,w,c
  7655   005620  6EDA               	movwf	fsr2h,c
  7656   005622  C024  FFDF         	movff	get_third_number_and_third_operartion@keypad_value,indf2
  7657   005626                     
  7658                           ;calculator_function/calculator_functions.c: 114:                     lcd_4bit_send_char
      +                          _data_pos(&lcd1,1,*lcd_counter,keypad_value);
  7659   005626  0EF9               	movlw	low _lcd1
  7660   005628  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7661   00562A  0E01               	movlw	1
  7662   00562C  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7663   00562E  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7664   005630  6ED9               	movwf	fsr2l,c
  7665   005632  6ADA               	clrf	fsr2h,c
  7666   005634  50DF               	movf	indf2,w,c
  7667   005636  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7668   005638  C024  F01B         	movff	get_third_number_and_third_operartion@keypad_value,lcd_4bit_send_char_data_pos@da
      +                          ta
  7669   00563C  EC4E  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7670   005640                     
  7671                           ;calculator_function/calculator_functions.c: 115:                     (*lcd_counter)++;
  7672   005640  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7673   005642  6ED9               	movwf	fsr2l,c
  7674   005644  6ADA               	clrf	fsr2h,c
  7675   005646  2ADF               	incf	indf2,f,c
  7676   005648                     
  7677                           ;calculator_function/calculator_functions.c: 116:                     (*counter_num)++;
  7678   005648  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7679   00564A  6ED9               	movwf	fsr2l,c
  7680   00564C  6ADA               	clrf	fsr2h,c
  7681   00564E  2ADF               	incf	indf2,f,c
  7682                           
  7683                           ;calculator_function/calculator_functions.c: 117:                 }
  7684   005650  EFFA  F029         	goto	l8739
  7685   005654                     l8793:
  7686                           
  7687                           ;calculator_function/calculator_functions.c: 119:                     lcd_4bit_send_stri
      +                          ng_pos(&lcd1,4,1,"hint:max 4 digits");
  7688   005654  0EF9               	movlw	low _lcd1
  7689   005656  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7690   005658  0E04               	movlw	4
  7691   00565A  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7692   00565C  0E01               	movlw	1
  7693   00565E  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7694   005660  0EA4               	movlw	low STR_3
  7695   005662  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7696   005664  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7697   005666  A4D8               	btfss	status,2,c
  7698   005668  0E10               	movlw	high __smallconst
  7699   00566A  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7700   00566C  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7701   005670                     
  7702                           ;calculator_function/calculator_functions.c: 120:                      _delay((unsigned 
      +                          long)((500)*(8000000ul/4000.0)));
  7703   005670  0E06               	movlw	6
  7704   005672  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7705   005674  0E13               	movlw	19
  7706   005676  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7707   005678  0EAE               	movlw	174
  7708   00567A                     u13547:
  7709   00567A  2EE8               	decfsz	wreg,f,c
  7710   00567C  D7FE               	bra	u13547
  7711   00567E  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7712   005680  D7FC               	bra	u13547
  7713   005682  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7714   005684  D7FA               	bra	u13547
  7715   005686                     
  7716                           ;calculator_function/calculator_functions.c: 121:                      lcd_4bit_send_str
      +                          ing_pos(&lcd1,4,1,"                  ");
  7717   005686  0EF9               	movlw	low _lcd1
  7718   005688  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7719   00568A  0E04               	movlw	4
  7720   00568C  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7721   00568E  0E01               	movlw	1
  7722   005690  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7723   005692  0E7A               	movlw	low (STR_8+9)
  7724   005694  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7725   005696  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7726   005698  A4D8               	btfss	status,2,c
  7727   00569A  0E10               	movlw	high __smallconst
  7728   00569C  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7729   00569E  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7730                           
  7731                           ;calculator_function/calculator_functions.c: 122:                      _delay((unsigned 
      +                          long)((500)*(8000000ul/4000.0)));
  7732   0056A2  0E06               	movlw	6
  7733   0056A4  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7734   0056A6  0E13               	movlw	19
  7735   0056A8  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7736   0056AA  0EAE               	movlw	174
  7737   0056AC                     u13557:
  7738   0056AC  2EE8               	decfsz	wreg,f,c
  7739   0056AE  D7FE               	bra	u13557
  7740   0056B0  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7741   0056B2  D7FC               	bra	u13557
  7742   0056B4  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7743   0056B6  D7FA               	bra	u13557
  7744   0056B8  EFFA  F029         	goto	l8739
  7745   0056BC                     l92:
  7746   0056BC  0012               	return		;funcret
  7747   0056BE                     __end_of_get_third_number_and_third_operartion:
  7748                           	callstack 0
  7749                           
  7750 ;; *************** function _get_number_and_operartion *****************
  7751 ;; Defined at:
  7752 ;;		line 17 in file "calculator_function/calculator_functions.c"
  7753 ;; Parameters:    Size  Location     Type
  7754 ;;  num             2   28[COMRAM] PTR unsigned char 
  7755 ;;		 -> num2(4), num1(4), 
  7756 ;;  counter_num     1   30[COMRAM] PTR unsigned char 
  7757 ;;		 -> counter_num2(1), counter_num1(1), 
  7758 ;;  lcd_counter     1   31[COMRAM] PTR unsigned char 
  7759 ;;		 -> lcd_counter(1), 
  7760 ;;  operation       1   32[COMRAM] PTR unsigned char 
  7761 ;;		 -> operation2(1), operation(1), 
  7762 ;; Auto vars:     Size  Location     Type
  7763 ;;  keypad_value    1   35[COMRAM] unsigned char 
  7764 ;; Return value:  Size  Location     Type
  7765 ;;                  1    wreg      void 
  7766 ;; Registers used:
  7767 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7768 ;; Tracked objects:
  7769 ;;		On entry : 0/0
  7770 ;;		On exit  : 0/0
  7771 ;;		Unchanged: 0/0
  7772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7773 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7774 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7775 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7776 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7777 ;;Total ram usage:        8 bytes
  7778 ;; Hardware stack levels used: 1
  7779 ;; Hardware stack levels required when called: 5
  7780 ;; This function calls:
  7781 ;;		_ecu_keypad_get_value
  7782 ;;		_lcd_4bit_send_char_data_pos
  7783 ;;		_lcd_4bit_send_string_pos
  7784 ;; This function is called by:
  7785 ;;		_main
  7786 ;; This function uses a non-reentrant model
  7787 ;;
  7788                           
  7789                           	psect	text31
  7790   005944                     __ptext31:
  7791                           	callstack 0
  7792   005944                     _get_number_and_operartion:
  7793                           	callstack 25
  7794   005944                     
  7795                           ;calculator_function/calculator_functions.c: 17: void get_number_and_operartion(uint8 *n
      +                          um,uint8 *counter_num,;calculator_function/calculator_functions.c: 18:                  
      +                                        uint8 *lcd_counter,uint8 *operation);calculator_function/calculator_functi
      +                          ons.c: 19: {;calculator_function/calculator_functions.c: 20: uint8 keypad_value = 0;
  7796   005944  0E00               	movlw	0
  7797   005946  6E24               	movwf	get_number_and_operartion@keypad_value^0,c
  7798   005948                     l8685:
  7799                           
  7800                           ;calculator_function/calculator_functions.c: 23:         ecu_keypad_get_value(&keypad,&k
      +                          eypad_value);
  7801   005948  0ED6               	movlw	low _keypad
  7802   00594A  6E0B               	movwf	ecu_keypad_get_value@keypad^0,c
  7803   00594C  0E01               	movlw	high _keypad
  7804   00594E  6E0C               	movwf	(ecu_keypad_get_value@keypad+1)^0,c
  7805   005950  0E24               	movlw	low get_number_and_operartion@keypad_value
  7806   005952  6E0D               	movwf	ecu_keypad_get_value@value^0,c
  7807   005954  EC5B  F033         	call	_ecu_keypad_get_value	;wreg free
  7808   005958                     
  7809                           ;calculator_function/calculator_functions.c: 24:         _delay((unsigned long)((150)*(8
      +                          000000ul/4000.0)));
  7810   005958  0E02               	movlw	2
  7811   00595A  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7812   00595C  0E86               	movlw	134
  7813   00595E  6E22               	movwf	??_get_number_and_operartion^0,c
  7814   005960  0E99               	movlw	153
  7815   005962                     u13567:
  7816   005962  2EE8               	decfsz	wreg,f,c
  7817   005964  D7FE               	bra	u13567
  7818   005966  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7819   005968  D7FC               	bra	u13567
  7820   00596A  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7821   00596C  D7FA               	bra	u13567
  7822   00596E  0000               	nop	
  7823   005970                     
  7824                           ;calculator_function/calculator_functions.c: 25:         }while((keypad_value == 0) );
  7825   005970  5024               	movf	get_number_and_operartion@keypad_value^0,w,c
  7826   005972  B4D8               	btfsc	status,2,c
  7827   005974  EFBE  F02C         	goto	u8651
  7828   005978  EFC0  F02C         	goto	u8650
  7829   00597C                     u8651:
  7830   00597C  EFA4  F02C         	goto	l8685
  7831   005980                     u8650:
  7832   005980                     
  7833                           ;calculator_function/calculator_functions.c: 27:         if(keypad_value == '#'){
  7834   005980  0E23               	movlw	35
  7835   005982  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7836   005984  A4D8               	btfss	status,2,c
  7837   005986  EFC7  F02C         	goto	u8661
  7838   00598A  EFC9  F02C         	goto	u8660
  7839   00598E                     u8661:
  7840   00598E  EFEC  F02C         	goto	l8697
  7841   005992                     u8660:
  7842   005992                     
  7843                           ;calculator_function/calculator_functions.c: 28:            (*counter_num)--;
  7844   005992  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7845   005994  6ED9               	movwf	fsr2l,c
  7846   005996  6ADA               	clrf	fsr2h,c
  7847   005998  06DF               	decf	indf2,f,c
  7848                           
  7849                           ;calculator_function/calculator_functions.c: 29:            num[*counter_num] = '\0';
  7850   00599A  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7851   00599C  6ED9               	movwf	fsr2l,c
  7852   00599E  6ADA               	clrf	fsr2h,c
  7853   0059A0  50DF               	movf	indf2,w,c
  7854   0059A2  6E22               	movwf	??_get_number_and_operartion^0,c
  7855   0059A4  5022               	movf	??_get_number_and_operartion^0,w,c
  7856   0059A6  241D               	addwf	get_number_and_operartion@num^0,w,c
  7857   0059A8  6ED9               	movwf	fsr2l,c
  7858   0059AA  0E00               	movlw	0
  7859   0059AC  201E               	addwfc	(get_number_and_operartion@num+1)^0,w,c
  7860   0059AE  6EDA               	movwf	fsr2h,c
  7861   0059B0  6ADF               	clrf	indf2,c
  7862                           
  7863                           ;calculator_function/calculator_functions.c: 30:            (*lcd_counter)--;
  7864   0059B2  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7865   0059B4  6ED9               	movwf	fsr2l,c
  7866   0059B6  6ADA               	clrf	fsr2h,c
  7867   0059B8  06DF               	decf	indf2,f,c
  7868   0059BA                     
  7869                           ;calculator_function/calculator_functions.c: 31:            lcd_4bit_send_char_data_pos(
      +                          &lcd1,1,*lcd_counter,' ');
  7870   0059BA  0EF9               	movlw	low _lcd1
  7871   0059BC  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7872   0059BE  0E01               	movlw	1
  7873   0059C0  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7874   0059C2  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7875   0059C4  6ED9               	movwf	fsr2l,c
  7876   0059C6  6ADA               	clrf	fsr2h,c
  7877   0059C8  50DF               	movf	indf2,w,c
  7878   0059CA  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7879   0059CC  0E20               	movlw	32
  7880   0059CE  6E1B               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  7881   0059D0  EC4E  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7882                           
  7883                           ;calculator_function/calculator_functions.c: 33:         }
  7884   0059D4  EFA4  F02C         	goto	l8685
  7885   0059D8                     l8697:
  7886                           
  7887                           ;calculator_function/calculator_functions.c: 35:             if((keypad_value == '+'||ke
      +                          ypad_value == '-'||keypad_value == '*'||keypad_value == '/'||keypad_value == '=')){
  7888   0059D8  0E2B               	movlw	43
  7889   0059DA  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7890   0059DC  B4D8               	btfsc	status,2,c
  7891   0059DE  EFF3  F02C         	goto	u8671
  7892   0059E2  EFF5  F02C         	goto	u8670
  7893   0059E6                     u8671:
  7894   0059E6  EF19  F02D         	goto	l8707
  7895   0059EA                     u8670:
  7896   0059EA  0E2D               	movlw	45
  7897   0059EC  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7898   0059EE  B4D8               	btfsc	status,2,c
  7899   0059F0  EFFC  F02C         	goto	u8681
  7900   0059F4  EFFE  F02C         	goto	u8680
  7901   0059F8                     u8681:
  7902   0059F8  EF19  F02D         	goto	l8707
  7903   0059FC                     u8680:
  7904   0059FC  0E2A               	movlw	42
  7905   0059FE  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7906   005A00  B4D8               	btfsc	status,2,c
  7907   005A02  EF05  F02D         	goto	u8691
  7908   005A06  EF07  F02D         	goto	u8690
  7909   005A0A                     u8691:
  7910   005A0A  EF19  F02D         	goto	l8707
  7911   005A0E                     u8690:
  7912   005A0E  0E2F               	movlw	47
  7913   005A10  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7914   005A12  B4D8               	btfsc	status,2,c
  7915   005A14  EF0E  F02D         	goto	u8701
  7916   005A18  EF10  F02D         	goto	u8700
  7917   005A1C                     u8701:
  7918   005A1C  EF19  F02D         	goto	l8707
  7919   005A20                     u8700:
  7920   005A20  0E3D               	movlw	61
  7921   005A22  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7922   005A24  A4D8               	btfss	status,2,c
  7923   005A26  EF17  F02D         	goto	u8711
  7924   005A2A  EF19  F02D         	goto	u8710
  7925   005A2E                     u8711:
  7926   005A2E  EF71  F02D         	goto	l8721
  7927   005A32                     u8710:
  7928   005A32                     l8707:
  7929                           
  7930                           ;calculator_function/calculator_functions.c: 36:                 if(num[0] == 0){
  7931   005A32  C01D  FFD9         	movff	get_number_and_operartion@num,fsr2l
  7932   005A36  C01E  FFDA         	movff	get_number_and_operartion@num+1,fsr2h
  7933   005A3A  50DF               	movf	indf2,w,c
  7934   005A3C  A4D8               	btfss	status,2,c
  7935   005A3E  EF23  F02D         	goto	u8721
  7936   005A42  EF25  F02D         	goto	u8720
  7937   005A46                     u8721:
  7938   005A46  EF59  F02D         	goto	l8715
  7939   005A4A                     u8720:
  7940   005A4A                     
  7941                           ;calculator_function/calculator_functions.c: 37:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"syntax error !");
  7942   005A4A  0EF9               	movlw	low _lcd1
  7943   005A4C  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7944   005A4E  0E04               	movlw	4
  7945   005A50  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7946   005A52  0E01               	movlw	1
  7947   005A54  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7948   005A56  0EB6               	movlw	low STR_1
  7949   005A58  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7950   005A5A  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7951   005A5C  A4D8               	btfss	status,2,c
  7952   005A5E  0E10               	movlw	high __smallconst
  7953   005A60  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7954   005A62  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7955   005A66                     
  7956                           ;calculator_function/calculator_functions.c: 38:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7957   005A66  0E06               	movlw	6
  7958   005A68  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7959   005A6A  0E13               	movlw	19
  7960   005A6C  6E22               	movwf	??_get_number_and_operartion^0,c
  7961   005A6E  0EAE               	movlw	174
  7962   005A70                     u13577:
  7963   005A70  2EE8               	decfsz	wreg,f,c
  7964   005A72  D7FE               	bra	u13577
  7965   005A74  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7966   005A76  D7FC               	bra	u13577
  7967   005A78  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7968   005A7A  D7FA               	bra	u13577
  7969   005A7C                     
  7970                           ;calculator_function/calculator_functions.c: 39:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"                  ");
  7971   005A7C  0EF9               	movlw	low _lcd1
  7972   005A7E  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7973   005A80  0E04               	movlw	4
  7974   005A82  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7975   005A84  0E01               	movlw	1
  7976   005A86  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7977   005A88  0E7A               	movlw	low (STR_8+9)
  7978   005A8A  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7979   005A8C  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7980   005A8E  A4D8               	btfss	status,2,c
  7981   005A90  0E10               	movlw	high __smallconst
  7982   005A92  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7983   005A94  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7984                           
  7985                           ;calculator_function/calculator_functions.c: 40:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7986   005A98  0E06               	movlw	6
  7987   005A9A  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7988   005A9C  0E13               	movlw	19
  7989   005A9E  6E22               	movwf	??_get_number_and_operartion^0,c
  7990   005AA0  0EAE               	movlw	174
  7991   005AA2                     u13587:
  7992   005AA2  2EE8               	decfsz	wreg,f,c
  7993   005AA4  D7FE               	bra	u13587
  7994   005AA6  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7995   005AA8  D7FC               	bra	u13587
  7996   005AAA  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7997   005AAC  D7FA               	bra	u13587
  7998                           
  7999                           ;calculator_function/calculator_functions.c: 41:                 }
  8000   005AAE  EFA4  F02C         	goto	l8685
  8001   005AB2                     l8715:
  8002                           
  8003                           ;calculator_function/calculator_functions.c: 43:                 *operation = keypad_val
      +                          ue;
  8004   005AB2  5021               	movf	get_number_and_operartion@operation^0,w,c
  8005   005AB4  6ED9               	movwf	fsr2l,c
  8006   005AB6  6ADA               	clrf	fsr2h,c
  8007   005AB8  C024  FFDF         	movff	get_number_and_operartion@keypad_value,indf2
  8008   005ABC                     
  8009                           ;calculator_function/calculator_functions.c: 44:                 lcd_4bit_send_char_data
      +                          _pos(&lcd1,1,*lcd_counter,keypad_value);
  8010   005ABC  0EF9               	movlw	low _lcd1
  8011   005ABE  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  8012   005AC0  0E01               	movlw	1
  8013   005AC2  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  8014   005AC4  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  8015   005AC6  6ED9               	movwf	fsr2l,c
  8016   005AC8  6ADA               	clrf	fsr2h,c
  8017   005ACA  50DF               	movf	indf2,w,c
  8018   005ACC  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  8019   005ACE  C024  F01B         	movff	get_number_and_operartion@keypad_value,lcd_4bit_send_char_data_pos@data
  8020   005AD2  EC4E  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  8021   005AD6                     
  8022                           ;calculator_function/calculator_functions.c: 45:                 (*lcd_counter)++;
  8023   005AD6  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  8024   005AD8  6ED9               	movwf	fsr2l,c
  8025   005ADA  6ADA               	clrf	fsr2h,c
  8026   005ADC  2ADF               	incf	indf2,f,c
  8027                           
  8028                           ;calculator_function/calculator_functions.c: 46:                 break;
  8029   005ADE  EFD4  F02D         	goto	l72
  8030   005AE2                     l8721:
  8031                           
  8032                           ;calculator_function/calculator_functions.c: 51:                 if((*counter_num) < 4){
  8033   005AE2  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  8034   005AE4  6ED9               	movwf	fsr2l,c
  8035   005AE6  6ADA               	clrf	fsr2h,c
  8036   005AE8  0E04               	movlw	4
  8037   005AEA  60DF               	cpfslt	indf2,c
  8038   005AEC  EF7A  F02D         	goto	u8731
  8039   005AF0  EF7C  F02D         	goto	u8730
  8040   005AF4                     u8731:
  8041   005AF4  EFA0  F02D         	goto	l8731
  8042   005AF8                     u8730:
  8043   005AF8                     
  8044                           ;calculator_function/calculator_functions.c: 52:                         num[*counter_nu
      +                          m] = keypad_value;
  8045   005AF8  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  8046   005AFA  6ED9               	movwf	fsr2l,c
  8047   005AFC  6ADA               	clrf	fsr2h,c
  8048   005AFE  50DF               	movf	indf2,w,c
  8049   005B00  6E22               	movwf	??_get_number_and_operartion^0,c
  8050   005B02  5022               	movf	??_get_number_and_operartion^0,w,c
  8051   005B04  241D               	addwf	get_number_and_operartion@num^0,w,c
  8052   005B06  6ED9               	movwf	fsr2l,c
  8053   005B08  0E00               	movlw	0
  8054   005B0A  201E               	addwfc	(get_number_and_operartion@num+1)^0,w,c
  8055   005B0C  6EDA               	movwf	fsr2h,c
  8056   005B0E  C024  FFDF         	movff	get_number_and_operartion@keypad_value,indf2
  8057   005B12                     
  8058                           ;calculator_function/calculator_functions.c: 53:                         lcd_4bit_send_c
      +                          har_data_pos(&lcd1,1,*lcd_counter,keypad_value);
  8059   005B12  0EF9               	movlw	low _lcd1
  8060   005B14  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  8061   005B16  0E01               	movlw	1
  8062   005B18  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  8063   005B1A  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  8064   005B1C  6ED9               	movwf	fsr2l,c
  8065   005B1E  6ADA               	clrf	fsr2h,c
  8066   005B20  50DF               	movf	indf2,w,c
  8067   005B22  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  8068   005B24  C024  F01B         	movff	get_number_and_operartion@keypad_value,lcd_4bit_send_char_data_pos@data
  8069   005B28  EC4E  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  8070   005B2C                     
  8071                           ;calculator_function/calculator_functions.c: 54:                         (*lcd_counter)+
      +                          +;
  8072   005B2C  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  8073   005B2E  6ED9               	movwf	fsr2l,c
  8074   005B30  6ADA               	clrf	fsr2h,c
  8075   005B32  2ADF               	incf	indf2,f,c
  8076   005B34                     
  8077                           ;calculator_function/calculator_functions.c: 55:                         (*counter_num)+
      +                          +;
  8078   005B34  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  8079   005B36  6ED9               	movwf	fsr2l,c
  8080   005B38  6ADA               	clrf	fsr2h,c
  8081   005B3A  2ADF               	incf	indf2,f,c
  8082                           
  8083                           ;calculator_function/calculator_functions.c: 56:                     }
  8084   005B3C  EFA4  F02C         	goto	l8685
  8085   005B40                     l8731:
  8086                           
  8087                           ;calculator_function/calculator_functions.c: 58:                     lcd_4bit_send_strin
      +                          g_pos(&lcd1,4,1,"hint:max 4 digits");
  8088   005B40  0EF9               	movlw	low _lcd1
  8089   005B42  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  8090   005B44  0E04               	movlw	4
  8091   005B46  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  8092   005B48  0E01               	movlw	1
  8093   005B4A  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  8094   005B4C  0EA4               	movlw	low STR_3
  8095   005B4E  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  8096   005B50  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  8097   005B52  A4D8               	btfss	status,2,c
  8098   005B54  0E10               	movlw	high __smallconst
  8099   005B56  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  8100   005B58  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  8101   005B5C                     
  8102                           ;calculator_function/calculator_functions.c: 59:                     _delay((unsigned lo
      +                          ng)((500)*(8000000ul/4000.0)));
  8103   005B5C  0E06               	movlw	6
  8104   005B5E  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  8105   005B60  0E13               	movlw	19
  8106   005B62  6E22               	movwf	??_get_number_and_operartion^0,c
  8107   005B64  0EAE               	movlw	174
  8108   005B66                     u13597:
  8109   005B66  2EE8               	decfsz	wreg,f,c
  8110   005B68  D7FE               	bra	u13597
  8111   005B6A  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  8112   005B6C  D7FC               	bra	u13597
  8113   005B6E  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  8114   005B70  D7FA               	bra	u13597
  8115   005B72                     
  8116                           ;calculator_function/calculator_functions.c: 60:                     lcd_4bit_send_strin
      +                          g_pos(&lcd1,4,1,"                  ");
  8117   005B72  0EF9               	movlw	low _lcd1
  8118   005B74  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  8119   005B76  0E04               	movlw	4
  8120   005B78  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  8121   005B7A  0E01               	movlw	1
  8122   005B7C  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  8123   005B7E  0E7A               	movlw	low (STR_8+9)
  8124   005B80  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  8125   005B82  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  8126   005B84  A4D8               	btfss	status,2,c
  8127   005B86  0E10               	movlw	high __smallconst
  8128   005B88  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  8129   005B8A  EC5A  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  8130                           
  8131                           ;calculator_function/calculator_functions.c: 61:                     _delay((unsigned lo
      +                          ng)((500)*(8000000ul/4000.0)));
  8132   005B8E  0E06               	movlw	6
  8133   005B90  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  8134   005B92  0E13               	movlw	19
  8135   005B94  6E22               	movwf	??_get_number_and_operartion^0,c
  8136   005B96  0EAE               	movlw	174
  8137   005B98                     u13607:
  8138   005B98  2EE8               	decfsz	wreg,f,c
  8139   005B9A  D7FE               	bra	u13607
  8140   005B9C  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  8141   005B9E  D7FC               	bra	u13607
  8142   005BA0  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  8143   005BA2  D7FA               	bra	u13607
  8144   005BA4  EFA4  F02C         	goto	l8685
  8145   005BA8                     l72:
  8146   005BA8  0012               	return		;funcret
  8147   005BAA                     __end_of_get_number_and_operartion:
  8148                           	callstack 0
  8149                           
  8150 ;; *************** function _lcd_4bit_send_string_pos *****************
  8151 ;; Defined at:
  8152 ;;		line 172 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8153 ;; Parameters:    Size  Location     Type
  8154 ;;  lcd             1   23[COMRAM] PTR const struct .
  8155 ;;		 -> lcd1(6), 
  8156 ;;  row             1   24[COMRAM] unsigned char 
  8157 ;;  column          1   25[COMRAM] unsigned char 
  8158 ;;  str             2   26[COMRAM] PTR unsigned char 
  8159 ;;		 -> STR_15(14), send_the_result_to_LCD@result_str(80), STR_10(19), STR_9(18), 
  8160 ;;		 -> STR_8(28), STR_7(23), STR_6(19), STR_5(15), 
  8161 ;;		 -> STR_4(19), STR_3(18), STR_2(19), STR_1(15), 
  8162 ;; Auto vars:     Size  Location     Type
  8163 ;;  ret             1    0        unsigned char 
  8164 ;; Return value:  Size  Location     Type
  8165 ;;                  1    wreg      unsigned char 
  8166 ;; Registers used:
  8167 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8168 ;; Tracked objects:
  8169 ;;		On entry : 0/0
  8170 ;;		On exit  : 0/0
  8171 ;;		Unchanged: 0/0
  8172 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8173 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8174 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8175 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8176 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8177 ;;Total ram usage:        5 bytes
  8178 ;; Hardware stack levels used: 1
  8179 ;; Hardware stack levels required when called: 4
  8180 ;; This function calls:
  8181 ;;		_lcd_4bit_send_char_data
  8182 ;;		_lcd_4bit_set_curser
  8183 ;; This function is called by:
  8184 ;;		_get_number_and_operartion
  8185 ;;		_get_third_number_and_third_operartion
  8186 ;;		_send_the_result_to_LCD
  8187 ;;		_main
  8188 ;; This function uses a non-reentrant model
  8189 ;;
  8190                           
  8191                           	psect	text32
  8192   0072B4                     __ptext32:
  8193                           	callstack 0
  8194   0072B4                     _lcd_4bit_send_string_pos:
  8195                           	callstack 25
  8196   0072B4                     
  8197                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 174:     if(((void*)0) == lcd)
  8198   0072B4  5018               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  8199   0072B6  A4D8               	btfss	status,2,c
  8200   0072B8  EF60  F039         	goto	u8601
  8201   0072BC  EF62  F039         	goto	u8600
  8202   0072C0                     u8601:
  8203   0072C0  EF64  F039         	goto	l8657
  8204   0072C4                     u8600:
  8205   0072C4                     
  8206                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 177:     }
  8207   0072C4  EF9F  F039         	goto	l223
  8208   0072C8                     l8657:
  8209   0072C8  C018  F012         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_curser@lcd
  8210   0072CC  C019  F013         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_curser@row
  8211   0072D0  C01A  F014         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_curser@column
  8212   0072D4  ECC7  F038         	call	_lcd_4bit_set_curser	;wreg free
  8213                           
  8214                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 181:         while(*str)
  8215   0072D8  EF86  F039         	goto	l8663
  8216   0072DC                     l8659:
  8217   0072DC  C018  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  8218   0072E0  C01B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8219   0072E4  C01C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8220   0072E8  0E00               	movlw	low (__smallconst shr (0+16))
  8221   0072EA  6EF8               	movwf	tblptru,c
  8222   0072EC  0E0F               	movlw	(high __ramtop+-1)
  8223   0072EE  64F7               	cpfsgt	tblptrh,c
  8224   0072F0  D003               	bra	u8617
  8225   0072F2  0008               	tblrd		*
  8226   0072F4  50F5               	movf	tablat,w,c
  8227   0072F6  D005               	bra	u8610
  8228   0072F8                     u8617:
  8229   0072F8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8230   0072FC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8231   007300  50EF               	movf	indf0,w,c
  8232   007302                     u8610:
  8233   007302  6E10               	movwf	lcd_4bit_send_char_data@data^0,c
  8234   007304  EC79  F03A         	call	_lcd_4bit_send_char_data	;wreg free
  8235   007308  4A1B               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  8236   00730A  2A1C               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  8237   00730C                     l8663:
  8238                           
  8239                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 181:         while(*str)
  8240   00730C  C01B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8241   007310  C01C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8242   007314  0E00               	movlw	low (__smallconst shr (0+16))
  8243   007316  6EF8               	movwf	tblptru,c
  8244   007318  0E0F               	movlw	(high __ramtop+-1)
  8245   00731A  64F7               	cpfsgt	tblptrh,c
  8246   00731C  D003               	bra	u8627
  8247   00731E  0008               	tblrd		*
  8248   007320  50F5               	movf	tablat,w,c
  8249   007322  D005               	bra	u8620
  8250   007324                     u8627:
  8251   007324  CFF6 FFE9          	movff	tblptrl,fsr0l
  8252   007328  CFF7 FFEA          	movff	tblptrh,fsr0h
  8253   00732C  50EF               	movf	indf0,w,c
  8254   00732E                     u8620:
  8255   00732E  0900               	iorlw	0
  8256   007330  A4D8               	btfss	status,2,c
  8257   007332  EF9D  F039         	goto	u8631
  8258   007336  EF9F  F039         	goto	u8630
  8259   00733A                     u8631:
  8260   00733A  EF6E  F039         	goto	l8659
  8261   00733E                     u8630:
  8262   00733E                     l223:
  8263   00733E  0012               	return		;funcret
  8264   007340                     __end_of_lcd_4bit_send_string_pos:
  8265                           	callstack 0
  8266                           
  8267 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  8268 ;; Defined at:
  8269 ;;		line 125 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8270 ;; Parameters:    Size  Location     Type
  8271 ;;  lcd             1   23[COMRAM] PTR const struct .
  8272 ;;		 -> lcd1(6), 
  8273 ;;  row             1   24[COMRAM] unsigned char 
  8274 ;;  column          1   25[COMRAM] unsigned char 
  8275 ;;  data            1   26[COMRAM] unsigned char 
  8276 ;; Auto vars:     Size  Location     Type
  8277 ;;  ret             1   27[COMRAM] unsigned char 
  8278 ;; Return value:  Size  Location     Type
  8279 ;;                  1    wreg      unsigned char 
  8280 ;; Registers used:
  8281 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8282 ;; Tracked objects:
  8283 ;;		On entry : 0/0
  8284 ;;		On exit  : 0/0
  8285 ;;		Unchanged: 0/0
  8286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8288 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8289 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8290 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8291 ;;Total ram usage:        5 bytes
  8292 ;; Hardware stack levels used: 1
  8293 ;; Hardware stack levels required when called: 4
  8294 ;; This function calls:
  8295 ;;		_lcd_4bit_send_char_data
  8296 ;;		_lcd_4bit_set_curser
  8297 ;; This function is called by:
  8298 ;;		_get_number_and_operartion
  8299 ;;		_get_third_number_and_third_operartion
  8300 ;;		_lcd_4bit_send_custome_char
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           
  8304                           	psect	text33
  8305   00789C                     __ptext33:
  8306                           	callstack 0
  8307   00789C                     _lcd_4bit_send_char_data_pos:
  8308                           	callstack 25
  8309   00789C                     
  8310                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 127:     if(((void*)0) == lcd)
  8311   00789C  5018               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  8312   00789E  A4D8               	btfss	status,2,c
  8313   0078A0  EF54  F03C         	goto	u8591
  8314   0078A4  EF56  F03C         	goto	u8590
  8315   0078A8                     u8591:
  8316   0078A8  EF5A  F03C         	goto	l8647
  8317   0078AC                     u8590:
  8318   0078AC                     
  8319                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 128:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 129:      
      +                             ret = (STD_ReturnType)0x00;
  8320   0078AC  0E00               	movlw	0
  8321   0078AE  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8322                           
  8323                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 130:     }
  8324   0078B0  EF6A  F03C         	goto	l8649
  8325   0078B4                     l8647:
  8326                           
  8327                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 132:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 133:      
      +                             ret = lcd_4bit_set_curser(lcd,row,column);
  8328   0078B4  C018  F012         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_curser@lcd
  8329   0078B8  C019  F013         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_curser@row
  8330   0078BC  C01A  F014         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_curser@column
  8331   0078C0  ECC7  F038         	call	_lcd_4bit_set_curser	;wreg free
  8332   0078C4  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8333                           
  8334                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 134:         ret = lcd_4bit_send_char_data(lcd,data);
  8335   0078C6  C018  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  8336   0078CA  C01B  F010         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  8337   0078CE  EC79  F03A         	call	_lcd_4bit_send_char_data	;wreg free
  8338   0078D2  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8339   0078D4                     l8649:
  8340                           
  8341                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 136:      return ret;
  8342   0078D4  501C               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  8343   0078D6  0012               	return		;funcret
  8344   0078D8                     __end_of_lcd_4bit_send_char_data_pos:
  8345                           	callstack 0
  8346                           
  8347 ;; *************** function _lcd_4bit_set_curser *****************
  8348 ;; Defined at:
  8349 ;;		line 568 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8350 ;; Parameters:    Size  Location     Type
  8351 ;;  lcd             1   17[COMRAM] PTR const struct .
  8352 ;;		 -> lcd1(6), 
  8353 ;;  row             1   18[COMRAM] unsigned char 
  8354 ;;  column          1   19[COMRAM] unsigned char 
  8355 ;; Auto vars:     Size  Location     Type
  8356 ;;  ret             1   22[COMRAM] unsigned char 
  8357 ;; Return value:  Size  Location     Type
  8358 ;;                  1    wreg      unsigned char 
  8359 ;; Registers used:
  8360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8361 ;; Tracked objects:
  8362 ;;		On entry : 0/0
  8363 ;;		On exit  : 0/0
  8364 ;;		Unchanged: 0/0
  8365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8366 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8367 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8368 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8369 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8370 ;;Total ram usage:        6 bytes
  8371 ;; Hardware stack levels used: 1
  8372 ;; Hardware stack levels required when called: 3
  8373 ;; This function calls:
  8374 ;;		_lcd_4bit_send_command
  8375 ;; This function is called by:
  8376 ;;		_lcd_4bit_send_char_data_pos
  8377 ;;		_lcd_4bit_send_string_pos
  8378 ;; This function uses a non-reentrant model
  8379 ;;
  8380                           
  8381                           	psect	text34
  8382   00718E                     __ptext34:
  8383                           	callstack 0
  8384   00718E                     _lcd_4bit_set_curser:
  8385                           	callstack 25
  8386   00718E                     
  8387                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 569: STD_ReturnType ret = (STD_ReturnType)0x01;
  8388   00718E  0E01               	movlw	1
  8389   007190  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8390   007192                     
  8391                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 570: column--;
  8392   007192  0614               	decf	lcd_4bit_set_curser@column^0,f,c
  8393                           
  8394                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 571: switch(row){
  8395   007194  EFF4  F038         	goto	l8633
  8396   007198                     l8625:
  8397   007198  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8398   00719C  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8399   00719E  0F80               	addlw	128
  8400   0071A0  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8401   0071A2  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  8402   0071A6  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8403   0071A8  EF11  F039         	goto	l8635
  8404   0071AC                     l8627:
  8405   0071AC  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8406   0071B0  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8407   0071B2  0FC0               	addlw	192
  8408   0071B4  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8409   0071B6  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  8410   0071BA  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8411   0071BC  EF11  F039         	goto	l8635
  8412   0071C0                     l8629:
  8413   0071C0  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8414   0071C4  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8415   0071C6  0F94               	addlw	148
  8416   0071C8  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8417   0071CA  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  8418   0071CE  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8419   0071D0  EF11  F039         	goto	l8635
  8420   0071D4                     l8631:
  8421   0071D4  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8422   0071D8  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8423   0071DA  0FD4               	addlw	212
  8424   0071DC  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8425   0071DE  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
  8426   0071E2  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8427   0071E4  EF11  F039         	goto	l8635
  8428   0071E8                     l8633:
  8429   0071E8  5013               	movf	lcd_4bit_set_curser@row^0,w,c
  8430   0071EA  6E15               	movwf	??_lcd_4bit_set_curser^0,c
  8431   0071EC  6A16               	clrf	(??_lcd_4bit_set_curser+1)^0,c
  8432                           
  8433                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8434                           ; Switch size 1, requested type "simple"
  8435                           ; Number of cases is 1, Range of values is 0 to 0
  8436                           ; switch strategies available:
  8437                           ; Name         Instructions Cycles
  8438                           ; simple_byte            4     3 (average)
  8439                           ;	Chosen strategy is simple_byte
  8440   0071EE  5016               	movf	(??_lcd_4bit_set_curser+1)^0,w,c
  8441   0071F0  0A00               	xorlw	0	; case 0
  8442   0071F2  B4D8               	btfsc	status,2,c
  8443   0071F4  EFFE  F038         	goto	l13307
  8444   0071F8  EF11  F039         	goto	l8635
  8445   0071FC                     l13307:
  8446                           
  8447                           ; Switch size 1, requested type "simple"
  8448                           ; Number of cases is 4, Range of values is 1 to 4
  8449                           ; switch strategies available:
  8450                           ; Name         Instructions Cycles
  8451                           ; simple_byte           13     7 (average)
  8452                           ;	Chosen strategy is simple_byte
  8453   0071FC  5015               	movf	??_lcd_4bit_set_curser^0,w,c
  8454   0071FE  0A01               	xorlw	1	; case 1
  8455   007200  B4D8               	btfsc	status,2,c
  8456   007202  EFCC  F038         	goto	l8625
  8457   007206  0A03               	xorlw	3	; case 2
  8458   007208  B4D8               	btfsc	status,2,c
  8459   00720A  EFD6  F038         	goto	l8627
  8460   00720E  0A01               	xorlw	1	; case 3
  8461   007210  B4D8               	btfsc	status,2,c
  8462   007212  EFE0  F038         	goto	l8629
  8463   007216  0A07               	xorlw	7	; case 4
  8464   007218  B4D8               	btfsc	status,2,c
  8465   00721A  EFEA  F038         	goto	l8631
  8466   00721E  EF11  F039         	goto	l8635
  8467   007222                     l8635:
  8468                           
  8469                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 583: return ret;
  8470   007222  5017               	movf	lcd_4bit_set_curser@ret^0,w,c
  8471   007224  0012               	return		;funcret
  8472   007226                     __end_of_lcd_4bit_set_curser:
  8473                           	callstack 0
  8474                           
  8475 ;; *************** function _lcd_4bit_send_char_data *****************
  8476 ;; Defined at:
  8477 ;;		line 94 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8478 ;; Parameters:    Size  Location     Type
  8479 ;;  lcd             1   14[COMRAM] PTR const struct .
  8480 ;;		 -> lcd1(6), 
  8481 ;;  data            1   15[COMRAM] unsigned char 
  8482 ;; Auto vars:     Size  Location     Type
  8483 ;;  ret             1   16[COMRAM] unsigned char 
  8484 ;; Return value:  Size  Location     Type
  8485 ;;                  1    wreg      unsigned char 
  8486 ;; Registers used:
  8487 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8488 ;; Tracked objects:
  8489 ;;		On entry : 0/0
  8490 ;;		On exit  : 0/0
  8491 ;;		Unchanged: 0/0
  8492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8493 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8494 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8495 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8496 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8497 ;;Total ram usage:        3 bytes
  8498 ;; Hardware stack levels used: 1
  8499 ;; Hardware stack levels required when called: 2
  8500 ;; This function calls:
  8501 ;;		_gpio_pin_write_logic
  8502 ;;		_lcd_4bit_send_enable_enable
  8503 ;;		_lcd_send_4bit
  8504 ;; This function is called by:
  8505 ;;		_lcd_4bit_send_char_data_pos
  8506 ;;		_lcd_4bit_send_string_pos
  8507 ;;		_lcd_4bit_send_string
  8508 ;;		_lcd_4bit_send_custome_char
  8509 ;; This function uses a non-reentrant model
  8510 ;;
  8511                           
  8512                           	psect	text35
  8513   0074F2                     __ptext35:
  8514                           	callstack 0
  8515   0074F2                     _lcd_4bit_send_char_data:
  8516                           	callstack 26
  8517   0074F2                     
  8518                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 97:     if(((void*)0) == lcd)
  8519   0074F2  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  8520   0074F4  A4D8               	btfss	status,2,c
  8521   0074F6  EF7F  F03A         	goto	u8581
  8522   0074FA  EF81  F03A         	goto	u8580
  8523   0074FE                     u8581:
  8524   0074FE  EF85  F03A         	goto	l8615
  8525   007502                     u8580:
  8526   007502                     
  8527                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 98:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 99:        
      +                           ret = (STD_ReturnType)0x00;
  8528   007502  0E00               	movlw	0
  8529   007504  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8530                           
  8531                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 100:     }
  8532   007506  EFA6  F03A         	goto	l8617
  8533   00750A                     l8615:
  8534                           
  8535                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 102:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 104:      
      +                             ret = gpio_pin_write_logic(&(lcd->rs),HIGH);
  8536   00750A  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  8537   00750E  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8538   007510  0E01               	movlw	1
  8539   007512  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8540   007514  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
  8541   007518  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8542                           
  8543                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 105:         ret = lcd_send_4bit(lcd,data >>4);
  8544   00751A  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8545   00751E  3810               	swapf	lcd_4bit_send_char_data@data^0,w,c
  8546   007520  0B0F               	andlw	15
  8547   007522  6E0C               	movwf	lcd_send_4bit@command_data^0,c
  8548   007524  ECA0  F039         	call	_lcd_send_4bit	;wreg free
  8549   007528  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8550                           
  8551                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 106:         ret = lcd_4bit_send_enable_enable(lcd);
  8552   00752A  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_enable@lcd
  8553   00752E  ECA7  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
  8554   007532  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8555                           
  8556                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 107:         ret = lcd_send_4bit(lcd,data);
  8557   007534  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8558   007538  C010  F00C         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@command_data
  8559   00753C  ECA0  F039         	call	_lcd_send_4bit	;wreg free
  8560   007540  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8561                           
  8562                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 108:         ret = lcd_4bit_send_enable_enable(lcd);
  8563   007542  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_enable@lcd
  8564   007546  ECA7  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
  8565   00754A  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8566   00754C                     l8617:
  8567                           
  8568                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 113:      return ret;
  8569   00754C  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  8570   00754E  0012               	return		;funcret
  8571   007550                     __end_of_lcd_4bit_send_char_data:
  8572                           	callstack 0
  8573                           
  8574 ;; *************** function _ecu_keypad_get_value *****************
  8575 ;; Defined at:
  8576 ;;		line 56 in file "ECU_layer/Keypad/ecu_keypad.c"
  8577 ;; Parameters:    Size  Location     Type
  8578 ;;  keypad          2   10[COMRAM] PTR const struct .
  8579 ;;		 -> keypad(8), 
  8580 ;;  value           1   12[COMRAM] PTR unsigned char 
  8581 ;;		 -> get_third_number_and_third_operartion@keypad_value(1), get_number_and_operartion@keypad_value(1), 
  8582 ;; Auto vars:     Size  Location     Type
  8583 ;;  columns         1   18[COMRAM] unsigned char 
  8584 ;;  rows            1   17[COMRAM] unsigned char 
  8585 ;;  clear_rows_c    1   16[COMRAM] unsigned char 
  8586 ;;  column_val      1   15[COMRAM] unsigned char 
  8587 ;;  ret             1    0        unsigned char 
  8588 ;; Return value:  Size  Location     Type
  8589 ;;                  1    wreg      unsigned char 
  8590 ;; Registers used:
  8591 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8592 ;; Tracked objects:
  8593 ;;		On entry : 0/0
  8594 ;;		On exit  : 0/0
  8595 ;;		Unchanged: 0/0
  8596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8597 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8598 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8599 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8600 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8601 ;;Total ram usage:        9 bytes
  8602 ;; Hardware stack levels used: 1
  8603 ;; Hardware stack levels required when called: 1
  8604 ;; This function calls:
  8605 ;;		_gpio_pin_read_logic
  8606 ;;		_gpio_pin_write_logic
  8607 ;; This function is called by:
  8608 ;;		_get_number_and_operartion
  8609 ;;		_get_third_number_and_third_operartion
  8610 ;; This function uses a non-reentrant model
  8611 ;;
  8612                           
  8613                           	psect	text36
  8614   0066B6                     __ptext36:
  8615                           	callstack 0
  8616   0066B6                     _ecu_keypad_get_value:
  8617                           	callstack 28
  8618   0066B6                     
  8619                           ;ECU_layer/Keypad/ecu_keypad.c: 58: uint8 rows = 0,columns = 0,clear_rows_counter = 0;
  8620   0066B6  0E00               	movlw	0
  8621   0066B8  6E12               	movwf	ecu_keypad_get_value@rows^0,c
  8622   0066BA  0E00               	movlw	0
  8623   0066BC  6E13               	movwf	ecu_keypad_get_value@columns^0,c
  8624   0066BE  0E00               	movlw	0
  8625   0066C0  6E11               	movwf	ecu_keypad_get_value@clear_rows_counter^0,c
  8626                           
  8627                           ;ECU_layer/Keypad/ecu_keypad.c: 59: uint8 column_val = 0;
  8628   0066C2  0E00               	movlw	0
  8629   0066C4  6E10               	movwf	ecu_keypad_get_value@column_val^0,c
  8630   0066C6                     
  8631                           ;ECU_layer/Keypad/ecu_keypad.c: 60: *value = 0;
  8632   0066C6  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8633   0066C8  6ED9               	movwf	fsr2l,c
  8634   0066CA  6ADA               	clrf	fsr2h,c
  8635   0066CC  6ADF               	clrf	indf2,c
  8636   0066CE                     
  8637                           ;ECU_layer/Keypad/ecu_keypad.c: 61:     if(((void*)0) == keypad || ((void*)0) == value)
  8638   0066CE  500B               	movf	ecu_keypad_get_value@keypad^0,w,c
  8639   0066D0  100C               	iorwf	(ecu_keypad_get_value@keypad+1)^0,w,c
  8640   0066D2  B4D8               	btfsc	status,2,c
  8641   0066D4  EF6E  F033         	goto	u6431
  8642   0066D8  EF70  F033         	goto	u6430
  8643   0066DC                     u6431:
  8644   0066DC  EF78  F033         	goto	l6433
  8645   0066E0                     u6430:
  8646   0066E0  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8647   0066E2  A4D8               	btfss	status,2,c
  8648   0066E4  EF76  F033         	goto	u6441
  8649   0066E8  EF78  F033         	goto	u6440
  8650   0066EC                     u6441:
  8651   0066EC  EF7A  F033         	goto	l6435
  8652   0066F0                     u6440:
  8653   0066F0                     l6433:
  8654                           
  8655                           ;ECU_layer/Keypad/ecu_keypad.c: 64:     }
  8656   0066F0  EFE2  F033         	goto	l382
  8657   0066F4                     l6435:
  8658                           
  8659                           ;ECU_layer/Keypad/ecu_keypad.c: 66:     {;ECU_layer/Keypad/ecu_keypad.c: 67:         for
      +                          (rows = 0;rows < 4 ;rows++)
  8660   0066F4  0E00               	movlw	0
  8661   0066F6  6E12               	movwf	ecu_keypad_get_value@rows^0,c
  8662   0066F8                     l6441:
  8663                           
  8664                           ;ECU_layer/Keypad/ecu_keypad.c: 68:         {;ECU_layer/Keypad/ecu_keypad.c: 69:        
      +                               for(clear_rows_counter = 0;clear_rows_counter < 4 ;clear_rows_counter++)
  8665   0066F8  0E00               	movlw	0
  8666   0066FA  6E11               	movwf	ecu_keypad_get_value@clear_rows_counter^0,c
  8667   0066FC                     l6447:
  8668                           
  8669                           ;ECU_layer/Keypad/ecu_keypad.c: 70:             {;ECU_layer/Keypad/ecu_keypad.c: 71:    
      +                                       gpio_pin_write_logic(&(keypad->keypad_rows_pins[clear_rows_counter]),LOW);
  8670   0066FC  5011               	movf	ecu_keypad_get_value@clear_rows_counter^0,w,c
  8671   0066FE  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8672   006700  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8673   006702  0E00               	movlw	0
  8674   006704  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8675   006706  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8676   006708  0E00               	movlw	0
  8677   00670A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8678   00670C  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
  8679   006710                     
  8680                           ;ECU_layer/Keypad/ecu_keypad.c: 72:             }
  8681   006710  2A11               	incf	ecu_keypad_get_value@clear_rows_counter^0,f,c
  8682   006712  0E03               	movlw	3
  8683   006714  6411               	cpfsgt	ecu_keypad_get_value@clear_rows_counter^0,c
  8684   006716  EF8F  F033         	goto	u6451
  8685   00671A  EF91  F033         	goto	u6450
  8686   00671E                     u6451:
  8687   00671E  EF7E  F033         	goto	l6447
  8688   006722                     u6450:
  8689   006722                     
  8690                           ;ECU_layer/Keypad/ecu_keypad.c: 73:             gpio_pin_write_logic(&(keypad->keypad_ro
      +                          ws_pins[rows]),HIGH);
  8691   006722  5012               	movf	ecu_keypad_get_value@rows^0,w,c
  8692   006724  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8693   006726  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8694   006728  0E00               	movlw	0
  8695   00672A  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8696   00672C  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8697   00672E  0E01               	movlw	1
  8698   006730  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8699   006732  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
  8700   006736                     
  8701                           ;ECU_layer/Keypad/ecu_keypad.c: 74:             _delay((unsigned long)((10)*(8000000ul/4
      +                          000.0)));
  8702   006736  0E1A               	movlw	26
  8703   006738  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8704   00673A  0EF8               	movlw	248
  8705   00673C                     u13617:
  8706   00673C  2EE8               	decfsz	wreg,f,c
  8707   00673E  D7FE               	bra	u13617
  8708   006740  2E0E               	decfsz	??_ecu_keypad_get_value^0,f,c
  8709   006742  D7FC               	bra	u13617
  8710   006744  D000               	nop2	
  8711   006746                     
  8712                           ;ECU_layer/Keypad/ecu_keypad.c: 75:             for(columns = 0;columns < 4 ;columns++)
  8713   006746  0E00               	movlw	0
  8714   006748  6E13               	movwf	ecu_keypad_get_value@columns^0,c
  8715   00674A                     l6463:
  8716                           
  8717                           ;ECU_layer/Keypad/ecu_keypad.c: 76:             {;ECU_layer/Keypad/ecu_keypad.c: 77:    
      +                                       gpio_pin_read_logic(&(keypad->keypad_columns_pins[columns]),&column_val);
  8718   00674A  5013               	movf	ecu_keypad_get_value@columns^0,w,c
  8719   00674C  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8720   00674E  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8721   006750  0E00               	movlw	0
  8722   006752  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8723   006754  6E0F               	movwf	(??_ecu_keypad_get_value+1)^0,c
  8724   006756  0E04               	movlw	4
  8725   006758  240E               	addwf	??_ecu_keypad_get_value^0,w,c
  8726   00675A  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  8727   00675C  0E00               	movlw	0
  8728   00675E  200F               	addwfc	(??_ecu_keypad_get_value+1)^0,w,c
  8729   006760  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  8730   006762  0E10               	movlw	low ecu_keypad_get_value@column_val
  8731   006764  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  8732   006766  EC1F  F038         	call	_gpio_pin_read_logic	;wreg free
  8733   00676A                     
  8734                           ;ECU_layer/Keypad/ecu_keypad.c: 78:                 if(HIGH == column_val)
  8735   00676A  0410               	decf	ecu_keypad_get_value@column_val^0,w,c
  8736   00676C  A4D8               	btfss	status,2,c
  8737   00676E  EFBB  F033         	goto	u6461
  8738   006772  EFBD  F033         	goto	u6460
  8739   006776                     u6461:
  8740   006776  EFD0  F033         	goto	l6469
  8741   00677A                     u6460:
  8742   00677A                     
  8743                           ;ECU_layer/Keypad/ecu_keypad.c: 79:                 {;ECU_layer/Keypad/ecu_keypad.c: 80:
      +                                           *value = keypad_values[rows][columns];
  8744   00677A  5012               	movf	ecu_keypad_get_value@rows^0,w,c
  8745   00677C  0D04               	mullw	4
  8746   00677E  0E50               	movlw	low _keypad_values
  8747   006780  24F3               	addwf	243,w,c
  8748   006782  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8749   006784  0E02               	movlw	high _keypad_values
  8750   006786  20F4               	addwfc	prodh,w,c
  8751   006788  6E0F               	movwf	(??_ecu_keypad_get_value+1)^0,c
  8752   00678A  5013               	movf	ecu_keypad_get_value@columns^0,w,c
  8753   00678C  240E               	addwf	??_ecu_keypad_get_value^0,w,c
  8754   00678E  6ED9               	movwf	fsr2l,c
  8755   006790  0E00               	movlw	0
  8756   006792  200F               	addwfc	(??_ecu_keypad_get_value+1)^0,w,c
  8757   006794  6EDA               	movwf	fsr2h,c
  8758   006796  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8759   006798  6EE1               	movwf	fsr1l,c
  8760   00679A  6AE2               	clrf	fsr1h,c
  8761   00679C  CFDF FFE7          	movff	indf2,indf1
  8762   0067A0                     l6469:
  8763                           
  8764                           ;ECU_layer/Keypad/ecu_keypad.c: 84:             }
  8765   0067A0  2A13               	incf	ecu_keypad_get_value@columns^0,f,c
  8766   0067A2  0E03               	movlw	3
  8767   0067A4  6413               	cpfsgt	ecu_keypad_get_value@columns^0,c
  8768   0067A6  EFD7  F033         	goto	u6471
  8769   0067AA  EFD9  F033         	goto	u6470
  8770   0067AE                     u6471:
  8771   0067AE  EFA5  F033         	goto	l6463
  8772   0067B2                     u6470:
  8773   0067B2                     
  8774                           ;ECU_layer/Keypad/ecu_keypad.c: 86:         }
  8775   0067B2  2A12               	incf	ecu_keypad_get_value@rows^0,f,c
  8776   0067B4  0E03               	movlw	3
  8777   0067B6  6412               	cpfsgt	ecu_keypad_get_value@rows^0,c
  8778   0067B8  EFE0  F033         	goto	u6481
  8779   0067BC  EFE2  F033         	goto	u6480
  8780   0067C0                     u6481:
  8781   0067C0  EF7C  F033         	goto	l6441
  8782   0067C4                     u6480:
  8783   0067C4                     l382:
  8784   0067C4  0012               	return		;funcret
  8785   0067C6                     __end_of_ecu_keypad_get_value:
  8786                           	callstack 0
  8787                           
  8788 ;; *************** function _gpio_pin_read_logic *****************
  8789 ;; Defined at:
  8790 ;;		line 117 in file "MCAL_layer/GPIO/hal_gpio.c"
  8791 ;; Parameters:    Size  Location     Type
  8792 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  8793 ;;		 -> keypad$keypad_columns_pins(4), keypad(8), 
  8794 ;;  logic           1    2[COMRAM] PTR enum E3403
  8795 ;;		 -> ecu_keypad_get_value@column_val(1), ecu_button_read_state@btn_logic(1), 
  8796 ;; Auto vars:     Size  Location     Type
  8797 ;;  ret             1    0        unsigned char 
  8798 ;; Return value:  Size  Location     Type
  8799 ;;                  1    wreg      unsigned char 
  8800 ;; Registers used:
  8801 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8802 ;; Tracked objects:
  8803 ;;		On entry : 0/0
  8804 ;;		On exit  : 0/0
  8805 ;;		Unchanged: 0/0
  8806 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8807 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8808 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8809 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8810 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8811 ;;Total ram usage:        8 bytes
  8812 ;; Hardware stack levels used: 1
  8813 ;; This function calls:
  8814 ;;		Nothing
  8815 ;; This function is called by:
  8816 ;;		_ecu_keypad_get_value
  8817 ;;		_ecu_button_read_state
  8818 ;; This function uses a non-reentrant model
  8819 ;;
  8820                           
  8821                           	psect	text37
  8822   00703E                     __ptext37:
  8823                           	callstack 0
  8824   00703E                     _gpio_pin_read_logic:
  8825                           	callstack 28
  8826   00703E                     
  8827                           ;MCAL_layer/GPIO/hal_gpio.c: 120:     if(((void*)0) == _pin_config || ((void*)0) == logi
      +                          c || _pin_config->pin > 8 -1)
  8828   00703E  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  8829   007040  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  8830   007042  B4D8               	btfsc	status,2,c
  8831   007044  EF26  F038         	goto	u6021
  8832   007048  EF28  F038         	goto	u6020
  8833   00704C                     u6021:
  8834   00704C  EF41  F038         	goto	l6161
  8835   007050                     u6020:
  8836   007050  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  8837   007052  B4D8               	btfsc	status,2,c
  8838   007054  EF2E  F038         	goto	u6031
  8839   007058  EF30  F038         	goto	u6030
  8840   00705C                     u6031:
  8841   00705C  EF41  F038         	goto	l6161
  8842   007060                     u6030:
  8843   007060  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  8844   007064  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  8845   007068  30DF               	rrcf	223,w,c
  8846   00706A  32E8               	rrcf	wreg,f,c
  8847   00706C  32E8               	rrcf	wreg,f,c
  8848   00706E  0B07               	andlw	7
  8849   007070  6E04               	movwf	??_gpio_pin_read_logic^0,c
  8850   007072  0E07               	movlw	7
  8851   007074  6404               	cpfsgt	??_gpio_pin_read_logic^0,c
  8852   007076  EF3F  F038         	goto	u6041
  8853   00707A  EF41  F038         	goto	u6040
  8854   00707E                     u6041:
  8855   00707E  EF43  F038         	goto	l6163
  8856   007082                     u6040:
  8857   007082                     l6161:
  8858                           
  8859                           ;MCAL_layer/GPIO/hal_gpio.c: 123:     }
  8860   007082  EF73  F038         	goto	l526
  8861   007086                     l6163:
  8862                           
  8863                           ;MCAL_layer/GPIO/hal_gpio.c: 125:     {;MCAL_layer/GPIO/hal_gpio.c: 126:          *logic
      +                           = ((*port_registers[_pin_config->port]>>_pin_config->pin) & (uint8)1);
  8864   007086  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  8865   007088  6ED9               	movwf	fsr2l,c
  8866   00708A  6ADA               	clrf	fsr2h,c
  8867   00708C  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  8868   007090  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  8869   007094  30E7               	rrcf	231,w,c
  8870   007096  32E8               	rrcf	wreg,f,c
  8871   007098  32E8               	rrcf	wreg,f,c
  8872   00709A  0B07               	andlw	7
  8873   00709C  6E04               	movwf	??_gpio_pin_read_logic^0,c
  8874   00709E  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  8875   0070A2  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  8876   0070A6  50E7               	movf	231,w,c
  8877   0070A8  0B07               	andlw	7
  8878   0070AA  6E05               	movwf	(??_gpio_pin_read_logic+1)^0,c
  8879   0070AC  5005               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  8880   0070AE  0D02               	mullw	2
  8881   0070B0  0EB8               	movlw	low _port_registers
  8882   0070B2  24F3               	addwf	243,w,c
  8883   0070B4  6EE1               	movwf	fsr1l,c
  8884   0070B6  0E01               	movlw	high _port_registers
  8885   0070B8  20F4               	addwfc	prodh,w,c
  8886   0070BA  6EE2               	movwf	fsr1h,c
  8887   0070BC  CFE6 F006          	movff	postinc1,??_gpio_pin_read_logic+2
  8888   0070C0  CFE5 F007          	movff	postdec1,??_gpio_pin_read_logic+3
  8889   0070C4  C006  FFE1         	movff	??_gpio_pin_read_logic+2,fsr1l
  8890   0070C8  C007  FFE2         	movff	??_gpio_pin_read_logic+3,fsr1h
  8891   0070CC  50E7               	movf	indf1,w,c
  8892   0070CE  6E08               	movwf	(??_gpio_pin_read_logic+4)^0,c
  8893   0070D0  2A04               	incf	??_gpio_pin_read_logic^0,f,c
  8894   0070D2  EF6D  F038         	goto	u6054
  8895   0070D6                     u6055:
  8896   0070D6  90D8               	bcf	status,0,c
  8897   0070D8  3208               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  8898   0070DA                     u6054:
  8899   0070DA  2E04               	decfsz	??_gpio_pin_read_logic^0,f,c
  8900   0070DC  EF6B  F038         	goto	u6055
  8901   0070E0  5008               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  8902   0070E2  0B01               	andlw	1
  8903   0070E4  6EDF               	movwf	indf2,c
  8904   0070E6                     l526:
  8905   0070E6  0012               	return		;funcret
  8906   0070E8                     __end_of_gpio_pin_read_logic:
  8907                           	callstack 0
  8908                           
  8909 ;; *************** function _convert_arr_to_float *****************
  8910 ;; Defined at:
  8911 ;;		line 141 in file "calculator_function/calculator_functions.c"
  8912 ;; Parameters:    Size  Location     Type
  8913 ;;  arr             2    0[BANK0 ] PTR const unsigned char 
  8914 ;;		 -> num3(4), num2(4), num1(4), 
  8915 ;;  counter_num     1    2[BANK0 ] const unsigned char 
  8916 ;;  num_value       1    3[BANK0 ] PTR float 
  8917 ;;		 -> num3_val(4), num2_val(4), num1_val(4), 
  8918 ;; Auto vars:     Size  Location     Type
  8919 ;;  count           1   16[BANK0 ] unsigned char 
  8920 ;;  count_power     1   15[BANK0 ] unsigned char 
  8921 ;; Return value:  Size  Location     Type
  8922 ;;                  1    wreg      void 
  8923 ;; Registers used:
  8924 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8925 ;; Tracked objects:
  8926 ;;		On entry : 0/0
  8927 ;;		On exit  : 0/0
  8928 ;;		Unchanged: 0/0
  8929 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8930 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8931 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8932 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8933 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8934 ;;Total ram usage:       17 bytes
  8935 ;; Hardware stack levels used: 1
  8936 ;; Hardware stack levels required when called: 3
  8937 ;; This function calls:
  8938 ;;		___fladd
  8939 ;;		___flmul
  8940 ;;		___xxtofl
  8941 ;;		_powf
  8942 ;; This function is called by:
  8943 ;;		_main
  8944 ;; This function uses a non-reentrant model
  8945 ;;
  8946                           
  8947                           	psect	text38
  8948   00658E                     __ptext38:
  8949                           	callstack 0
  8950   00658E                     _convert_arr_to_float:
  8951                           	callstack 27
  8952   00658E                     
  8953                           ;calculator_function/calculator_functions.c: 142: uint8 count = 0;
  8954   00658E  0E00               	movlw	0
  8955   006590  0100               	movlb	0	; () banked
  8956   006592  6F90               	movwf	convert_arr_to_float@count& (0+255),b
  8957   006594                     
  8958                           ; BSR set to: 0
  8959                           ;calculator_function/calculator_functions.c: 143: uint8 count_power = counter_num-1;
  8960   006594  0582               	decf	convert_arr_to_float@counter_num& (0+255),w,b
  8961   006596  6F8F               	movwf	convert_arr_to_float@count_power& (0+255),b
  8962   006598                     
  8963                           ; BSR set to: 0
  8964   006598  5182               	movf	convert_arr_to_float@counter_num& (0+255),w,b
  8965   00659A  A4D8               	btfss	status,2,c
  8966   00659C  EFD2  F032         	goto	u13371
  8967   0065A0  EFD4  F032         	goto	u13370
  8968   0065A4                     u13371:
  8969   0065A4  EFD6  F032         	goto	l12765
  8970   0065A8                     u13370:
  8971   0065A8  EF5A  F033         	goto	l97
  8972   0065AC                     l12765:
  8973                           
  8974                           ; BSR set to: 0
  8975                           ;calculator_function/calculator_functions.c: 145: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8976   0065AC  518F               	movf	convert_arr_to_float@count_power& (0+255),w,b
  8977   0065AE  6E0B               	movwf	___xxtofl@val^0,c
  8978   0065B0  6A0C               	clrf	(___xxtofl@val+1)^0,c
  8979   0065B2  6A0D               	clrf	(___xxtofl@val+2)^0,c
  8980   0065B4  6A0E               	clrf	(___xxtofl@val+3)^0,c
  8981   0065B6  0E00               	movlw	0
  8982   0065B8  ECF8  F02F         	call	___xxtofl
  8983   0065BC  C00B  F087         	movff	?___xxtofl,_convert_arr_to_float$2095
  8984   0065C0  C00C  F088         	movff	?___xxtofl+1,_convert_arr_to_float$2095+1
  8985   0065C4  C00D  F089         	movff	?___xxtofl+2,_convert_arr_to_float$2095+2
  8986   0065C8  C00E  F08A         	movff	?___xxtofl+3,_convert_arr_to_float$2095+3
  8987   0065CC                     
  8988                           ;calculator_function/calculator_functions.c: 145: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8989   0065CC  C087  F073         	movff	_convert_arr_to_float$2095,powf@y
  8990   0065D0  C088  F074         	movff	_convert_arr_to_float$2095+1,powf@y+1
  8991   0065D4  C089  F075         	movff	_convert_arr_to_float$2095+2,powf@y+2
  8992   0065D8  C08A  F076         	movff	_convert_arr_to_float$2095+3,powf@y+3
  8993   0065DC  0E00               	movlw	0
  8994   0065DE  6E6F               	movwf	powf@x^0,c
  8995   0065E0  0E00               	movlw	0
  8996   0065E2  6E70               	movwf	(powf@x+1)^0,c
  8997   0065E4  0E20               	movlw	32
  8998   0065E6  6E71               	movwf	(powf@x+2)^0,c
  8999   0065E8  0E41               	movlw	65
  9000   0065EA  6E72               	movwf	(powf@x+3)^0,c
  9001   0065EC  EC72  F008         	call	_powf	;wreg free
  9002   0065F0  C06F  F08B         	movff	?_powf,_convert_arr_to_float$2096
  9003   0065F4  C070  F08C         	movff	?_powf+1,_convert_arr_to_float$2096+1
  9004   0065F8  C071  F08D         	movff	?_powf+2,_convert_arr_to_float$2096+2
  9005   0065FC  C072  F08E         	movff	?_powf+3,_convert_arr_to_float$2096+3
  9006   006600                     
  9007                           ;calculator_function/calculator_functions.c: 145: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  9008   006600  C08B  F01D         	movff	_convert_arr_to_float$2096,___flmul@a
  9009   006604  C08C  F01E         	movff	_convert_arr_to_float$2096+1,___flmul@a+1
  9010   006608  C08D  F01F         	movff	_convert_arr_to_float$2096+2,___flmul@a+2
  9011   00660C  C08E  F020         	movff	_convert_arr_to_float$2096+3,___flmul@a+3
  9012   006610  0100               	movlb	0	; () banked
  9013   006612  5190               	movf	convert_arr_to_float@count& (0+255),w,b
  9014   006614  2580               	addwf	convert_arr_to_float@arr& (0+255),w,b
  9015   006616  6ED9               	movwf	fsr2l,c
  9016   006618  0E00               	movlw	0
  9017   00661A  2181               	addwfc	(convert_arr_to_float@arr+1)& (0+255),w,b
  9018   00661C  6EDA               	movwf	fsr2h,c
  9019   00661E  50DF               	movf	indf2,w,c
  9020   006620  6F84               	movwf	??_convert_arr_to_float& (0+255),b
  9021   006622  0ED0               	movlw	208
  9022   006624  2584               	addwf	??_convert_arr_to_float& (0+255),w,b
  9023   006626  6F85               	movwf	(??_convert_arr_to_float+1)& (0+255),b
  9024   006628  6B86               	clrf	(??_convert_arr_to_float+2)& (0+255),b
  9025   00662A  0EFF               	movlw	255
  9026   00662C  2386               	addwfc	(??_convert_arr_to_float+2)& (0+255),f,b
  9027   00662E  C085  F00B         	movff	??_convert_arr_to_float+1,___xxtofl@val
  9028   006632  C086  F00C         	movff	??_convert_arr_to_float+2,___xxtofl@val+1
  9029   006636  0E00               	movlw	0
  9030   006638  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  9031   00663A  0EFF               	movlw	-1
  9032   00663C  6E0D               	movwf	(___xxtofl@val+2)^0,c
  9033   00663E  6E0E               	movwf	(___xxtofl@val+3)^0,c
  9034   006640  0E01               	movlw	1
  9035   006642  ECF8  F02F         	call	___xxtofl
  9036   006646  C00B  F019         	movff	?___xxtofl,___flmul@b
  9037   00664A  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  9038   00664E  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  9039   006652  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  9040   006656  EC27  F024         	call	___flmul	;wreg free
  9041   00665A  C019  F032         	movff	?___flmul,___fladd@b
  9042   00665E  C01A  F033         	movff	?___flmul+1,___fladd@b+1
  9043   006662  C01B  F034         	movff	?___flmul+2,___fladd@b+2
  9044   006666  C01C  F035         	movff	?___flmul+3,___fladd@b+3
  9045   00666A  0100               	movlb	0	; () banked
  9046   00666C  5183               	movf	convert_arr_to_float@num_value& (0+255),w,b
  9047   00666E  6ED9               	movwf	fsr2l,c
  9048   006670  6ADA               	clrf	fsr2h,c
  9049   006672  CFDE F036          	movff	postinc2,___fladd@a
  9050   006676  CFDE F037          	movff	postinc2,___fladd@a+1
  9051   00667A  CFDE F038          	movff	postinc2,___fladd@a+2
  9052   00667E  CFDE F039          	movff	postinc2,___fladd@a+3
  9053   006682  ECC7  F021         	call	___fladd	;wreg free
  9054   006686  0100               	movlb	0	; () banked
  9055   006688  5183               	movf	convert_arr_to_float@num_value& (0+255),w,b
  9056   00668A  6ED9               	movwf	fsr2l,c
  9057   00668C  6ADA               	clrf	fsr2h,c
  9058   00668E  C032  FFDE         	movff	?___fladd,postinc2
  9059   006692  C033  FFDE         	movff	?___fladd+1,postinc2
  9060   006696  C034  FFDE         	movff	?___fladd+2,postinc2
  9061   00669A  C035  FFDE         	movff	?___fladd+3,postinc2
  9062   00669E                     
  9063                           ; BSR set to: 0
  9064                           ;calculator_function/calculator_functions.c: 146: count_power--;
  9065   00669E  078F               	decf	convert_arr_to_float@count_power& (0+255),f,b
  9066   0066A0                     
  9067                           ; BSR set to: 0
  9068                           ;calculator_function/calculator_functions.c: 147: }
  9069   0066A0  2B90               	incf	convert_arr_to_float@count& (0+255),f,b
  9070   0066A2                     
  9071                           ; BSR set to: 0
  9072   0066A2  5182               	movf	convert_arr_to_float@counter_num& (0+255),w,b
  9073   0066A4  5D90               	subwf	convert_arr_to_float@count& (0+255),w,b
  9074   0066A6  A0D8               	btfss	status,0,c
  9075   0066A8  EF58  F033         	goto	u13381
  9076   0066AC  EF5A  F033         	goto	u13380
  9077   0066B0                     u13381:
  9078   0066B0  EFD6  F032         	goto	l12765
  9079   0066B4                     u13380:
  9080   0066B4                     l97:
  9081                           
  9082                           ; BSR set to: 0
  9083   0066B4  0012               	return		;funcret
  9084   0066B6                     __end_of_convert_arr_to_float:
  9085                           	callstack 0
  9086                           
  9087 ;; *************** function _powf *****************
  9088 ;; Defined at:
  9089 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  9090 ;; Parameters:    Size  Location     Type
  9091 ;;  x               4  110[COMRAM] float 
  9092 ;;  y               4  114[COMRAM] float 
  9093 ;; Auto vars:     Size  Location     Type
  9094 ;;  s2              4  144[BANK1 ] float 
  9095 ;;  s_h             4  116[BANK1 ] struct fui
  9096 ;;  t_h             4  112[BANK1 ] struct fui
  9097 ;;  t_l             4   52[BANK1 ] float 
  9098 ;;  s_l             4   48[BANK1 ] float 
  9099 ;;  z               4  180[BANK1 ] struct fui
  9100 ;;  t               4  176[BANK1 ] struct fui
  9101 ;;  ix              4  172[BANK1 ] struct fui
  9102 ;;  j               4  168[BANK1 ] long 
  9103 ;;  k               4  164[BANK1 ] long 
  9104 ;;  p_h             4  160[BANK1 ] struct fui
  9105 ;;  is              4  152[BANK1 ] struct fui
  9106 ;;  iy              4  148[BANK1 ] long 
  9107 ;;  t1              4  140[BANK1 ] struct fui
  9108 ;;  n               4  136[BANK1 ] long 
  9109 ;;  hy              4  132[BANK1 ] struct fui
  9110 ;;  v               4  128[BANK1 ] float 
  9111 ;;  u               4  124[BANK1 ] float 
  9112 ;;  ax              4  120[BANK1 ] struct fui
  9113 ;;  p_l             4  108[BANK1 ] float 
  9114 ;;  hx              4  104[BANK1 ] struct fui
  9115 ;;  sn              4  100[BANK1 ] unsigned long 
  9116 ;;  s               4   88[BANK1 ] float 
  9117 ;;  yisint          4   84[BANK1 ] long 
  9118 ;;  r               4   80[BANK1 ] float 
  9119 ;;  w               4   68[BANK1 ] float 
  9120 ;;  y1              4   44[BANK1 ] struct fui
  9121 ;;  i               4   40[BANK1 ] long 
  9122 ;;  z_l             4   36[BANK1 ] float 
  9123 ;;  z_h             4   32[BANK1 ] float 
  9124 ;;  t2              4   28[BANK1 ] float 
  9125 ;; Return value:  Size  Location     Type
  9126 ;;                  4  110[COMRAM] float 
  9127 ;; Registers used:
  9128 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9129 ;; Tracked objects:
  9130 ;;		On entry : 0/0
  9131 ;;		On exit  : 0/0
  9132 ;;		Unchanged: 0/0
  9133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9134 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9135 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9136 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9137 ;;      Totals:        17       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9138 ;;Total ram usage:      201 bytes
  9139 ;; Hardware stack levels used: 1
  9140 ;; Hardware stack levels required when called: 2
  9141 ;; This function calls:
  9142 ;;		___fladd
  9143 ;;		___fldiv
  9144 ;;		___flge
  9145 ;;		___flmul
  9146 ;;		___flneg
  9147 ;;		___flsub
  9148 ;;		___xxtofl
  9149 ;;		_scalbnf
  9150 ;;		_sqrtf
  9151 ;; This function is called by:
  9152 ;;		_convert_arr_to_float
  9153 ;; This function uses a non-reentrant model
  9154 ;;
  9155                           
  9156                           	psect	text39
  9157   0010E4                     __ptext39:
  9158                           	callstack 0
  9159   0010E4                     _powf:
  9160                           	callstack 27
  9161   0010E4  C06F  F168         	movff	powf@x,powf@hx
  9162   0010E8  C070  F169         	movff	powf@x+1,powf@hx+1
  9163   0010EC  C071  F16A         	movff	powf@x+2,powf@hx+2
  9164   0010F0  C072  F16B         	movff	powf@x+3,powf@hx+3
  9165   0010F4  C073  F184         	movff	powf@y,powf@hy
  9166   0010F8  C074  F185         	movff	powf@y+1,powf@hy+1
  9167   0010FC  C075  F186         	movff	powf@y+2,powf@hy+2
  9168   001100  C076  F187         	movff	powf@y+3,powf@hy+3
  9169   001104  0EFF               	movlw	255
  9170   001106  0101               	movlb	1	; () banked
  9171   001108  1568               	andwf	powf@hx& (0+255),w,b
  9172   00110A  6FAC               	movwf	powf@ix& (0+255),b
  9173   00110C  0EFF               	movlw	255
  9174   00110E  1569               	andwf	(powf@hx+1)& (0+255),w,b
  9175   001110  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9176   001112  0EFF               	movlw	255
  9177   001114  156A               	andwf	(powf@hx+2)& (0+255),w,b
  9178   001116  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9179   001118  0E7F               	movlw	127
  9180   00111A  156B               	andwf	(powf@hx+3)& (0+255),w,b
  9181   00111C  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9182   00111E  0EFF               	movlw	255
  9183   001120  1584               	andwf	powf@hy& (0+255),w,b
  9184   001122  6F94               	movwf	powf@iy& (0+255),b
  9185   001124  0EFF               	movlw	255
  9186   001126  1585               	andwf	(powf@hy+1)& (0+255),w,b
  9187   001128  6F95               	movwf	(powf@iy+1)& (0+255),b
  9188   00112A  0EFF               	movlw	255
  9189   00112C  1586               	andwf	(powf@hy+2)& (0+255),w,b
  9190   00112E  6F96               	movwf	(powf@iy+2)& (0+255),b
  9191   001130  0E7F               	movlw	127
  9192   001132  1587               	andwf	(powf@hy+3)& (0+255),w,b
  9193   001134  6F97               	movwf	(powf@iy+3)& (0+255),b
  9194   001136  5194               	movf	powf@iy& (0+255),w,b
  9195   001138  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9196   00113A  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  9197   00113C  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  9198   00113E  A4D8               	btfss	status,2,c
  9199   001140  EFA4  F008         	goto	u12781
  9200   001144  EFA6  F008         	goto	u12780
  9201   001148                     u12781:
  9202   001148  EFB0  F008         	goto	l12327
  9203   00114C                     u12780:
  9204   00114C                     
  9205                           ; BSR set to: 1
  9206   00114C  0E00               	movlw	0
  9207   00114E  6E6F               	movwf	?_powf^0,c
  9208   001150  0E00               	movlw	0
  9209   001152  6E70               	movwf	(?_powf+1)^0,c
  9210   001154  0E80               	movlw	128
  9211   001156  6E71               	movwf	(?_powf+2)^0,c
  9212   001158  0E3F               	movlw	63
  9213   00115A  6E72               	movwf	(?_powf+3)^0,c
  9214   00115C  EF06  F01A         	goto	l1644
  9215   001160                     l12327:
  9216                           
  9217                           ; BSR set to: 1
  9218   001160  0E80               	movlw	128
  9219   001162  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  9220   001164  E109               	bnz	u12791
  9221   001166  0E3F               	movlw	63
  9222   001168  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  9223   00116A  1168               	iorwf	powf@hx& (0+255),w,b
  9224   00116C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  9225   00116E  A4D8               	btfss	status,2,c
  9226   001170  EFBC  F008         	goto	u12791
  9227   001174  EFBE  F008         	goto	u12790
  9228   001178                     u12791:
  9229   001178  EFC8  F008         	goto	l12333
  9230   00117C                     u12790:
  9231   00117C                     
  9232                           ; BSR set to: 1
  9233   00117C  0E00               	movlw	0
  9234   00117E  6E6F               	movwf	?_powf^0,c
  9235   001180  0E00               	movlw	0
  9236   001182  6E70               	movwf	(?_powf+1)^0,c
  9237   001184  0E80               	movlw	128
  9238   001186  6E71               	movwf	(?_powf+2)^0,c
  9239   001188  0E3F               	movlw	63
  9240   00118A  6E72               	movwf	(?_powf+3)^0,c
  9241   00118C  EF06  F01A         	goto	l1644
  9242   001190                     l12333:
  9243                           
  9244                           ; BSR set to: 1
  9245   001190  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9246   001192  EFD9  F008         	goto	u12800
  9247   001196  05AC               	decf	powf@ix& (0+255),w,b
  9248   001198  0E00               	movlw	0
  9249   00119A  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9250   00119C  0E80               	movlw	128
  9251   00119E  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9252   0011A0  0E7F               	movlw	127
  9253   0011A2  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9254   0011A4  B0D8               	btfsc	status,0,c
  9255   0011A6  EFD7  F008         	goto	u12801
  9256   0011AA  EFD9  F008         	goto	u12800
  9257   0011AE                     u12801:
  9258   0011AE  EFEA  F008         	goto	l12337
  9259   0011B2                     u12800:
  9260   0011B2                     
  9261                           ; BSR set to: 1
  9262   0011B2  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9263   0011B4  EFE8  F008         	goto	u12811
  9264   0011B8  0594               	decf	powf@iy& (0+255),w,b
  9265   0011BA  0E00               	movlw	0
  9266   0011BC  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  9267   0011BE  0E80               	movlw	128
  9268   0011C0  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  9269   0011C2  0E7F               	movlw	127
  9270   0011C4  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9271   0011C6  A0D8               	btfss	status,0,c
  9272   0011C8  EFE8  F008         	goto	u12811
  9273   0011CC  EFEA  F008         	goto	u12810
  9274   0011D0                     u12811:
  9275   0011D0  EF06  F009         	goto	l12341
  9276   0011D4                     u12810:
  9277   0011D4                     l12337:
  9278                           
  9279                           ; BSR set to: 1
  9280   0011D4  C06F  F032         	movff	powf@x,___fladd@b
  9281   0011D8  C070  F033         	movff	powf@x+1,___fladd@b+1
  9282   0011DC  C071  F034         	movff	powf@x+2,___fladd@b+2
  9283   0011E0  C072  F035         	movff	powf@x+3,___fladd@b+3
  9284   0011E4  C073  F036         	movff	powf@y,___fladd@a
  9285   0011E8  C074  F037         	movff	powf@y+1,___fladd@a+1
  9286   0011EC  C075  F038         	movff	powf@y+2,___fladd@a+2
  9287   0011F0  C076  F039         	movff	powf@y+3,___fladd@a+3
  9288   0011F4  ECC7  F021         	call	___fladd	;wreg free
  9289   0011F8  C032  F06F         	movff	?___fladd,?_powf
  9290   0011FC  C033  F070         	movff	?___fladd+1,?_powf+1
  9291   001200  C034  F071         	movff	?___fladd+2,?_powf+2
  9292   001204  C035  F072         	movff	?___fladd+3,?_powf+3
  9293   001208  EF06  F01A         	goto	l1644
  9294   00120C                     l12341:
  9295                           
  9296                           ; BSR set to: 1
  9297   00120C  0E00               	movlw	0
  9298   00120E  6F54               	movwf	powf@yisint& (0+255),b
  9299   001210  0E00               	movlw	0
  9300   001212  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9301   001214  0E00               	movlw	0
  9302   001216  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9303   001218  0E00               	movlw	0
  9304   00121A  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9305   00121C                     
  9306                           ; BSR set to: 1
  9307   00121C  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9308   00121E  EF15  F009         	goto	u12820
  9309   001222  EF13  F009         	goto	u12821
  9310   001226                     u12821:
  9311   001226  EFC0  F009         	goto	l1649
  9312   00122A                     u12820:
  9313   00122A                     
  9314                           ; BSR set to: 1
  9315   00122A  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9316   00122C  EF21  F009         	goto	u12831
  9317   001230  0E80               	movlw	128
  9318   001232  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9319   001234  0E4B               	movlw	75
  9320   001236  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9321   001238  A0D8               	btfss	status,0,c
  9322   00123A  EF21  F009         	goto	u12831
  9323   00123E  EF23  F009         	goto	u12830
  9324   001242                     u12831:
  9325   001242  EF2D  F009         	goto	l12349
  9326   001246                     u12830:
  9327   001246                     
  9328                           ; BSR set to: 1
  9329   001246  0E02               	movlw	2
  9330   001248  6F54               	movwf	powf@yisint& (0+255),b
  9331   00124A  0E00               	movlw	0
  9332   00124C  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9333   00124E  0E00               	movlw	0
  9334   001250  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9335   001252  0E00               	movlw	0
  9336   001254  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9337   001256  EFC0  F009         	goto	l1649
  9338   00125A                     l12349:
  9339                           
  9340                           ; BSR set to: 1
  9341   00125A  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9342   00125C  EF39  F009         	goto	u12841
  9343   001260  0E80               	movlw	128
  9344   001262  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9345   001264  0E3F               	movlw	63
  9346   001266  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9347   001268  A0D8               	btfss	status,0,c
  9348   00126A  EF39  F009         	goto	u12841
  9349   00126E  EF3B  F009         	goto	u12840
  9350   001272                     u12841:
  9351   001272  EFC0  F009         	goto	l1649
  9352   001276                     u12840:
  9353   001276                     
  9354                           ; BSR set to: 1
  9355   001276  0E17               	movlw	23
  9356   001278  6E77               	movwf	??_powf^0,c
  9357   00127A  C194  F078         	movff	powf@iy,??_powf+1
  9358   00127E  C195  F079         	movff	powf@iy+1,??_powf+2
  9359   001282  C196  F07A         	movff	powf@iy+2,??_powf+3
  9360   001286  C197  F07B         	movff	powf@iy+3,??_powf+4
  9361   00128A                     u12855:
  9362   00128A  6677               	tstfsz	??_powf^0,c
  9363   00128C  EF4A  F009         	goto	u12856
  9364   001290  EF52  F009         	goto	u12857
  9365   001294                     u12856:
  9366   001294  347B               	rlcf	(??_powf+4)^0,w,c
  9367   001296  327B               	rrcf	(??_powf+4)^0,f,c
  9368   001298  327A               	rrcf	(??_powf+3)^0,f,c
  9369   00129A  3279               	rrcf	(??_powf+2)^0,f,c
  9370   00129C  3278               	rrcf	(??_powf+1)^0,f,c
  9371   00129E  2E77               	decfsz	??_powf^0,f,c
  9372   0012A0  EF45  F009         	goto	u12855
  9373   0012A4                     u12857:
  9374   0012A4  0E81               	movlw	129
  9375   0012A6  2478               	addwf	(??_powf+1)^0,w,c
  9376   0012A8  0101               	movlb	1	; () banked
  9377   0012AA  6FA4               	movwf	powf@k& (0+255),b
  9378   0012AC  0EFF               	movlw	255
  9379   0012AE  2079               	addwfc	(??_powf+2)^0,w,c
  9380   0012B0  6FA5               	movwf	(powf@k+1)& (0+255),b
  9381   0012B2  0EFF               	movlw	255
  9382   0012B4  207A               	addwfc	(??_powf+3)^0,w,c
  9383   0012B6  6FA6               	movwf	(powf@k+2)& (0+255),b
  9384   0012B8  0EFF               	movlw	255
  9385   0012BA  207B               	addwfc	(??_powf+4)^0,w,c
  9386   0012BC  6FA7               	movwf	(powf@k+3)& (0+255),b
  9387   0012BE  51A4               	movf	powf@k& (0+255),w,b
  9388   0012C0  0817               	sublw	23
  9389   0012C2  6E77               	movwf	??_powf^0,c
  9390   0012C4  C194  F078         	movff	powf@iy,??_powf+1
  9391   0012C8  C195  F079         	movff	powf@iy+1,??_powf+2
  9392   0012CC  C196  F07A         	movff	powf@iy+2,??_powf+3
  9393   0012D0  C197  F07B         	movff	powf@iy+3,??_powf+4
  9394   0012D4                     u12865:
  9395   0012D4  6677               	tstfsz	??_powf^0,c
  9396   0012D6  EF6F  F009         	goto	u12866
  9397   0012DA  EF77  F009         	goto	u12867
  9398   0012DE                     u12866:
  9399   0012DE  347B               	rlcf	(??_powf+4)^0,w,c
  9400   0012E0  327B               	rrcf	(??_powf+4)^0,f,c
  9401   0012E2  327A               	rrcf	(??_powf+3)^0,f,c
  9402   0012E4  3279               	rrcf	(??_powf+2)^0,f,c
  9403   0012E6  3278               	rrcf	(??_powf+1)^0,f,c
  9404   0012E8  2E77               	decfsz	??_powf^0,f,c
  9405   0012EA  EF6A  F009         	goto	u12865
  9406   0012EE                     u12867:
  9407   0012EE  C078  F1A8         	movff	??_powf+1,powf@j
  9408   0012F2  C079  F1A9         	movff	??_powf+2,powf@j+1
  9409   0012F6  C07A  F1AA         	movff	??_powf+3,powf@j+2
  9410   0012FA  C07B  F1AB         	movff	??_powf+4,powf@j+3
  9411   0012FE  0101               	movlb	1	; () banked
  9412   001300  51A4               	movf	powf@k& (0+255),w,b
  9413   001302  0817               	sublw	23
  9414   001304  6E77               	movwf	??_powf^0,c
  9415   001306  C1A8  F078         	movff	powf@j,??_powf+1
  9416   00130A  C1A9  F079         	movff	powf@j+1,??_powf+2
  9417   00130E  C1AA  F07A         	movff	powf@j+2,??_powf+3
  9418   001312  C1AB  F07B         	movff	powf@j+3,??_powf+4
  9419   001316  2A77               	incf	??_powf^0,f,c
  9420   001318  EF93  F009         	goto	u12870
  9421   00131C                     u12875:
  9422   00131C  90D8               	bcf	status,0,c
  9423   00131E  3678               	rlcf	(??_powf+1)^0,f,c
  9424   001320  3679               	rlcf	(??_powf+2)^0,f,c
  9425   001322  367A               	rlcf	(??_powf+3)^0,f,c
  9426   001324  367B               	rlcf	(??_powf+4)^0,f,c
  9427   001326                     u12870:
  9428   001326  2E77               	decfsz	??_powf^0,f,c
  9429   001328  EF8E  F009         	goto	u12875
  9430   00132C  5194               	movf	powf@iy& (0+255),w,b
  9431   00132E  1878               	xorwf	(??_powf+1)^0,w,c
  9432   001330  E10D               	bnz	u12881
  9433   001332  5195               	movf	(powf@iy+1)& (0+255),w,b
  9434   001334  1879               	xorwf	(??_powf+2)^0,w,c
  9435   001336  E10A               	bnz	u12881
  9436   001338  5196               	movf	(powf@iy+2)& (0+255),w,b
  9437   00133A  187A               	xorwf	(??_powf+3)^0,w,c
  9438   00133C  E107               	bnz	u12881
  9439   00133E  5197               	movf	(powf@iy+3)& (0+255),w,b
  9440   001340  187B               	xorwf	(??_powf+4)^0,w,c
  9441   001342  A4D8               	btfss	status,2,c
  9442   001344  EFA6  F009         	goto	u12881
  9443   001348  EFA8  F009         	goto	u12880
  9444   00134C                     u12881:
  9445   00134C  EFC0  F009         	goto	l1649
  9446   001350                     u12880:
  9447   001350                     
  9448                           ; BSR set to: 1
  9449   001350  0E01               	movlw	1
  9450   001352  15A8               	andwf	powf@j& (0+255),w,b
  9451   001354  6E77               	movwf	??_powf^0,c
  9452   001356  0E00               	movlw	0
  9453   001358  15A9               	andwf	(powf@j+1)& (0+255),w,b
  9454   00135A  6E78               	movwf	(??_powf+1)^0,c
  9455   00135C  0E00               	movlw	0
  9456   00135E  15AA               	andwf	(powf@j+2)& (0+255),w,b
  9457   001360  6E79               	movwf	(??_powf+2)^0,c
  9458   001362  0E00               	movlw	0
  9459   001364  15AB               	andwf	(powf@j+3)& (0+255),w,b
  9460   001366  6E7A               	movwf	(??_powf+3)^0,c
  9461   001368  5077               	movf	??_powf^0,w,c
  9462   00136A  0802               	sublw	2
  9463   00136C  6F54               	movwf	powf@yisint& (0+255),b
  9464   00136E  0E00               	movlw	0
  9465   001370  5478               	subfwb	(??_powf+1)^0,w,c
  9466   001372  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9467   001374  0E00               	movlw	0
  9468   001376  5479               	subfwb	(??_powf+2)^0,w,c
  9469   001378  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9470   00137A  0E00               	movlw	0
  9471   00137C  547A               	subfwb	(??_powf+3)^0,w,c
  9472   00137E  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9473   001380                     l1649:
  9474                           
  9475                           ; BSR set to: 1
  9476   001380  0E80               	movlw	128
  9477   001382  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  9478   001384  E109               	bnz	u12891
  9479   001386  0E7F               	movlw	127
  9480   001388  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  9481   00138A  1194               	iorwf	powf@iy& (0+255),w,b
  9482   00138C  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9483   00138E  A4D8               	btfss	status,2,c
  9484   001390  EFCC  F009         	goto	u12891
  9485   001394  EFCE  F009         	goto	u12890
  9486   001398                     u12891:
  9487   001398  EF37  F00A         	goto	l12379
  9488   00139C                     u12890:
  9489   00139C                     
  9490                           ; BSR set to: 1
  9491   00139C  0E80               	movlw	128
  9492   00139E  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9493   0013A0  E109               	bnz	u12901
  9494   0013A2  0E3F               	movlw	63
  9495   0013A4  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9496   0013A6  11AC               	iorwf	powf@ix& (0+255),w,b
  9497   0013A8  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9498   0013AA  A4D8               	btfss	status,2,c
  9499   0013AC  EFDA  F009         	goto	u12901
  9500   0013B0  EFDC  F009         	goto	u12900
  9501   0013B4                     u12901:
  9502   0013B4  EFE6  F009         	goto	l12363
  9503   0013B8                     u12900:
  9504   0013B8                     
  9505                           ; BSR set to: 1
  9506   0013B8  0E00               	movlw	0
  9507   0013BA  6E6F               	movwf	?_powf^0,c
  9508   0013BC  0E00               	movlw	0
  9509   0013BE  6E70               	movwf	(?_powf+1)^0,c
  9510   0013C0  0E80               	movlw	128
  9511   0013C2  6E71               	movwf	(?_powf+2)^0,c
  9512   0013C4  0E3F               	movlw	63
  9513   0013C6  6E72               	movwf	(?_powf+3)^0,c
  9514   0013C8  EF06  F01A         	goto	l1644
  9515   0013CC                     l12363:
  9516                           
  9517                           ; BSR set to: 1
  9518   0013CC  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9519   0013CE  EFF5  F009         	goto	u12911
  9520   0013D2  05AC               	decf	powf@ix& (0+255),w,b
  9521   0013D4  0E00               	movlw	0
  9522   0013D6  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9523   0013D8  0E80               	movlw	128
  9524   0013DA  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9525   0013DC  0E3F               	movlw	63
  9526   0013DE  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9527   0013E0  A0D8               	btfss	status,0,c
  9528   0013E2  EFF5  F009         	goto	u12911
  9529   0013E6  EFF7  F009         	goto	u12910
  9530   0013EA                     u12911:
  9531   0013EA  EF12  F00A         	goto	l12371
  9532   0013EE                     u12910:
  9533   0013EE                     
  9534                           ; BSR set to: 1
  9535   0013EE  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9536   0013F0  EFFE  F009         	goto	u12920
  9537   0013F4  EFFC  F009         	goto	u12921
  9538   0013F8                     u12921:
  9539   0013F8  EF08  F00A         	goto	l1659
  9540   0013FC                     u12920:
  9541   0013FC                     
  9542                           ; BSR set to: 1
  9543   0013FC  0E00               	movlw	0
  9544   0013FE  6E6F               	movwf	?_powf^0,c
  9545   001400  0E00               	movlw	0
  9546   001402  6E70               	movwf	(?_powf+1)^0,c
  9547   001404  0E00               	movlw	0
  9548   001406  6E71               	movwf	(?_powf+2)^0,c
  9549   001408  0E00               	movlw	0
  9550   00140A  6E72               	movwf	(?_powf+3)^0,c
  9551   00140C  EF06  F01A         	goto	l1644
  9552   001410                     l1659:
  9553                           
  9554                           ; BSR set to: 1
  9555   001410  C073  F06F         	movff	powf@y,?_powf
  9556   001414  C074  F070         	movff	powf@y+1,?_powf+1
  9557   001418  C075  F071         	movff	powf@y+2,?_powf+2
  9558   00141C  C076  F072         	movff	powf@y+3,?_powf+3
  9559   001420  EF06  F01A         	goto	l1644
  9560   001424                     l12371:
  9561                           
  9562                           ; BSR set to: 1
  9563   001424  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9564   001426  EF19  F00A         	goto	u12930
  9565   00142A  EF17  F00A         	goto	u12931
  9566   00142E                     u12931:
  9567   00142E  EF2D  F00A         	goto	l12375
  9568   001432                     u12930:
  9569   001432                     
  9570                           ; BSR set to: 1
  9571   001432  C073  F001         	movff	powf@y,___flneg@f1
  9572   001436  C074  F002         	movff	powf@y+1,___flneg@f1+1
  9573   00143A  C075  F003         	movff	powf@y+2,___flneg@f1+2
  9574   00143E  C076  F004         	movff	powf@y+3,___flneg@f1+3
  9575   001442  ECE0  F03C         	call	___flneg	;wreg free
  9576   001446  C001  F06F         	movff	?___flneg,?_powf
  9577   00144A  C002  F070         	movff	?___flneg+1,?_powf+1
  9578   00144E  C003  F071         	movff	?___flneg+2,?_powf+2
  9579   001452  C004  F072         	movff	?___flneg+3,?_powf+3
  9580   001456  EF06  F01A         	goto	l1644
  9581   00145A                     l12375:
  9582                           
  9583                           ; BSR set to: 1
  9584   00145A  0E00               	movlw	0
  9585   00145C  6E6F               	movwf	?_powf^0,c
  9586   00145E  0E00               	movlw	0
  9587   001460  6E70               	movwf	(?_powf+1)^0,c
  9588   001462  0E00               	movlw	0
  9589   001464  6E71               	movwf	(?_powf+2)^0,c
  9590   001466  0E00               	movlw	0
  9591   001468  6E72               	movwf	(?_powf+3)^0,c
  9592   00146A  EF06  F01A         	goto	l1644
  9593   00146E                     l12379:
  9594                           
  9595                           ; BSR set to: 1
  9596   00146E  0E80               	movlw	128
  9597   001470  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  9598   001472  E109               	bnz	u12941
  9599   001474  0E3F               	movlw	63
  9600   001476  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  9601   001478  1194               	iorwf	powf@iy& (0+255),w,b
  9602   00147A  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9603   00147C  A4D8               	btfss	status,2,c
  9604   00147E  EF43  F00A         	goto	u12941
  9605   001482  EF45  F00A         	goto	u12940
  9606   001486                     u12941:
  9607   001486  EF72  F00A         	goto	l12385
  9608   00148A                     u12940:
  9609   00148A                     
  9610                           ; BSR set to: 1
  9611   00148A  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9612   00148C  EF4C  F00A         	goto	u12950
  9613   001490  EF4A  F00A         	goto	u12951
  9614   001494                     u12951:
  9615   001494  EF68  F00A         	goto	l1669
  9616   001498                     u12950:
  9617   001498                     
  9618                           ; BSR set to: 1
  9619   001498  0E00               	movlw	0
  9620   00149A  6E42               	movwf	___fldiv@b^0,c
  9621   00149C  0E00               	movlw	0
  9622   00149E  6E43               	movwf	(___fldiv@b+1)^0,c
  9623   0014A0  0E80               	movlw	128
  9624   0014A2  6E44               	movwf	(___fldiv@b+2)^0,c
  9625   0014A4  0E3F               	movlw	63
  9626   0014A6  6E45               	movwf	(___fldiv@b+3)^0,c
  9627   0014A8  C06F  F046         	movff	powf@x,___fldiv@a
  9628   0014AC  C070  F047         	movff	powf@x+1,___fldiv@a+1
  9629   0014B0  C071  F048         	movff	powf@x+2,___fldiv@a+2
  9630   0014B4  C072  F049         	movff	powf@x+3,___fldiv@a+3
  9631   0014B8  EC2B  F028         	call	___fldiv	;wreg free
  9632   0014BC  C042  F06F         	movff	?___fldiv,?_powf
  9633   0014C0  C043  F070         	movff	?___fldiv+1,?_powf+1
  9634   0014C4  C044  F071         	movff	?___fldiv+2,?_powf+2
  9635   0014C8  C045  F072         	movff	?___fldiv+3,?_powf+3
  9636   0014CC  EF06  F01A         	goto	l1644
  9637   0014D0                     l1669:
  9638                           
  9639                           ; BSR set to: 1
  9640   0014D0  C06F  F06F         	movff	powf@x,?_powf
  9641   0014D4  C070  F070         	movff	powf@x+1,?_powf+1
  9642   0014D8  C071  F071         	movff	powf@x+2,?_powf+2
  9643   0014DC  C072  F072         	movff	powf@x+3,?_powf+3
  9644   0014E0  EF06  F01A         	goto	l1644
  9645   0014E4                     l12385:
  9646                           
  9647                           ; BSR set to: 1
  9648   0014E4  0E40               	movlw	64
  9649   0014E6  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  9650   0014E8  1184               	iorwf	powf@hy& (0+255),w,b
  9651   0014EA  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9652   0014EC  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9653   0014EE  A4D8               	btfss	status,2,c
  9654   0014F0  EF7C  F00A         	goto	u12961
  9655   0014F4  EF7E  F00A         	goto	u12960
  9656   0014F8                     u12961:
  9657   0014F8  EF9A  F00A         	goto	l12391
  9658   0014FC                     u12960:
  9659   0014FC                     
  9660                           ; BSR set to: 1
  9661   0014FC  C06F  F019         	movff	powf@x,___flmul@b
  9662   001500  C070  F01A         	movff	powf@x+1,___flmul@b+1
  9663   001504  C071  F01B         	movff	powf@x+2,___flmul@b+2
  9664   001508  C072  F01C         	movff	powf@x+3,___flmul@b+3
  9665   00150C  C06F  F01D         	movff	powf@x,___flmul@a
  9666   001510  C070  F01E         	movff	powf@x+1,___flmul@a+1
  9667   001514  C071  F01F         	movff	powf@x+2,___flmul@a+2
  9668   001518  C072  F020         	movff	powf@x+3,___flmul@a+3
  9669   00151C  EC27  F024         	call	___flmul	;wreg free
  9670   001520  C019  F06F         	movff	?___flmul,?_powf
  9671   001524  C01A  F070         	movff	?___flmul+1,?_powf+1
  9672   001528  C01B  F071         	movff	?___flmul+2,?_powf+2
  9673   00152C  C01C  F072         	movff	?___flmul+3,?_powf+3
  9674   001530  EF06  F01A         	goto	l1644
  9675   001534                     l12391:
  9676                           
  9677                           ; BSR set to: 1
  9678   001534  0E3F               	movlw	63
  9679   001536  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  9680   001538  1184               	iorwf	powf@hy& (0+255),w,b
  9681   00153A  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9682   00153C  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9683   00153E  A4D8               	btfss	status,2,c
  9684   001540  EFA4  F00A         	goto	u12971
  9685   001544  EFA6  F00A         	goto	u12970
  9686   001548                     u12971:
  9687   001548  EFC1  F00A         	goto	l1673
  9688   00154C                     u12970:
  9689   00154C                     
  9690                           ; BSR set to: 1
  9691   00154C  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9692   00154E  EFAB  F00A         	goto	u12981
  9693   001552  EFAD  F00A         	goto	u12980
  9694   001556                     u12981:
  9695   001556  EFC1  F00A         	goto	l1673
  9696   00155A                     u12980:
  9697   00155A                     
  9698                           ; BSR set to: 1
  9699   00155A  C06F  F001         	movff	powf@x,sqrtf@x
  9700   00155E  C070  F002         	movff	powf@x+1,sqrtf@x+1
  9701   001562  C071  F003         	movff	powf@x+2,sqrtf@x+2
  9702   001566  C072  F004         	movff	powf@x+3,sqrtf@x+3
  9703   00156A  EC3C  F026         	call	_sqrtf	;wreg free
  9704   00156E  C001  F06F         	movff	?_sqrtf,?_powf
  9705   001572  C002  F070         	movff	?_sqrtf+1,?_powf+1
  9706   001576  C003  F071         	movff	?_sqrtf+2,?_powf+2
  9707   00157A  C004  F072         	movff	?_sqrtf+3,?_powf+3
  9708   00157E  EF06  F01A         	goto	l1644
  9709   001582                     l1673:
  9710                           
  9711                           ; BSR set to: 1
  9712   001582  C1AC  F178         	movff	powf@ix,powf@ax
  9713   001586  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  9714   00158A  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  9715   00158E  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  9716   001592                     
  9717                           ; BSR set to: 1
  9718   001592  0E80               	movlw	128
  9719   001594  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9720   001596  E10B               	bnz	u12990
  9721   001598  0E7F               	movlw	127
  9722   00159A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9723   00159C  11AC               	iorwf	powf@ix& (0+255),w,b
  9724   00159E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9725   0015A0  B4D8               	btfsc	status,2,c
  9726   0015A2  EFD5  F00A         	goto	u12991
  9727   0015A6  EFD7  F00A         	goto	u12990
  9728   0015AA                     u12991:
  9729   0015AA  EFF0  F00A         	goto	l1677
  9730   0015AE                     u12990:
  9731   0015AE                     
  9732                           ; BSR set to: 1
  9733   0015AE  51AC               	movf	powf@ix& (0+255),w,b
  9734   0015B0  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9735   0015B2  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  9736   0015B4  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  9737   0015B6  B4D8               	btfsc	status,2,c
  9738   0015B8  EFE0  F00A         	goto	u13001
  9739   0015BC  EFE2  F00A         	goto	u13000
  9740   0015C0                     u13001:
  9741   0015C0  EFF0  F00A         	goto	l1677
  9742   0015C4                     u13000:
  9743   0015C4                     
  9744                           ; BSR set to: 1
  9745   0015C4  0E80               	movlw	128
  9746   0015C6  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9747   0015C8  E109               	bnz	u13011
  9748   0015CA  0E3F               	movlw	63
  9749   0015CC  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9750   0015CE  11AC               	iorwf	powf@ix& (0+255),w,b
  9751   0015D0  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9752   0015D2  A4D8               	btfss	status,2,c
  9753   0015D4  EFEE  F00A         	goto	u13011
  9754   0015D8  EFF0  F00A         	goto	u13010
  9755   0015DC                     u13011:
  9756   0015DC  EF79  F00B         	goto	l12423
  9757   0015E0                     u13010:
  9758   0015E0                     l1677:
  9759                           
  9760                           ; BSR set to: 1
  9761   0015E0  C178  F1B4         	movff	powf@ax,powf@z
  9762   0015E4  C179  F1B5         	movff	powf@ax+1,powf@z+1
  9763   0015E8  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  9764   0015EC  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  9765   0015F0                     
  9766                           ; BSR set to: 1
  9767   0015F0  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9768   0015F2  EFFF  F00A         	goto	u13020
  9769   0015F6  EFFD  F00A         	goto	u13021
  9770   0015FA                     u13021:
  9771   0015FA  EF19  F00B         	goto	l12409
  9772   0015FE                     u13020:
  9773   0015FE                     
  9774                           ; BSR set to: 1
  9775   0015FE  0E00               	movlw	0
  9776   001600  6E42               	movwf	___fldiv@b^0,c
  9777   001602  0E00               	movlw	0
  9778   001604  6E43               	movwf	(___fldiv@b+1)^0,c
  9779   001606  0E80               	movlw	128
  9780   001608  6E44               	movwf	(___fldiv@b+2)^0,c
  9781   00160A  0E3F               	movlw	63
  9782   00160C  6E45               	movwf	(___fldiv@b+3)^0,c
  9783   00160E  C1B4  F046         	movff	powf@z,___fldiv@a
  9784   001612  C1B5  F047         	movff	powf@z+1,___fldiv@a+1
  9785   001616  C1B6  F048         	movff	powf@z+2,___fldiv@a+2
  9786   00161A  C1B7  F049         	movff	powf@z+3,___fldiv@a+3
  9787   00161E  EC2B  F028         	call	___fldiv	;wreg free
  9788   001622  C042  F1B4         	movff	?___fldiv,powf@z
  9789   001626  C043  F1B5         	movff	?___fldiv+1,powf@z+1
  9790   00162A  C044  F1B6         	movff	?___fldiv+2,powf@z+2
  9791   00162E  C045  F1B7         	movff	?___fldiv+3,powf@z+3
  9792   001632                     l12409:
  9793   001632  0101               	movlb	1	; () banked
  9794   001634  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9795   001636  EF21  F00B         	goto	u13030
  9796   00163A  EF1F  F00B         	goto	u13031
  9797   00163E                     u13031:
  9798   00163E  EF6F  F00B         	goto	l12419
  9799   001642                     u13030:
  9800   001642                     
  9801                           ; BSR set to: 1
  9802   001642  0E00               	movlw	0
  9803   001644  25AC               	addwf	powf@ix& (0+255),w,b
  9804   001646  6E77               	movwf	??_powf^0,c
  9805   001648  0E00               	movlw	0
  9806   00164A  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  9807   00164C  6E78               	movwf	(??_powf+1)^0,c
  9808   00164E  0E80               	movlw	128
  9809   001650  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  9810   001652  6E79               	movwf	(??_powf+2)^0,c
  9811   001654  0EC0               	movlw	192
  9812   001656  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  9813   001658  6E7A               	movwf	(??_powf+3)^0,c
  9814   00165A  5154               	movf	powf@yisint& (0+255),w,b
  9815   00165C  1077               	iorwf	??_powf^0,w,c
  9816   00165E  6E7B               	movwf	(??_powf+4)^0,c
  9817   001660  5155               	movf	(powf@yisint+1)& (0+255),w,b
  9818   001662  1078               	iorwf	(??_powf+1)^0,w,c
  9819   001664  6E7C               	movwf	(??_powf+5)^0,c
  9820   001666  5156               	movf	(powf@yisint+2)& (0+255),w,b
  9821   001668  1079               	iorwf	(??_powf+2)^0,w,c
  9822   00166A  6E7D               	movwf	(??_powf+6)^0,c
  9823   00166C  5157               	movf	(powf@yisint+3)& (0+255),w,b
  9824   00166E  107A               	iorwf	(??_powf+3)^0,w,c
  9825   001670  6E7E               	movwf	(??_powf+7)^0,c
  9826   001672  507B               	movf	(??_powf+4)^0,w,c
  9827   001674  107C               	iorwf	(??_powf+5)^0,w,c
  9828   001676  107D               	iorwf	(??_powf+6)^0,w,c
  9829   001678  107E               	iorwf	(??_powf+7)^0,w,c
  9830   00167A  A4D8               	btfss	status,2,c
  9831   00167C  EF42  F00B         	goto	u13041
  9832   001680  EF44  F00B         	goto	u13040
  9833   001684                     u13041:
  9834   001684  EF52  F00B         	goto	l12415
  9835   001688                     u13040:
  9836   001688                     l12413:
  9837                           
  9838                           ; BSR set to: 1
  9839   001688  0E00               	movlw	0
  9840   00168A  6FE7               	movwf	(_errno+1)& (0+255),b
  9841   00168C  0E21               	movlw	33
  9842   00168E  6FE6               	movwf	_errno& (0+255),b
  9843   001690  0EFF               	movlw	255
  9844   001692  6FB4               	movwf	powf@z& (0+255),b
  9845   001694  0EFF               	movlw	255
  9846   001696  6FB5               	movwf	(powf@z+1)& (0+255),b
  9847   001698  0EFF               	movlw	255
  9848   00169A  6FB6               	movwf	(powf@z+2)& (0+255),b
  9849   00169C  0E7F               	movlw	127
  9850   00169E  6FB7               	movwf	(powf@z+3)& (0+255),b
  9851   0016A0  EF6F  F00B         	goto	l12419
  9852   0016A4                     l12415:
  9853                           
  9854                           ; BSR set to: 1
  9855   0016A4  0554               	decf	powf@yisint& (0+255),w,b
  9856   0016A6  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9857   0016A8  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9858   0016AA  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9859   0016AC  A4D8               	btfss	status,2,c
  9860   0016AE  EF5B  F00B         	goto	u13051
  9861   0016B2  EF5D  F00B         	goto	u13050
  9862   0016B6                     u13051:
  9863   0016B6  EF6F  F00B         	goto	l12419
  9864   0016BA                     u13050:
  9865   0016BA                     
  9866                           ; BSR set to: 1
  9867   0016BA  C1B4  F001         	movff	powf@z,___flneg@f1
  9868   0016BE  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  9869   0016C2  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  9870   0016C6  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  9871   0016CA  ECE0  F03C         	call	___flneg	;wreg free
  9872   0016CE  C001  F1B4         	movff	?___flneg,powf@z
  9873   0016D2  C002  F1B5         	movff	?___flneg+1,powf@z+1
  9874   0016D6  C003  F1B6         	movff	?___flneg+2,powf@z+2
  9875   0016DA  C004  F1B7         	movff	?___flneg+3,powf@z+3
  9876   0016DE                     l12419:
  9877   0016DE  C1B4  F06F         	movff	powf@z,?_powf
  9878   0016E2  C1B5  F070         	movff	powf@z+1,?_powf+1
  9879   0016E6  C1B6  F071         	movff	powf@z+2,?_powf+2
  9880   0016EA  C1B7  F072         	movff	powf@z+3,?_powf+3
  9881   0016EE  EF06  F01A         	goto	l1644
  9882   0016F2                     l12423:
  9883                           
  9884                           ; BSR set to: 1
  9885   0016F2  0E00               	movlw	0
  9886   0016F4  6F64               	movwf	powf@sn& (0+255),b
  9887   0016F6  0E00               	movlw	0
  9888   0016F8  6F65               	movwf	(powf@sn+1)& (0+255),b
  9889   0016FA  0E00               	movlw	0
  9890   0016FC  6F66               	movwf	(powf@sn+2)& (0+255),b
  9891   0016FE  0E00               	movlw	0
  9892   001700  6F67               	movwf	(powf@sn+3)& (0+255),b
  9893   001702                     
  9894                           ; BSR set to: 1
  9895   001702  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9896   001704  EF88  F00B         	goto	u13060
  9897   001708  EF86  F00B         	goto	u13061
  9898   00170C                     u13061:
  9899   00170C  EFA8  F00B         	goto	l12439
  9900   001710                     u13060:
  9901   001710                     
  9902                           ; BSR set to: 1
  9903   001710  5154               	movf	powf@yisint& (0+255),w,b
  9904   001712  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9905   001714  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9906   001716  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9907   001718  A4D8               	btfss	status,2,c
  9908   00171A  EF91  F00B         	goto	u13071
  9909   00171E  EF93  F00B         	goto	u13070
  9910   001722                     u13071:
  9911   001722  EF95  F00B         	goto	l12435
  9912   001726                     u13070:
  9913   001726  EF44  F00B         	goto	l12413
  9914   00172A                     l12435:
  9915                           
  9916                           ; BSR set to: 1
  9917   00172A  0554               	decf	powf@yisint& (0+255),w,b
  9918   00172C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9919   00172E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9920   001730  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9921   001732  A4D8               	btfss	status,2,c
  9922   001734  EF9E  F00B         	goto	u13081
  9923   001738  EFA0  F00B         	goto	u13080
  9924   00173C                     u13081:
  9925   00173C  EFA8  F00B         	goto	l12439
  9926   001740                     u13080:
  9927   001740                     
  9928                           ; BSR set to: 1
  9929   001740  0E00               	movlw	0
  9930   001742  6F64               	movwf	powf@sn& (0+255),b
  9931   001744  0E00               	movlw	0
  9932   001746  6F65               	movwf	(powf@sn+1)& (0+255),b
  9933   001748  0E00               	movlw	0
  9934   00174A  6F66               	movwf	(powf@sn+2)& (0+255),b
  9935   00174C  0E80               	movlw	128
  9936   00174E  6F67               	movwf	(powf@sn+3)& (0+255),b
  9937   001750                     l12439:
  9938                           
  9939                           ; BSR set to: 1
  9940   001750  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9941   001752  EFB7  F00B         	goto	u13091
  9942   001756  0594               	decf	powf@iy& (0+255),w,b
  9943   001758  0E00               	movlw	0
  9944   00175A  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  9945   00175C  0E00               	movlw	0
  9946   00175E  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  9947   001760  0E4D               	movlw	77
  9948   001762  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9949   001764  A0D8               	btfss	status,0,c
  9950   001766  EFB7  F00B         	goto	u13091
  9951   00176A  EFB9  F00B         	goto	u13090
  9952   00176E                     u13091:
  9953   00176E  EF7B  F00D         	goto	l12495
  9954   001772                     u13090:
  9955   001772                     
  9956                           ; BSR set to: 1
  9957   001772  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9958   001774  EFCB  F00B         	goto	u13100
  9959   001778  0EF8               	movlw	248
  9960   00177A  5DAC               	subwf	powf@ix& (0+255),w,b
  9961   00177C  0EFF               	movlw	255
  9962   00177E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9963   001780  0E7F               	movlw	127
  9964   001782  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9965   001784  0E3F               	movlw	63
  9966   001786  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9967   001788  B0D8               	btfsc	status,0,c
  9968   00178A  EFC9  F00B         	goto	u13101
  9969   00178E  EFCB  F00B         	goto	u13100
  9970   001792                     u13101:
  9971   001792  EFEB  F00B         	goto	l12457
  9972   001796                     u13100:
  9973   001796                     
  9974                           ; BSR set to: 1
  9975   001796  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9976   001798  EFD2  F00B         	goto	u13110
  9977   00179C  EFD0  F00B         	goto	u13111
  9978   0017A0                     u13111:
  9979   0017A0  EFE1  F00B         	goto	l12453
  9980   0017A4                     u13110:
  9981   0017A4                     l12445:
  9982   0017A4  0E00               	movlw	0
  9983   0017A6  0101               	movlb	1	; () banked
  9984   0017A8  1164               	iorwf	powf@sn& (0+255),w,b
  9985   0017AA  6FB4               	movwf	powf@z& (0+255),b
  9986   0017AC  0E00               	movlw	0
  9987   0017AE  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  9988   0017B0  6FB5               	movwf	(powf@z+1)& (0+255),b
  9989   0017B2  0E80               	movlw	128
  9990   0017B4  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  9991   0017B6  6FB6               	movwf	(powf@z+2)& (0+255),b
  9992   0017B8  0E7F               	movlw	127
  9993   0017BA  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  9994   0017BC  6FB7               	movwf	(powf@z+3)& (0+255),b
  9995   0017BE  EF6F  F00B         	goto	l12419
  9996   0017C2                     l12453:
  9997                           
  9998                           ; BSR set to: 1
  9999   0017C2  0E00               	movlw	0
 10000   0017C4  6E6F               	movwf	?_powf^0,c
 10001   0017C6  0E00               	movlw	0
 10002   0017C8  6E70               	movwf	(?_powf+1)^0,c
 10003   0017CA  0E00               	movlw	0
 10004   0017CC  6E71               	movwf	(?_powf+2)^0,c
 10005   0017CE  0E00               	movlw	0
 10006   0017D0  6E72               	movwf	(?_powf+3)^0,c
 10007   0017D2  EF06  F01A         	goto	l1644
 10008   0017D6                     l12457:
 10009                           
 10010                           ; BSR set to: 1
 10011   0017D6  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10012   0017D8  EFFB  F00B         	goto	u13121
 10013   0017DC  0E08               	movlw	8
 10014   0017DE  5DAC               	subwf	powf@ix& (0+255),w,b
 10015   0017E0  0E00               	movlw	0
 10016   0017E2  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10017   0017E4  0E80               	movlw	128
 10018   0017E6  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10019   0017E8  0E3F               	movlw	63
 10020   0017EA  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10021   0017EC  A0D8               	btfss	status,0,c
 10022   0017EE  EFFB  F00B         	goto	u13121
 10023   0017F2  EFFD  F00B         	goto	u13120
 10024   0017F6                     u13121:
 10025   0017F6  EF18  F00C         	goto	l12473
 10026   0017FA                     u13120:
 10027   0017FA                     
 10028                           ; BSR set to: 1
 10029   0017FA  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10030   0017FC  EF0A  F00C         	goto	u13131
 10031   001800  5187               	movf	(powf@hy+3)& (0+255),w,b
 10032   001802  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10033   001804  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10034   001806  E108               	bnz	u13130
 10035   001808  0584               	decf	powf@hy& (0+255),w,b
 10036   00180A  A0D8               	btfss	status,0,c
 10037   00180C  EF0A  F00C         	goto	u13131
 10038   001810  EF0C  F00C         	goto	u13130
 10039   001814                     u13131:
 10040   001814  EF0E  F00C         	goto	l12469
 10041   001818                     u13130:
 10042   001818  EFD2  F00B         	goto	l12445
 10043   00181C                     l12469:
 10044                           
 10045                           ; BSR set to: 1
 10046   00181C  0E00               	movlw	0
 10047   00181E  6E6F               	movwf	?_powf^0,c
 10048   001820  0E00               	movlw	0
 10049   001822  6E70               	movwf	(?_powf+1)^0,c
 10050   001824  0E00               	movlw	0
 10051   001826  6E71               	movwf	(?_powf+2)^0,c
 10052   001828  0E00               	movlw	0
 10053   00182A  6E72               	movwf	(?_powf+3)^0,c
 10054   00182C  EF06  F01A         	goto	l1644
 10055   001830                     l12473:
 10056                           
 10057                           ; BSR set to: 1
 10058   001830  C178  F032         	movff	powf@ax,___fladd@b
 10059   001834  C179  F033         	movff	powf@ax+1,___fladd@b+1
 10060   001838  C17A  F034         	movff	powf@ax+2,___fladd@b+2
 10061   00183C  C17B  F035         	movff	powf@ax+3,___fladd@b+3
 10062   001840  0E00               	movlw	0
 10063   001842  6E36               	movwf	___fladd@a^0,c
 10064   001844  0E00               	movlw	0
 10065   001846  6E37               	movwf	(___fladd@a+1)^0,c
 10066   001848  0E80               	movlw	128
 10067   00184A  6E38               	movwf	(___fladd@a+2)^0,c
 10068   00184C  0EBF               	movlw	191
 10069   00184E  6E39               	movwf	(___fladd@a+3)^0,c
 10070   001850  ECC7  F021         	call	___fladd	;wreg free
 10071   001854  C032  F1B0         	movff	?___fladd,powf@t
 10072   001858  C033  F1B1         	movff	?___fladd+1,powf@t+1
 10073   00185C  C034  F1B2         	movff	?___fladd+2,powf@t+2
 10074   001860  C035  F1B3         	movff	?___fladd+3,powf@t+3
 10075   001864  0E00               	movlw	0
 10076   001866  6E1D               	movwf	___flmul@a^0,c
 10077   001868  0E00               	movlw	0
 10078   00186A  6E1E               	movwf	(___flmul@a+1)^0,c
 10079   00186C  0E80               	movlw	128
 10080   00186E  6E1F               	movwf	(___flmul@a+2)^0,c
 10081   001870  0E3E               	movlw	62
 10082   001872  6E20               	movwf	(___flmul@a+3)^0,c
 10083   001874  C1B0  F019         	movff	powf@t,___flmul@b
 10084   001878  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10085   00187C  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10086   001880  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10087   001884  EC27  F024         	call	___flmul	;wreg free
 10088   001888  C019  F05F         	movff	?___flmul,___flsub@a
 10089   00188C  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10090   001890  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10091   001894  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10092   001898  0EAB               	movlw	171
 10093   00189A  6E5B               	movwf	___flsub@b^0,c
 10094   00189C  0EAA               	movlw	170
 10095   00189E  6E5C               	movwf	(___flsub@b+1)^0,c
 10096   0018A0  0EAA               	movlw	170
 10097   0018A2  6E5D               	movwf	(___flsub@b+2)^0,c
 10098   0018A4  0E3E               	movlw	62
 10099   0018A6  6E5E               	movwf	(___flsub@b+3)^0,c
 10100   0018A8  EC52  F03B         	call	___flsub	;wreg free
 10101   0018AC  C05B  F148         	movff	?___flsub,_powf$2098
 10102   0018B0  C05C  F149         	movff	?___flsub+1,_powf$2098+1
 10103   0018B4  C05D  F14A         	movff	?___flsub+2,_powf$2098+2
 10104   0018B8  C05E  F14B         	movff	?___flsub+3,_powf$2098+3
 10105   0018BC  C1B0  F01D         	movff	powf@t,___flmul@a
 10106   0018C0  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 10107   0018C4  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 10108   0018C8  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 10109   0018CC  C1B0  F019         	movff	powf@t,___flmul@b
 10110   0018D0  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10111   0018D4  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10112   0018D8  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10113   0018DC  EC27  F024         	call	___flmul	;wreg free
 10114   0018E0  C019  F15C         	movff	?___flmul,_powf$2099
 10115   0018E4  C01A  F15D         	movff	?___flmul+1,_powf$2099+1
 10116   0018E8  C01B  F15E         	movff	?___flmul+2,_powf$2099+2
 10117   0018EC  C01C  F15F         	movff	?___flmul+3,_powf$2099+3
 10118   0018F0  C1B0  F01D         	movff	powf@t,___flmul@a
 10119   0018F4  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 10120   0018F8  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 10121   0018FC  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 10122   001900  C148  F019         	movff	_powf$2098,___flmul@b
 10123   001904  C149  F01A         	movff	_powf$2098+1,___flmul@b+1
 10124   001908  C14A  F01B         	movff	_powf$2098+2,___flmul@b+2
 10125   00190C  C14B  F01C         	movff	_powf$2098+3,___flmul@b+3
 10126   001910  EC27  F024         	call	___flmul	;wreg free
 10127   001914  C019  F05F         	movff	?___flmul,___flsub@a
 10128   001918  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10129   00191C  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10130   001920  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10131   001924  0E00               	movlw	0
 10132   001926  6E5B               	movwf	___flsub@b^0,c
 10133   001928  0E00               	movlw	0
 10134   00192A  6E5C               	movwf	(___flsub@b+1)^0,c
 10135   00192C  0E00               	movlw	0
 10136   00192E  6E5D               	movwf	(___flsub@b+2)^0,c
 10137   001930  0E3F               	movlw	63
 10138   001932  6E5E               	movwf	(___flsub@b+3)^0,c
 10139   001934  EC52  F03B         	call	___flsub	;wreg free
 10140   001938  C05B  F14C         	movff	?___flsub,_powf$2100
 10141   00193C  C05C  F14D         	movff	?___flsub+1,_powf$2100+1
 10142   001940  C05D  F14E         	movff	?___flsub+2,_powf$2100+2
 10143   001944  C05E  F14F         	movff	?___flsub+3,_powf$2100+3
 10144   001948  C15C  F019         	movff	_powf$2099,___flmul@b
 10145   00194C  C15D  F01A         	movff	_powf$2099+1,___flmul@b+1
 10146   001950  C15E  F01B         	movff	_powf$2099+2,___flmul@b+2
 10147   001954  C15F  F01C         	movff	_powf$2099+3,___flmul@b+3
 10148   001958  C14C  F01D         	movff	_powf$2100,___flmul@a
 10149   00195C  C14D  F01E         	movff	_powf$2100+1,___flmul@a+1
 10150   001960  C14E  F01F         	movff	_powf$2100+2,___flmul@a+2
 10151   001964  C14F  F020         	movff	_powf$2100+3,___flmul@a+3
 10152   001968  EC27  F024         	call	___flmul	;wreg free
 10153   00196C  C019  F144         	movff	?___flmul,powf@w
 10154   001970  C01A  F145         	movff	?___flmul+1,powf@w+1
 10155   001974  C01B  F146         	movff	?___flmul+2,powf@w+2
 10156   001978  C01C  F147         	movff	?___flmul+3,powf@w+3
 10157   00197C  C1B0  F019         	movff	powf@t,___flmul@b
 10158   001980  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10159   001984  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10160   001988  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10161   00198C  0E00               	movlw	0
 10162   00198E  6E1D               	movwf	___flmul@a^0,c
 10163   001990  0EAA               	movlw	170
 10164   001992  6E1E               	movwf	(___flmul@a+1)^0,c
 10165   001994  0EB8               	movlw	184
 10166   001996  6E1F               	movwf	(___flmul@a+2)^0,c
 10167   001998  0E3F               	movlw	63
 10168   00199A  6E20               	movwf	(___flmul@a+3)^0,c
 10169   00199C  EC27  F024         	call	___flmul	;wreg free
 10170   0019A0  C019  F17C         	movff	?___flmul,powf@u
 10171   0019A4  C01A  F17D         	movff	?___flmul+1,powf@u+1
 10172   0019A8  C01B  F17E         	movff	?___flmul+2,powf@u+2
 10173   0019AC  C01C  F17F         	movff	?___flmul+3,powf@u+3
 10174   0019B0  0E70               	movlw	112
 10175   0019B2  6E1D               	movwf	___flmul@a^0,c
 10176   0019B4  0EA5               	movlw	165
 10177   0019B6  6E1E               	movwf	(___flmul@a+1)^0,c
 10178   0019B8  0EEC               	movlw	236
 10179   0019BA  6E1F               	movwf	(___flmul@a+2)^0,c
 10180   0019BC  0E36               	movlw	54
 10181   0019BE  6E20               	movwf	(___flmul@a+3)^0,c
 10182   0019C0  C1B0  F019         	movff	powf@t,___flmul@b
 10183   0019C4  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10184   0019C8  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10185   0019CC  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10186   0019D0  EC27  F024         	call	___flmul	;wreg free
 10187   0019D4  C019  F05B         	movff	?___flmul,___flsub@b
 10188   0019D8  C01A  F05C         	movff	?___flmul+1,___flsub@b+1
 10189   0019DC  C01B  F05D         	movff	?___flmul+2,___flsub@b+2
 10190   0019E0  C01C  F05E         	movff	?___flmul+3,___flsub@b+3
 10191   0019E4  0E3B               	movlw	59
 10192   0019E6  6E1D               	movwf	___flmul@a^0,c
 10193   0019E8  0EAA               	movlw	170
 10194   0019EA  6E1E               	movwf	(___flmul@a+1)^0,c
 10195   0019EC  0EB8               	movlw	184
 10196   0019EE  6E1F               	movwf	(___flmul@a+2)^0,c
 10197   0019F0  0E3F               	movlw	63
 10198   0019F2  6E20               	movwf	(___flmul@a+3)^0,c
 10199   0019F4  C144  F019         	movff	powf@w,___flmul@b
 10200   0019F8  C145  F01A         	movff	powf@w+1,___flmul@b+1
 10201   0019FC  C146  F01B         	movff	powf@w+2,___flmul@b+2
 10202   001A00  C147  F01C         	movff	powf@w+3,___flmul@b+3
 10203   001A04  EC27  F024         	call	___flmul	;wreg free
 10204   001A08  C019  F05F         	movff	?___flmul,___flsub@a
 10205   001A0C  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10206   001A10  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10207   001A14  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10208   001A18  EC52  F03B         	call	___flsub	;wreg free
 10209   001A1C  C05B  F180         	movff	?___flsub,powf@v
 10210   001A20  C05C  F181         	movff	?___flsub+1,powf@v+1
 10211   001A24  C05D  F182         	movff	?___flsub+2,powf@v+2
 10212   001A28  C05E  F183         	movff	?___flsub+3,powf@v+3
 10213   001A2C  C17C  F032         	movff	powf@u,___fladd@b
 10214   001A30  C17D  F033         	movff	powf@u+1,___fladd@b+1
 10215   001A34  C17E  F034         	movff	powf@u+2,___fladd@b+2
 10216   001A38  C17F  F035         	movff	powf@u+3,___fladd@b+3
 10217   001A3C  C180  F036         	movff	powf@v,___fladd@a
 10218   001A40  C181  F037         	movff	powf@v+1,___fladd@a+1
 10219   001A44  C182  F038         	movff	powf@v+2,___fladd@a+2
 10220   001A48  C183  F039         	movff	powf@v+3,___fladd@a+3
 10221   001A4C  ECC7  F021         	call	___fladd	;wreg free
 10222   001A50  C032  F18C         	movff	?___fladd,powf@t1
 10223   001A54  C033  F18D         	movff	?___fladd+1,powf@t1+1
 10224   001A58  C034  F18E         	movff	?___fladd+2,powf@t1+2
 10225   001A5C  C035  F18F         	movff	?___fladd+3,powf@t1+3
 10226   001A60  C18C  F198         	movff	powf@t1,powf@is
 10227   001A64  C18D  F199         	movff	powf@t1+1,powf@is+1
 10228   001A68  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10229   001A6C  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10230   001A70  0E00               	movlw	0
 10231   001A72  0101               	movlb	1	; () banked
 10232   001A74  1598               	andwf	powf@is& (0+255),w,b
 10233   001A76  6F8C               	movwf	powf@t1& (0+255),b
 10234   001A78  0EF0               	movlw	240
 10235   001A7A  1599               	andwf	(powf@is+1)& (0+255),w,b
 10236   001A7C  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10237   001A7E  0EFF               	movlw	255
 10238   001A80  159A               	andwf	(powf@is+2)& (0+255),w,b
 10239   001A82  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10240   001A84  0EFF               	movlw	255
 10241   001A86  159B               	andwf	(powf@is+3)& (0+255),w,b
 10242   001A88  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10243   001A8A                     
 10244                           ; BSR set to: 1
 10245   001A8A  C17C  F05F         	movff	powf@u,___flsub@a
 10246   001A8E  C17D  F060         	movff	powf@u+1,___flsub@a+1
 10247   001A92  C17E  F061         	movff	powf@u+2,___flsub@a+2
 10248   001A96  C17F  F062         	movff	powf@u+3,___flsub@a+3
 10249   001A9A  C18C  F05B         	movff	powf@t1,___flsub@b
 10250   001A9E  C18D  F05C         	movff	powf@t1+1,___flsub@b+1
 10251   001AA2  C18E  F05D         	movff	powf@t1+2,___flsub@b+2
 10252   001AA6  C18F  F05E         	movff	powf@t1+3,___flsub@b+3
 10253   001AAA  EC52  F03B         	call	___flsub	;wreg free
 10254   001AAE  C05B  F19C         	movff	?___flsub,_powf$2101
 10255   001AB2  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 10256   001AB6  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 10257   001ABA  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 10258   001ABE  C180  F05B         	movff	powf@v,___flsub@b
 10259   001AC2  C181  F05C         	movff	powf@v+1,___flsub@b+1
 10260   001AC6  C182  F05D         	movff	powf@v+2,___flsub@b+2
 10261   001ACA  C183  F05E         	movff	powf@v+3,___flsub@b+3
 10262   001ACE  C19C  F05F         	movff	_powf$2101,___flsub@a
 10263   001AD2  C19D  F060         	movff	_powf$2101+1,___flsub@a+1
 10264   001AD6  C19E  F061         	movff	_powf$2101+2,___flsub@a+2
 10265   001ADA  C19F  F062         	movff	_powf$2101+3,___flsub@a+3
 10266   001ADE  EC52  F03B         	call	___flsub	;wreg free
 10267   001AE2  C05B  F11C         	movff	?___flsub,powf@t2
 10268   001AE6  C05C  F11D         	movff	?___flsub+1,powf@t2+1
 10269   001AEA  C05D  F11E         	movff	?___flsub+2,powf@t2+2
 10270   001AEE  C05E  F11F         	movff	?___flsub+3,powf@t2+3
 10271   001AF2  EF3D  F014         	goto	l12623
 10272   001AF6                     l12495:
 10273                           
 10274                           ; BSR set to: 1
 10275   001AF6  0E00               	movlw	0
 10276   001AF8  6F88               	movwf	powf@n& (0+255),b
 10277   001AFA  0E00               	movlw	0
 10278   001AFC  6F89               	movwf	(powf@n+1)& (0+255),b
 10279   001AFE  0E00               	movlw	0
 10280   001B00  6F8A               	movwf	(powf@n+2)& (0+255),b
 10281   001B02  0E00               	movlw	0
 10282   001B04  6F8B               	movwf	(powf@n+3)& (0+255),b
 10283   001B06                     
 10284                           ; BSR set to: 1
 10285   001B06  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10286   001B08  EF91  F00D         	goto	u13140
 10287   001B0C  51AF               	movf	(powf@ix+3)& (0+255),w,b
 10288   001B0E  E107               	bnz	u13141
 10289   001B10  0E80               	movlw	128
 10290   001B12  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
 10291   001B14  B0D8               	btfsc	status,0,c
 10292   001B16  EF8F  F00D         	goto	u13141
 10293   001B1A  EF91  F00D         	goto	u13140
 10294   001B1E                     u13141:
 10295   001B1E  EFBC  F00D         	goto	l12505
 10296   001B22                     u13140:
 10297   001B22                     
 10298                           ; BSR set to: 1
 10299   001B22  C178  F019         	movff	powf@ax,___flmul@b
 10300   001B26  C179  F01A         	movff	powf@ax+1,___flmul@b+1
 10301   001B2A  C17A  F01B         	movff	powf@ax+2,___flmul@b+2
 10302   001B2E  C17B  F01C         	movff	powf@ax+3,___flmul@b+3
 10303   001B32  0E00               	movlw	0
 10304   001B34  6E1D               	movwf	___flmul@a^0,c
 10305   001B36  0E00               	movlw	0
 10306   001B38  6E1E               	movwf	(___flmul@a+1)^0,c
 10307   001B3A  0E80               	movlw	128
 10308   001B3C  6E1F               	movwf	(___flmul@a+2)^0,c
 10309   001B3E  0E4B               	movlw	75
 10310   001B40  6E20               	movwf	(___flmul@a+3)^0,c
 10311   001B42  EC27  F024         	call	___flmul	;wreg free
 10312   001B46  C019  F178         	movff	?___flmul,powf@ax
 10313   001B4A  C01A  F179         	movff	?___flmul+1,powf@ax+1
 10314   001B4E  C01B  F17A         	movff	?___flmul+2,powf@ax+2
 10315   001B52  C01C  F17B         	movff	?___flmul+3,powf@ax+3
 10316   001B56  0EE8               	movlw	232
 10317   001B58  0101               	movlb	1	; () banked
 10318   001B5A  2788               	addwf	powf@n& (0+255),f,b
 10319   001B5C  0EFF               	movlw	255
 10320   001B5E  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10321   001B60  0EFF               	movlw	255
 10322   001B62  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10323   001B64  0EFF               	movlw	255
 10324   001B66  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10325   001B68                     
 10326                           ; BSR set to: 1
 10327   001B68  C178  F1AC         	movff	powf@ax,powf@ix
 10328   001B6C  C179  F1AD         	movff	powf@ax+1,powf@ix+1
 10329   001B70  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
 10330   001B74  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
 10331   001B78                     l12505:
 10332                           
 10333                           ; BSR set to: 1
 10334   001B78  0E17               	movlw	23
 10335   001B7A  6E77               	movwf	??_powf^0,c
 10336   001B7C  C1AC  F078         	movff	powf@ix,??_powf+1
 10337   001B80  C1AD  F079         	movff	powf@ix+1,??_powf+2
 10338   001B84  C1AE  F07A         	movff	powf@ix+2,??_powf+3
 10339   001B88  C1AF  F07B         	movff	powf@ix+3,??_powf+4
 10340   001B8C                     u13155:
 10341   001B8C  6677               	tstfsz	??_powf^0,c
 10342   001B8E  EFCB  F00D         	goto	u13156
 10343   001B92  EFD3  F00D         	goto	u13157
 10344   001B96                     u13156:
 10345   001B96  347B               	rlcf	(??_powf+4)^0,w,c
 10346   001B98  327B               	rrcf	(??_powf+4)^0,f,c
 10347   001B9A  327A               	rrcf	(??_powf+3)^0,f,c
 10348   001B9C  3279               	rrcf	(??_powf+2)^0,f,c
 10349   001B9E  3278               	rrcf	(??_powf+1)^0,f,c
 10350   001BA0  2E77               	decfsz	??_powf^0,f,c
 10351   001BA2  EFC6  F00D         	goto	u13155
 10352   001BA6                     u13157:
 10353   001BA6  0E81               	movlw	129
 10354   001BA8  2478               	addwf	(??_powf+1)^0,w,c
 10355   001BAA  6E7C               	movwf	(??_powf+5)^0,c
 10356   001BAC  0EFF               	movlw	255
 10357   001BAE  2079               	addwfc	(??_powf+2)^0,w,c
 10358   001BB0  6E7D               	movwf	(??_powf+6)^0,c
 10359   001BB2  0EFF               	movlw	255
 10360   001BB4  207A               	addwfc	(??_powf+3)^0,w,c
 10361   001BB6  6E7E               	movwf	(??_powf+7)^0,c
 10362   001BB8  0EFF               	movlw	255
 10363   001BBA  207B               	addwfc	(??_powf+4)^0,w,c
 10364   001BBC  6E7F               	movwf	(??_powf+8)^0,c
 10365   001BBE  507C               	movf	(??_powf+5)^0,w,c
 10366   001BC0  0101               	movlb	1	; () banked
 10367   001BC2  2788               	addwf	powf@n& (0+255),f,b
 10368   001BC4  507D               	movf	(??_powf+6)^0,w,c
 10369   001BC6  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10370   001BC8  507E               	movf	(??_powf+7)^0,w,c
 10371   001BCA  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10372   001BCC  507F               	movf	(??_powf+8)^0,w,c
 10373   001BCE  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10374   001BD0                     
 10375                           ; BSR set to: 1
 10376   001BD0  0EFF               	movlw	255
 10377   001BD2  15AC               	andwf	powf@ix& (0+255),w,b
 10378   001BD4  6FA8               	movwf	powf@j& (0+255),b
 10379   001BD6  0EFF               	movlw	255
 10380   001BD8  15AD               	andwf	(powf@ix+1)& (0+255),w,b
 10381   001BDA  6FA9               	movwf	(powf@j+1)& (0+255),b
 10382   001BDC  0E7F               	movlw	127
 10383   001BDE  15AE               	andwf	(powf@ix+2)& (0+255),w,b
 10384   001BE0  6FAA               	movwf	(powf@j+2)& (0+255),b
 10385   001BE2  0E00               	movlw	0
 10386   001BE4  15AF               	andwf	(powf@ix+3)& (0+255),w,b
 10387   001BE6  6FAB               	movwf	(powf@j+3)& (0+255),b
 10388   001BE8                     
 10389                           ; BSR set to: 1
 10390   001BE8  0E00               	movlw	0
 10391   001BEA  6FA4               	movwf	powf@k& (0+255),b
 10392   001BEC  0E00               	movlw	0
 10393   001BEE  6FA5               	movwf	(powf@k+1)& (0+255),b
 10394   001BF0  0E00               	movlw	0
 10395   001BF2  6FA6               	movwf	(powf@k+2)& (0+255),b
 10396   001BF4  0E00               	movlw	0
 10397   001BF6  6FA7               	movwf	(powf@k+3)& (0+255),b
 10398   001BF8                     
 10399                           ; BSR set to: 1
 10400   001BF8  0E00               	movlw	0
 10401   001BFA  11A8               	iorwf	powf@j& (0+255),w,b
 10402   001BFC  6FAC               	movwf	powf@ix& (0+255),b
 10403   001BFE  0E00               	movlw	0
 10404   001C00  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10405   001C02  6FAD               	movwf	(powf@ix+1)& (0+255),b
 10406   001C04  0E80               	movlw	128
 10407   001C06  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 10408   001C08  6FAE               	movwf	(powf@ix+2)& (0+255),b
 10409   001C0A  0E3F               	movlw	63
 10410   001C0C  11AB               	iorwf	(powf@j+3)& (0+255),w,b
 10411   001C0E  6FAF               	movwf	(powf@ix+3)& (0+255),b
 10412   001C10                     
 10413                           ; BSR set to: 1
 10414   001C10  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10415   001C12  EF1A  F00E         	goto	u13160
 10416   001C16  51AB               	movf	(powf@j+3)& (0+255),w,b
 10417   001C18  E10B               	bnz	u13161
 10418   001C1A  0E72               	movlw	114
 10419   001C1C  5DA8               	subwf	powf@j& (0+255),w,b
 10420   001C1E  0EC4               	movlw	196
 10421   001C20  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10422   001C22  0E1C               	movlw	28
 10423   001C24  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10424   001C26  B0D8               	btfsc	status,0,c
 10425   001C28  EF18  F00E         	goto	u13161
 10426   001C2C  EF1A  F00E         	goto	u13160
 10427   001C30                     u13161:
 10428   001C30  EF1C  F00E         	goto	l12517
 10429   001C34                     u13160:
 10430   001C34  EF46  F00E         	goto	l12523
 10431   001C38                     l12517:
 10432                           
 10433                           ; BSR set to: 1
 10434   001C38  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10435   001C3A  EF2E  F00E         	goto	u13170
 10436   001C3E  51AB               	movf	(powf@j+3)& (0+255),w,b
 10437   001C40  E10B               	bnz	u13171
 10438   001C42  0ED7               	movlw	215
 10439   001C44  5DA8               	subwf	powf@j& (0+255),w,b
 10440   001C46  0EB3               	movlw	179
 10441   001C48  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10442   001C4A  0E5D               	movlw	93
 10443   001C4C  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10444   001C4E  B0D8               	btfsc	status,0,c
 10445   001C50  EF2C  F00E         	goto	u13171
 10446   001C54  EF2E  F00E         	goto	u13170
 10447   001C58                     u13171:
 10448   001C58  EF38  F00E         	goto	l12521
 10449   001C5C                     u13170:
 10450   001C5C                     
 10451                           ; BSR set to: 1
 10452   001C5C  0E01               	movlw	1
 10453   001C5E  6FA4               	movwf	powf@k& (0+255),b
 10454   001C60  0E00               	movlw	0
 10455   001C62  6FA5               	movwf	(powf@k+1)& (0+255),b
 10456   001C64  0E00               	movlw	0
 10457   001C66  6FA6               	movwf	(powf@k+2)& (0+255),b
 10458   001C68  0E00               	movlw	0
 10459   001C6A  6FA7               	movwf	(powf@k+3)& (0+255),b
 10460   001C6C  EF46  F00E         	goto	l12523
 10461   001C70                     l12521:
 10462                           
 10463                           ; BSR set to: 1
 10464   001C70  0E01               	movlw	1
 10465   001C72  2788               	addwf	powf@n& (0+255),f,b
 10466   001C74  0E00               	movlw	0
 10467   001C76  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10468   001C78  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10469   001C7A  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10470   001C7C  0E00               	movlw	0
 10471   001C7E  27AC               	addwf	powf@ix& (0+255),f,b
 10472   001C80  0E00               	movlw	0
 10473   001C82  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
 10474   001C84  0E80               	movlw	128
 10475   001C86  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
 10476   001C88  0EFF               	movlw	255
 10477   001C8A  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
 10478   001C8C                     l12523:
 10479                           
 10480                           ; BSR set to: 1
 10481   001C8C  C1AC  F178         	movff	powf@ix,powf@ax
 10482   001C90  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 10483   001C94  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 10484   001C98  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 10485   001C9C                     
 10486                           ; BSR set to: 1
 10487   001C9C  C178  F05B         	movff	powf@ax,___flsub@b
 10488   001CA0  C179  F05C         	movff	powf@ax+1,___flsub@b+1
 10489   001CA4  C17A  F05D         	movff	powf@ax+2,___flsub@b+2
 10490   001CA8  C17B  F05E         	movff	powf@ax+3,___flsub@b+3
 10491   001CAC  51A4               	movf	powf@k& (0+255),w,b
 10492   001CAE  0D04               	mullw	4
 10493   001CB0  50F3               	movf	243,w,c
 10494   001CB2  0F11               	addlw	low _bp
 10495   001CB4  6E77               	movwf	??_powf^0,c
 10496   001CB6  C077  FFF6         	movff	??_powf,tblptrl
 10497   001CBA                     	if	1	;There is more than 1 active tblptr byte
 10498   001CBA  0E10               	movlw	high __smallconst
 10499   001CBC  6EF7               	movwf	tblptrh,c
 10500   001CBE                     	endif
 10501   001CBE                     	if	0	;tblptru may be non-zero
 10502   001CBE                     	endif
 10503   001CBE                     	if	0	;tblptru may be non-zero
 10504   001CBE                     	endif
 10505   001CBE  0009               	tblrd		*+
 10506   001CC0  CFF5 F05F          	movff	tablat,___flsub@a
 10507   001CC4  0009               	tblrd		*+
 10508   001CC6  CFF5 F060          	movff	tablat,___flsub@a+1
 10509   001CCA  0009               	tblrd		*+
 10510   001CCC  CFF5 F061          	movff	tablat,___flsub@a+2
 10511   001CD0  000A               	tblrd		*-
 10512   001CD2  CFF5 F062          	movff	tablat,___flsub@a+3
 10513   001CD6  EC52  F03B         	call	___flsub	;wreg free
 10514   001CDA  C05B  F17C         	movff	?___flsub,powf@u
 10515   001CDE  C05C  F17D         	movff	?___flsub+1,powf@u+1
 10516   001CE2  C05D  F17E         	movff	?___flsub+2,powf@u+2
 10517   001CE6  C05E  F17F         	movff	?___flsub+3,powf@u+3
 10518   001CEA  0E00               	movlw	0
 10519   001CEC  6E42               	movwf	___fldiv@b^0,c
 10520   001CEE  0E00               	movlw	0
 10521   001CF0  6E43               	movwf	(___fldiv@b+1)^0,c
 10522   001CF2  0E80               	movlw	128
 10523   001CF4  6E44               	movwf	(___fldiv@b+2)^0,c
 10524   001CF6  0E3F               	movlw	63
 10525   001CF8  6E45               	movwf	(___fldiv@b+3)^0,c
 10526   001CFA  C178  F036         	movff	powf@ax,___fladd@a
 10527   001CFE  C179  F037         	movff	powf@ax+1,___fladd@a+1
 10528   001D02  C17A  F038         	movff	powf@ax+2,___fladd@a+2
 10529   001D06  C17B  F039         	movff	powf@ax+3,___fladd@a+3
 10530   001D0A  0101               	movlb	1	; () banked
 10531   001D0C  51A4               	movf	powf@k& (0+255),w,b
 10532   001D0E  0D04               	mullw	4
 10533   001D10  50F3               	movf	243,w,c
 10534   001D12  0F11               	addlw	low _bp
 10535   001D14  6E77               	movwf	??_powf^0,c
 10536   001D16  C077  FFF6         	movff	??_powf,tblptrl
 10537   001D1A                     	if	1	;There is more than 1 active tblptr byte
 10538   001D1A  0E10               	movlw	high __smallconst
 10539   001D1C  6EF7               	movwf	tblptrh,c
 10540   001D1E                     	endif
 10541   001D1E                     	if	0	;tblptru may be non-zero
 10542   001D1E                     	endif
 10543   001D1E                     	if	0	;tblptru may be non-zero
 10544   001D1E                     	endif
 10545   001D1E  0009               	tblrd		*+
 10546   001D20  CFF5 F032          	movff	tablat,___fladd@b
 10547   001D24  0009               	tblrd		*+
 10548   001D26  CFF5 F033          	movff	tablat,___fladd@b+1
 10549   001D2A  0009               	tblrd		*+
 10550   001D2C  CFF5 F034          	movff	tablat,___fladd@b+2
 10551   001D30  000A               	tblrd		*-
 10552   001D32  CFF5 F035          	movff	tablat,___fladd@b+3
 10553   001D36  ECC7  F021         	call	___fladd	;wreg free
 10554   001D3A  C032  F046         	movff	?___fladd,___fldiv@a
 10555   001D3E  C033  F047         	movff	?___fladd+1,___fldiv@a+1
 10556   001D42  C034  F048         	movff	?___fladd+2,___fldiv@a+2
 10557   001D46  C035  F049         	movff	?___fladd+3,___fldiv@a+3
 10558   001D4A  EC2B  F028         	call	___fldiv	;wreg free
 10559   001D4E  C042  F180         	movff	?___fldiv,powf@v
 10560   001D52  C043  F181         	movff	?___fldiv+1,powf@v+1
 10561   001D56  C044  F182         	movff	?___fldiv+2,powf@v+2
 10562   001D5A  C045  F183         	movff	?___fldiv+3,powf@v+3
 10563   001D5E  C17C  F019         	movff	powf@u,___flmul@b
 10564   001D62  C17D  F01A         	movff	powf@u+1,___flmul@b+1
 10565   001D66  C17E  F01B         	movff	powf@u+2,___flmul@b+2
 10566   001D6A  C17F  F01C         	movff	powf@u+3,___flmul@b+3
 10567   001D6E  C180  F01D         	movff	powf@v,___flmul@a
 10568   001D72  C181  F01E         	movff	powf@v+1,___flmul@a+1
 10569   001D76  C182  F01F         	movff	powf@v+2,___flmul@a+2
 10570   001D7A  C183  F020         	movff	powf@v+3,___flmul@a+3
 10571   001D7E  EC27  F024         	call	___flmul	;wreg free
 10572   001D82  C019  F158         	movff	?___flmul,powf@s
 10573   001D86  C01A  F159         	movff	?___flmul+1,powf@s+1
 10574   001D8A  C01B  F15A         	movff	?___flmul+2,powf@s+2
 10575   001D8E  C01C  F15B         	movff	?___flmul+3,powf@s+3
 10576   001D92  C158  F174         	movff	powf@s,powf@s_h
 10577   001D96  C159  F175         	movff	powf@s+1,powf@s_h+1
 10578   001D9A  C15A  F176         	movff	powf@s+2,powf@s_h+2
 10579   001D9E  C15B  F177         	movff	powf@s+3,powf@s_h+3
 10580   001DA2  C174  F198         	movff	powf@s_h,powf@is
 10581   001DA6  C175  F199         	movff	powf@s_h+1,powf@is+1
 10582   001DAA  C176  F19A         	movff	powf@s_h+2,powf@is+2
 10583   001DAE  C177  F19B         	movff	powf@s_h+3,powf@is+3
 10584   001DB2  0E00               	movlw	0
 10585   001DB4  0101               	movlb	1	; () banked
 10586   001DB6  1598               	andwf	powf@is& (0+255),w,b
 10587   001DB8  6F74               	movwf	powf@s_h& (0+255),b
 10588   001DBA  0EF0               	movlw	240
 10589   001DBC  1599               	andwf	(powf@is+1)& (0+255),w,b
 10590   001DBE  6F75               	movwf	(powf@s_h+1)& (0+255),b
 10591   001DC0  0EFF               	movlw	255
 10592   001DC2  159A               	andwf	(powf@is+2)& (0+255),w,b
 10593   001DC4  6F76               	movwf	(powf@s_h+2)& (0+255),b
 10594   001DC6  0EFF               	movlw	255
 10595   001DC8  159B               	andwf	(powf@is+3)& (0+255),w,b
 10596   001DCA  6F77               	movwf	(powf@s_h+3)& (0+255),b
 10597   001DCC                     
 10598                           ; BSR set to: 1
 10599   001DCC  C1AC  F077         	movff	powf@ix,??_powf
 10600   001DD0  C1AD  F078         	movff	powf@ix+1,??_powf+1
 10601   001DD4  C1AE  F079         	movff	powf@ix+2,??_powf+2
 10602   001DD8  C1AF  F07A         	movff	powf@ix+3,??_powf+3
 10603   001DDC  347A               	rlcf	(??_powf+3)^0,w,c
 10604   001DDE  327A               	rrcf	(??_powf+3)^0,f,c
 10605   001DE0  3279               	rrcf	(??_powf+2)^0,f,c
 10606   001DE2  3278               	rrcf	(??_powf+1)^0,f,c
 10607   001DE4  3277               	rrcf	??_powf^0,f,c
 10608   001DE6  0E00               	movlw	0
 10609   001DE8  1477               	andwf	??_powf^0,w,c
 10610   001DEA  6E7B               	movwf	(??_powf+4)^0,c
 10611   001DEC  0EF0               	movlw	240
 10612   001DEE  1478               	andwf	(??_powf+1)^0,w,c
 10613   001DF0  6E7C               	movwf	(??_powf+5)^0,c
 10614   001DF2  0EFF               	movlw	255
 10615   001DF4  1479               	andwf	(??_powf+2)^0,w,c
 10616   001DF6  6E7D               	movwf	(??_powf+6)^0,c
 10617   001DF8  0EFF               	movlw	255
 10618   001DFA  147A               	andwf	(??_powf+3)^0,w,c
 10619   001DFC  6E7E               	movwf	(??_powf+7)^0,c
 10620   001DFE  0E00               	movlw	0
 10621   001E00  107B               	iorwf	(??_powf+4)^0,w,c
 10622   001E02  6F98               	movwf	powf@is& (0+255),b
 10623   001E04  0E00               	movlw	0
 10624   001E06  107C               	iorwf	(??_powf+5)^0,w,c
 10625   001E08  6F99               	movwf	(powf@is+1)& (0+255),b
 10626   001E0A  0E00               	movlw	0
 10627   001E0C  107D               	iorwf	(??_powf+6)^0,w,c
 10628   001E0E  6F9A               	movwf	(powf@is+2)& (0+255),b
 10629   001E10  0E20               	movlw	32
 10630   001E12  107E               	iorwf	(??_powf+7)^0,w,c
 10631   001E14  6F9B               	movwf	(powf@is+3)& (0+255),b
 10632   001E16                     
 10633                           ; BSR set to: 1
 10634   001E16  C1A4  F077         	movff	powf@k,??_powf
 10635   001E1A  C1A5  F078         	movff	powf@k+1,??_powf+1
 10636   001E1E  C1A6  F079         	movff	powf@k+2,??_powf+2
 10637   001E22  C1A7  F07A         	movff	powf@k+3,??_powf+3
 10638   001E26  0E15               	movlw	21
 10639   001E28                     u13185:
 10640   001E28  90D8               	bcf	status,0,c
 10641   001E2A  3677               	rlcf	??_powf^0,f,c
 10642   001E2C  3678               	rlcf	(??_powf+1)^0,f,c
 10643   001E2E  3679               	rlcf	(??_powf+2)^0,f,c
 10644   001E30  367A               	rlcf	(??_powf+3)^0,f,c
 10645   001E32  2EE8               	decfsz	wreg,f,c
 10646   001E34  EF14  F00F         	goto	u13185
 10647   001E38  5198               	movf	powf@is& (0+255),w,b
 10648   001E3A  2477               	addwf	??_powf^0,w,c
 10649   001E3C  6E7B               	movwf	(??_powf+4)^0,c
 10650   001E3E  5199               	movf	(powf@is+1)& (0+255),w,b
 10651   001E40  2078               	addwfc	(??_powf+1)^0,w,c
 10652   001E42  6E7C               	movwf	(??_powf+5)^0,c
 10653   001E44  519A               	movf	(powf@is+2)& (0+255),w,b
 10654   001E46  2079               	addwfc	(??_powf+2)^0,w,c
 10655   001E48  6E7D               	movwf	(??_powf+6)^0,c
 10656   001E4A  519B               	movf	(powf@is+3)& (0+255),w,b
 10657   001E4C  207A               	addwfc	(??_powf+3)^0,w,c
 10658   001E4E  6E7E               	movwf	(??_powf+7)^0,c
 10659   001E50  0E00               	movlw	0
 10660   001E52  247B               	addwf	(??_powf+4)^0,w,c
 10661   001E54  6F70               	movwf	powf@t_h& (0+255),b
 10662   001E56  0E00               	movlw	0
 10663   001E58  207C               	addwfc	(??_powf+5)^0,w,c
 10664   001E5A  6F71               	movwf	(powf@t_h+1)& (0+255),b
 10665   001E5C  0E40               	movlw	64
 10666   001E5E  207D               	addwfc	(??_powf+6)^0,w,c
 10667   001E60  6F72               	movwf	(powf@t_h+2)& (0+255),b
 10668   001E62  0E00               	movlw	0
 10669   001E64  207E               	addwfc	(??_powf+7)^0,w,c
 10670   001E66  6F73               	movwf	(powf@t_h+3)& (0+255),b
 10671   001E68                     
 10672                           ; BSR set to: 1
 10673   001E68  51A4               	movf	powf@k& (0+255),w,b
 10674   001E6A  0D04               	mullw	4
 10675   001E6C  50F3               	movf	243,w,c
 10676   001E6E  0F11               	addlw	low _bp
 10677   001E70  6E77               	movwf	??_powf^0,c
 10678   001E72  C077  FFF6         	movff	??_powf,tblptrl
 10679   001E76                     	if	1	;There is more than 1 active tblptr byte
 10680   001E76  0E10               	movlw	high __smallconst
 10681   001E78  6EF7               	movwf	tblptrh,c
 10682   001E7A                     	endif
 10683   001E7A                     	if	0	;tblptru may be non-zero
 10684   001E7A                     	endif
 10685   001E7A                     	if	0	;tblptru may be non-zero
 10686   001E7A                     	endif
 10687   001E7A  0009               	tblrd		*+
 10688   001E7C  CFF5 F05F          	movff	tablat,___flsub@a
 10689   001E80  0009               	tblrd		*+
 10690   001E82  CFF5 F060          	movff	tablat,___flsub@a+1
 10691   001E86  0009               	tblrd		*+
 10692   001E88  CFF5 F061          	movff	tablat,___flsub@a+2
 10693   001E8C  000A               	tblrd		*-
 10694   001E8E  CFF5 F062          	movff	tablat,___flsub@a+3
 10695   001E92  C170  F05B         	movff	powf@t_h,___flsub@b
 10696   001E96  C171  F05C         	movff	powf@t_h+1,___flsub@b+1
 10697   001E9A  C172  F05D         	movff	powf@t_h+2,___flsub@b+2
 10698   001E9E  C173  F05E         	movff	powf@t_h+3,___flsub@b+3
 10699   001EA2  EC52  F03B         	call	___flsub	;wreg free
 10700   001EA6  C05B  F19C         	movff	?___flsub,_powf$2101
 10701   001EAA  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 10702   001EAE  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 10703   001EB2  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 10704   001EB6  C178  F05B         	movff	powf@ax,___flsub@b
 10705   001EBA  C179  F05C         	movff	powf@ax+1,___flsub@b+1
 10706   001EBE  C17A  F05D         	movff	powf@ax+2,___flsub@b+2
 10707   001EC2  C17B  F05E         	movff	powf@ax+3,___flsub@b+3
 10708   001EC6  C19C  F05F         	movff	_powf$2101,___flsub@a
 10709   001ECA  C19D  F060         	movff	_powf$2101+1,___flsub@a+1
 10710   001ECE  C19E  F061         	movff	_powf$2101+2,___flsub@a+2
 10711   001ED2  C19F  F062         	movff	_powf$2101+3,___flsub@a+3
 10712   001ED6  EC52  F03B         	call	___flsub	;wreg free
 10713   001EDA  C05B  F134         	movff	?___flsub,powf@t_l
 10714   001EDE  C05C  F135         	movff	?___flsub+1,powf@t_l+1
 10715   001EE2  C05D  F136         	movff	?___flsub+2,powf@t_l+2
 10716   001EE6  C05E  F137         	movff	?___flsub+3,powf@t_l+3
 10717   001EEA  C170  F01D         	movff	powf@t_h,___flmul@a
 10718   001EEE  C171  F01E         	movff	powf@t_h+1,___flmul@a+1
 10719   001EF2  C172  F01F         	movff	powf@t_h+2,___flmul@a+2
 10720   001EF6  C173  F020         	movff	powf@t_h+3,___flmul@a+3
 10721   001EFA  C174  F019         	movff	powf@s_h,___flmul@b
 10722   001EFE  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10723   001F02  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10724   001F06  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10725   001F0A  EC27  F024         	call	___flmul	;wreg free
 10726   001F0E  C019  F05F         	movff	?___flmul,___flsub@a
 10727   001F12  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10728   001F16  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10729   001F1A  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10730   001F1E  C17C  F05B         	movff	powf@u,___flsub@b
 10731   001F22  C17D  F05C         	movff	powf@u+1,___flsub@b+1
 10732   001F26  C17E  F05D         	movff	powf@u+2,___flsub@b+2
 10733   001F2A  C17F  F05E         	movff	powf@u+3,___flsub@b+3
 10734   001F2E  EC52  F03B         	call	___flsub	;wreg free
 10735   001F32  C05B  F19C         	movff	?___flsub,_powf$2101
 10736   001F36  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 10737   001F3A  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 10738   001F3E  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 10739   001F42  C134  F01D         	movff	powf@t_l,___flmul@a
 10740   001F46  C135  F01E         	movff	powf@t_l+1,___flmul@a+1
 10741   001F4A  C136  F01F         	movff	powf@t_l+2,___flmul@a+2
 10742   001F4E  C137  F020         	movff	powf@t_l+3,___flmul@a+3
 10743   001F52  C174  F019         	movff	powf@s_h,___flmul@b
 10744   001F56  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10745   001F5A  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10746   001F5E  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10747   001F62  EC27  F024         	call	___flmul	;wreg free
 10748   001F66  C019  F05F         	movff	?___flmul,___flsub@a
 10749   001F6A  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10750   001F6E  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10751   001F72  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10752   001F76  C19C  F05B         	movff	_powf$2101,___flsub@b
 10753   001F7A  C19D  F05C         	movff	_powf$2101+1,___flsub@b+1
 10754   001F7E  C19E  F05D         	movff	_powf$2101+2,___flsub@b+2
 10755   001F82  C19F  F05E         	movff	_powf$2101+3,___flsub@b+3
 10756   001F86  EC52  F03B         	call	___flsub	;wreg free
 10757   001F8A  C05B  F15C         	movff	?___flsub,_powf$2099
 10758   001F8E  C05C  F15D         	movff	?___flsub+1,_powf$2099+1
 10759   001F92  C05D  F15E         	movff	?___flsub+2,_powf$2099+2
 10760   001F96  C05E  F15F         	movff	?___flsub+3,_powf$2099+3
 10761   001F9A  C15C  F019         	movff	_powf$2099,___flmul@b
 10762   001F9E  C15D  F01A         	movff	_powf$2099+1,___flmul@b+1
 10763   001FA2  C15E  F01B         	movff	_powf$2099+2,___flmul@b+2
 10764   001FA6  C15F  F01C         	movff	_powf$2099+3,___flmul@b+3
 10765   001FAA  C180  F01D         	movff	powf@v,___flmul@a
 10766   001FAE  C181  F01E         	movff	powf@v+1,___flmul@a+1
 10767   001FB2  C182  F01F         	movff	powf@v+2,___flmul@a+2
 10768   001FB6  C183  F020         	movff	powf@v+3,___flmul@a+3
 10769   001FBA  EC27  F024         	call	___flmul	;wreg free
 10770   001FBE  C019  F130         	movff	?___flmul,powf@s_l
 10771   001FC2  C01A  F131         	movff	?___flmul+1,powf@s_l+1
 10772   001FC6  C01B  F132         	movff	?___flmul+2,powf@s_l+2
 10773   001FCA  C01C  F133         	movff	?___flmul+3,powf@s_l+3
 10774   001FCE  C158  F019         	movff	powf@s,___flmul@b
 10775   001FD2  C159  F01A         	movff	powf@s+1,___flmul@b+1
 10776   001FD6  C15A  F01B         	movff	powf@s+2,___flmul@b+2
 10777   001FDA  C15B  F01C         	movff	powf@s+3,___flmul@b+3
 10778   001FDE  C158  F01D         	movff	powf@s,___flmul@a
 10779   001FE2  C159  F01E         	movff	powf@s+1,___flmul@a+1
 10780   001FE6  C15A  F01F         	movff	powf@s+2,___flmul@a+2
 10781   001FEA  C15B  F020         	movff	powf@s+3,___flmul@a+3
 10782   001FEE  EC27  F024         	call	___flmul	;wreg free
 10783   001FF2  C019  F190         	movff	?___flmul,powf@s2
 10784   001FF6  C01A  F191         	movff	?___flmul+1,powf@s2+1
 10785   001FFA  C01B  F192         	movff	?___flmul+2,powf@s2+2
 10786   001FFE  C01C  F193         	movff	?___flmul+3,powf@s2+3
 10787   002002  0E55               	movlw	85
 10788   002004  6E36               	movwf	___fladd@a^0,c
 10789   002006  0E32               	movlw	50
 10790   002008  6E37               	movwf	(___fladd@a+1)^0,c
 10791   00200A  0E6C               	movlw	108
 10792   00200C  6E38               	movwf	(___fladd@a+2)^0,c
 10793   00200E  0E3E               	movlw	62
 10794   002010  6E39               	movwf	(___fladd@a+3)^0,c
 10795   002012  0E42               	movlw	66
 10796   002014  6E1D               	movwf	___flmul@a^0,c
 10797   002016  0EF1               	movlw	241
 10798   002018  6E1E               	movwf	(___flmul@a+1)^0,c
 10799   00201A  0E53               	movlw	83
 10800   00201C  6E1F               	movwf	(___flmul@a+2)^0,c
 10801   00201E  0E3E               	movlw	62
 10802   002020  6E20               	movwf	(___flmul@a+3)^0,c
 10803   002022  C190  F019         	movff	powf@s2,___flmul@b
 10804   002026  C191  F01A         	movff	powf@s2+1,___flmul@b+1
 10805   00202A  C192  F01B         	movff	powf@s2+2,___flmul@b+2
 10806   00202E  C193  F01C         	movff	powf@s2+3,___flmul@b+3
 10807   002032  EC27  F024         	call	___flmul	;wreg free
 10808   002036  C019  F032         	movff	?___flmul,___fladd@b
 10809   00203A  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10810   00203E  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10811   002042  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10812   002046  ECC7  F021         	call	___fladd	;wreg free
 10813   00204A  C032  F148         	movff	?___fladd,_powf$2098
 10814   00204E  C033  F149         	movff	?___fladd+1,_powf$2098+1
 10815   002052  C034  F14A         	movff	?___fladd+2,_powf$2098+2
 10816   002056  C035  F14B         	movff	?___fladd+3,_powf$2098+3
 10817   00205A  0E05               	movlw	5
 10818   00205C  6E36               	movwf	___fladd@a^0,c
 10819   00205E  0EA3               	movlw	163
 10820   002060  6E37               	movwf	(___fladd@a+1)^0,c
 10821   002062  0E8B               	movlw	139
 10822   002064  6E38               	movwf	(___fladd@a+2)^0,c
 10823   002066  0E3E               	movlw	62
 10824   002068  6E39               	movwf	(___fladd@a+3)^0,c
 10825   00206A  C190  F01D         	movff	powf@s2,___flmul@a
 10826   00206E  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10827   002072  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10828   002076  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10829   00207A  C148  F019         	movff	_powf$2098,___flmul@b
 10830   00207E  C149  F01A         	movff	_powf$2098+1,___flmul@b+1
 10831   002082  C14A  F01B         	movff	_powf$2098+2,___flmul@b+2
 10832   002086  C14B  F01C         	movff	_powf$2098+3,___flmul@b+3
 10833   00208A  EC27  F024         	call	___flmul	;wreg free
 10834   00208E  C019  F032         	movff	?___flmul,___fladd@b
 10835   002092  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10836   002096  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10837   00209A  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10838   00209E  ECC7  F021         	call	___fladd	;wreg free
 10839   0020A2  C032  F15C         	movff	?___fladd,_powf$2099
 10840   0020A6  C033  F15D         	movff	?___fladd+1,_powf$2099+1
 10841   0020AA  C034  F15E         	movff	?___fladd+2,_powf$2099+2
 10842   0020AE  C035  F15F         	movff	?___fladd+3,_powf$2099+3
 10843   0020B2  0EAB               	movlw	171
 10844   0020B4  6E36               	movwf	___fladd@a^0,c
 10845   0020B6  0EAA               	movlw	170
 10846   0020B8  6E37               	movwf	(___fladd@a+1)^0,c
 10847   0020BA  0EAA               	movlw	170
 10848   0020BC  6E38               	movwf	(___fladd@a+2)^0,c
 10849   0020BE  0E3E               	movlw	62
 10850   0020C0  6E39               	movwf	(___fladd@a+3)^0,c
 10851   0020C2  C190  F01D         	movff	powf@s2,___flmul@a
 10852   0020C6  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10853   0020CA  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10854   0020CE  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10855   0020D2  C15C  F019         	movff	_powf$2099,___flmul@b
 10856   0020D6  C15D  F01A         	movff	_powf$2099+1,___flmul@b+1
 10857   0020DA  C15E  F01B         	movff	_powf$2099+2,___flmul@b+2
 10858   0020DE  C15F  F01C         	movff	_powf$2099+3,___flmul@b+3
 10859   0020E2  EC27  F024         	call	___flmul	;wreg free
 10860   0020E6  C019  F032         	movff	?___flmul,___fladd@b
 10861   0020EA  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10862   0020EE  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10863   0020F2  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10864   0020F6  ECC7  F021         	call	___fladd	;wreg free
 10865   0020FA  C032  F14C         	movff	?___fladd,_powf$2100
 10866   0020FE  C033  F14D         	movff	?___fladd+1,_powf$2100+1
 10867   002102  C034  F14E         	movff	?___fladd+2,_powf$2100+2
 10868   002106  C035  F14F         	movff	?___fladd+3,_powf$2100+3
 10869   00210A  0EB7               	movlw	183
 10870   00210C  6E36               	movwf	___fladd@a^0,c
 10871   00210E  0E6D               	movlw	109
 10872   002110  6E37               	movwf	(___fladd@a+1)^0,c
 10873   002112  0EDB               	movlw	219
 10874   002114  6E38               	movwf	(___fladd@a+2)^0,c
 10875   002116  0E3E               	movlw	62
 10876   002118  6E39               	movwf	(___fladd@a+3)^0,c
 10877   00211A  C190  F01D         	movff	powf@s2,___flmul@a
 10878   00211E  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10879   002122  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10880   002126  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10881   00212A  C14C  F019         	movff	_powf$2100,___flmul@b
 10882   00212E  C14D  F01A         	movff	_powf$2100+1,___flmul@b+1
 10883   002132  C14E  F01B         	movff	_powf$2100+2,___flmul@b+2
 10884   002136  C14F  F01C         	movff	_powf$2100+3,___flmul@b+3
 10885   00213A  EC27  F024         	call	___flmul	;wreg free
 10886   00213E  C019  F032         	movff	?___flmul,___fladd@b
 10887   002142  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10888   002146  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10889   00214A  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10890   00214E  ECC7  F021         	call	___fladd	;wreg free
 10891   002152  C032  F138         	movff	?___fladd,_powf$2102
 10892   002156  C033  F139         	movff	?___fladd+1,_powf$2102+1
 10893   00215A  C034  F13A         	movff	?___fladd+2,_powf$2102+2
 10894   00215E  C035  F13B         	movff	?___fladd+3,_powf$2102+3
 10895   002162  0E9A               	movlw	154
 10896   002164  6E36               	movwf	___fladd@a^0,c
 10897   002166  0E99               	movlw	153
 10898   002168  6E37               	movwf	(___fladd@a+1)^0,c
 10899   00216A  0E19               	movlw	25
 10900   00216C  6E38               	movwf	(___fladd@a+2)^0,c
 10901   00216E  0E3F               	movlw	63
 10902   002170  6E39               	movwf	(___fladd@a+3)^0,c
 10903   002172  C190  F01D         	movff	powf@s2,___flmul@a
 10904   002176  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10905   00217A  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10906   00217E  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10907   002182  C138  F019         	movff	_powf$2102,___flmul@b
 10908   002186  C139  F01A         	movff	_powf$2102+1,___flmul@b+1
 10909   00218A  C13A  F01B         	movff	_powf$2102+2,___flmul@b+2
 10910   00218E  C13B  F01C         	movff	_powf$2102+3,___flmul@b+3
 10911   002192  EC27  F024         	call	___flmul	;wreg free
 10912   002196  C019  F032         	movff	?___flmul,___fladd@b
 10913   00219A  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10914   00219E  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10915   0021A2  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10916   0021A6  ECC7  F021         	call	___fladd	;wreg free
 10917   0021AA  C032  F100         	movff	?___fladd,_powf$2103
 10918   0021AE  C033  F101         	movff	?___fladd+1,_powf$2103+1
 10919   0021B2  C034  F102         	movff	?___fladd+2,_powf$2103+2
 10920   0021B6  C035  F103         	movff	?___fladd+3,_powf$2103+3
 10921   0021BA  C190  F01D         	movff	powf@s2,___flmul@a
 10922   0021BE  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10923   0021C2  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10924   0021C6  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10925   0021CA  C190  F019         	movff	powf@s2,___flmul@b
 10926   0021CE  C191  F01A         	movff	powf@s2+1,___flmul@b+1
 10927   0021D2  C192  F01B         	movff	powf@s2+2,___flmul@b+2
 10928   0021D6  C193  F01C         	movff	powf@s2+3,___flmul@b+3
 10929   0021DA  EC27  F024         	call	___flmul	;wreg free
 10930   0021DE  C019  F104         	movff	?___flmul,_powf$2104
 10931   0021E2  C01A  F105         	movff	?___flmul+1,_powf$2104+1
 10932   0021E6  C01B  F106         	movff	?___flmul+2,_powf$2104+2
 10933   0021EA  C01C  F107         	movff	?___flmul+3,_powf$2104+3
 10934   0021EE  C100  F019         	movff	_powf$2103,___flmul@b
 10935   0021F2  C101  F01A         	movff	_powf$2103+1,___flmul@b+1
 10936   0021F6  C102  F01B         	movff	_powf$2103+2,___flmul@b+2
 10937   0021FA  C103  F01C         	movff	_powf$2103+3,___flmul@b+3
 10938   0021FE  C104  F01D         	movff	_powf$2104,___flmul@a
 10939   002202  C105  F01E         	movff	_powf$2104+1,___flmul@a+1
 10940   002206  C106  F01F         	movff	_powf$2104+2,___flmul@a+2
 10941   00220A  C107  F020         	movff	_powf$2104+3,___flmul@a+3
 10942   00220E  EC27  F024         	call	___flmul	;wreg free
 10943   002212  C019  F150         	movff	?___flmul,powf@r
 10944   002216  C01A  F151         	movff	?___flmul+1,powf@r+1
 10945   00221A  C01B  F152         	movff	?___flmul+2,powf@r+2
 10946   00221E  C01C  F153         	movff	?___flmul+3,powf@r+3
 10947   002222  C130  F01D         	movff	powf@s_l,___flmul@a
 10948   002226  C131  F01E         	movff	powf@s_l+1,___flmul@a+1
 10949   00222A  C132  F01F         	movff	powf@s_l+2,___flmul@a+2
 10950   00222E  C133  F020         	movff	powf@s_l+3,___flmul@a+3
 10951   002232  C158  F036         	movff	powf@s,___fladd@a
 10952   002236  C159  F037         	movff	powf@s+1,___fladd@a+1
 10953   00223A  C15A  F038         	movff	powf@s+2,___fladd@a+2
 10954   00223E  C15B  F039         	movff	powf@s+3,___fladd@a+3
 10955   002242  C174  F032         	movff	powf@s_h,___fladd@b
 10956   002246  C175  F033         	movff	powf@s_h+1,___fladd@b+1
 10957   00224A  C176  F034         	movff	powf@s_h+2,___fladd@b+2
 10958   00224E  C177  F035         	movff	powf@s_h+3,___fladd@b+3
 10959   002252  ECC7  F021         	call	___fladd	;wreg free
 10960   002256  C032  F019         	movff	?___fladd,___flmul@b
 10961   00225A  C033  F01A         	movff	?___fladd+1,___flmul@b+1
 10962   00225E  C034  F01B         	movff	?___fladd+2,___flmul@b+2
 10963   002262  C035  F01C         	movff	?___fladd+3,___flmul@b+3
 10964   002266  EC27  F024         	call	___flmul	;wreg free
 10965   00226A  C019  F160         	movff	?___flmul,_powf$2105
 10966   00226E  C01A  F161         	movff	?___flmul+1,_powf$2105+1
 10967   002272  C01B  F162         	movff	?___flmul+2,_powf$2105+2
 10968   002276  C01C  F163         	movff	?___flmul+3,_powf$2105+3
 10969   00227A  C150  F032         	movff	powf@r,___fladd@b
 10970   00227E  C151  F033         	movff	powf@r+1,___fladd@b+1
 10971   002282  C152  F034         	movff	powf@r+2,___fladd@b+2
 10972   002286  C153  F035         	movff	powf@r+3,___fladd@b+3
 10973   00228A  C160  F036         	movff	_powf$2105,___fladd@a
 10974   00228E  C161  F037         	movff	_powf$2105+1,___fladd@a+1
 10975   002292  C162  F038         	movff	_powf$2105+2,___fladd@a+2
 10976   002296  C163  F039         	movff	_powf$2105+3,___fladd@a+3
 10977   00229A  ECC7  F021         	call	___fladd	;wreg free
 10978   00229E  C032  F150         	movff	?___fladd,powf@r
 10979   0022A2  C033  F151         	movff	?___fladd+1,powf@r+1
 10980   0022A6  C034  F152         	movff	?___fladd+2,powf@r+2
 10981   0022AA  C035  F153         	movff	?___fladd+3,powf@r+3
 10982   0022AE  C174  F019         	movff	powf@s_h,___flmul@b
 10983   0022B2  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10984   0022B6  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10985   0022BA  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10986   0022BE  C174  F01D         	movff	powf@s_h,___flmul@a
 10987   0022C2  C175  F01E         	movff	powf@s_h+1,___flmul@a+1
 10988   0022C6  C176  F01F         	movff	powf@s_h+2,___flmul@a+2
 10989   0022CA  C177  F020         	movff	powf@s_h+3,___flmul@a+3
 10990   0022CE  EC27  F024         	call	___flmul	;wreg free
 10991   0022D2  C019  F190         	movff	?___flmul,powf@s2
 10992   0022D6  C01A  F191         	movff	?___flmul+1,powf@s2+1
 10993   0022DA  C01B  F192         	movff	?___flmul+2,powf@s2+2
 10994   0022DE  C01C  F193         	movff	?___flmul+3,powf@s2+3
 10995   0022E2  0E00               	movlw	0
 10996   0022E4  6E36               	movwf	___fladd@a^0,c
 10997   0022E6  0E00               	movlw	0
 10998   0022E8  6E37               	movwf	(___fladd@a+1)^0,c
 10999   0022EA  0E40               	movlw	64
 11000   0022EC  6E38               	movwf	(___fladd@a+2)^0,c
 11001   0022EE  0E40               	movlw	64
 11002   0022F0  6E39               	movwf	(___fladd@a+3)^0,c
 11003   0022F2  C190  F032         	movff	powf@s2,___fladd@b
 11004   0022F6  C191  F033         	movff	powf@s2+1,___fladd@b+1
 11005   0022FA  C192  F034         	movff	powf@s2+2,___fladd@b+2
 11006   0022FE  C193  F035         	movff	powf@s2+3,___fladd@b+3
 11007   002302  ECC7  F021         	call	___fladd	;wreg free
 11008   002306  C032  F160         	movff	?___fladd,_powf$2105
 11009   00230A  C033  F161         	movff	?___fladd+1,_powf$2105+1
 11010   00230E  C034  F162         	movff	?___fladd+2,_powf$2105+2
 11011   002312  C035  F163         	movff	?___fladd+3,_powf$2105+3
 11012   002316  C160  F032         	movff	_powf$2105,___fladd@b
 11013   00231A  C161  F033         	movff	_powf$2105+1,___fladd@b+1
 11014   00231E  C162  F034         	movff	_powf$2105+2,___fladd@b+2
 11015   002322  C163  F035         	movff	_powf$2105+3,___fladd@b+3
 11016   002326  C150  F036         	movff	powf@r,___fladd@a
 11017   00232A  C151  F037         	movff	powf@r+1,___fladd@a+1
 11018   00232E  C152  F038         	movff	powf@r+2,___fladd@a+2
 11019   002332  C153  F039         	movff	powf@r+3,___fladd@a+3
 11020   002336  ECC7  F021         	call	___fladd	;wreg free
 11021   00233A  C032  F170         	movff	?___fladd,powf@t_h
 11022   00233E  C033  F171         	movff	?___fladd+1,powf@t_h+1
 11023   002342  C034  F172         	movff	?___fladd+2,powf@t_h+2
 11024   002346  C035  F173         	movff	?___fladd+3,powf@t_h+3
 11025   00234A  C170  F198         	movff	powf@t_h,powf@is
 11026   00234E  C171  F199         	movff	powf@t_h+1,powf@is+1
 11027   002352  C172  F19A         	movff	powf@t_h+2,powf@is+2
 11028   002356  C173  F19B         	movff	powf@t_h+3,powf@is+3
 11029   00235A  0E00               	movlw	0
 11030   00235C  0101               	movlb	1	; () banked
 11031   00235E  1598               	andwf	powf@is& (0+255),w,b
 11032   002360  6F70               	movwf	powf@t_h& (0+255),b
 11033   002362  0EF0               	movlw	240
 11034   002364  1599               	andwf	(powf@is+1)& (0+255),w,b
 11035   002366  6F71               	movwf	(powf@t_h+1)& (0+255),b
 11036   002368  0EFF               	movlw	255
 11037   00236A  159A               	andwf	(powf@is+2)& (0+255),w,b
 11038   00236C  6F72               	movwf	(powf@t_h+2)& (0+255),b
 11039   00236E  0EFF               	movlw	255
 11040   002370  159B               	andwf	(powf@is+3)& (0+255),w,b
 11041   002372  6F73               	movwf	(powf@t_h+3)& (0+255),b
 11042   002374                     
 11043                           ; BSR set to: 1
 11044   002374  0E00               	movlw	0
 11045   002376  6E36               	movwf	___fladd@a^0,c
 11046   002378  0E00               	movlw	0
 11047   00237A  6E37               	movwf	(___fladd@a+1)^0,c
 11048   00237C  0E40               	movlw	64
 11049   00237E  6E38               	movwf	(___fladd@a+2)^0,c
 11050   002380  0EC0               	movlw	192
 11051   002382  6E39               	movwf	(___fladd@a+3)^0,c
 11052   002384  C170  F032         	movff	powf@t_h,___fladd@b
 11053   002388  C171  F033         	movff	powf@t_h+1,___fladd@b+1
 11054   00238C  C172  F034         	movff	powf@t_h+2,___fladd@b+2
 11055   002390  C173  F035         	movff	powf@t_h+3,___fladd@b+3
 11056   002394  ECC7  F021         	call	___fladd	;wreg free
 11057   002398  C032  F13C         	movff	?___fladd,_powf$2106
 11058   00239C  C033  F13D         	movff	?___fladd+1,_powf$2106+1
 11059   0023A0  C034  F13E         	movff	?___fladd+2,_powf$2106+2
 11060   0023A4  C035  F13F         	movff	?___fladd+3,_powf$2106+3
 11061   0023A8  C190  F05F         	movff	powf@s2,___flsub@a
 11062   0023AC  C191  F060         	movff	powf@s2+1,___flsub@a+1
 11063   0023B0  C192  F061         	movff	powf@s2+2,___flsub@a+2
 11064   0023B4  C193  F062         	movff	powf@s2+3,___flsub@a+3
 11065   0023B8  C13C  F05B         	movff	_powf$2106,___flsub@b
 11066   0023BC  C13D  F05C         	movff	_powf$2106+1,___flsub@b+1
 11067   0023C0  C13E  F05D         	movff	_powf$2106+2,___flsub@b+2
 11068   0023C4  C13F  F05E         	movff	_powf$2106+3,___flsub@b+3
 11069   0023C8  EC52  F03B         	call	___flsub	;wreg free
 11070   0023CC  C05B  F140         	movff	?___flsub,_powf$2107
 11071   0023D0  C05C  F141         	movff	?___flsub+1,_powf$2107+1
 11072   0023D4  C05D  F142         	movff	?___flsub+2,_powf$2107+2
 11073   0023D8  C05E  F143         	movff	?___flsub+3,_powf$2107+3
 11074   0023DC  C150  F05B         	movff	powf@r,___flsub@b
 11075   0023E0  C151  F05C         	movff	powf@r+1,___flsub@b+1
 11076   0023E4  C152  F05D         	movff	powf@r+2,___flsub@b+2
 11077   0023E8  C153  F05E         	movff	powf@r+3,___flsub@b+3
 11078   0023EC  C140  F05F         	movff	_powf$2107,___flsub@a
 11079   0023F0  C141  F060         	movff	_powf$2107+1,___flsub@a+1
 11080   0023F4  C142  F061         	movff	_powf$2107+2,___flsub@a+2
 11081   0023F8  C143  F062         	movff	_powf$2107+3,___flsub@a+3
 11082   0023FC  EC52  F03B         	call	___flsub	;wreg free
 11083   002400  C05B  F134         	movff	?___flsub,powf@t_l
 11084   002404  C05C  F135         	movff	?___flsub+1,powf@t_l+1
 11085   002408  C05D  F136         	movff	?___flsub+2,powf@t_l+2
 11086   00240C  C05E  F137         	movff	?___flsub+3,powf@t_l+3
 11087   002410  C174  F019         	movff	powf@s_h,___flmul@b
 11088   002414  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 11089   002418  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 11090   00241C  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 11091   002420  C170  F01D         	movff	powf@t_h,___flmul@a
 11092   002424  C171  F01E         	movff	powf@t_h+1,___flmul@a+1
 11093   002428  C172  F01F         	movff	powf@t_h+2,___flmul@a+2
 11094   00242C  C173  F020         	movff	powf@t_h+3,___flmul@a+3
 11095   002430  EC27  F024         	call	___flmul	;wreg free
 11096   002434  C019  F17C         	movff	?___flmul,powf@u
 11097   002438  C01A  F17D         	movff	?___flmul+1,powf@u+1
 11098   00243C  C01B  F17E         	movff	?___flmul+2,powf@u+2
 11099   002440  C01C  F17F         	movff	?___flmul+3,powf@u+3
 11100   002444  C130  F01D         	movff	powf@s_l,___flmul@a
 11101   002448  C131  F01E         	movff	powf@s_l+1,___flmul@a+1
 11102   00244C  C132  F01F         	movff	powf@s_l+2,___flmul@a+2
 11103   002450  C133  F020         	movff	powf@s_l+3,___flmul@a+3
 11104   002454  C170  F019         	movff	powf@t_h,___flmul@b
 11105   002458  C171  F01A         	movff	powf@t_h+1,___flmul@b+1
 11106   00245C  C172  F01B         	movff	powf@t_h+2,___flmul@b+2
 11107   002460  C173  F01C         	movff	powf@t_h+3,___flmul@b+3
 11108   002464  EC27  F024         	call	___flmul	;wreg free
 11109   002468  C019  F032         	movff	?___flmul,___fladd@b
 11110   00246C  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 11111   002470  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 11112   002474  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 11113   002478  C158  F01D         	movff	powf@s,___flmul@a
 11114   00247C  C159  F01E         	movff	powf@s+1,___flmul@a+1
 11115   002480  C15A  F01F         	movff	powf@s+2,___flmul@a+2
 11116   002484  C15B  F020         	movff	powf@s+3,___flmul@a+3
 11117   002488  C134  F019         	movff	powf@t_l,___flmul@b
 11118   00248C  C135  F01A         	movff	powf@t_l+1,___flmul@b+1
 11119   002490  C136  F01B         	movff	powf@t_l+2,___flmul@b+2
 11120   002494  C137  F01C         	movff	powf@t_l+3,___flmul@b+3
 11121   002498  EC27  F024         	call	___flmul	;wreg free
 11122   00249C  C019  F036         	movff	?___flmul,___fladd@a
 11123   0024A0  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11124   0024A4  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11125   0024A8  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11126   0024AC  ECC7  F021         	call	___fladd	;wreg free
 11127   0024B0  C032  F180         	movff	?___fladd,powf@v
 11128   0024B4  C033  F181         	movff	?___fladd+1,powf@v+1
 11129   0024B8  C034  F182         	movff	?___fladd+2,powf@v+2
 11130   0024BC  C035  F183         	movff	?___fladd+3,powf@v+3
 11131   0024C0  C17C  F032         	movff	powf@u,___fladd@b
 11132   0024C4  C17D  F033         	movff	powf@u+1,___fladd@b+1
 11133   0024C8  C17E  F034         	movff	powf@u+2,___fladd@b+2
 11134   0024CC  C17F  F035         	movff	powf@u+3,___fladd@b+3
 11135   0024D0  C180  F036         	movff	powf@v,___fladd@a
 11136   0024D4  C181  F037         	movff	powf@v+1,___fladd@a+1
 11137   0024D8  C182  F038         	movff	powf@v+2,___fladd@a+2
 11138   0024DC  C183  F039         	movff	powf@v+3,___fladd@a+3
 11139   0024E0  ECC7  F021         	call	___fladd	;wreg free
 11140   0024E4  C032  F1A0         	movff	?___fladd,powf@p_h
 11141   0024E8  C033  F1A1         	movff	?___fladd+1,powf@p_h+1
 11142   0024EC  C034  F1A2         	movff	?___fladd+2,powf@p_h+2
 11143   0024F0  C035  F1A3         	movff	?___fladd+3,powf@p_h+3
 11144   0024F4  C1A0  F198         	movff	powf@p_h,powf@is
 11145   0024F8  C1A1  F199         	movff	powf@p_h+1,powf@is+1
 11146   0024FC  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
 11147   002500  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
 11148   002504  0E00               	movlw	0
 11149   002506  0101               	movlb	1	; () banked
 11150   002508  1598               	andwf	powf@is& (0+255),w,b
 11151   00250A  6FA0               	movwf	powf@p_h& (0+255),b
 11152   00250C  0EF0               	movlw	240
 11153   00250E  1599               	andwf	(powf@is+1)& (0+255),w,b
 11154   002510  6FA1               	movwf	(powf@p_h+1)& (0+255),b
 11155   002512  0EFF               	movlw	255
 11156   002514  159A               	andwf	(powf@is+2)& (0+255),w,b
 11157   002516  6FA2               	movwf	(powf@p_h+2)& (0+255),b
 11158   002518  0EFF               	movlw	255
 11159   00251A  159B               	andwf	(powf@is+3)& (0+255),w,b
 11160   00251C  6FA3               	movwf	(powf@p_h+3)& (0+255),b
 11161   00251E                     
 11162                           ; BSR set to: 1
 11163   00251E  C17C  F05F         	movff	powf@u,___flsub@a
 11164   002522  C17D  F060         	movff	powf@u+1,___flsub@a+1
 11165   002526  C17E  F061         	movff	powf@u+2,___flsub@a+2
 11166   00252A  C17F  F062         	movff	powf@u+3,___flsub@a+3
 11167   00252E  C1A0  F05B         	movff	powf@p_h,___flsub@b
 11168   002532  C1A1  F05C         	movff	powf@p_h+1,___flsub@b+1
 11169   002536  C1A2  F05D         	movff	powf@p_h+2,___flsub@b+2
 11170   00253A  C1A3  F05E         	movff	powf@p_h+3,___flsub@b+3
 11171   00253E  EC52  F03B         	call	___flsub	;wreg free
 11172   002542  C05B  F19C         	movff	?___flsub,_powf$2101
 11173   002546  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 11174   00254A  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 11175   00254E  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 11176   002552  C180  F05B         	movff	powf@v,___flsub@b
 11177   002556  C181  F05C         	movff	powf@v+1,___flsub@b+1
 11178   00255A  C182  F05D         	movff	powf@v+2,___flsub@b+2
 11179   00255E  C183  F05E         	movff	powf@v+3,___flsub@b+3
 11180   002562  C19C  F05F         	movff	_powf$2101,___flsub@a
 11181   002566  C19D  F060         	movff	_powf$2101+1,___flsub@a+1
 11182   00256A  C19E  F061         	movff	_powf$2101+2,___flsub@a+2
 11183   00256E  C19F  F062         	movff	_powf$2101+3,___flsub@a+3
 11184   002572  EC52  F03B         	call	___flsub	;wreg free
 11185   002576  C05B  F16C         	movff	?___flsub,powf@p_l
 11186   00257A  C05C  F16D         	movff	?___flsub+1,powf@p_l+1
 11187   00257E  C05D  F16E         	movff	?___flsub+2,powf@p_l+2
 11188   002582  C05E  F16F         	movff	?___flsub+3,powf@p_l+3
 11189   002586  C1A0  F019         	movff	powf@p_h,___flmul@b
 11190   00258A  C1A1  F01A         	movff	powf@p_h+1,___flmul@b+1
 11191   00258E  C1A2  F01B         	movff	powf@p_h+2,___flmul@b+2
 11192   002592  C1A3  F01C         	movff	powf@p_h+3,___flmul@b+3
 11193   002596  0E00               	movlw	0
 11194   002598  6E1D               	movwf	___flmul@a^0,c
 11195   00259A  0E40               	movlw	64
 11196   00259C  6E1E               	movwf	(___flmul@a+1)^0,c
 11197   00259E  0E76               	movlw	118
 11198   0025A0  6E1F               	movwf	(___flmul@a+2)^0,c
 11199   0025A2  0E3F               	movlw	63
 11200   0025A4  6E20               	movwf	(___flmul@a+3)^0,c
 11201   0025A6  EC27  F024         	call	___flmul	;wreg free
 11202   0025AA  C019  F120         	movff	?___flmul,powf@z_h
 11203   0025AE  C01A  F121         	movff	?___flmul+1,powf@z_h+1
 11204   0025B2  C01B  F122         	movff	?___flmul+2,powf@z_h+2
 11205   0025B6  C01C  F123         	movff	?___flmul+3,powf@z_h+3
 11206   0025BA  0E4F               	movlw	79
 11207   0025BC  6E1D               	movwf	___flmul@a^0,c
 11208   0025BE  0E38               	movlw	56
 11209   0025C0  6E1E               	movwf	(___flmul@a+1)^0,c
 11210   0025C2  0E76               	movlw	118
 11211   0025C4  6E1F               	movwf	(___flmul@a+2)^0,c
 11212   0025C6  0E3F               	movlw	63
 11213   0025C8  6E20               	movwf	(___flmul@a+3)^0,c
 11214   0025CA  C16C  F019         	movff	powf@p_l,___flmul@b
 11215   0025CE  C16D  F01A         	movff	powf@p_l+1,___flmul@b+1
 11216   0025D2  C16E  F01B         	movff	powf@p_l+2,___flmul@b+2
 11217   0025D6  C16F  F01C         	movff	powf@p_l+3,___flmul@b+3
 11218   0025DA  EC27  F024         	call	___flmul	;wreg free
 11219   0025DE  C019  F036         	movff	?___flmul,___fladd@a
 11220   0025E2  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11221   0025E6  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11222   0025EA  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11223   0025EE  0EC6               	movlw	198
 11224   0025F0  6E1D               	movwf	___flmul@a^0,c
 11225   0025F2  0E23               	movlw	35
 11226   0025F4  6E1E               	movwf	(___flmul@a+1)^0,c
 11227   0025F6  0EF6               	movlw	246
 11228   0025F8  6E1F               	movwf	(___flmul@a+2)^0,c
 11229   0025FA  0EB8               	movlw	184
 11230   0025FC  6E20               	movwf	(___flmul@a+3)^0,c
 11231   0025FE  C1A0  F019         	movff	powf@p_h,___flmul@b
 11232   002602  C1A1  F01A         	movff	powf@p_h+1,___flmul@b+1
 11233   002606  C1A2  F01B         	movff	powf@p_h+2,___flmul@b+2
 11234   00260A  C1A3  F01C         	movff	powf@p_h+3,___flmul@b+3
 11235   00260E  EC27  F024         	call	___flmul	;wreg free
 11236   002612  C019  F032         	movff	?___flmul,___fladd@b
 11237   002616  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 11238   00261A  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 11239   00261E  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 11240   002622  ECC7  F021         	call	___fladd	;wreg free
 11241   002626  C032  F160         	movff	?___fladd,_powf$2105
 11242   00262A  C033  F161         	movff	?___fladd+1,_powf$2105+1
 11243   00262E  C034  F162         	movff	?___fladd+2,_powf$2105+2
 11244   002632  C035  F163         	movff	?___fladd+3,_powf$2105+3
 11245   002636  C160  F032         	movff	_powf$2105,___fladd@b
 11246   00263A  C161  F033         	movff	_powf$2105+1,___fladd@b+1
 11247   00263E  C162  F034         	movff	_powf$2105+2,___fladd@b+2
 11248   002642  C163  F035         	movff	_powf$2105+3,___fladd@b+3
 11249   002646  0101               	movlb	1	; () banked
 11250   002648  51A4               	movf	powf@k& (0+255),w,b
 11251   00264A  0D04               	mullw	4
 11252   00264C  50F3               	movf	243,w,c
 11253   00264E  0F01               	addlw	low _dp_l
 11254   002650  6E77               	movwf	??_powf^0,c
 11255   002652  C077  FFF6         	movff	??_powf,tblptrl
 11256   002656                     	if	1	;There is more than 1 active tblptr byte
 11257   002656  0E10               	movlw	high __smallconst
 11258   002658  6EF7               	movwf	tblptrh,c
 11259   00265A                     	endif
 11260   00265A                     	if	0	;tblptru may be non-zero
 11261   00265A                     	endif
 11262   00265A                     	if	0	;tblptru may be non-zero
 11263   00265A                     	endif
 11264   00265A  0009               	tblrd		*+
 11265   00265C  CFF5 F036          	movff	tablat,___fladd@a
 11266   002660  0009               	tblrd		*+
 11267   002662  CFF5 F037          	movff	tablat,___fladd@a+1
 11268   002666  0009               	tblrd		*+
 11269   002668  CFF5 F038          	movff	tablat,___fladd@a+2
 11270   00266C  000A               	tblrd		*-
 11271   00266E  CFF5 F039          	movff	tablat,___fladd@a+3
 11272   002672  ECC7  F021         	call	___fladd	;wreg free
 11273   002676  C032  F124         	movff	?___fladd,powf@z_l
 11274   00267A  C033  F125         	movff	?___fladd+1,powf@z_l+1
 11275   00267E  C034  F126         	movff	?___fladd+2,powf@z_l+2
 11276   002682  C035  F127         	movff	?___fladd+3,powf@z_l+3
 11277   002686  C188  F00B         	movff	powf@n,___xxtofl@val
 11278   00268A  C189  F00C         	movff	powf@n+1,___xxtofl@val+1
 11279   00268E  C18A  F00D         	movff	powf@n+2,___xxtofl@val+2
 11280   002692  C18B  F00E         	movff	powf@n+3,___xxtofl@val+3
 11281   002696  0E01               	movlw	1
 11282   002698  ECF8  F02F         	call	___xxtofl
 11283   00269C  C00B  F1B0         	movff	?___xxtofl,powf@t
 11284   0026A0  C00C  F1B1         	movff	?___xxtofl+1,powf@t+1
 11285   0026A4  C00D  F1B2         	movff	?___xxtofl+2,powf@t+2
 11286   0026A8  C00E  F1B3         	movff	?___xxtofl+3,powf@t+3
 11287   0026AC  C124  F036         	movff	powf@z_l,___fladd@a
 11288   0026B0  C125  F037         	movff	powf@z_l+1,___fladd@a+1
 11289   0026B4  C126  F038         	movff	powf@z_l+2,___fladd@a+2
 11290   0026B8  C127  F039         	movff	powf@z_l+3,___fladd@a+3
 11291   0026BC  C120  F032         	movff	powf@z_h,___fladd@b
 11292   0026C0  C121  F033         	movff	powf@z_h+1,___fladd@b+1
 11293   0026C4  C122  F034         	movff	powf@z_h+2,___fladd@b+2
 11294   0026C8  C123  F035         	movff	powf@z_h+3,___fladd@b+3
 11295   0026CC  ECC7  F021         	call	___fladd	;wreg free
 11296   0026D0  C032  F160         	movff	?___fladd,_powf$2105
 11297   0026D4  C033  F161         	movff	?___fladd+1,_powf$2105+1
 11298   0026D8  C034  F162         	movff	?___fladd+2,_powf$2105+2
 11299   0026DC  C035  F163         	movff	?___fladd+3,_powf$2105+3
 11300   0026E0  0101               	movlb	1	; () banked
 11301   0026E2  51A4               	movf	powf@k& (0+255),w,b
 11302   0026E4  0D04               	mullw	4
 11303   0026E6  50F3               	movf	243,w,c
 11304   0026E8  0F09               	addlw	low _dp_h
 11305   0026EA  6E77               	movwf	??_powf^0,c
 11306   0026EC  C077  FFF6         	movff	??_powf,tblptrl
 11307   0026F0                     	if	1	;There is more than 1 active tblptr byte
 11308   0026F0  0E10               	movlw	high __smallconst
 11309   0026F2  6EF7               	movwf	tblptrh,c
 11310   0026F4                     	endif
 11311   0026F4                     	if	0	;tblptru may be non-zero
 11312   0026F4                     	endif
 11313   0026F4                     	if	0	;tblptru may be non-zero
 11314   0026F4                     	endif
 11315   0026F4  0009               	tblrd		*+
 11316   0026F6  CFF5 F036          	movff	tablat,___fladd@a
 11317   0026FA  0009               	tblrd		*+
 11318   0026FC  CFF5 F037          	movff	tablat,___fladd@a+1
 11319   002700  0009               	tblrd		*+
 11320   002702  CFF5 F038          	movff	tablat,___fladd@a+2
 11321   002706  000A               	tblrd		*-
 11322   002708  CFF5 F039          	movff	tablat,___fladd@a+3
 11323   00270C  C160  F032         	movff	_powf$2105,___fladd@b
 11324   002710  C161  F033         	movff	_powf$2105+1,___fladd@b+1
 11325   002714  C162  F034         	movff	_powf$2105+2,___fladd@b+2
 11326   002718  C163  F035         	movff	_powf$2105+3,___fladd@b+3
 11327   00271C  ECC7  F021         	call	___fladd	;wreg free
 11328   002720  C032  F108         	movff	?___fladd,_powf$2108
 11329   002724  C033  F109         	movff	?___fladd+1,_powf$2108+1
 11330   002728  C034  F10A         	movff	?___fladd+2,_powf$2108+2
 11331   00272C  C035  F10B         	movff	?___fladd+3,_powf$2108+3
 11332   002730  C108  F032         	movff	_powf$2108,___fladd@b
 11333   002734  C109  F033         	movff	_powf$2108+1,___fladd@b+1
 11334   002738  C10A  F034         	movff	_powf$2108+2,___fladd@b+2
 11335   00273C  C10B  F035         	movff	_powf$2108+3,___fladd@b+3
 11336   002740  C1B0  F036         	movff	powf@t,___fladd@a
 11337   002744  C1B1  F037         	movff	powf@t+1,___fladd@a+1
 11338   002748  C1B2  F038         	movff	powf@t+2,___fladd@a+2
 11339   00274C  C1B3  F039         	movff	powf@t+3,___fladd@a+3
 11340   002750  ECC7  F021         	call	___fladd	;wreg free
 11341   002754  C032  F18C         	movff	?___fladd,powf@t1
 11342   002758  C033  F18D         	movff	?___fladd+1,powf@t1+1
 11343   00275C  C034  F18E         	movff	?___fladd+2,powf@t1+2
 11344   002760  C035  F18F         	movff	?___fladd+3,powf@t1+3
 11345   002764  C18C  F198         	movff	powf@t1,powf@is
 11346   002768  C18D  F199         	movff	powf@t1+1,powf@is+1
 11347   00276C  C18E  F19A         	movff	powf@t1+2,powf@is+2
 11348   002770  C18F  F19B         	movff	powf@t1+3,powf@is+3
 11349   002774  0E00               	movlw	0
 11350   002776  0101               	movlb	1	; () banked
 11351   002778  1598               	andwf	powf@is& (0+255),w,b
 11352   00277A  6F8C               	movwf	powf@t1& (0+255),b
 11353   00277C  0EF0               	movlw	240
 11354   00277E  1599               	andwf	(powf@is+1)& (0+255),w,b
 11355   002780  6F8D               	movwf	(powf@t1+1)& (0+255),b
 11356   002782  0EFF               	movlw	255
 11357   002784  159A               	andwf	(powf@is+2)& (0+255),w,b
 11358   002786  6F8E               	movwf	(powf@t1+2)& (0+255),b
 11359   002788  0EFF               	movlw	255
 11360   00278A  159B               	andwf	(powf@is+3)& (0+255),w,b
 11361   00278C  6F8F               	movwf	(powf@t1+3)& (0+255),b
 11362   00278E                     
 11363                           ; BSR set to: 1
 11364   00278E  C1B0  F05F         	movff	powf@t,___flsub@a
 11365   002792  C1B1  F060         	movff	powf@t+1,___flsub@a+1
 11366   002796  C1B2  F061         	movff	powf@t+2,___flsub@a+2
 11367   00279A  C1B3  F062         	movff	powf@t+3,___flsub@a+3
 11368   00279E  C18C  F05B         	movff	powf@t1,___flsub@b
 11369   0027A2  C18D  F05C         	movff	powf@t1+1,___flsub@b+1
 11370   0027A6  C18E  F05D         	movff	powf@t1+2,___flsub@b+2
 11371   0027AA  C18F  F05E         	movff	powf@t1+3,___flsub@b+3
 11372   0027AE  EC52  F03B         	call	___flsub	;wreg free
 11373   0027B2  C05B  F19C         	movff	?___flsub,_powf$2101
 11374   0027B6  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 11375   0027BA  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 11376   0027BE  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 11377   0027C2  0101               	movlb	1	; () banked
 11378   0027C4  51A4               	movf	powf@k& (0+255),w,b
 11379   0027C6  0D04               	mullw	4
 11380   0027C8  50F3               	movf	243,w,c
 11381   0027CA  0F09               	addlw	low _dp_h
 11382   0027CC  6E77               	movwf	??_powf^0,c
 11383   0027CE  C077  FFF6         	movff	??_powf,tblptrl
 11384   0027D2                     	if	1	;There is more than 1 active tblptr byte
 11385   0027D2  0E10               	movlw	high __smallconst
 11386   0027D4  6EF7               	movwf	tblptrh,c
 11387   0027D6                     	endif
 11388   0027D6                     	if	0	;tblptru may be non-zero
 11389   0027D6                     	endif
 11390   0027D6                     	if	0	;tblptru may be non-zero
 11391   0027D6                     	endif
 11392   0027D6  0009               	tblrd		*+
 11393   0027D8  CFF5 F05F          	movff	tablat,___flsub@a
 11394   0027DC  0009               	tblrd		*+
 11395   0027DE  CFF5 F060          	movff	tablat,___flsub@a+1
 11396   0027E2  0009               	tblrd		*+
 11397   0027E4  CFF5 F061          	movff	tablat,___flsub@a+2
 11398   0027E8  000A               	tblrd		*-
 11399   0027EA  CFF5 F062          	movff	tablat,___flsub@a+3
 11400   0027EE  C19C  F05B         	movff	_powf$2101,___flsub@b
 11401   0027F2  C19D  F05C         	movff	_powf$2101+1,___flsub@b+1
 11402   0027F6  C19E  F05D         	movff	_powf$2101+2,___flsub@b+2
 11403   0027FA  C19F  F05E         	movff	_powf$2101+3,___flsub@b+3
 11404   0027FE  EC52  F03B         	call	___flsub	;wreg free
 11405   002802  C05B  F140         	movff	?___flsub,_powf$2107
 11406   002806  C05C  F141         	movff	?___flsub+1,_powf$2107+1
 11407   00280A  C05D  F142         	movff	?___flsub+2,_powf$2107+2
 11408   00280E  C05E  F143         	movff	?___flsub+3,_powf$2107+3
 11409   002812  C120  F05F         	movff	powf@z_h,___flsub@a
 11410   002816  C121  F060         	movff	powf@z_h+1,___flsub@a+1
 11411   00281A  C122  F061         	movff	powf@z_h+2,___flsub@a+2
 11412   00281E  C123  F062         	movff	powf@z_h+3,___flsub@a+3
 11413   002822  C140  F05B         	movff	_powf$2107,___flsub@b
 11414   002826  C141  F05C         	movff	_powf$2107+1,___flsub@b+1
 11415   00282A  C142  F05D         	movff	_powf$2107+2,___flsub@b+2
 11416   00282E  C143  F05E         	movff	_powf$2107+3,___flsub@b+3
 11417   002832  EC52  F03B         	call	___flsub	;wreg free
 11418   002836  C05B  F10C         	movff	?___flsub,_powf$2109
 11419   00283A  C05C  F10D         	movff	?___flsub+1,_powf$2109+1
 11420   00283E  C05D  F10E         	movff	?___flsub+2,_powf$2109+2
 11421   002842  C05E  F10F         	movff	?___flsub+3,_powf$2109+3
 11422   002846  C124  F05B         	movff	powf@z_l,___flsub@b
 11423   00284A  C125  F05C         	movff	powf@z_l+1,___flsub@b+1
 11424   00284E  C126  F05D         	movff	powf@z_l+2,___flsub@b+2
 11425   002852  C127  F05E         	movff	powf@z_l+3,___flsub@b+3
 11426   002856  C10C  F05F         	movff	_powf$2109,___flsub@a
 11427   00285A  C10D  F060         	movff	_powf$2109+1,___flsub@a+1
 11428   00285E  C10E  F061         	movff	_powf$2109+2,___flsub@a+2
 11429   002862  C10F  F062         	movff	_powf$2109+3,___flsub@a+3
 11430   002866  EC52  F03B         	call	___flsub	;wreg free
 11431   00286A  C05B  F11C         	movff	?___flsub,powf@t2
 11432   00286E  C05C  F11D         	movff	?___flsub+1,powf@t2+1
 11433   002872  C05D  F11E         	movff	?___flsub+2,powf@t2+2
 11434   002876  C05E  F11F         	movff	?___flsub+3,powf@t2+3
 11435   00287A                     l12623:
 11436   00287A  C073  F198         	movff	powf@y,powf@is
 11437   00287E  C074  F199         	movff	powf@y+1,powf@is+1
 11438   002882  C075  F19A         	movff	powf@y+2,powf@is+2
 11439   002886  C076  F19B         	movff	powf@y+3,powf@is+3
 11440   00288A  0E00               	movlw	0
 11441   00288C  0101               	movlb	1	; () banked
 11442   00288E  1598               	andwf	powf@is& (0+255),w,b
 11443   002890  6F2C               	movwf	powf@y1& (0+255),b
 11444   002892  0EF0               	movlw	240
 11445   002894  1599               	andwf	(powf@is+1)& (0+255),w,b
 11446   002896  6F2D               	movwf	(powf@y1+1)& (0+255),b
 11447   002898  0EFF               	movlw	255
 11448   00289A  159A               	andwf	(powf@is+2)& (0+255),w,b
 11449   00289C  6F2E               	movwf	(powf@y1+2)& (0+255),b
 11450   00289E  0EFF               	movlw	255
 11451   0028A0  159B               	andwf	(powf@is+3)& (0+255),w,b
 11452   0028A2  6F2F               	movwf	(powf@y1+3)& (0+255),b
 11453   0028A4                     
 11454                           ; BSR set to: 1
 11455   0028A4  C18C  F01D         	movff	powf@t1,___flmul@a
 11456   0028A8  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 11457   0028AC  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 11458   0028B0  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 11459   0028B4  C12C  F05F         	movff	powf@y1,___flsub@a
 11460   0028B8  C12D  F060         	movff	powf@y1+1,___flsub@a+1
 11461   0028BC  C12E  F061         	movff	powf@y1+2,___flsub@a+2
 11462   0028C0  C12F  F062         	movff	powf@y1+3,___flsub@a+3
 11463   0028C4  C073  F05B         	movff	powf@y,___flsub@b
 11464   0028C8  C074  F05C         	movff	powf@y+1,___flsub@b+1
 11465   0028CC  C075  F05D         	movff	powf@y+2,___flsub@b+2
 11466   0028D0  C076  F05E         	movff	powf@y+3,___flsub@b+3
 11467   0028D4  EC52  F03B         	call	___flsub	;wreg free
 11468   0028D8  C05B  F019         	movff	?___flsub,___flmul@b
 11469   0028DC  C05C  F01A         	movff	?___flsub+1,___flmul@b+1
 11470   0028E0  C05D  F01B         	movff	?___flsub+2,___flmul@b+2
 11471   0028E4  C05E  F01C         	movff	?___flsub+3,___flmul@b+3
 11472   0028E8  EC27  F024         	call	___flmul	;wreg free
 11473   0028EC  C019  F110         	movff	?___flmul,_powf$2110
 11474   0028F0  C01A  F111         	movff	?___flmul+1,_powf$2110+1
 11475   0028F4  C01B  F112         	movff	?___flmul+2,_powf$2110+2
 11476   0028F8  C01C  F113         	movff	?___flmul+3,_powf$2110+3
 11477   0028FC  C110  F032         	movff	_powf$2110,___fladd@b
 11478   002900  C111  F033         	movff	_powf$2110+1,___fladd@b+1
 11479   002904  C112  F034         	movff	_powf$2110+2,___fladd@b+2
 11480   002908  C113  F035         	movff	_powf$2110+3,___fladd@b+3
 11481   00290C  C11C  F01D         	movff	powf@t2,___flmul@a
 11482   002910  C11D  F01E         	movff	powf@t2+1,___flmul@a+1
 11483   002914  C11E  F01F         	movff	powf@t2+2,___flmul@a+2
 11484   002918  C11F  F020         	movff	powf@t2+3,___flmul@a+3
 11485   00291C  C073  F019         	movff	powf@y,___flmul@b
 11486   002920  C074  F01A         	movff	powf@y+1,___flmul@b+1
 11487   002924  C075  F01B         	movff	powf@y+2,___flmul@b+2
 11488   002928  C076  F01C         	movff	powf@y+3,___flmul@b+3
 11489   00292C  EC27  F024         	call	___flmul	;wreg free
 11490   002930  C019  F036         	movff	?___flmul,___fladd@a
 11491   002934  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11492   002938  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11493   00293C  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11494   002940  ECC7  F021         	call	___fladd	;wreg free
 11495   002944  C032  F16C         	movff	?___fladd,powf@p_l
 11496   002948  C033  F16D         	movff	?___fladd+1,powf@p_l+1
 11497   00294C  C034  F16E         	movff	?___fladd+2,powf@p_l+2
 11498   002950  C035  F16F         	movff	?___fladd+3,powf@p_l+3
 11499   002954  C12C  F019         	movff	powf@y1,___flmul@b
 11500   002958  C12D  F01A         	movff	powf@y1+1,___flmul@b+1
 11501   00295C  C12E  F01B         	movff	powf@y1+2,___flmul@b+2
 11502   002960  C12F  F01C         	movff	powf@y1+3,___flmul@b+3
 11503   002964  C18C  F01D         	movff	powf@t1,___flmul@a
 11504   002968  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 11505   00296C  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 11506   002970  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 11507   002974  EC27  F024         	call	___flmul	;wreg free
 11508   002978  C019  F1A0         	movff	?___flmul,powf@p_h
 11509   00297C  C01A  F1A1         	movff	?___flmul+1,powf@p_h+1
 11510   002980  C01B  F1A2         	movff	?___flmul+2,powf@p_h+2
 11511   002984  C01C  F1A3         	movff	?___flmul+3,powf@p_h+3
 11512   002988  C1A0  F032         	movff	powf@p_h,___fladd@b
 11513   00298C  C1A1  F033         	movff	powf@p_h+1,___fladd@b+1
 11514   002990  C1A2  F034         	movff	powf@p_h+2,___fladd@b+2
 11515   002994  C1A3  F035         	movff	powf@p_h+3,___fladd@b+3
 11516   002998  C16C  F036         	movff	powf@p_l,___fladd@a
 11517   00299C  C16D  F037         	movff	powf@p_l+1,___fladd@a+1
 11518   0029A0  C16E  F038         	movff	powf@p_l+2,___fladd@a+2
 11519   0029A4  C16F  F039         	movff	powf@p_l+3,___fladd@a+3
 11520   0029A8  ECC7  F021         	call	___fladd	;wreg free
 11521   0029AC  C032  F1B4         	movff	?___fladd,powf@z
 11522   0029B0  C033  F1B5         	movff	?___fladd+1,powf@z+1
 11523   0029B4  C034  F1B6         	movff	?___fladd+2,powf@z+2
 11524   0029B8  C035  F1B7         	movff	?___fladd+3,powf@z+3
 11525   0029BC  C1B4  F1A8         	movff	powf@z,powf@j
 11526   0029C0  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 11527   0029C4  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 11528   0029C8  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 11529   0029CC  0101               	movlb	1	; () banked
 11530   0029CE  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11531   0029D0  EFF6  F014         	goto	u13191
 11532   0029D4  05A8               	decf	powf@j& (0+255),w,b
 11533   0029D6  0E00               	movlw	0
 11534   0029D8  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11535   0029DA  0E00               	movlw	0
 11536   0029DC  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11537   0029DE  0E43               	movlw	67
 11538   0029E0  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 11539   0029E2  A0D8               	btfss	status,0,c
 11540   0029E4  EFF6  F014         	goto	u13191
 11541   0029E8  EFF8  F014         	goto	u13190
 11542   0029EC                     u13191:
 11543   0029EC  EFFA  F014         	goto	l12645
 11544   0029F0                     u13190:
 11545   0029F0  EFD2  F00B         	goto	l12445
 11546   0029F4                     l12645:
 11547                           
 11548                           ; BSR set to: 1
 11549   0029F4  0E43               	movlw	67
 11550   0029F6  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 11551   0029F8  11A8               	iorwf	powf@j& (0+255),w,b
 11552   0029FA  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11553   0029FC  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 11554   0029FE  A4D8               	btfss	status,2,c
 11555   002A00  EF04  F015         	goto	u13201
 11556   002A04  EF06  F015         	goto	u13200
 11557   002A08                     u13201:
 11558   002A08  EF45  F015         	goto	l12655
 11559   002A0C                     u13200:
 11560   002A0C                     
 11561                           ; BSR set to: 1
 11562   002A0C  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11563   002A10  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11564   002A14  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 11565   002A18  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 11566   002A1C  C1B4  F05B         	movff	powf@z,___flsub@b
 11567   002A20  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 11568   002A24  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 11569   002A28  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 11570   002A2C  EC52  F03B         	call	___flsub	;wreg free
 11571   002A30  C05B  F063         	movff	?___flsub,___flge@ff1
 11572   002A34  C05C  F064         	movff	?___flsub+1,___flge@ff1+1
 11573   002A38  C05D  F065         	movff	?___flsub+2,___flge@ff1+2
 11574   002A3C  C05E  F066         	movff	?___flsub+3,___flge@ff1+3
 11575   002A40  0E3C               	movlw	60
 11576   002A42  6E36               	movwf	___fladd@a^0,c
 11577   002A44  0EAA               	movlw	170
 11578   002A46  6E37               	movwf	(___fladd@a+1)^0,c
 11579   002A48  0E38               	movlw	56
 11580   002A4A  6E38               	movwf	(___fladd@a+2)^0,c
 11581   002A4C  0E33               	movlw	51
 11582   002A4E  6E39               	movwf	(___fladd@a+3)^0,c
 11583   002A50  C16C  F032         	movff	powf@p_l,___fladd@b
 11584   002A54  C16D  F033         	movff	powf@p_l+1,___fladd@b+1
 11585   002A58  C16E  F034         	movff	powf@p_l+2,___fladd@b+2
 11586   002A5C  C16F  F035         	movff	powf@p_l+3,___fladd@b+3
 11587   002A60  ECC7  F021         	call	___fladd	;wreg free
 11588   002A64  C032  F067         	movff	?___fladd,___flge@ff2
 11589   002A68  C033  F068         	movff	?___fladd+1,___flge@ff2+1
 11590   002A6C  C034  F069         	movff	?___fladd+2,___flge@ff2+2
 11591   002A70  C035  F06A         	movff	?___fladd+3,___flge@ff2+3
 11592   002A74  EC66  F034         	call	___flge	;wreg free
 11593   002A78  B0D8               	btfsc	status,0,c
 11594   002A7A  EF41  F015         	goto	u13211
 11595   002A7E  EF43  F015         	goto	u13210
 11596   002A82                     u13211:
 11597   002A82  EFAF  F015         	goto	l12671
 11598   002A86                     u13210:
 11599   002A86  EFD2  F00B         	goto	l12445
 11600   002A8A                     l12655:
 11601                           
 11602                           ; BSR set to: 1
 11603   002A8A  0EFF               	movlw	255
 11604   002A8C  15A8               	andwf	powf@j& (0+255),w,b
 11605   002A8E  6E77               	movwf	??_powf^0,c
 11606   002A90  0EFF               	movlw	255
 11607   002A92  15A9               	andwf	(powf@j+1)& (0+255),w,b
 11608   002A94  6E78               	movwf	(??_powf+1)^0,c
 11609   002A96  0EFF               	movlw	255
 11610   002A98  15AA               	andwf	(powf@j+2)& (0+255),w,b
 11611   002A9A  6E79               	movwf	(??_powf+2)^0,c
 11612   002A9C  0E7F               	movlw	127
 11613   002A9E  15AB               	andwf	(powf@j+3)& (0+255),w,b
 11614   002AA0  6E7A               	movwf	(??_powf+3)^0,c
 11615   002AA2  BE7A               	btfsc	(??_powf+3)^0,7,c
 11616   002AA4  EF60  F015         	goto	u13221
 11617   002AA8  0477               	decf	??_powf^0,w,c
 11618   002AAA  0E00               	movlw	0
 11619   002AAC  5878               	subwfb	(??_powf+1)^0,w,c
 11620   002AAE  0E16               	movlw	22
 11621   002AB0  5879               	subwfb	(??_powf+2)^0,w,c
 11622   002AB2  0E43               	movlw	67
 11623   002AB4  587A               	subwfb	(??_powf+3)^0,w,c
 11624   002AB6  A0D8               	btfss	status,0,c
 11625   002AB8  EF60  F015         	goto	u13221
 11626   002ABC  EF62  F015         	goto	u13220
 11627   002AC0                     u13221:
 11628   002AC0  EF6C  F015         	goto	l12663
 11629   002AC4                     u13220:
 11630   002AC4                     
 11631                           ; BSR set to: 1
 11632   002AC4  0E00               	movlw	0
 11633   002AC6  6E6F               	movwf	?_powf^0,c
 11634   002AC8  0E00               	movlw	0
 11635   002ACA  6E70               	movwf	(?_powf+1)^0,c
 11636   002ACC  0E00               	movlw	0
 11637   002ACE  6E71               	movwf	(?_powf+2)^0,c
 11638   002AD0  0E00               	movlw	0
 11639   002AD2  6E72               	movwf	(?_powf+3)^0,c
 11640   002AD4  EF06  F01A         	goto	l1644
 11641   002AD8                     l12663:
 11642                           
 11643                           ; BSR set to: 1
 11644   002AD8  0E16               	movlw	22
 11645   002ADA  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 11646   002ADC  E109               	bnz	u13231
 11647   002ADE  0EC3               	movlw	195
 11648   002AE0  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 11649   002AE2  11A8               	iorwf	powf@j& (0+255),w,b
 11650   002AE4  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11651   002AE6  A4D8               	btfss	status,2,c
 11652   002AE8  EF78  F015         	goto	u13231
 11653   002AEC  EF7A  F015         	goto	u13230
 11654   002AF0                     u13231:
 11655   002AF0  EFAF  F015         	goto	l12671
 11656   002AF4                     u13230:
 11657   002AF4                     
 11658                           ; BSR set to: 1
 11659   002AF4  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11660   002AF8  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11661   002AFC  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 11662   002B00  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 11663   002B04  C1B4  F05B         	movff	powf@z,___flsub@b
 11664   002B08  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 11665   002B0C  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 11666   002B10  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 11667   002B14  EC52  F03B         	call	___flsub	;wreg free
 11668   002B18  C05B  F063         	movff	?___flsub,___flge@ff1
 11669   002B1C  C05C  F064         	movff	?___flsub+1,___flge@ff1+1
 11670   002B20  C05D  F065         	movff	?___flsub+2,___flge@ff1+2
 11671   002B24  C05E  F066         	movff	?___flsub+3,___flge@ff1+3
 11672   002B28  C16C  F067         	movff	powf@p_l,___flge@ff2
 11673   002B2C  C16D  F068         	movff	powf@p_l+1,___flge@ff2+1
 11674   002B30  C16E  F069         	movff	powf@p_l+2,___flge@ff2+2
 11675   002B34  C16F  F06A         	movff	powf@p_l+3,___flge@ff2+3
 11676   002B38  EC66  F034         	call	___flge	;wreg free
 11677   002B3C  A0D8               	btfss	status,0,c
 11678   002B3E  EFA3  F015         	goto	u13241
 11679   002B42  EFA5  F015         	goto	u13240
 11680   002B46                     u13241:
 11681   002B46  EFAF  F015         	goto	l12671
 11682   002B4A                     u13240:
 11683   002B4A  0E00               	movlw	0
 11684   002B4C  6E6F               	movwf	?_powf^0,c
 11685   002B4E  0E00               	movlw	0
 11686   002B50  6E70               	movwf	(?_powf+1)^0,c
 11687   002B52  0E00               	movlw	0
 11688   002B54  6E71               	movwf	(?_powf+2)^0,c
 11689   002B56  0E00               	movlw	0
 11690   002B58  6E72               	movwf	(?_powf+3)^0,c
 11691   002B5A  EF06  F01A         	goto	l1644
 11692   002B5E                     l12671:
 11693   002B5E  0EFF               	movlw	255
 11694   002B60  0101               	movlb	1	; () banked
 11695   002B62  15A8               	andwf	powf@j& (0+255),w,b
 11696   002B64  6F28               	movwf	powf@i& (0+255),b
 11697   002B66  0EFF               	movlw	255
 11698   002B68  15A9               	andwf	(powf@j+1)& (0+255),w,b
 11699   002B6A  6F29               	movwf	(powf@i+1)& (0+255),b
 11700   002B6C  0EFF               	movlw	255
 11701   002B6E  15AA               	andwf	(powf@j+2)& (0+255),w,b
 11702   002B70  6F2A               	movwf	(powf@i+2)& (0+255),b
 11703   002B72  0E7F               	movlw	127
 11704   002B74  15AB               	andwf	(powf@j+3)& (0+255),w,b
 11705   002B76  6F2B               	movwf	(powf@i+3)& (0+255),b
 11706   002B78  0E17               	movlw	23
 11707   002B7A  6E77               	movwf	??_powf^0,c
 11708   002B7C  C128  F078         	movff	powf@i,??_powf+1
 11709   002B80  C129  F079         	movff	powf@i+1,??_powf+2
 11710   002B84  C12A  F07A         	movff	powf@i+2,??_powf+3
 11711   002B88  C12B  F07B         	movff	powf@i+3,??_powf+4
 11712   002B8C                     u13255:
 11713   002B8C  6677               	tstfsz	??_powf^0,c
 11714   002B8E  EFCB  F015         	goto	u13256
 11715   002B92  EFD3  F015         	goto	u13257
 11716   002B96                     u13256:
 11717   002B96  347B               	rlcf	(??_powf+4)^0,w,c
 11718   002B98  327B               	rrcf	(??_powf+4)^0,f,c
 11719   002B9A  327A               	rrcf	(??_powf+3)^0,f,c
 11720   002B9C  3279               	rrcf	(??_powf+2)^0,f,c
 11721   002B9E  3278               	rrcf	(??_powf+1)^0,f,c
 11722   002BA0  2E77               	decfsz	??_powf^0,f,c
 11723   002BA2  EFC6  F015         	goto	u13255
 11724   002BA6                     u13257:
 11725   002BA6  0E81               	movlw	129
 11726   002BA8  2478               	addwf	(??_powf+1)^0,w,c
 11727   002BAA  0101               	movlb	1	; () banked
 11728   002BAC  6FA4               	movwf	powf@k& (0+255),b
 11729   002BAE  0EFF               	movlw	255
 11730   002BB0  2079               	addwfc	(??_powf+2)^0,w,c
 11731   002BB2  6FA5               	movwf	(powf@k+1)& (0+255),b
 11732   002BB4  0EFF               	movlw	255
 11733   002BB6  207A               	addwfc	(??_powf+3)^0,w,c
 11734   002BB8  6FA6               	movwf	(powf@k+2)& (0+255),b
 11735   002BBA  0EFF               	movlw	255
 11736   002BBC  207B               	addwfc	(??_powf+4)^0,w,c
 11737   002BBE  6FA7               	movwf	(powf@k+3)& (0+255),b
 11738   002BC0                     
 11739                           ; BSR set to: 1
 11740   002BC0  0E00               	movlw	0
 11741   002BC2  6F88               	movwf	powf@n& (0+255),b
 11742   002BC4  0E00               	movlw	0
 11743   002BC6  6F89               	movwf	(powf@n+1)& (0+255),b
 11744   002BC8  0E00               	movlw	0
 11745   002BCA  6F8A               	movwf	(powf@n+2)& (0+255),b
 11746   002BCC  0E00               	movlw	0
 11747   002BCE  6F8B               	movwf	(powf@n+3)& (0+255),b
 11748   002BD0                     
 11749                           ; BSR set to: 1
 11750   002BD0  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 11751   002BD2  EFF7  F015         	goto	u13261
 11752   002BD6  0528               	decf	powf@i& (0+255),w,b
 11753   002BD8  0E00               	movlw	0
 11754   002BDA  5929               	subwfb	(powf@i+1)& (0+255),w,b
 11755   002BDC  0E00               	movlw	0
 11756   002BDE  592A               	subwfb	(powf@i+2)& (0+255),w,b
 11757   002BE0  0E3F               	movlw	63
 11758   002BE2  592B               	subwfb	(powf@i+3)& (0+255),w,b
 11759   002BE4  A0D8               	btfss	status,0,c
 11760   002BE6  EFF7  F015         	goto	u13261
 11761   002BEA  EFF9  F015         	goto	u13260
 11762   002BEE                     u13261:
 11763   002BEE  EFD1  F016         	goto	l12683
 11764   002BF2                     u13260:
 11765   002BF2                     
 11766                           ; BSR set to: 1
 11767   002BF2  C1A4  F077         	movff	powf@k,??_powf
 11768   002BF6  0E01               	movlw	1
 11769   002BF8  2677               	addwf	??_powf^0,f,c
 11770   002BFA  0E00               	movlw	0
 11771   002BFC  6E78               	movwf	(??_powf+1)^0,c
 11772   002BFE  0E00               	movlw	0
 11773   002C00  6E79               	movwf	(??_powf+2)^0,c
 11774   002C02  0E80               	movlw	128
 11775   002C04  6E7A               	movwf	(??_powf+3)^0,c
 11776   002C06  0E00               	movlw	0
 11777   002C08  6E7B               	movwf	(??_powf+4)^0,c
 11778   002C0A                     u13275:
 11779   002C0A  6677               	tstfsz	??_powf^0,c
 11780   002C0C  EF0A  F016         	goto	u13276
 11781   002C10  EF12  F016         	goto	u13277
 11782   002C14                     u13276:
 11783   002C14  347B               	rlcf	(??_powf+4)^0,w,c
 11784   002C16  327B               	rrcf	(??_powf+4)^0,f,c
 11785   002C18  327A               	rrcf	(??_powf+3)^0,f,c
 11786   002C1A  3279               	rrcf	(??_powf+2)^0,f,c
 11787   002C1C  3278               	rrcf	(??_powf+1)^0,f,c
 11788   002C1E  2E77               	decfsz	??_powf^0,f,c
 11789   002C20  EF05  F016         	goto	u13275
 11790   002C24                     u13277:
 11791   002C24  0101               	movlb	1	; () banked
 11792   002C26  51A8               	movf	powf@j& (0+255),w,b
 11793   002C28  2478               	addwf	(??_powf+1)^0,w,c
 11794   002C2A  6F88               	movwf	powf@n& (0+255),b
 11795   002C2C  51A9               	movf	(powf@j+1)& (0+255),w,b
 11796   002C2E  2079               	addwfc	(??_powf+2)^0,w,c
 11797   002C30  6F89               	movwf	(powf@n+1)& (0+255),b
 11798   002C32  51AA               	movf	(powf@j+2)& (0+255),w,b
 11799   002C34  207A               	addwfc	(??_powf+3)^0,w,c
 11800   002C36  6F8A               	movwf	(powf@n+2)& (0+255),b
 11801   002C38  51AB               	movf	(powf@j+3)& (0+255),w,b
 11802   002C3A  207B               	addwfc	(??_powf+4)^0,w,c
 11803   002C3C  6F8B               	movwf	(powf@n+3)& (0+255),b
 11804   002C3E  0E81               	movlw	129
 11805   002C40  6E77               	movwf	??_powf^0,c
 11806   002C42  0EFF               	movlw	255
 11807   002C44  6E78               	movwf	(??_powf+1)^0,c
 11808   002C46  0EFF               	movlw	255
 11809   002C48  6E79               	movwf	(??_powf+2)^0,c
 11810   002C4A  0EFF               	movlw	255
 11811   002C4C  6E7A               	movwf	(??_powf+3)^0,c
 11812   002C4E  0E17               	movlw	23
 11813   002C50  6E7B               	movwf	(??_powf+4)^0,c
 11814   002C52  C188  F07C         	movff	powf@n,??_powf+5
 11815   002C56  C189  F07D         	movff	powf@n+1,??_powf+6
 11816   002C5A  C18A  F07E         	movff	powf@n+2,??_powf+7
 11817   002C5E  C18B  F07F         	movff	powf@n+3,??_powf+8
 11818   002C62                     u13285:
 11819   002C62  667B               	tstfsz	(??_powf+4)^0,c
 11820   002C64  EF36  F016         	goto	u13286
 11821   002C68  EF3E  F016         	goto	u13287
 11822   002C6C                     u13286:
 11823   002C6C  347F               	rlcf	(??_powf+8)^0,w,c
 11824   002C6E  327F               	rrcf	(??_powf+8)^0,f,c
 11825   002C70  327E               	rrcf	(??_powf+7)^0,f,c
 11826   002C72  327D               	rrcf	(??_powf+6)^0,f,c
 11827   002C74  327C               	rrcf	(??_powf+5)^0,f,c
 11828   002C76  2E7B               	decfsz	(??_powf+4)^0,f,c
 11829   002C78  EF31  F016         	goto	u13285
 11830   002C7C                     u13287:
 11831   002C7C  507C               	movf	(??_powf+5)^0,w,c
 11832   002C7E  2477               	addwf	??_powf^0,w,c
 11833   002C80  0101               	movlb	1	; () banked
 11834   002C82  6FA4               	movwf	powf@k& (0+255),b
 11835   002C84  0E00               	movlw	0
 11836   002C86  2078               	addwfc	(??_powf+1)^0,w,c
 11837   002C88  6FA5               	movwf	(powf@k+1)& (0+255),b
 11838   002C8A  0E00               	movlw	0
 11839   002C8C  2079               	addwfc	(??_powf+2)^0,w,c
 11840   002C8E  6FA6               	movwf	(powf@k+2)& (0+255),b
 11841   002C90  0E00               	movlw	0
 11842   002C92  207A               	addwfc	(??_powf+3)^0,w,c
 11843   002C94  6FA7               	movwf	(powf@k+3)& (0+255),b
 11844   002C96  C1A4  F077         	movff	powf@k,??_powf
 11845   002C9A  0EFF               	movlw	255
 11846   002C9C  6E78               	movwf	(??_powf+1)^0,c
 11847   002C9E  0EFF               	movlw	255
 11848   002CA0  6E79               	movwf	(??_powf+2)^0,c
 11849   002CA2  0E7F               	movlw	127
 11850   002CA4  6E7A               	movwf	(??_powf+3)^0,c
 11851   002CA6  0E00               	movlw	0
 11852   002CA8  6E7B               	movwf	(??_powf+4)^0,c
 11853   002CAA                     u13295:
 11854   002CAA  6677               	tstfsz	??_powf^0,c
 11855   002CAC  EF5A  F016         	goto	u13296
 11856   002CB0  EF62  F016         	goto	u13297
 11857   002CB4                     u13296:
 11858   002CB4  347B               	rlcf	(??_powf+4)^0,w,c
 11859   002CB6  327B               	rrcf	(??_powf+4)^0,f,c
 11860   002CB8  327A               	rrcf	(??_powf+3)^0,f,c
 11861   002CBA  3279               	rrcf	(??_powf+2)^0,f,c
 11862   002CBC  3278               	rrcf	(??_powf+1)^0,f,c
 11863   002CBE  2E77               	decfsz	??_powf^0,f,c
 11864   002CC0  EF55  F016         	goto	u13295
 11865   002CC4                     u13297:
 11866   002CC4  1C78               	comf	(??_powf+1)^0,w,c
 11867   002CC6  6E7C               	movwf	(??_powf+5)^0,c
 11868   002CC8  1C79               	comf	(??_powf+2)^0,w,c
 11869   002CCA  6E7D               	movwf	(??_powf+6)^0,c
 11870   002CCC  1C7A               	comf	(??_powf+3)^0,w,c
 11871   002CCE  6E7E               	movwf	(??_powf+7)^0,c
 11872   002CD0  1C7B               	comf	(??_powf+4)^0,w,c
 11873   002CD2  6E7F               	movwf	(??_powf+8)^0,c
 11874   002CD4  0101               	movlb	1	; () banked
 11875   002CD6  5188               	movf	powf@n& (0+255),w,b
 11876   002CD8  147C               	andwf	(??_powf+5)^0,w,c
 11877   002CDA  6FB0               	movwf	powf@t& (0+255),b
 11878   002CDC  5189               	movf	(powf@n+1)& (0+255),w,b
 11879   002CDE  147D               	andwf	(??_powf+6)^0,w,c
 11880   002CE0  6FB1               	movwf	(powf@t+1)& (0+255),b
 11881   002CE2  518A               	movf	(powf@n+2)& (0+255),w,b
 11882   002CE4  147E               	andwf	(??_powf+7)^0,w,c
 11883   002CE6  6FB2               	movwf	(powf@t+2)& (0+255),b
 11884   002CE8  518B               	movf	(powf@n+3)& (0+255),w,b
 11885   002CEA  147F               	andwf	(??_powf+8)^0,w,c
 11886   002CEC  6FB3               	movwf	(powf@t+3)& (0+255),b
 11887   002CEE  51A4               	movf	powf@k& (0+255),w,b
 11888   002CF0  0817               	sublw	23
 11889   002CF2  6E77               	movwf	??_powf^0,c
 11890   002CF4  0EFF               	movlw	255
 11891   002CF6  1588               	andwf	powf@n& (0+255),w,b
 11892   002CF8  6E78               	movwf	(??_powf+1)^0,c
 11893   002CFA  0EFF               	movlw	255
 11894   002CFC  1589               	andwf	(powf@n+1)& (0+255),w,b
 11895   002CFE  6E79               	movwf	(??_powf+2)^0,c
 11896   002D00  0E7F               	movlw	127
 11897   002D02  158A               	andwf	(powf@n+2)& (0+255),w,b
 11898   002D04  6E7A               	movwf	(??_powf+3)^0,c
 11899   002D06  0E00               	movlw	0
 11900   002D08  158B               	andwf	(powf@n+3)& (0+255),w,b
 11901   002D0A  6E7B               	movwf	(??_powf+4)^0,c
 11902   002D0C  0E00               	movlw	0
 11903   002D0E  1078               	iorwf	(??_powf+1)^0,w,c
 11904   002D10  6E7C               	movwf	(??_powf+5)^0,c
 11905   002D12  0E00               	movlw	0
 11906   002D14  1079               	iorwf	(??_powf+2)^0,w,c
 11907   002D16  6E7D               	movwf	(??_powf+6)^0,c
 11908   002D18  0E80               	movlw	128
 11909   002D1A  107A               	iorwf	(??_powf+3)^0,w,c
 11910   002D1C  6E7E               	movwf	(??_powf+7)^0,c
 11911   002D1E  0E00               	movlw	0
 11912   002D20  107B               	iorwf	(??_powf+4)^0,w,c
 11913   002D22  6E7F               	movwf	(??_powf+8)^0,c
 11914   002D24                     u13305:
 11915   002D24  6677               	tstfsz	??_powf^0,c
 11916   002D26  EF97  F016         	goto	u13306
 11917   002D2A  EF9F  F016         	goto	u13307
 11918   002D2E                     u13306:
 11919   002D2E  347F               	rlcf	(??_powf+8)^0,w,c
 11920   002D30  327F               	rrcf	(??_powf+8)^0,f,c
 11921   002D32  327E               	rrcf	(??_powf+7)^0,f,c
 11922   002D34  327D               	rrcf	(??_powf+6)^0,f,c
 11923   002D36  327C               	rrcf	(??_powf+5)^0,f,c
 11924   002D38  2E77               	decfsz	??_powf^0,f,c
 11925   002D3A  EF92  F016         	goto	u13305
 11926   002D3E                     u13307:
 11927   002D3E  C07C  F188         	movff	??_powf+5,powf@n
 11928   002D42  C07D  F189         	movff	??_powf+6,powf@n+1
 11929   002D46  C07E  F18A         	movff	??_powf+7,powf@n+2
 11930   002D4A  C07F  F18B         	movff	??_powf+8,powf@n+3
 11931   002D4E  0101               	movlb	1	; () banked
 11932   002D50  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11933   002D52  EFAF  F016         	goto	u13310
 11934   002D56  EFAD  F016         	goto	u13311
 11935   002D5A                     u13311:
 11936   002D5A  EFB7  F016         	goto	l12681
 11937   002D5E                     u13310:
 11938   002D5E                     
 11939                           ; BSR set to: 1
 11940   002D5E  1F8B               	comf	(powf@n+3)& (0+255),f,b
 11941   002D60  1F8A               	comf	(powf@n+2)& (0+255),f,b
 11942   002D62  1F89               	comf	(powf@n+1)& (0+255),f,b
 11943   002D64  6D88               	negf	powf@n& (0+255),b
 11944   002D66  0E00               	movlw	0
 11945   002D68  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11946   002D6A  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11947   002D6C  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11948   002D6E                     l12681:
 11949                           
 11950                           ; BSR set to: 1
 11951   002D6E  C1A0  F05B         	movff	powf@p_h,___flsub@b
 11952   002D72  C1A1  F05C         	movff	powf@p_h+1,___flsub@b+1
 11953   002D76  C1A2  F05D         	movff	powf@p_h+2,___flsub@b+2
 11954   002D7A  C1A3  F05E         	movff	powf@p_h+3,___flsub@b+3
 11955   002D7E  C1B0  F05F         	movff	powf@t,___flsub@a
 11956   002D82  C1B1  F060         	movff	powf@t+1,___flsub@a+1
 11957   002D86  C1B2  F061         	movff	powf@t+2,___flsub@a+2
 11958   002D8A  C1B3  F062         	movff	powf@t+3,___flsub@a+3
 11959   002D8E  EC52  F03B         	call	___flsub	;wreg free
 11960   002D92  C05B  F1A0         	movff	?___flsub,powf@p_h
 11961   002D96  C05C  F1A1         	movff	?___flsub+1,powf@p_h+1
 11962   002D9A  C05D  F1A2         	movff	?___flsub+2,powf@p_h+2
 11963   002D9E  C05E  F1A3         	movff	?___flsub+3,powf@p_h+3
 11964   002DA2                     l12683:
 11965   002DA2  C1A0  F032         	movff	powf@p_h,___fladd@b
 11966   002DA6  C1A1  F033         	movff	powf@p_h+1,___fladd@b+1
 11967   002DAA  C1A2  F034         	movff	powf@p_h+2,___fladd@b+2
 11968   002DAE  C1A3  F035         	movff	powf@p_h+3,___fladd@b+3
 11969   002DB2  C16C  F036         	movff	powf@p_l,___fladd@a
 11970   002DB6  C16D  F037         	movff	powf@p_l+1,___fladd@a+1
 11971   002DBA  C16E  F038         	movff	powf@p_l+2,___fladd@a+2
 11972   002DBE  C16F  F039         	movff	powf@p_l+3,___fladd@a+3
 11973   002DC2  ECC7  F021         	call	___fladd	;wreg free
 11974   002DC6  C032  F1B0         	movff	?___fladd,powf@t
 11975   002DCA  C033  F1B1         	movff	?___fladd+1,powf@t+1
 11976   002DCE  C034  F1B2         	movff	?___fladd+2,powf@t+2
 11977   002DD2  C035  F1B3         	movff	?___fladd+3,powf@t+3
 11978   002DD6  C1B0  F198         	movff	powf@t,powf@is
 11979   002DDA  C1B1  F199         	movff	powf@t+1,powf@is+1
 11980   002DDE  C1B2  F19A         	movff	powf@t+2,powf@is+2
 11981   002DE2  C1B3  F19B         	movff	powf@t+3,powf@is+3
 11982   002DE6  0E00               	movlw	0
 11983   002DE8  0101               	movlb	1	; () banked
 11984   002DEA  1598               	andwf	powf@is& (0+255),w,b
 11985   002DEC  6FB0               	movwf	powf@t& (0+255),b
 11986   002DEE  0E80               	movlw	128
 11987   002DF0  1599               	andwf	(powf@is+1)& (0+255),w,b
 11988   002DF2  6FB1               	movwf	(powf@t+1)& (0+255),b
 11989   002DF4  0EFF               	movlw	255
 11990   002DF6  159A               	andwf	(powf@is+2)& (0+255),w,b
 11991   002DF8  6FB2               	movwf	(powf@t+2)& (0+255),b
 11992   002DFA  0EFF               	movlw	255
 11993   002DFC  159B               	andwf	(powf@is+3)& (0+255),w,b
 11994   002DFE  6FB3               	movwf	(powf@t+3)& (0+255),b
 11995   002E00                     
 11996                           ; BSR set to: 1
 11997   002E00  C1B0  F019         	movff	powf@t,___flmul@b
 11998   002E04  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 11999   002E08  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 12000   002E0C  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 12001   002E10  0E00               	movlw	0
 12002   002E12  6E1D               	movwf	___flmul@a^0,c
 12003   002E14  0E72               	movlw	114
 12004   002E16  6E1E               	movwf	(___flmul@a+1)^0,c
 12005   002E18  0E31               	movlw	49
 12006   002E1A  6E1F               	movwf	(___flmul@a+2)^0,c
 12007   002E1C  0E3F               	movlw	63
 12008   002E1E  6E20               	movwf	(___flmul@a+3)^0,c
 12009   002E20  EC27  F024         	call	___flmul	;wreg free
 12010   002E24  C019  F17C         	movff	?___flmul,powf@u
 12011   002E28  C01A  F17D         	movff	?___flmul+1,powf@u+1
 12012   002E2C  C01B  F17E         	movff	?___flmul+2,powf@u+2
 12013   002E30  C01C  F17F         	movff	?___flmul+3,powf@u+3
 12014   002E34  C1A0  F05F         	movff	powf@p_h,___flsub@a
 12015   002E38  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 12016   002E3C  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 12017   002E40  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 12018   002E44  C1B0  F05B         	movff	powf@t,___flsub@b
 12019   002E48  C1B1  F05C         	movff	powf@t+1,___flsub@b+1
 12020   002E4C  C1B2  F05D         	movff	powf@t+2,___flsub@b+2
 12021   002E50  C1B3  F05E         	movff	powf@t+3,___flsub@b+3
 12022   002E54  EC52  F03B         	call	___flsub	;wreg free
 12023   002E58  C05B  F19C         	movff	?___flsub,_powf$2101
 12024   002E5C  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 12025   002E60  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 12026   002E64  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 12027   002E68  0E18               	movlw	24
 12028   002E6A  6E1D               	movwf	___flmul@a^0,c
 12029   002E6C  0E72               	movlw	114
 12030   002E6E  6E1E               	movwf	(___flmul@a+1)^0,c
 12031   002E70  0E31               	movlw	49
 12032   002E72  6E1F               	movwf	(___flmul@a+2)^0,c
 12033   002E74  0E3F               	movlw	63
 12034   002E76  6E20               	movwf	(___flmul@a+3)^0,c
 12035   002E78  C19C  F05F         	movff	_powf$2101,___flsub@a
 12036   002E7C  C19D  F060         	movff	_powf$2101+1,___flsub@a+1
 12037   002E80  C19E  F061         	movff	_powf$2101+2,___flsub@a+2
 12038   002E84  C19F  F062         	movff	_powf$2101+3,___flsub@a+3
 12039   002E88  C16C  F05B         	movff	powf@p_l,___flsub@b
 12040   002E8C  C16D  F05C         	movff	powf@p_l+1,___flsub@b+1
 12041   002E90  C16E  F05D         	movff	powf@p_l+2,___flsub@b+2
 12042   002E94  C16F  F05E         	movff	powf@p_l+3,___flsub@b+3
 12043   002E98  EC52  F03B         	call	___flsub	;wreg free
 12044   002E9C  C05B  F019         	movff	?___flsub,___flmul@b
 12045   002EA0  C05C  F01A         	movff	?___flsub+1,___flmul@b+1
 12046   002EA4  C05D  F01B         	movff	?___flsub+2,___flmul@b+2
 12047   002EA8  C05E  F01C         	movff	?___flsub+3,___flmul@b+3
 12048   002EAC  EC27  F024         	call	___flmul	;wreg free
 12049   002EB0  C019  F114         	movff	?___flmul,_powf$2111
 12050   002EB4  C01A  F115         	movff	?___flmul+1,_powf$2111+1
 12051   002EB8  C01B  F116         	movff	?___flmul+2,_powf$2111+2
 12052   002EBC  C01C  F117         	movff	?___flmul+3,_powf$2111+3
 12053   002EC0  C114  F032         	movff	_powf$2111,___fladd@b
 12054   002EC4  C115  F033         	movff	_powf$2111+1,___fladd@b+1
 12055   002EC8  C116  F034         	movff	_powf$2111+2,___fladd@b+2
 12056   002ECC  C117  F035         	movff	_powf$2111+3,___fladd@b+3
 12057   002ED0  0E8C               	movlw	140
 12058   002ED2  6E1D               	movwf	___flmul@a^0,c
 12059   002ED4  0EBE               	movlw	190
 12060   002ED6  6E1E               	movwf	(___flmul@a+1)^0,c
 12061   002ED8  0EBF               	movlw	191
 12062   002EDA  6E1F               	movwf	(___flmul@a+2)^0,c
 12063   002EDC  0E35               	movlw	53
 12064   002EDE  6E20               	movwf	(___flmul@a+3)^0,c
 12065   002EE0  C1B0  F019         	movff	powf@t,___flmul@b
 12066   002EE4  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 12067   002EE8  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 12068   002EEC  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 12069   002EF0  EC27  F024         	call	___flmul	;wreg free
 12070   002EF4  C019  F036         	movff	?___flmul,___fladd@a
 12071   002EF8  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 12072   002EFC  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 12073   002F00  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 12074   002F04  ECC7  F021         	call	___fladd	;wreg free
 12075   002F08  C032  F180         	movff	?___fladd,powf@v
 12076   002F0C  C033  F181         	movff	?___fladd+1,powf@v+1
 12077   002F10  C034  F182         	movff	?___fladd+2,powf@v+2
 12078   002F14  C035  F183         	movff	?___fladd+3,powf@v+3
 12079   002F18  C17C  F032         	movff	powf@u,___fladd@b
 12080   002F1C  C17D  F033         	movff	powf@u+1,___fladd@b+1
 12081   002F20  C17E  F034         	movff	powf@u+2,___fladd@b+2
 12082   002F24  C17F  F035         	movff	powf@u+3,___fladd@b+3
 12083   002F28  C180  F036         	movff	powf@v,___fladd@a
 12084   002F2C  C181  F037         	movff	powf@v+1,___fladd@a+1
 12085   002F30  C182  F038         	movff	powf@v+2,___fladd@a+2
 12086   002F34  C183  F039         	movff	powf@v+3,___fladd@a+3
 12087   002F38  ECC7  F021         	call	___fladd	;wreg free
 12088   002F3C  C032  F1B4         	movff	?___fladd,powf@z
 12089   002F40  C033  F1B5         	movff	?___fladd+1,powf@z+1
 12090   002F44  C034  F1B6         	movff	?___fladd+2,powf@z+2
 12091   002F48  C035  F1B7         	movff	?___fladd+3,powf@z+3
 12092   002F4C  C17C  F05F         	movff	powf@u,___flsub@a
 12093   002F50  C17D  F060         	movff	powf@u+1,___flsub@a+1
 12094   002F54  C17E  F061         	movff	powf@u+2,___flsub@a+2
 12095   002F58  C17F  F062         	movff	powf@u+3,___flsub@a+3
 12096   002F5C  C1B4  F05B         	movff	powf@z,___flsub@b
 12097   002F60  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 12098   002F64  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 12099   002F68  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 12100   002F6C  EC52  F03B         	call	___flsub	;wreg free
 12101   002F70  C05B  F19C         	movff	?___flsub,_powf$2101
 12102   002F74  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 12103   002F78  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 12104   002F7C  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 12105   002F80  C180  F05B         	movff	powf@v,___flsub@b
 12106   002F84  C181  F05C         	movff	powf@v+1,___flsub@b+1
 12107   002F88  C182  F05D         	movff	powf@v+2,___flsub@b+2
 12108   002F8C  C183  F05E         	movff	powf@v+3,___flsub@b+3
 12109   002F90  C19C  F05F         	movff	_powf$2101,___flsub@a
 12110   002F94  C19D  F060         	movff	_powf$2101+1,___flsub@a+1
 12111   002F98  C19E  F061         	movff	_powf$2101+2,___flsub@a+2
 12112   002F9C  C19F  F062         	movff	_powf$2101+3,___flsub@a+3
 12113   002FA0  EC52  F03B         	call	___flsub	;wreg free
 12114   002FA4  C05B  F144         	movff	?___flsub,powf@w
 12115   002FA8  C05C  F145         	movff	?___flsub+1,powf@w+1
 12116   002FAC  C05D  F146         	movff	?___flsub+2,powf@w+2
 12117   002FB0  C05E  F147         	movff	?___flsub+3,powf@w+3
 12118   002FB4  C1B4  F019         	movff	powf@z,___flmul@b
 12119   002FB8  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12120   002FBC  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12121   002FC0  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12122   002FC4  C1B4  F01D         	movff	powf@z,___flmul@a
 12123   002FC8  C1B5  F01E         	movff	powf@z+1,___flmul@a+1
 12124   002FCC  C1B6  F01F         	movff	powf@z+2,___flmul@a+2
 12125   002FD0  C1B7  F020         	movff	powf@z+3,___flmul@a+3
 12126   002FD4  EC27  F024         	call	___flmul	;wreg free
 12127   002FD8  C019  F1B0         	movff	?___flmul,powf@t
 12128   002FDC  C01A  F1B1         	movff	?___flmul+1,powf@t+1
 12129   002FE0  C01B  F1B2         	movff	?___flmul+2,powf@t+2
 12130   002FE4  C01C  F1B3         	movff	?___flmul+3,powf@t+3
 12131   002FE8  0E0E               	movlw	14
 12132   002FEA  6E36               	movwf	___fladd@a^0,c
 12133   002FEC  0EEA               	movlw	234
 12134   002FEE  6E37               	movwf	(___fladd@a+1)^0,c
 12135   002FF0  0EDD               	movlw	221
 12136   002FF2  6E38               	movwf	(___fladd@a+2)^0,c
 12137   002FF4  0EB5               	movlw	181
 12138   002FF6  6E39               	movwf	(___fladd@a+3)^0,c
 12139   002FF8  0E4C               	movlw	76
 12140   002FFA  6E1D               	movwf	___flmul@a^0,c
 12141   002FFC  0EBB               	movlw	187
 12142   002FFE  6E1E               	movwf	(___flmul@a+1)^0,c
 12143   003000  0E31               	movlw	49
 12144   003002  6E1F               	movwf	(___flmul@a+2)^0,c
 12145   003004  0E33               	movlw	51
 12146   003006  6E20               	movwf	(___flmul@a+3)^0,c
 12147   003008  C1B0  F019         	movff	powf@t,___flmul@b
 12148   00300C  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 12149   003010  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 12150   003014  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 12151   003018  EC27  F024         	call	___flmul	;wreg free
 12152   00301C  C019  F032         	movff	?___flmul,___fladd@b
 12153   003020  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12154   003024  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12155   003028  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12156   00302C  ECC7  F021         	call	___fladd	;wreg free
 12157   003030  C032  F148         	movff	?___fladd,_powf$2098
 12158   003034  C033  F149         	movff	?___fladd+1,_powf$2098+1
 12159   003038  C034  F14A         	movff	?___fladd+2,_powf$2098+2
 12160   00303C  C035  F14B         	movff	?___fladd+3,_powf$2098+3
 12161   003040  0E55               	movlw	85
 12162   003042  6E36               	movwf	___fladd@a^0,c
 12163   003044  0EB3               	movlw	179
 12164   003046  6E37               	movwf	(___fladd@a+1)^0,c
 12165   003048  0E8A               	movlw	138
 12166   00304A  6E38               	movwf	(___fladd@a+2)^0,c
 12167   00304C  0E38               	movlw	56
 12168   00304E  6E39               	movwf	(___fladd@a+3)^0,c
 12169   003050  C1B0  F01D         	movff	powf@t,___flmul@a
 12170   003054  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12171   003058  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12172   00305C  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12173   003060  C148  F019         	movff	_powf$2098,___flmul@b
 12174   003064  C149  F01A         	movff	_powf$2098+1,___flmul@b+1
 12175   003068  C14A  F01B         	movff	_powf$2098+2,___flmul@b+2
 12176   00306C  C14B  F01C         	movff	_powf$2098+3,___flmul@b+3
 12177   003070  EC27  F024         	call	___flmul	;wreg free
 12178   003074  C019  F032         	movff	?___flmul,___fladd@b
 12179   003078  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12180   00307C  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12181   003080  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12182   003084  ECC7  F021         	call	___fladd	;wreg free
 12183   003088  C032  F15C         	movff	?___fladd,_powf$2099
 12184   00308C  C033  F15D         	movff	?___fladd+1,_powf$2099+1
 12185   003090  C034  F15E         	movff	?___fladd+2,_powf$2099+2
 12186   003094  C035  F15F         	movff	?___fladd+3,_powf$2099+3
 12187   003098  0E61               	movlw	97
 12188   00309A  6E36               	movwf	___fladd@a^0,c
 12189   00309C  0E0B               	movlw	11
 12190   00309E  6E37               	movwf	(___fladd@a+1)^0,c
 12191   0030A0  0E36               	movlw	54
 12192   0030A2  6E38               	movwf	(___fladd@a+2)^0,c
 12193   0030A4  0EBB               	movlw	187
 12194   0030A6  6E39               	movwf	(___fladd@a+3)^0,c
 12195   0030A8  C1B0  F01D         	movff	powf@t,___flmul@a
 12196   0030AC  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12197   0030B0  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12198   0030B4  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12199   0030B8  C15C  F019         	movff	_powf$2099,___flmul@b
 12200   0030BC  C15D  F01A         	movff	_powf$2099+1,___flmul@b+1
 12201   0030C0  C15E  F01B         	movff	_powf$2099+2,___flmul@b+2
 12202   0030C4  C15F  F01C         	movff	_powf$2099+3,___flmul@b+3
 12203   0030C8  EC27  F024         	call	___flmul	;wreg free
 12204   0030CC  C019  F032         	movff	?___flmul,___fladd@b
 12205   0030D0  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12206   0030D4  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12207   0030D8  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12208   0030DC  ECC7  F021         	call	___fladd	;wreg free
 12209   0030E0  C032  F14C         	movff	?___fladd,_powf$2100
 12210   0030E4  C033  F14D         	movff	?___fladd+1,_powf$2100+1
 12211   0030E8  C034  F14E         	movff	?___fladd+2,_powf$2100+2
 12212   0030EC  C035  F14F         	movff	?___fladd+3,_powf$2100+3
 12213   0030F0  0EAB               	movlw	171
 12214   0030F2  6E36               	movwf	___fladd@a^0,c
 12215   0030F4  0EAA               	movlw	170
 12216   0030F6  6E37               	movwf	(___fladd@a+1)^0,c
 12217   0030F8  0E2A               	movlw	42
 12218   0030FA  6E38               	movwf	(___fladd@a+2)^0,c
 12219   0030FC  0E3E               	movlw	62
 12220   0030FE  6E39               	movwf	(___fladd@a+3)^0,c
 12221   003100  C1B0  F01D         	movff	powf@t,___flmul@a
 12222   003104  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12223   003108  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12224   00310C  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12225   003110  C14C  F019         	movff	_powf$2100,___flmul@b
 12226   003114  C14D  F01A         	movff	_powf$2100+1,___flmul@b+1
 12227   003118  C14E  F01B         	movff	_powf$2100+2,___flmul@b+2
 12228   00311C  C14F  F01C         	movff	_powf$2100+3,___flmul@b+3
 12229   003120  EC27  F024         	call	___flmul	;wreg free
 12230   003124  C019  F032         	movff	?___flmul,___fladd@b
 12231   003128  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12232   00312C  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12233   003130  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12234   003134  ECC7  F021         	call	___fladd	;wreg free
 12235   003138  C032  F138         	movff	?___fladd,_powf$2102
 12236   00313C  C033  F139         	movff	?___fladd+1,_powf$2102+1
 12237   003140  C034  F13A         	movff	?___fladd+2,_powf$2102+2
 12238   003144  C035  F13B         	movff	?___fladd+3,_powf$2102+3
 12239   003148  C1B4  F05B         	movff	powf@z,___flsub@b
 12240   00314C  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 12241   003150  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 12242   003154  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 12243   003158  C1B0  F01D         	movff	powf@t,___flmul@a
 12244   00315C  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12245   003160  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12246   003164  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12247   003168  C138  F019         	movff	_powf$2102,___flmul@b
 12248   00316C  C139  F01A         	movff	_powf$2102+1,___flmul@b+1
 12249   003170  C13A  F01B         	movff	_powf$2102+2,___flmul@b+2
 12250   003174  C13B  F01C         	movff	_powf$2102+3,___flmul@b+3
 12251   003178  EC27  F024         	call	___flmul	;wreg free
 12252   00317C  C019  F05F         	movff	?___flmul,___flsub@a
 12253   003180  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 12254   003184  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 12255   003188  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 12256   00318C  EC52  F03B         	call	___flsub	;wreg free
 12257   003190  C05B  F18C         	movff	?___flsub,powf@t1
 12258   003194  C05C  F18D         	movff	?___flsub+1,powf@t1+1
 12259   003198  C05D  F18E         	movff	?___flsub+2,powf@t1+2
 12260   00319C  C05E  F18F         	movff	?___flsub+3,powf@t1+3
 12261   0031A0  0E00               	movlw	0
 12262   0031A2  6E36               	movwf	___fladd@a^0,c
 12263   0031A4  0E00               	movlw	0
 12264   0031A6  6E37               	movwf	(___fladd@a+1)^0,c
 12265   0031A8  0E00               	movlw	0
 12266   0031AA  6E38               	movwf	(___fladd@a+2)^0,c
 12267   0031AC  0EC0               	movlw	192
 12268   0031AE  6E39               	movwf	(___fladd@a+3)^0,c
 12269   0031B0  C18C  F032         	movff	powf@t1,___fladd@b
 12270   0031B4  C18D  F033         	movff	powf@t1+1,___fladd@b+1
 12271   0031B8  C18E  F034         	movff	powf@t1+2,___fladd@b+2
 12272   0031BC  C18F  F035         	movff	powf@t1+3,___fladd@b+3
 12273   0031C0  ECC7  F021         	call	___fladd	;wreg free
 12274   0031C4  C032  F046         	movff	?___fladd,___fldiv@a
 12275   0031C8  C033  F047         	movff	?___fladd+1,___fldiv@a+1
 12276   0031CC  C034  F048         	movff	?___fladd+2,___fldiv@a+2
 12277   0031D0  C035  F049         	movff	?___fladd+3,___fldiv@a+3
 12278   0031D4  C18C  F01D         	movff	powf@t1,___flmul@a
 12279   0031D8  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 12280   0031DC  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 12281   0031E0  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 12282   0031E4  C1B4  F019         	movff	powf@z,___flmul@b
 12283   0031E8  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12284   0031EC  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12285   0031F0  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12286   0031F4  EC27  F024         	call	___flmul	;wreg free
 12287   0031F8  C019  F042         	movff	?___flmul,___fldiv@b
 12288   0031FC  C01A  F043         	movff	?___flmul+1,___fldiv@b+1
 12289   003200  C01B  F044         	movff	?___flmul+2,___fldiv@b+2
 12290   003204  C01C  F045         	movff	?___flmul+3,___fldiv@b+3
 12291   003208  EC2B  F028         	call	___fldiv	;wreg free
 12292   00320C  C042  F13C         	movff	?___fldiv,_powf$2106
 12293   003210  C043  F13D         	movff	?___fldiv+1,_powf$2106+1
 12294   003214  C044  F13E         	movff	?___fldiv+2,_powf$2106+2
 12295   003218  C045  F13F         	movff	?___fldiv+3,_powf$2106+3
 12296   00321C  C144  F036         	movff	powf@w,___fladd@a
 12297   003220  C145  F037         	movff	powf@w+1,___fladd@a+1
 12298   003224  C146  F038         	movff	powf@w+2,___fladd@a+2
 12299   003228  C147  F039         	movff	powf@w+3,___fladd@a+3
 12300   00322C  C144  F01D         	movff	powf@w,___flmul@a
 12301   003230  C145  F01E         	movff	powf@w+1,___flmul@a+1
 12302   003234  C146  F01F         	movff	powf@w+2,___flmul@a+2
 12303   003238  C147  F020         	movff	powf@w+3,___flmul@a+3
 12304   00323C  C1B4  F019         	movff	powf@z,___flmul@b
 12305   003240  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12306   003244  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12307   003248  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12308   00324C  EC27  F024         	call	___flmul	;wreg free
 12309   003250  C019  F032         	movff	?___flmul,___fladd@b
 12310   003254  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12311   003258  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12312   00325C  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12313   003260  ECC7  F021         	call	___fladd	;wreg free
 12314   003264  C032  F118         	movff	?___fladd,_powf$2112
 12315   003268  C033  F119         	movff	?___fladd+1,_powf$2112+1
 12316   00326C  C034  F11A         	movff	?___fladd+2,_powf$2112+2
 12317   003270  C035  F11B         	movff	?___fladd+3,_powf$2112+3
 12318   003274  C13C  F05B         	movff	_powf$2106,___flsub@b
 12319   003278  C13D  F05C         	movff	_powf$2106+1,___flsub@b+1
 12320   00327C  C13E  F05D         	movff	_powf$2106+2,___flsub@b+2
 12321   003280  C13F  F05E         	movff	_powf$2106+3,___flsub@b+3
 12322   003284  C118  F05F         	movff	_powf$2112,___flsub@a
 12323   003288  C119  F060         	movff	_powf$2112+1,___flsub@a+1
 12324   00328C  C11A  F061         	movff	_powf$2112+2,___flsub@a+2
 12325   003290  C11B  F062         	movff	_powf$2112+3,___flsub@a+3
 12326   003294  EC52  F03B         	call	___flsub	;wreg free
 12327   003298  C05B  F150         	movff	?___flsub,powf@r
 12328   00329C  C05C  F151         	movff	?___flsub+1,powf@r+1
 12329   0032A0  C05D  F152         	movff	?___flsub+2,powf@r+2
 12330   0032A4  C05E  F153         	movff	?___flsub+3,powf@r+3
 12331   0032A8  C1B4  F05F         	movff	powf@z,___flsub@a
 12332   0032AC  C1B5  F060         	movff	powf@z+1,___flsub@a+1
 12333   0032B0  C1B6  F061         	movff	powf@z+2,___flsub@a+2
 12334   0032B4  C1B7  F062         	movff	powf@z+3,___flsub@a+3
 12335   0032B8  C150  F05B         	movff	powf@r,___flsub@b
 12336   0032BC  C151  F05C         	movff	powf@r+1,___flsub@b+1
 12337   0032C0  C152  F05D         	movff	powf@r+2,___flsub@b+2
 12338   0032C4  C153  F05E         	movff	powf@r+3,___flsub@b+3
 12339   0032C8  EC52  F03B         	call	___flsub	;wreg free
 12340   0032CC  C05B  F19C         	movff	?___flsub,_powf$2101
 12341   0032D0  C05C  F19D         	movff	?___flsub+1,_powf$2101+1
 12342   0032D4  C05D  F19E         	movff	?___flsub+2,_powf$2101+2
 12343   0032D8  C05E  F19F         	movff	?___flsub+3,_powf$2101+3
 12344   0032DC  0E00               	movlw	0
 12345   0032DE  6E5B               	movwf	___flsub@b^0,c
 12346   0032E0  0E00               	movlw	0
 12347   0032E2  6E5C               	movwf	(___flsub@b+1)^0,c
 12348   0032E4  0E80               	movlw	128
 12349   0032E6  6E5D               	movwf	(___flsub@b+2)^0,c
 12350   0032E8  0E3F               	movlw	63
 12351   0032EA  6E5E               	movwf	(___flsub@b+3)^0,c
 12352   0032EC  C19C  F05F         	movff	_powf$2101,___flsub@a
 12353   0032F0  C19D  F060         	movff	_powf$2101+1,___flsub@a+1
 12354   0032F4  C19E  F061         	movff	_powf$2101+2,___flsub@a+2
 12355   0032F8  C19F  F062         	movff	_powf$2101+3,___flsub@a+3
 12356   0032FC  EC52  F03B         	call	___flsub	;wreg free
 12357   003300  C05B  F1B4         	movff	?___flsub,powf@z
 12358   003304  C05C  F1B5         	movff	?___flsub+1,powf@z+1
 12359   003308  C05D  F1B6         	movff	?___flsub+2,powf@z+2
 12360   00330C  C05E  F1B7         	movff	?___flsub+3,powf@z+3
 12361   003310  C1B4  F1A8         	movff	powf@z,powf@j
 12362   003314  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 12363   003318  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 12364   00331C  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 12365   003320  C188  F077         	movff	powf@n,??_powf
 12366   003324  C189  F078         	movff	powf@n+1,??_powf+1
 12367   003328  C18A  F079         	movff	powf@n+2,??_powf+2
 12368   00332C  C18B  F07A         	movff	powf@n+3,??_powf+3
 12369   003330  0E17               	movlw	23
 12370   003332                     u13325:
 12371   003332  90D8               	bcf	status,0,c
 12372   003334  3677               	rlcf	??_powf^0,f,c
 12373   003336  3678               	rlcf	(??_powf+1)^0,f,c
 12374   003338  3679               	rlcf	(??_powf+2)^0,f,c
 12375   00333A  367A               	rlcf	(??_powf+3)^0,f,c
 12376   00333C  2EE8               	decfsz	wreg,f,c
 12377   00333E  EF99  F019         	goto	u13325
 12378   003342  5077               	movf	??_powf^0,w,c
 12379   003344  0101               	movlb	1	; () banked
 12380   003346  27A8               	addwf	powf@j& (0+255),f,b
 12381   003348  5078               	movf	(??_powf+1)^0,w,c
 12382   00334A  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 12383   00334C  5079               	movf	(??_powf+2)^0,w,c
 12384   00334E  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 12385   003350  507A               	movf	(??_powf+3)^0,w,c
 12386   003352  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 12387   003354                     
 12388                           ; BSR set to: 1
 12389   003354  0E17               	movlw	23
 12390   003356  6E77               	movwf	??_powf^0,c
 12391   003358  C1A8  F078         	movff	powf@j,??_powf+1
 12392   00335C  C1A9  F079         	movff	powf@j+1,??_powf+2
 12393   003360  C1AA  F07A         	movff	powf@j+2,??_powf+3
 12394   003364  C1AB  F07B         	movff	powf@j+3,??_powf+4
 12395   003368                     u13335:
 12396   003368  6677               	tstfsz	??_powf^0,c
 12397   00336A  EFB9  F019         	goto	u13336
 12398   00336E  EFC1  F019         	goto	u13337
 12399   003372                     u13336:
 12400   003372  347B               	rlcf	(??_powf+4)^0,w,c
 12401   003374  327B               	rrcf	(??_powf+4)^0,f,c
 12402   003376  327A               	rrcf	(??_powf+3)^0,f,c
 12403   003378  3279               	rrcf	(??_powf+2)^0,f,c
 12404   00337A  3278               	rrcf	(??_powf+1)^0,f,c
 12405   00337C  2E77               	decfsz	??_powf^0,f,c
 12406   00337E  EFB4  F019         	goto	u13335
 12407   003382                     u13337:
 12408   003382  BE7B               	btfsc	(??_powf+4)^0,7,c
 12409   003384  EFD0  F019         	goto	u13340
 12410   003388  507B               	movf	(??_powf+4)^0,w,c
 12411   00338A  107A               	iorwf	(??_powf+3)^0,w,c
 12412   00338C  1079               	iorwf	(??_powf+2)^0,w,c
 12413   00338E  E106               	bnz	u13341
 12414   003390  0478               	decf	(??_powf+1)^0,w,c
 12415   003392  B0D8               	btfsc	status,0,c
 12416   003394  EFCE  F019         	goto	u13341
 12417   003398  EFD0  F019         	goto	u13340
 12418   00339C                     u13341:
 12419   00339C  EFE8  F019         	goto	l1710
 12420   0033A0                     u13340:
 12421   0033A0  C1B4  F032         	movff	powf@z,scalbnf@x
 12422   0033A4  C1B5  F033         	movff	powf@z+1,scalbnf@x+1
 12423   0033A8  C1B6  F034         	movff	powf@z+2,scalbnf@x+2
 12424   0033AC  C1B7  F035         	movff	powf@z+3,scalbnf@x+3
 12425   0033B0  C188  F036         	movff	powf@n,scalbnf@n
 12426   0033B4  C189  F037         	movff	powf@n+1,scalbnf@n+1
 12427   0033B8  ECD5  F02D         	call	_scalbnf	;wreg free
 12428   0033BC  C032  F1B4         	movff	?_scalbnf,powf@z
 12429   0033C0  C033  F1B5         	movff	?_scalbnf+1,powf@z+1
 12430   0033C4  C034  F1B6         	movff	?_scalbnf+2,powf@z+2
 12431   0033C8  C035  F1B7         	movff	?_scalbnf+3,powf@z+3
 12432   0033CC  EFF0  F019         	goto	l12733
 12433   0033D0                     l1710:
 12434   0033D0  C1A8  F1B4         	movff	powf@j,powf@z
 12435   0033D4  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 12436   0033D8  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 12437   0033DC  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 12438   0033E0                     l12733:
 12439   0033E0  0101               	movlb	1	; () banked
 12440   0033E2  51B4               	movf	powf@z& (0+255),w,b
 12441   0033E4  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 12442   0033E6  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 12443   0033E8  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 12444   0033EA  B4D8               	btfsc	status,2,c
 12445   0033EC  EFFA  F019         	goto	u13351
 12446   0033F0  EFFC  F019         	goto	u13350
 12447   0033F4                     u13351:
 12448   0033F4  EF6F  F00B         	goto	l12419
 12449   0033F8                     u13350:
 12450   0033F8                     
 12451                           ; BSR set to: 1
 12452   0033F8  5164               	movf	powf@sn& (0+255),w,b
 12453   0033FA  1BB4               	xorwf	powf@z& (0+255),f,b
 12454   0033FC  5165               	movf	(powf@sn+1)& (0+255),w,b
 12455   0033FE  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 12456   003400  5166               	movf	(powf@sn+2)& (0+255),w,b
 12457   003402  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 12458   003404  5167               	movf	(powf@sn+3)& (0+255),w,b
 12459   003406  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 12460   003408  EF6F  F00B         	goto	l12419
 12461   00340C                     l1644:
 12462   00340C  0012               	return		;funcret
 12463   00340E                     __end_of_powf:
 12464                           	callstack 0
 12465                           
 12466 ;; *************** function _sqrtf *****************
 12467 ;; Defined at:
 12468 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 12469 ;; Parameters:    Size  Location     Type
 12470 ;;  x               4    0[COMRAM] float 
 12471 ;; Auto vars:     Size  Location     Type
 12472 ;;  ix              4   33[COMRAM] struct .
 12473 ;;  r               4   29[COMRAM] unsigned long 
 12474 ;;  m               4   25[COMRAM] long 
 12475 ;;  t               4   21[COMRAM] long 
 12476 ;;  q               4   17[COMRAM] long 
 12477 ;;  i               4   13[COMRAM] long 
 12478 ;;  s               4    9[COMRAM] long 
 12479 ;;  z               4    0        float 
 12480 ;; Return value:  Size  Location     Type
 12481 ;;                  4    0[COMRAM] float 
 12482 ;; Registers used:
 12483 ;;		wreg, status,2, status,0
 12484 ;; Tracked objects:
 12485 ;;		On entry : 0/0
 12486 ;;		On exit  : 0/0
 12487 ;;		Unchanged: 0/0
 12488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12489 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12490 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12491 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12492 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12493 ;;Total ram usage:       37 bytes
 12494 ;; Hardware stack levels used: 1
 12495 ;; This function calls:
 12496 ;;		Nothing
 12497 ;; This function is called by:
 12498 ;;		_powf
 12499 ;; This function uses a non-reentrant model
 12500 ;;
 12501                           
 12502                           	psect	text40
 12503   004C78                     __ptext40:
 12504                           	callstack 0
 12505   004C78                     _sqrtf:
 12506                           	callstack 28
 12507   004C78  C001  F022         	movff	sqrtf@x,sqrtf@ix
 12508   004C7C  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
 12509   004C80  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
 12510   004C84  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
 12511   004C88  0E00               	movlw	0
 12512   004C8A  1422               	andwf	sqrtf@ix^0,w,c
 12513   004C8C  6E05               	movwf	??_sqrtf^0,c
 12514   004C8E  0E00               	movlw	0
 12515   004C90  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12516   004C92  6E06               	movwf	(??_sqrtf+1)^0,c
 12517   004C94  0E80               	movlw	128
 12518   004C96  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12519   004C98  6E07               	movwf	(??_sqrtf+2)^0,c
 12520   004C9A  0E7F               	movlw	127
 12521   004C9C  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12522   004C9E  6E08               	movwf	(??_sqrtf+3)^0,c
 12523   004CA0  0E80               	movlw	128
 12524   004CA2  1807               	xorwf	(??_sqrtf+2)^0,w,c
 12525   004CA4  E109               	bnz	u12571
 12526   004CA6  0E7F               	movlw	127
 12527   004CA8  1808               	xorwf	(??_sqrtf+3)^0,w,c
 12528   004CAA  1005               	iorwf	??_sqrtf^0,w,c
 12529   004CAC  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12530   004CAE  A4D8               	btfss	status,2,c
 12531   004CB0  EF5C  F026         	goto	u12571
 12532   004CB4  EF5E  F026         	goto	u12570
 12533   004CB8                     u12571:
 12534   004CB8  EF8E  F026         	goto	l12225
 12535   004CBC                     u12570:
 12536   004CBC  0EFF               	movlw	255
 12537   004CBE  1422               	andwf	sqrtf@ix^0,w,c
 12538   004CC0  6E05               	movwf	??_sqrtf^0,c
 12539   004CC2  0EFF               	movlw	255
 12540   004CC4  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12541   004CC6  6E06               	movwf	(??_sqrtf+1)^0,c
 12542   004CC8  0E7F               	movlw	127
 12543   004CCA  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12544   004CCC  6E07               	movwf	(??_sqrtf+2)^0,c
 12545   004CCE  0E00               	movlw	0
 12546   004CD0  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12547   004CD2  6E08               	movwf	(??_sqrtf+3)^0,c
 12548   004CD4  5005               	movf	??_sqrtf^0,w,c
 12549   004CD6  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12550   004CD8  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12551   004CDA  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12552   004CDC  A4D8               	btfss	status,2,c
 12553   004CDE  EF73  F026         	goto	u12581
 12554   004CE2  EF75  F026         	goto	u12580
 12555   004CE6                     u12581:
 12556   004CE6  EF7C  F026         	goto	l12219
 12557   004CEA                     u12580:
 12558   004CEA  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12559   004CEC  EF7C  F026         	goto	u12590
 12560   004CF0  EF7A  F026         	goto	u12591
 12561   004CF4                     u12591:
 12562   004CF4  EF84  F026         	goto	l12221
 12563   004CF8                     u12590:
 12564   004CF8                     l12219:
 12565   004CF8  0EFF               	movlw	255
 12566   004CFA  1222               	iorwf	sqrtf@ix^0,f,c
 12567   004CFC  0EFF               	movlw	255
 12568   004CFE  1223               	iorwf	(sqrtf@ix+1)^0,f,c
 12569   004D00  0E7F               	movlw	127
 12570   004D02  1224               	iorwf	(sqrtf@ix+2)^0,f,c
 12571   004D04  0E00               	movlw	0
 12572   004D06  1225               	iorwf	(sqrtf@ix+3)^0,f,c
 12573   004D08                     l12221:
 12574   004D08  C022  F001         	movff	sqrtf@ix,?_sqrtf
 12575   004D0C  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
 12576   004D10  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
 12577   004D14  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
 12578   004D18  EF2A  F028         	goto	l1736
 12579   004D1C                     l12225:
 12580   004D1C  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12581   004D1E  EF9D  F026         	goto	u12600
 12582   004D22  5025               	movf	(sqrtf@ix+3)^0,w,c
 12583   004D24  1024               	iorwf	(sqrtf@ix+2)^0,w,c
 12584   004D26  1023               	iorwf	(sqrtf@ix+1)^0,w,c
 12585   004D28  E106               	bnz	u12601
 12586   004D2A  0422               	decf	sqrtf@ix^0,w,c
 12587   004D2C  B0D8               	btfsc	status,0,c
 12588   004D2E  EF9B  F026         	goto	u12601
 12589   004D32  EF9D  F026         	goto	u12600
 12590   004D36                     u12601:
 12591   004D36  EFD4  F026         	goto	l12241
 12592   004D3A                     u12600:
 12593   004D3A  0EFF               	movlw	255
 12594   004D3C  1422               	andwf	sqrtf@ix^0,w,c
 12595   004D3E  6E05               	movwf	??_sqrtf^0,c
 12596   004D40  0EFF               	movlw	255
 12597   004D42  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12598   004D44  6E06               	movwf	(??_sqrtf+1)^0,c
 12599   004D46  0EFF               	movlw	255
 12600   004D48  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12601   004D4A  6E07               	movwf	(??_sqrtf+2)^0,c
 12602   004D4C  0E7F               	movlw	127
 12603   004D4E  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12604   004D50  6E08               	movwf	(??_sqrtf+3)^0,c
 12605   004D52  5005               	movf	??_sqrtf^0,w,c
 12606   004D54  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12607   004D56  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12608   004D58  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12609   004D5A  A4D8               	btfss	status,2,c
 12610   004D5C  EFB2  F026         	goto	u12611
 12611   004D60  EFB4  F026         	goto	u12610
 12612   004D64                     u12611:
 12613   004D64  EFBE  F026         	goto	l12233
 12614   004D68                     u12610:
 12615   004D68  0E00               	movlw	0
 12616   004D6A  6E01               	movwf	?_sqrtf^0,c
 12617   004D6C  0E00               	movlw	0
 12618   004D6E  6E02               	movwf	(?_sqrtf+1)^0,c
 12619   004D70  0E00               	movlw	0
 12620   004D72  6E03               	movwf	(?_sqrtf+2)^0,c
 12621   004D74  0E00               	movlw	0
 12622   004D76  6E04               	movwf	(?_sqrtf+3)^0,c
 12623   004D78  EF2A  F028         	goto	l1736
 12624   004D7C                     l12233:
 12625   004D7C  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12626   004D7E  EFC5  F026         	goto	u12620
 12627   004D82  EFC3  F026         	goto	u12621
 12628   004D86                     u12621:
 12629   004D86  EFD4  F026         	goto	l12241
 12630   004D8A                     u12620:
 12631   004D8A  0E00               	movlw	0
 12632   004D8C  0101               	movlb	1	; () banked
 12633   004D8E  6FE7               	movwf	(_errno+1)& (0+255),b
 12634   004D90  0E21               	movlw	33
 12635   004D92  6FE6               	movwf	_errno& (0+255),b
 12636   004D94  0EFF               	movlw	255
 12637   004D96  6E22               	movwf	sqrtf@ix^0,c
 12638   004D98  0EFF               	movlw	255
 12639   004D9A  6E23               	movwf	(sqrtf@ix+1)^0,c
 12640   004D9C  0EFF               	movlw	255
 12641   004D9E  6E24               	movwf	(sqrtf@ix+2)^0,c
 12642   004DA0  0E7F               	movlw	127
 12643   004DA2  6E25               	movwf	(sqrtf@ix+3)^0,c
 12644   004DA4  EF84  F026         	goto	l12221
 12645   004DA8                     l12241:
 12646   004DA8  0E17               	movlw	23
 12647   004DAA  6E05               	movwf	??_sqrtf^0,c
 12648   004DAC  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
 12649   004DB0  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
 12650   004DB4  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
 12651   004DB8  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
 12652   004DBC                     u12635:
 12653   004DBC  6605               	tstfsz	??_sqrtf^0,c
 12654   004DBE  EFE3  F026         	goto	u12636
 12655   004DC2  EFEB  F026         	goto	u12637
 12656   004DC6                     u12636:
 12657   004DC6  3409               	rlcf	(??_sqrtf+4)^0,w,c
 12658   004DC8  3209               	rrcf	(??_sqrtf+4)^0,f,c
 12659   004DCA  3208               	rrcf	(??_sqrtf+3)^0,f,c
 12660   004DCC  3207               	rrcf	(??_sqrtf+2)^0,f,c
 12661   004DCE  3206               	rrcf	(??_sqrtf+1)^0,f,c
 12662   004DD0  2E05               	decfsz	??_sqrtf^0,f,c
 12663   004DD2  EFDE  F026         	goto	u12635
 12664   004DD6                     u12637:
 12665   004DD6  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
 12666   004DDA  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
 12667   004DDE  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
 12668   004DE2  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
 12669   004DE6  501A               	movf	sqrtf@m^0,w,c
 12670   004DE8  101B               	iorwf	(sqrtf@m+1)^0,w,c
 12671   004DEA  101C               	iorwf	(sqrtf@m+2)^0,w,c
 12672   004DEC  101D               	iorwf	(sqrtf@m+3)^0,w,c
 12673   004DEE  A4D8               	btfss	status,2,c
 12674   004DF0  EFFC  F026         	goto	u12641
 12675   004DF4  EFFE  F026         	goto	u12640
 12676   004DF8                     u12641:
 12677   004DF8  EF2E  F027         	goto	l1740
 12678   004DFC                     u12640:
 12679   004DFC  0E00               	movlw	0
 12680   004DFE  6E0E               	movwf	sqrtf@i^0,c
 12681   004E00  0E00               	movlw	0
 12682   004E02  6E0F               	movwf	(sqrtf@i+1)^0,c
 12683   004E04  0E00               	movlw	0
 12684   004E06  6E10               	movwf	(sqrtf@i+2)^0,c
 12685   004E08  0E00               	movlw	0
 12686   004E0A  6E11               	movwf	(sqrtf@i+3)^0,c
 12687   004E0C  EF13  F027         	goto	l12249
 12688   004E10                     l12245:
 12689   004E10  90D8               	bcf	status,0,c
 12690   004E12  3622               	rlcf	sqrtf@ix^0,f,c
 12691   004E14  3623               	rlcf	(sqrtf@ix+1)^0,f,c
 12692   004E16  3624               	rlcf	(sqrtf@ix+2)^0,f,c
 12693   004E18  3625               	rlcf	(sqrtf@ix+3)^0,f,c
 12694   004E1A  0E01               	movlw	1
 12695   004E1C  260E               	addwf	sqrtf@i^0,f,c
 12696   004E1E  0E00               	movlw	0
 12697   004E20  220F               	addwfc	(sqrtf@i+1)^0,f,c
 12698   004E22  2210               	addwfc	(sqrtf@i+2)^0,f,c
 12699   004E24  2211               	addwfc	(sqrtf@i+3)^0,f,c
 12700   004E26                     l12249:
 12701   004E26  AE24               	btfss	(sqrtf@ix+2)^0,7,c
 12702   004E28  EF18  F027         	goto	u12651
 12703   004E2C  EF1A  F027         	goto	u12650
 12704   004E30                     u12651:
 12705   004E30  EF08  F027         	goto	l12245
 12706   004E34                     u12650:
 12707   004E34  0EFF               	movlw	255
 12708   004E36  240E               	addwf	sqrtf@i^0,w,c
 12709   004E38  6E05               	movwf	??_sqrtf^0,c
 12710   004E3A  0EFF               	movlw	255
 12711   004E3C  200F               	addwfc	(sqrtf@i+1)^0,w,c
 12712   004E3E  6E06               	movwf	(??_sqrtf+1)^0,c
 12713   004E40  0EFF               	movlw	255
 12714   004E42  2010               	addwfc	(sqrtf@i+2)^0,w,c
 12715   004E44  6E07               	movwf	(??_sqrtf+2)^0,c
 12716   004E46  0EFF               	movlw	255
 12717   004E48  2011               	addwfc	(sqrtf@i+3)^0,w,c
 12718   004E4A  6E08               	movwf	(??_sqrtf+3)^0,c
 12719   004E4C  5005               	movf	??_sqrtf^0,w,c
 12720   004E4E  5E1A               	subwf	sqrtf@m^0,f,c
 12721   004E50  5006               	movf	(??_sqrtf+1)^0,w,c
 12722   004E52  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
 12723   004E54  5007               	movf	(??_sqrtf+2)^0,w,c
 12724   004E56  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
 12725   004E58  5008               	movf	(??_sqrtf+3)^0,w,c
 12726   004E5A  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
 12727   004E5C                     l1740:
 12728   004E5C  0E81               	movlw	129
 12729   004E5E  261A               	addwf	sqrtf@m^0,f,c
 12730   004E60  0EFF               	movlw	255
 12731   004E62  221B               	addwfc	(sqrtf@m+1)^0,f,c
 12732   004E64  0EFF               	movlw	255
 12733   004E66  221C               	addwfc	(sqrtf@m+2)^0,f,c
 12734   004E68  0EFF               	movlw	255
 12735   004E6A  221D               	addwfc	(sqrtf@m+3)^0,f,c
 12736   004E6C  0EFF               	movlw	255
 12737   004E6E  1422               	andwf	sqrtf@ix^0,w,c
 12738   004E70  6E05               	movwf	??_sqrtf^0,c
 12739   004E72  0EFF               	movlw	255
 12740   004E74  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12741   004E76  6E06               	movwf	(??_sqrtf+1)^0,c
 12742   004E78  0E7F               	movlw	127
 12743   004E7A  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12744   004E7C  6E07               	movwf	(??_sqrtf+2)^0,c
 12745   004E7E  0E00               	movlw	0
 12746   004E80  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12747   004E82  6E08               	movwf	(??_sqrtf+3)^0,c
 12748   004E84  0E00               	movlw	0
 12749   004E86  1005               	iorwf	??_sqrtf^0,w,c
 12750   004E88  6E22               	movwf	sqrtf@ix^0,c
 12751   004E8A  0E00               	movlw	0
 12752   004E8C  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12753   004E8E  6E23               	movwf	(sqrtf@ix+1)^0,c
 12754   004E90  0E80               	movlw	128
 12755   004E92  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12756   004E94  6E24               	movwf	(sqrtf@ix+2)^0,c
 12757   004E96  0E00               	movlw	0
 12758   004E98  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12759   004E9A  6E25               	movwf	(sqrtf@ix+3)^0,c
 12760   004E9C  A01A               	btfss	sqrtf@m^0,0,c
 12761   004E9E  EF53  F027         	goto	u12661
 12762   004EA2  EF55  F027         	goto	u12660
 12763   004EA6                     u12661:
 12764   004EA6  EF5D  F027         	goto	l1744
 12765   004EAA                     u12660:
 12766   004EAA  5022               	movf	sqrtf@ix^0,w,c
 12767   004EAC  2622               	addwf	sqrtf@ix^0,f,c
 12768   004EAE  5023               	movf	(sqrtf@ix+1)^0,w,c
 12769   004EB0  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12770   004EB2  5024               	movf	(sqrtf@ix+2)^0,w,c
 12771   004EB4  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12772   004EB6  5025               	movf	(sqrtf@ix+3)^0,w,c
 12773   004EB8  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12774   004EBA                     l1744:
 12775   004EBA  341D               	rlcf	(sqrtf@m+3)^0,w,c
 12776   004EBC  321D               	rrcf	(sqrtf@m+3)^0,f,c
 12777   004EBE  321C               	rrcf	(sqrtf@m+2)^0,f,c
 12778   004EC0  321B               	rrcf	(sqrtf@m+1)^0,f,c
 12779   004EC2  321A               	rrcf	sqrtf@m^0,f,c
 12780   004EC4  5022               	movf	sqrtf@ix^0,w,c
 12781   004EC6  2622               	addwf	sqrtf@ix^0,f,c
 12782   004EC8  5023               	movf	(sqrtf@ix+1)^0,w,c
 12783   004ECA  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12784   004ECC  5024               	movf	(sqrtf@ix+2)^0,w,c
 12785   004ECE  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12786   004ED0  5025               	movf	(sqrtf@ix+3)^0,w,c
 12787   004ED2  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12788   004ED4  0E00               	movlw	0
 12789   004ED6  6E0A               	movwf	sqrtf@s^0,c
 12790   004ED8  0E00               	movlw	0
 12791   004EDA  6E0B               	movwf	(sqrtf@s+1)^0,c
 12792   004EDC  0E00               	movlw	0
 12793   004EDE  6E0C               	movwf	(sqrtf@s+2)^0,c
 12794   004EE0  0E00               	movlw	0
 12795   004EE2  6E0D               	movwf	(sqrtf@s+3)^0,c
 12796   004EE4  C00A  F012         	movff	sqrtf@s,sqrtf@q
 12797   004EE8  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
 12798   004EEC  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
 12799   004EF0  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
 12800   004EF4  0E00               	movlw	0
 12801   004EF6  6E1E               	movwf	sqrtf@r^0,c
 12802   004EF8  0E00               	movlw	0
 12803   004EFA  6E1F               	movwf	(sqrtf@r+1)^0,c
 12804   004EFC  0E00               	movlw	0
 12805   004EFE  6E20               	movwf	(sqrtf@r+2)^0,c
 12806   004F00  0E01               	movlw	1
 12807   004F02  6E21               	movwf	(sqrtf@r+3)^0,c
 12808   004F04  EFCC  F027         	goto	l12267
 12809   004F08                     l12261:
 12810   004F08  500A               	movf	sqrtf@s^0,w,c
 12811   004F0A  241E               	addwf	sqrtf@r^0,w,c
 12812   004F0C  6E16               	movwf	sqrtf@t^0,c
 12813   004F0E  500B               	movf	(sqrtf@s+1)^0,w,c
 12814   004F10  201F               	addwfc	(sqrtf@r+1)^0,w,c
 12815   004F12  6E17               	movwf	(sqrtf@t+1)^0,c
 12816   004F14  500C               	movf	(sqrtf@s+2)^0,w,c
 12817   004F16  2020               	addwfc	(sqrtf@r+2)^0,w,c
 12818   004F18  6E18               	movwf	(sqrtf@t+2)^0,c
 12819   004F1A  500D               	movf	(sqrtf@s+3)^0,w,c
 12820   004F1C  2021               	addwfc	(sqrtf@r+3)^0,w,c
 12821   004F1E  6E19               	movwf	(sqrtf@t+3)^0,c
 12822   004F20  5016               	movf	sqrtf@t^0,w,c
 12823   004F22  5C22               	subwf	sqrtf@ix^0,w,c
 12824   004F24  5017               	movf	(sqrtf@t+1)^0,w,c
 12825   004F26  5823               	subwfb	(sqrtf@ix+1)^0,w,c
 12826   004F28  5018               	movf	(sqrtf@t+2)^0,w,c
 12827   004F2A  5824               	subwfb	(sqrtf@ix+2)^0,w,c
 12828   004F2C  5025               	movf	(sqrtf@ix+3)^0,w,c
 12829   004F2E  0A80               	xorlw	128
 12830   004F30  6E05               	movwf	??_sqrtf^0,c
 12831   004F32  5019               	movf	(sqrtf@t+3)^0,w,c
 12832   004F34  0A80               	xorlw	128
 12833   004F36  5805               	subwfb	??_sqrtf^0,w,c
 12834   004F38  A0D8               	btfss	status,0,c
 12835   004F3A  EFA1  F027         	goto	u12671
 12836   004F3E  EFA3  F027         	goto	u12670
 12837   004F42                     u12671:
 12838   004F42  EFBF  F027         	goto	l1747
 12839   004F46                     u12670:
 12840   004F46  5016               	movf	sqrtf@t^0,w,c
 12841   004F48  241E               	addwf	sqrtf@r^0,w,c
 12842   004F4A  6E0A               	movwf	sqrtf@s^0,c
 12843   004F4C  5017               	movf	(sqrtf@t+1)^0,w,c
 12844   004F4E  201F               	addwfc	(sqrtf@r+1)^0,w,c
 12845   004F50  6E0B               	movwf	(sqrtf@s+1)^0,c
 12846   004F52  5018               	movf	(sqrtf@t+2)^0,w,c
 12847   004F54  2020               	addwfc	(sqrtf@r+2)^0,w,c
 12848   004F56  6E0C               	movwf	(sqrtf@s+2)^0,c
 12849   004F58  5019               	movf	(sqrtf@t+3)^0,w,c
 12850   004F5A  2021               	addwfc	(sqrtf@r+3)^0,w,c
 12851   004F5C  6E0D               	movwf	(sqrtf@s+3)^0,c
 12852   004F5E  5016               	movf	sqrtf@t^0,w,c
 12853   004F60  5E22               	subwf	sqrtf@ix^0,f,c
 12854   004F62  5017               	movf	(sqrtf@t+1)^0,w,c
 12855   004F64  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
 12856   004F66  5018               	movf	(sqrtf@t+2)^0,w,c
 12857   004F68  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
 12858   004F6A  5019               	movf	(sqrtf@t+3)^0,w,c
 12859   004F6C  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
 12860   004F6E  501E               	movf	sqrtf@r^0,w,c
 12861   004F70  2612               	addwf	sqrtf@q^0,f,c
 12862   004F72  501F               	movf	(sqrtf@r+1)^0,w,c
 12863   004F74  2213               	addwfc	(sqrtf@q+1)^0,f,c
 12864   004F76  5020               	movf	(sqrtf@r+2)^0,w,c
 12865   004F78  2214               	addwfc	(sqrtf@q+2)^0,f,c
 12866   004F7A  5021               	movf	(sqrtf@r+3)^0,w,c
 12867   004F7C  2215               	addwfc	(sqrtf@q+3)^0,f,c
 12868   004F7E                     l1747:
 12869   004F7E  5022               	movf	sqrtf@ix^0,w,c
 12870   004F80  2622               	addwf	sqrtf@ix^0,f,c
 12871   004F82  5023               	movf	(sqrtf@ix+1)^0,w,c
 12872   004F84  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12873   004F86  5024               	movf	(sqrtf@ix+2)^0,w,c
 12874   004F88  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12875   004F8A  5025               	movf	(sqrtf@ix+3)^0,w,c
 12876   004F8C  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12877   004F8E  90D8               	bcf	status,0,c
 12878   004F90  3221               	rrcf	(sqrtf@r+3)^0,f,c
 12879   004F92  3220               	rrcf	(sqrtf@r+2)^0,f,c
 12880   004F94  321F               	rrcf	(sqrtf@r+1)^0,f,c
 12881   004F96  321E               	rrcf	sqrtf@r^0,f,c
 12882   004F98                     l12267:
 12883   004F98  501E               	movf	sqrtf@r^0,w,c
 12884   004F9A  101F               	iorwf	(sqrtf@r+1)^0,w,c
 12885   004F9C  1020               	iorwf	(sqrtf@r+2)^0,w,c
 12886   004F9E  1021               	iorwf	(sqrtf@r+3)^0,w,c
 12887   004FA0  A4D8               	btfss	status,2,c
 12888   004FA2  EFD5  F027         	goto	u12681
 12889   004FA6  EFD7  F027         	goto	u12680
 12890   004FAA                     u12681:
 12891   004FAA  EF84  F027         	goto	l12261
 12892   004FAE                     u12680:
 12893   004FAE  5022               	movf	sqrtf@ix^0,w,c
 12894   004FB0  1023               	iorwf	(sqrtf@ix+1)^0,w,c
 12895   004FB2  1024               	iorwf	(sqrtf@ix+2)^0,w,c
 12896   004FB4  1025               	iorwf	(sqrtf@ix+3)^0,w,c
 12897   004FB6  B4D8               	btfsc	status,2,c
 12898   004FB8  EFE0  F027         	goto	u12691
 12899   004FBC  EFE2  F027         	goto	u12690
 12900   004FC0                     u12691:
 12901   004FC0  EFF6  F027         	goto	l1749
 12902   004FC4                     u12690:
 12903   004FC4  0E01               	movlw	1
 12904   004FC6  1412               	andwf	sqrtf@q^0,w,c
 12905   004FC8  6E05               	movwf	??_sqrtf^0,c
 12906   004FCA  0E00               	movlw	0
 12907   004FCC  1413               	andwf	(sqrtf@q+1)^0,w,c
 12908   004FCE  6E06               	movwf	(??_sqrtf+1)^0,c
 12909   004FD0  0E00               	movlw	0
 12910   004FD2  1414               	andwf	(sqrtf@q+2)^0,w,c
 12911   004FD4  6E07               	movwf	(??_sqrtf+2)^0,c
 12912   004FD6  0E00               	movlw	0
 12913   004FD8  1415               	andwf	(sqrtf@q+3)^0,w,c
 12914   004FDA  6E08               	movwf	(??_sqrtf+3)^0,c
 12915   004FDC  5005               	movf	??_sqrtf^0,w,c
 12916   004FDE  2612               	addwf	sqrtf@q^0,f,c
 12917   004FE0  5006               	movf	(??_sqrtf+1)^0,w,c
 12918   004FE2  2213               	addwfc	(sqrtf@q+1)^0,f,c
 12919   004FE4  5007               	movf	(??_sqrtf+2)^0,w,c
 12920   004FE6  2214               	addwfc	(sqrtf@q+2)^0,f,c
 12921   004FE8  5008               	movf	(??_sqrtf+3)^0,w,c
 12922   004FEA  2215               	addwfc	(sqrtf@q+3)^0,f,c
 12923   004FEC                     l1749:
 12924   004FEC  C012  F005         	movff	sqrtf@q,??_sqrtf
 12925   004FF0  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
 12926   004FF4  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
 12927   004FF8  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
 12928   004FFC  3408               	rlcf	(??_sqrtf+3)^0,w,c
 12929   004FFE  3208               	rrcf	(??_sqrtf+3)^0,f,c
 12930   005000  3207               	rrcf	(??_sqrtf+2)^0,f,c
 12931   005002  3206               	rrcf	(??_sqrtf+1)^0,f,c
 12932   005004  3205               	rrcf	??_sqrtf^0,f,c
 12933   005006  0E00               	movlw	0
 12934   005008  2405               	addwf	??_sqrtf^0,w,c
 12935   00500A  6E22               	movwf	sqrtf@ix^0,c
 12936   00500C  0E00               	movlw	0
 12937   00500E  2006               	addwfc	(??_sqrtf+1)^0,w,c
 12938   005010  6E23               	movwf	(sqrtf@ix+1)^0,c
 12939   005012  0E00               	movlw	0
 12940   005014  2007               	addwfc	(??_sqrtf+2)^0,w,c
 12941   005016  6E24               	movwf	(sqrtf@ix+2)^0,c
 12942   005018  0E3F               	movlw	63
 12943   00501A  2008               	addwfc	(??_sqrtf+3)^0,w,c
 12944   00501C  6E25               	movwf	(sqrtf@ix+3)^0,c
 12945   00501E  C01A  F005         	movff	sqrtf@m,??_sqrtf
 12946   005022  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
 12947   005026  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
 12948   00502A  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
 12949   00502E  0E17               	movlw	23
 12950   005030                     u12705:
 12951   005030  90D8               	bcf	status,0,c
 12952   005032  3605               	rlcf	??_sqrtf^0,f,c
 12953   005034  3606               	rlcf	(??_sqrtf+1)^0,f,c
 12954   005036  3607               	rlcf	(??_sqrtf+2)^0,f,c
 12955   005038  3608               	rlcf	(??_sqrtf+3)^0,f,c
 12956   00503A  2EE8               	decfsz	wreg,f,c
 12957   00503C  EF18  F028         	goto	u12705
 12958   005040  5005               	movf	??_sqrtf^0,w,c
 12959   005042  2622               	addwf	sqrtf@ix^0,f,c
 12960   005044  5006               	movf	(??_sqrtf+1)^0,w,c
 12961   005046  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12962   005048  5007               	movf	(??_sqrtf+2)^0,w,c
 12963   00504A  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12964   00504C  5008               	movf	(??_sqrtf+3)^0,w,c
 12965   00504E  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12966   005050  EF84  F026         	goto	l12221
 12967   005054                     l1736:
 12968   005054  0012               	return		;funcret
 12969   005056                     __end_of_sqrtf:
 12970                           	callstack 0
 12971                           
 12972 ;; *************** function _scalbnf *****************
 12973 ;; Defined at:
 12974 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 12975 ;; Parameters:    Size  Location     Type
 12976 ;;  x               4   49[COMRAM] float 
 12977 ;;  n               2   53[COMRAM] int 
 12978 ;; Auto vars:     Size  Location     Type
 12979 ;;  y               4   63[COMRAM] float 
 12980 ;;  u               4   59[COMRAM] struct .
 12981 ;; Return value:  Size  Location     Type
 12982 ;;                  4   49[COMRAM] float 
 12983 ;; Registers used:
 12984 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12985 ;; Tracked objects:
 12986 ;;		On entry : 0/0
 12987 ;;		On exit  : 0/0
 12988 ;;		Unchanged: 0/0
 12989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12990 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12991 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12992 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12993 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12994 ;;Total ram usage:       18 bytes
 12995 ;; Hardware stack levels used: 1
 12996 ;; Hardware stack levels required when called: 1
 12997 ;; This function calls:
 12998 ;;		___flmul
 12999 ;; This function is called by:
 13000 ;;		_powf
 13001 ;; This function uses a non-reentrant model
 13002 ;;
 13003                           
 13004                           	psect	text41
 13005   005BAA                     __ptext41:
 13006                           	callstack 0
 13007   005BAA                     _scalbnf:
 13008                           	callstack 27
 13009   005BAA  C032  F040         	movff	scalbnf@x,scalbnf@y
 13010   005BAE  C033  F041         	movff	scalbnf@x+1,scalbnf@y+1
 13011   005BB2  C034  F042         	movff	scalbnf@x+2,scalbnf@y+2
 13012   005BB6  C035  F043         	movff	scalbnf@x+3,scalbnf@y+3
 13013   005BBA  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 13014   005BBC  EFE9  F02D         	goto	u12711
 13015   005BC0  5037               	movf	(scalbnf@n+1)^0,w,c
 13016   005BC2  E109               	bnz	u12710
 13017   005BC4  0E80               	movlw	128
 13018   005BC6  5C36               	subwf	scalbnf@n^0,w,c
 13019   005BC8  A0D8               	btfss	status,0,c
 13020   005BCA  EFE9  F02D         	goto	u12711
 13021   005BCE  EFEB  F02D         	goto	u12710
 13022   005BD2                     u12711:
 13023   005BD2  EF49  F02E         	goto	l12295
 13024   005BD6                     u12710:
 13025   005BD6  C040  F019         	movff	scalbnf@y,___flmul@b
 13026   005BDA  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13027   005BDE  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13028   005BE2  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13029   005BE6  0E00               	movlw	0
 13030   005BE8  6E1D               	movwf	___flmul@a^0,c
 13031   005BEA  0E00               	movlw	0
 13032   005BEC  6E1E               	movwf	(___flmul@a+1)^0,c
 13033   005BEE  0E00               	movlw	0
 13034   005BF0  6E1F               	movwf	(___flmul@a+2)^0,c
 13035   005BF2  0E7F               	movlw	127
 13036   005BF4  6E20               	movwf	(___flmul@a+3)^0,c
 13037   005BF6  EC27  F024         	call	___flmul	;wreg free
 13038   005BFA  C019  F040         	movff	?___flmul,scalbnf@y
 13039   005BFE  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13040   005C02  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13041   005C06  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13042   005C0A  0E81               	movlw	129
 13043   005C0C  2636               	addwf	scalbnf@n^0,f,c
 13044   005C0E  0EFF               	movlw	255
 13045   005C10  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13046   005C12  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 13047   005C14  EF15  F02E         	goto	u12721
 13048   005C18  5037               	movf	(scalbnf@n+1)^0,w,c
 13049   005C1A  E109               	bnz	u12720
 13050   005C1C  0E80               	movlw	128
 13051   005C1E  5C36               	subwf	scalbnf@n^0,w,c
 13052   005C20  A0D8               	btfss	status,0,c
 13053   005C22  EF15  F02E         	goto	u12721
 13054   005C26  EF17  F02E         	goto	u12720
 13055   005C2A                     u12721:
 13056   005C2A  EFB3  F02E         	goto	l12311
 13057   005C2E                     u12720:
 13058   005C2E  C040  F019         	movff	scalbnf@y,___flmul@b
 13059   005C32  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13060   005C36  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13061   005C3A  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13062   005C3E  0E00               	movlw	0
 13063   005C40  6E1D               	movwf	___flmul@a^0,c
 13064   005C42  0E00               	movlw	0
 13065   005C44  6E1E               	movwf	(___flmul@a+1)^0,c
 13066   005C46  0E00               	movlw	0
 13067   005C48  6E1F               	movwf	(___flmul@a+2)^0,c
 13068   005C4A  0E7F               	movlw	127
 13069   005C4C  6E20               	movwf	(___flmul@a+3)^0,c
 13070   005C4E  EC27  F024         	call	___flmul	;wreg free
 13071   005C52  C019  F040         	movff	?___flmul,scalbnf@y
 13072   005C56  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13073   005C5A  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13074   005C5E  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13075   005C62  0E81               	movlw	129
 13076   005C64  2636               	addwf	scalbnf@n^0,f,c
 13077   005C66  0EFF               	movlw	255
 13078   005C68  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13079   005C6A  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 13080   005C6C  EF41  F02E         	goto	u12731
 13081   005C70  5037               	movf	(scalbnf@n+1)^0,w,c
 13082   005C72  E109               	bnz	u12730
 13083   005C74  0E80               	movlw	128
 13084   005C76  5C36               	subwf	scalbnf@n^0,w,c
 13085   005C78  A0D8               	btfss	status,0,c
 13086   005C7A  EF41  F02E         	goto	u12731
 13087   005C7E  EF43  F02E         	goto	u12730
 13088   005C82                     u12731:
 13089   005C82  EFB3  F02E         	goto	l12311
 13090   005C86                     u12730:
 13091   005C86  0E00               	movlw	0
 13092   005C88  6E37               	movwf	(scalbnf@n+1)^0,c
 13093   005C8A  0E7F               	movlw	127
 13094   005C8C  6E36               	movwf	scalbnf@n^0,c
 13095   005C8E  EFB3  F02E         	goto	l12311
 13096   005C92                     l12295:
 13097   005C92  AE37               	btfss	(scalbnf@n+1)^0,7,c
 13098   005C94  EF55  F02E         	goto	u12741
 13099   005C98  0E82               	movlw	130
 13100   005C9A  5C36               	subwf	scalbnf@n^0,w,c
 13101   005C9C  0EFF               	movlw	255
 13102   005C9E  5837               	subwfb	(scalbnf@n+1)^0,w,c
 13103   005CA0  B0D8               	btfsc	status,0,c
 13104   005CA2  EF55  F02E         	goto	u12741
 13105   005CA6  EF57  F02E         	goto	u12740
 13106   005CAA                     u12741:
 13107   005CAA  EFB3  F02E         	goto	l12311
 13108   005CAE                     u12740:
 13109   005CAE  C040  F019         	movff	scalbnf@y,___flmul@b
 13110   005CB2  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13111   005CB6  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13112   005CBA  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13113   005CBE  0E00               	movlw	0
 13114   005CC0  6E1D               	movwf	___flmul@a^0,c
 13115   005CC2  0E00               	movlw	0
 13116   005CC4  6E1E               	movwf	(___flmul@a+1)^0,c
 13117   005CC6  0E80               	movlw	128
 13118   005CC8  6E1F               	movwf	(___flmul@a+2)^0,c
 13119   005CCA  0E0C               	movlw	12
 13120   005CCC  6E20               	movwf	(___flmul@a+3)^0,c
 13121   005CCE  EC27  F024         	call	___flmul	;wreg free
 13122   005CD2  C019  F040         	movff	?___flmul,scalbnf@y
 13123   005CD6  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13124   005CDA  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13125   005CDE  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13126   005CE2  0E66               	movlw	102
 13127   005CE4  2636               	addwf	scalbnf@n^0,f,c
 13128   005CE6  0E00               	movlw	0
 13129   005CE8  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13130   005CEA  AE37               	btfss	(scalbnf@n+1)^0,7,c
 13131   005CEC  EF81  F02E         	goto	u12751
 13132   005CF0  0E82               	movlw	130
 13133   005CF2  5C36               	subwf	scalbnf@n^0,w,c
 13134   005CF4  0EFF               	movlw	255
 13135   005CF6  5837               	subwfb	(scalbnf@n+1)^0,w,c
 13136   005CF8  B0D8               	btfsc	status,0,c
 13137   005CFA  EF81  F02E         	goto	u12751
 13138   005CFE  EF83  F02E         	goto	u12750
 13139   005D02                     u12751:
 13140   005D02  EFB3  F02E         	goto	l12311
 13141   005D06                     u12750:
 13142   005D06  C040  F019         	movff	scalbnf@y,___flmul@b
 13143   005D0A  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13144   005D0E  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13145   005D12  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13146   005D16  0E00               	movlw	0
 13147   005D18  6E1D               	movwf	___flmul@a^0,c
 13148   005D1A  0E00               	movlw	0
 13149   005D1C  6E1E               	movwf	(___flmul@a+1)^0,c
 13150   005D1E  0E80               	movlw	128
 13151   005D20  6E1F               	movwf	(___flmul@a+2)^0,c
 13152   005D22  0E0C               	movlw	12
 13153   005D24  6E20               	movwf	(___flmul@a+3)^0,c
 13154   005D26  EC27  F024         	call	___flmul	;wreg free
 13155   005D2A  C019  F040         	movff	?___flmul,scalbnf@y
 13156   005D2E  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13157   005D32  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13158   005D36  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13159   005D3A  0E66               	movlw	102
 13160   005D3C  2636               	addwf	scalbnf@n^0,f,c
 13161   005D3E  0E00               	movlw	0
 13162   005D40  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13163   005D42  AE37               	btfss	(scalbnf@n+1)^0,7,c
 13164   005D44  EFAD  F02E         	goto	u12761
 13165   005D48  0E82               	movlw	130
 13166   005D4A  5C36               	subwf	scalbnf@n^0,w,c
 13167   005D4C  0EFF               	movlw	255
 13168   005D4E  5837               	subwfb	(scalbnf@n+1)^0,w,c
 13169   005D50  B0D8               	btfsc	status,0,c
 13170   005D52  EFAD  F02E         	goto	u12761
 13171   005D56  EFAF  F02E         	goto	u12760
 13172   005D5A                     u12761:
 13173   005D5A  EFB3  F02E         	goto	l12311
 13174   005D5E                     u12760:
 13175   005D5E  0EFF               	movlw	255
 13176   005D60  6E37               	movwf	(scalbnf@n+1)^0,c
 13177   005D62  0E82               	movlw	130
 13178   005D64  6E36               	movwf	scalbnf@n^0,c
 13179   005D66                     l12311:
 13180   005D66  0E7F               	movlw	127
 13181   005D68  2436               	addwf	scalbnf@n^0,w,c
 13182   005D6A  6E38               	movwf	??_scalbnf^0,c
 13183   005D6C  0E00               	movlw	0
 13184   005D6E  2037               	addwfc	(scalbnf@n+1)^0,w,c
 13185   005D70  6E39               	movwf	(??_scalbnf+1)^0,c
 13186   005D72  6A3A               	clrf	(??_scalbnf+2)^0,c
 13187   005D74  6A3B               	clrf	(??_scalbnf+3)^0,c
 13188   005D76  0E17               	movlw	23
 13189   005D78                     u12775:
 13190   005D78  90D8               	bcf	status,0,c
 13191   005D7A  3638               	rlcf	??_scalbnf^0,f,c
 13192   005D7C  3639               	rlcf	(??_scalbnf+1)^0,f,c
 13193   005D7E  363A               	rlcf	(??_scalbnf+2)^0,f,c
 13194   005D80  363B               	rlcf	(??_scalbnf+3)^0,f,c
 13195   005D82  2EE8               	decfsz	wreg,f,c
 13196   005D84  EFBC  F02E         	goto	u12775
 13197   005D88  C038  F03C         	movff	??_scalbnf,scalbnf@u
 13198   005D8C  C039  F03D         	movff	??_scalbnf+1,scalbnf@u+1
 13199   005D90  C03A  F03E         	movff	??_scalbnf+2,scalbnf@u+2
 13200   005D94  C03B  F03F         	movff	??_scalbnf+3,scalbnf@u+3
 13201   005D98  C03C  F019         	movff	scalbnf@u,___flmul@b
 13202   005D9C  C03D  F01A         	movff	scalbnf@u+1,___flmul@b+1
 13203   005DA0  C03E  F01B         	movff	scalbnf@u+2,___flmul@b+2
 13204   005DA4  C03F  F01C         	movff	scalbnf@u+3,___flmul@b+3
 13205   005DA8  C040  F01D         	movff	scalbnf@y,___flmul@a
 13206   005DAC  C041  F01E         	movff	scalbnf@y+1,___flmul@a+1
 13207   005DB0  C042  F01F         	movff	scalbnf@y+2,___flmul@a+2
 13208   005DB4  C043  F020         	movff	scalbnf@y+3,___flmul@a+3
 13209   005DB8  EC27  F024         	call	___flmul	;wreg free
 13210   005DBC  C019  F032         	movff	?___flmul,scalbnf@x
 13211   005DC0  C01A  F033         	movff	?___flmul+1,scalbnf@x+1
 13212   005DC4  C01B  F034         	movff	?___flmul+2,scalbnf@x+2
 13213   005DC8  C01C  F035         	movff	?___flmul+3,scalbnf@x+3
 13214   005DCC  C032  F032         	movff	scalbnf@x,?_scalbnf
 13215   005DD0  C033  F033         	movff	scalbnf@x+1,?_scalbnf+1
 13216   005DD4  C034  F034         	movff	scalbnf@x+2,?_scalbnf+2
 13217   005DD8  C035  F035         	movff	scalbnf@x+3,?_scalbnf+3
 13218   005DDC  0012               	return		;funcret
 13219   005DDE                     __end_of_scalbnf:
 13220                           	callstack 0
 13221                           
 13222 ;; *************** function ___flmul *****************
 13223 ;; Defined at:
 13224 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 13225 ;; Parameters:    Size  Location     Type
 13226 ;;  b               4   24[COMRAM] float 
 13227 ;;  a               4   28[COMRAM] float 
 13228 ;; Auto vars:     Size  Location     Type
 13229 ;;  prod            4   43[COMRAM] struct .
 13230 ;;  grs             4   39[COMRAM] unsigned long 
 13231 ;;  temp            2   47[COMRAM] struct .
 13232 ;;  bexp            1   38[COMRAM] unsigned char 
 13233 ;;  aexp            1   37[COMRAM] unsigned char 
 13234 ;;  sign            1   36[COMRAM] unsigned char 
 13235 ;; Return value:  Size  Location     Type
 13236 ;;                  4   24[COMRAM] unsigned char 
 13237 ;; Registers used:
 13238 ;;		wreg, status,2, status,0, prodl, prodh
 13239 ;; Tracked objects:
 13240 ;;		On entry : 0/0
 13241 ;;		On exit  : 0/0
 13242 ;;		Unchanged: 0/0
 13243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13244 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13245 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13246 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13247 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13248 ;;Total ram usage:       25 bytes
 13249 ;; Hardware stack levels used: 1
 13250 ;; This function calls:
 13251 ;;		Nothing
 13252 ;; This function is called by:
 13253 ;;		_convert_arr_to_float
 13254 ;;		_multiplication_operation
 13255 ;;		_efgtoa
 13256 ;;		_powf
 13257 ;;		_scalbnf
 13258 ;; This function uses a non-reentrant model
 13259 ;;
 13260                           
 13261                           	psect	text42
 13262   00484E                     __ptext42:
 13263                           	callstack 0
 13264   00484E                     ___flmul:
 13265                           	callstack 24
 13266   00484E  501C               	movf	(___flmul@b+3)^0,w,c
 13267   004850  0B80               	andlw	128
 13268   004852  6E25               	movwf	___flmul@sign^0,c
 13269   004854  501C               	movf	(___flmul@b+3)^0,w,c
 13270   004856  241C               	addwf	(___flmul@b+3)^0,w,c
 13271   004858  6E27               	movwf	___flmul@bexp^0,c
 13272   00485A  AE1B               	btfss	(___flmul@b+2)^0,7,c
 13273   00485C  EF32  F024         	goto	u11841
 13274   004860  EF34  F024         	goto	u11840
 13275   004864                     u11841:
 13276   004864  EF35  F024         	goto	l11671
 13277   004868                     u11840:
 13278   004868  8027               	bsf	___flmul@bexp^0,0,c
 13279   00486A                     l11671:
 13280   00486A  5027               	movf	___flmul@bexp^0,w,c
 13281   00486C  B4D8               	btfsc	status,2,c
 13282   00486E  EF3B  F024         	goto	u11851
 13283   004872  EF3D  F024         	goto	u11850
 13284   004876                     u11851:
 13285   004876  EF50  F024         	goto	l11679
 13286   00487A                     u11850:
 13287   00487A  2827               	incf	___flmul@bexp^0,w,c
 13288   00487C  A4D8               	btfss	status,2,c
 13289   00487E  EF43  F024         	goto	u11861
 13290   004882  EF45  F024         	goto	u11860
 13291   004886                     u11861:
 13292   004886  EF4D  F024         	goto	l11677
 13293   00488A                     u11860:
 13294   00488A  0E00               	movlw	0
 13295   00488C  6E19               	movwf	___flmul@b^0,c
 13296   00488E  0E00               	movlw	0
 13297   004890  6E1A               	movwf	(___flmul@b+1)^0,c
 13298   004892  0E00               	movlw	0
 13299   004894  6E1B               	movwf	(___flmul@b+2)^0,c
 13300   004896  0E00               	movlw	0
 13301   004898  6E1C               	movwf	(___flmul@b+3)^0,c
 13302   00489A                     l11677:
 13303   00489A  8E1B               	bsf	(___flmul@b+2)^0,7,c
 13304   00489C  EF58  F024         	goto	l11681
 13305   0048A0                     l11679:
 13306   0048A0  0E00               	movlw	0
 13307   0048A2  6E19               	movwf	___flmul@b^0,c
 13308   0048A4  0E00               	movlw	0
 13309   0048A6  6E1A               	movwf	(___flmul@b+1)^0,c
 13310   0048A8  0E00               	movlw	0
 13311   0048AA  6E1B               	movwf	(___flmul@b+2)^0,c
 13312   0048AC  0E00               	movlw	0
 13313   0048AE  6E1C               	movwf	(___flmul@b+3)^0,c
 13314   0048B0                     l11681:
 13315   0048B0  5020               	movf	(___flmul@a+3)^0,w,c
 13316   0048B2  0B80               	andlw	128
 13317   0048B4  1A25               	xorwf	___flmul@sign^0,f,c
 13318   0048B6  5020               	movf	(___flmul@a+3)^0,w,c
 13319   0048B8  2420               	addwf	(___flmul@a+3)^0,w,c
 13320   0048BA  6E26               	movwf	___flmul@aexp^0,c
 13321   0048BC  AE1F               	btfss	(___flmul@a+2)^0,7,c
 13322   0048BE  EF63  F024         	goto	u11871
 13323   0048C2  EF65  F024         	goto	u11870
 13324   0048C6                     u11871:
 13325   0048C6  EF66  F024         	goto	l11689
 13326   0048CA                     u11870:
 13327   0048CA  8026               	bsf	___flmul@aexp^0,0,c
 13328   0048CC                     l11689:
 13329   0048CC  5026               	movf	___flmul@aexp^0,w,c
 13330   0048CE  B4D8               	btfsc	status,2,c
 13331   0048D0  EF6C  F024         	goto	u11881
 13332   0048D4  EF6E  F024         	goto	u11880
 13333   0048D8                     u11881:
 13334   0048D8  EF81  F024         	goto	l11697
 13335   0048DC                     u11880:
 13336   0048DC  2826               	incf	___flmul@aexp^0,w,c
 13337   0048DE  A4D8               	btfss	status,2,c
 13338   0048E0  EF74  F024         	goto	u11891
 13339   0048E4  EF76  F024         	goto	u11890
 13340   0048E8                     u11891:
 13341   0048E8  EF7E  F024         	goto	l11695
 13342   0048EC                     u11890:
 13343   0048EC  0E00               	movlw	0
 13344   0048EE  6E1D               	movwf	___flmul@a^0,c
 13345   0048F0  0E00               	movlw	0
 13346   0048F2  6E1E               	movwf	(___flmul@a+1)^0,c
 13347   0048F4  0E00               	movlw	0
 13348   0048F6  6E1F               	movwf	(___flmul@a+2)^0,c
 13349   0048F8  0E00               	movlw	0
 13350   0048FA  6E20               	movwf	(___flmul@a+3)^0,c
 13351   0048FC                     l11695:
 13352   0048FC  8E1F               	bsf	(___flmul@a+2)^0,7,c
 13353   0048FE  EF89  F024         	goto	l1309
 13354   004902                     l11697:
 13355   004902  0E00               	movlw	0
 13356   004904  6E1D               	movwf	___flmul@a^0,c
 13357   004906  0E00               	movlw	0
 13358   004908  6E1E               	movwf	(___flmul@a+1)^0,c
 13359   00490A  0E00               	movlw	0
 13360   00490C  6E1F               	movwf	(___flmul@a+2)^0,c
 13361   00490E  0E00               	movlw	0
 13362   004910  6E20               	movwf	(___flmul@a+3)^0,c
 13363   004912                     l1309:
 13364   004912  5026               	movf	___flmul@aexp^0,w,c
 13365   004914  B4D8               	btfsc	status,2,c
 13366   004916  EF8F  F024         	goto	u11901
 13367   00491A  EF91  F024         	goto	u11900
 13368   00491E                     u11901:
 13369   00491E  EF99  F024         	goto	l11701
 13370   004922                     u11900:
 13371   004922  5027               	movf	___flmul@bexp^0,w,c
 13372   004924  A4D8               	btfss	status,2,c
 13373   004926  EF97  F024         	goto	u11911
 13374   00492A  EF99  F024         	goto	u11910
 13375   00492E                     u11911:
 13376   00492E  EFA3  F024         	goto	l11705
 13377   004932                     u11910:
 13378   004932                     l11701:
 13379   004932  0E00               	movlw	0
 13380   004934  6E19               	movwf	?___flmul^0,c
 13381   004936  0E00               	movlw	0
 13382   004938  6E1A               	movwf	(?___flmul+1)^0,c
 13383   00493A  0E00               	movlw	0
 13384   00493C  6E1B               	movwf	(?___flmul+2)^0,c
 13385   00493E  0E00               	movlw	0
 13386   004940  6E1C               	movwf	(?___flmul+3)^0,c
 13387   004942  EF3B  F026         	goto	l1313
 13388   004946                     l11705:
 13389   004946  501F               	movf	(___flmul@a+2)^0,w,c
 13390   004948  0219               	mulwf	___flmul@b^0,c
 13391   00494A  CFF3 F030          	movff	prodl,___flmul@temp
 13392   00494E  CFF4 F031          	movff	prodh,___flmul@temp+1
 13393   004952  5030               	movf	___flmul@temp^0,w,c
 13394   004954  6E28               	movwf	___flmul@grs^0,c
 13395   004956  6A29               	clrf	(___flmul@grs+1)^0,c
 13396   004958  6A2A               	clrf	(___flmul@grs+2)^0,c
 13397   00495A  6A2B               	clrf	(___flmul@grs+3)^0,c
 13398   00495C  5031               	movf	(___flmul@temp+1)^0,w,c
 13399   00495E  6E2C               	movwf	___flmul@prod^0,c
 13400   004960  6A2D               	clrf	(___flmul@prod+1)^0,c
 13401   004962  6A2E               	clrf	(___flmul@prod+2)^0,c
 13402   004964  6A2F               	clrf	(___flmul@prod+3)^0,c
 13403   004966  501E               	movf	(___flmul@a+1)^0,w,c
 13404   004968  021A               	mulwf	(___flmul@b+1)^0,c
 13405   00496A  CFF3 F030          	movff	prodl,___flmul@temp
 13406   00496E  CFF4 F031          	movff	prodh,___flmul@temp+1
 13407   004972  5030               	movf	___flmul@temp^0,w,c
 13408   004974  2628               	addwf	___flmul@grs^0,f,c
 13409   004976  0E00               	movlw	0
 13410   004978  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13411   00497A  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13412   00497C  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13413   00497E  5031               	movf	(___flmul@temp+1)^0,w,c
 13414   004980  262C               	addwf	___flmul@prod^0,f,c
 13415   004982  0E00               	movlw	0
 13416   004984  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13417   004986  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13418   004988  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13419   00498A  501D               	movf	___flmul@a^0,w,c
 13420   00498C  021B               	mulwf	(___flmul@b+2)^0,c
 13421   00498E  CFF3 F030          	movff	prodl,___flmul@temp
 13422   004992  CFF4 F031          	movff	prodh,___flmul@temp+1
 13423   004996  5030               	movf	___flmul@temp^0,w,c
 13424   004998  2628               	addwf	___flmul@grs^0,f,c
 13425   00499A  0E00               	movlw	0
 13426   00499C  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13427   00499E  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13428   0049A0  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13429   0049A2  5031               	movf	(___flmul@temp+1)^0,w,c
 13430   0049A4  262C               	addwf	___flmul@prod^0,f,c
 13431   0049A6  0E00               	movlw	0
 13432   0049A8  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13433   0049AA  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13434   0049AC  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13435   0049AE  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13436   0049B2  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13437   0049B6  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13438   0049BA  6A28               	clrf	___flmul@grs^0,c
 13439   0049BC  501D               	movf	___flmul@a^0,w,c
 13440   0049BE  021A               	mulwf	(___flmul@b+1)^0,c
 13441   0049C0  CFF3 F030          	movff	prodl,___flmul@temp
 13442   0049C4  CFF4 F031          	movff	prodh,___flmul@temp+1
 13443   0049C8  5030               	movf	___flmul@temp^0,w,c
 13444   0049CA  2628               	addwf	___flmul@grs^0,f,c
 13445   0049CC  5031               	movf	(___flmul@temp+1)^0,w,c
 13446   0049CE  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13447   0049D0  0E00               	movlw	0
 13448   0049D2  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13449   0049D4  0E00               	movlw	0
 13450   0049D6  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13451   0049D8  501E               	movf	(___flmul@a+1)^0,w,c
 13452   0049DA  0219               	mulwf	___flmul@b^0,c
 13453   0049DC  CFF3 F030          	movff	prodl,___flmul@temp
 13454   0049E0  CFF4 F031          	movff	prodh,___flmul@temp+1
 13455   0049E4  5030               	movf	___flmul@temp^0,w,c
 13456   0049E6  2628               	addwf	___flmul@grs^0,f,c
 13457   0049E8  5031               	movf	(___flmul@temp+1)^0,w,c
 13458   0049EA  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13459   0049EC  0E00               	movlw	0
 13460   0049EE  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13461   0049F0  0E00               	movlw	0
 13462   0049F2  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13463   0049F4  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13464   0049F8  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13465   0049FC  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13466   004A00  6A28               	clrf	___flmul@grs^0,c
 13467   004A02  501D               	movf	___flmul@a^0,w,c
 13468   004A04  0219               	mulwf	___flmul@b^0,c
 13469   004A06  CFF3 F030          	movff	prodl,___flmul@temp
 13470   004A0A  CFF4 F031          	movff	prodh,___flmul@temp+1
 13471   004A0E  5030               	movf	___flmul@temp^0,w,c
 13472   004A10  2628               	addwf	___flmul@grs^0,f,c
 13473   004A12  5031               	movf	(___flmul@temp+1)^0,w,c
 13474   004A14  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13475   004A16  0E00               	movlw	0
 13476   004A18  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13477   004A1A  0E00               	movlw	0
 13478   004A1C  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13479   004A1E  501F               	movf	(___flmul@a+2)^0,w,c
 13480   004A20  021A               	mulwf	(___flmul@b+1)^0,c
 13481   004A22  CFF3 F030          	movff	prodl,___flmul@temp
 13482   004A26  CFF4 F031          	movff	prodh,___flmul@temp+1
 13483   004A2A  5030               	movf	___flmul@temp^0,w,c
 13484   004A2C  262C               	addwf	___flmul@prod^0,f,c
 13485   004A2E  5031               	movf	(___flmul@temp+1)^0,w,c
 13486   004A30  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13487   004A32  0E00               	movlw	0
 13488   004A34  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13489   004A36  0E00               	movlw	0
 13490   004A38  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13491   004A3A  501E               	movf	(___flmul@a+1)^0,w,c
 13492   004A3C  021B               	mulwf	(___flmul@b+2)^0,c
 13493   004A3E  CFF3 F030          	movff	prodl,___flmul@temp
 13494   004A42  CFF4 F031          	movff	prodh,___flmul@temp+1
 13495   004A46  5030               	movf	___flmul@temp^0,w,c
 13496   004A48  262C               	addwf	___flmul@prod^0,f,c
 13497   004A4A  5031               	movf	(___flmul@temp+1)^0,w,c
 13498   004A4C  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13499   004A4E  0E00               	movlw	0
 13500   004A50  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13501   004A52  0E00               	movlw	0
 13502   004A54  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13503   004A56  501F               	movf	(___flmul@a+2)^0,w,c
 13504   004A58  021B               	mulwf	(___flmul@b+2)^0,c
 13505   004A5A  CFF3 F030          	movff	prodl,___flmul@temp
 13506   004A5E  CFF4 F031          	movff	prodh,___flmul@temp+1
 13507   004A62  5030               	movf	___flmul@temp^0,w,c
 13508   004A64  6E21               	movwf	??___flmul^0,c
 13509   004A66  5031               	movf	(___flmul@temp+1)^0,w,c
 13510   004A68  6E22               	movwf	(??___flmul+1)^0,c
 13511   004A6A  6A23               	clrf	(??___flmul+2)^0,c
 13512   004A6C  6A24               	clrf	(??___flmul+3)^0,c
 13513   004A6E  C023  F024         	movff	??___flmul+2,??___flmul+3
 13514   004A72  C022  F023         	movff	??___flmul+1,??___flmul+2
 13515   004A76  C021  F022         	movff	??___flmul,??___flmul+1
 13516   004A7A  6A21               	clrf	??___flmul^0,c
 13517   004A7C  5021               	movf	??___flmul^0,w,c
 13518   004A7E  262C               	addwf	___flmul@prod^0,f,c
 13519   004A80  5022               	movf	(??___flmul+1)^0,w,c
 13520   004A82  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13521   004A84  5023               	movf	(??___flmul+2)^0,w,c
 13522   004A86  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13523   004A88  5024               	movf	(??___flmul+3)^0,w,c
 13524   004A8A  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13525   004A8C  C028  F021         	movff	___flmul@grs,??___flmul
 13526   004A90  C029  F022         	movff	___flmul@grs+1,??___flmul+1
 13527   004A94  C02A  F023         	movff	___flmul@grs+2,??___flmul+2
 13528   004A98  C02B  F024         	movff	___flmul@grs+3,??___flmul+3
 13529   004A9C  0E19               	movlw	25
 13530   004A9E  EF56  F025         	goto	u11920
 13531   004AA2                     u11925:
 13532   004AA2  90D8               	bcf	status,0,c
 13533   004AA4  3224               	rrcf	(??___flmul+3)^0,f,c
 13534   004AA6  3223               	rrcf	(??___flmul+2)^0,f,c
 13535   004AA8  3222               	rrcf	(??___flmul+1)^0,f,c
 13536   004AAA  3221               	rrcf	??___flmul^0,f,c
 13537   004AAC                     u11920:
 13538   004AAC  2EE8               	decfsz	wreg,f,c
 13539   004AAE  EF51  F025         	goto	u11925
 13540   004AB2  5021               	movf	??___flmul^0,w,c
 13541   004AB4  262C               	addwf	___flmul@prod^0,f,c
 13542   004AB6  5022               	movf	(??___flmul+1)^0,w,c
 13543   004AB8  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13544   004ABA  5023               	movf	(??___flmul+2)^0,w,c
 13545   004ABC  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13546   004ABE  5024               	movf	(??___flmul+3)^0,w,c
 13547   004AC0  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13548   004AC2  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13549   004AC6  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13550   004ACA  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13551   004ACE  6A28               	clrf	___flmul@grs^0,c
 13552   004AD0  5026               	movf	___flmul@aexp^0,w,c
 13553   004AD2  C027  F021         	movff	___flmul@bexp,??___flmul
 13554   004AD6  6A22               	clrf	(??___flmul+1)^0,c
 13555   004AD8  2621               	addwf	??___flmul^0,f,c
 13556   004ADA  0E00               	movlw	0
 13557   004ADC  2222               	addwfc	(??___flmul+1)^0,f,c
 13558   004ADE  0E82               	movlw	130
 13559   004AE0  2421               	addwf	??___flmul^0,w,c
 13560   004AE2  6E30               	movwf	___flmul@temp^0,c
 13561   004AE4  0EFF               	movlw	255
 13562   004AE6  2022               	addwfc	(??___flmul+1)^0,w,c
 13563   004AE8  6E31               	movwf	(___flmul@temp+1)^0,c
 13564   004AEA  EF8C  F025         	goto	l11753
 13565   004AEE                     l11747:
 13566   004AEE  90D8               	bcf	status,0,c
 13567   004AF0  362C               	rlcf	___flmul@prod^0,f,c
 13568   004AF2  362D               	rlcf	(___flmul@prod+1)^0,f,c
 13569   004AF4  362E               	rlcf	(___flmul@prod+2)^0,f,c
 13570   004AF6  362F               	rlcf	(___flmul@prod+3)^0,f,c
 13571   004AF8  AE2B               	btfss	(___flmul@grs+3)^0,7,c
 13572   004AFA  EF81  F025         	goto	u11931
 13573   004AFE  EF83  F025         	goto	u11930
 13574   004B02                     u11931:
 13575   004B02  EF84  F025         	goto	l1316
 13576   004B06                     u11930:
 13577   004B06  802C               	bsf	___flmul@prod^0,0,c
 13578   004B08                     l1316:
 13579   004B08  90D8               	bcf	status,0,c
 13580   004B0A  3628               	rlcf	___flmul@grs^0,f,c
 13581   004B0C  3629               	rlcf	(___flmul@grs+1)^0,f,c
 13582   004B0E  362A               	rlcf	(___flmul@grs+2)^0,f,c
 13583   004B10  362B               	rlcf	(___flmul@grs+3)^0,f,c
 13584   004B12  0630               	decf	___flmul@temp^0,f,c
 13585   004B14  A0D8               	btfss	status,0,c
 13586   004B16  0631               	decf	(___flmul@temp+1)^0,f,c
 13587   004B18                     l11753:
 13588   004B18  AE2E               	btfss	(___flmul@prod+2)^0,7,c
 13589   004B1A  EF91  F025         	goto	u11941
 13590   004B1E  EF93  F025         	goto	u11940
 13591   004B22                     u11941:
 13592   004B22  EF77  F025         	goto	l11747
 13593   004B26                     u11940:
 13594   004B26  0E00               	movlw	0
 13595   004B28  6E26               	movwf	___flmul@aexp^0,c
 13596   004B2A  AE2B               	btfss	(___flmul@grs+3)^0,7,c
 13597   004B2C  EF9A  F025         	goto	u11951
 13598   004B30  EF9C  F025         	goto	u11950
 13599   004B34                     u11951:
 13600   004B34  EFC0  F025         	goto	l1318
 13601   004B38                     u11950:
 13602   004B38  0EFF               	movlw	255
 13603   004B3A  1428               	andwf	___flmul@grs^0,w,c
 13604   004B3C  6E21               	movwf	??___flmul^0,c
 13605   004B3E  0EFF               	movlw	255
 13606   004B40  1429               	andwf	(___flmul@grs+1)^0,w,c
 13607   004B42  6E22               	movwf	(??___flmul+1)^0,c
 13608   004B44  0EFF               	movlw	255
 13609   004B46  142A               	andwf	(___flmul@grs+2)^0,w,c
 13610   004B48  6E23               	movwf	(??___flmul+2)^0,c
 13611   004B4A  0E7F               	movlw	127
 13612   004B4C  142B               	andwf	(___flmul@grs+3)^0,w,c
 13613   004B4E  6E24               	movwf	(??___flmul+3)^0,c
 13614   004B50  5021               	movf	??___flmul^0,w,c
 13615   004B52  1022               	iorwf	(??___flmul+1)^0,w,c
 13616   004B54  1023               	iorwf	(??___flmul+2)^0,w,c
 13617   004B56  1024               	iorwf	(??___flmul+3)^0,w,c
 13618   004B58  B4D8               	btfsc	status,2,c
 13619   004B5A  EFB1  F025         	goto	u11961
 13620   004B5E  EFB3  F025         	goto	u11960
 13621   004B62                     u11961:
 13622   004B62  EFB7  F025         	goto	l1319
 13623   004B66                     u11960:
 13624   004B66                     l11761:
 13625   004B66  0E01               	movlw	1
 13626   004B68  6E26               	movwf	___flmul@aexp^0,c
 13627   004B6A  EFC0  F025         	goto	l1318
 13628   004B6E                     l1319:
 13629   004B6E  A02C               	btfss	___flmul@prod^0,0,c
 13630   004B70  EFBC  F025         	goto	u11971
 13631   004B74  EFBE  F025         	goto	u11970
 13632   004B78                     u11971:
 13633   004B78  EFC0  F025         	goto	l1318
 13634   004B7C                     u11970:
 13635   004B7C  EFB3  F025         	goto	l11761
 13636   004B80                     l1318:
 13637   004B80  5026               	movf	___flmul@aexp^0,w,c
 13638   004B82  B4D8               	btfsc	status,2,c
 13639   004B84  EFC6  F025         	goto	u11981
 13640   004B88  EFC8  F025         	goto	u11980
 13641   004B8C                     u11981:
 13642   004B8C  EFEC  F025         	goto	l11773
 13643   004B90                     u11980:
 13644   004B90  0E01               	movlw	1
 13645   004B92  262C               	addwf	___flmul@prod^0,f,c
 13646   004B94  0E00               	movlw	0
 13647   004B96  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13648   004B98  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13649   004B9A  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13650   004B9C  A02F               	btfss	(___flmul@prod+3)^0,0,c
 13651   004B9E  EFD3  F025         	goto	u11991
 13652   004BA2  EFD5  F025         	goto	u11990
 13653   004BA6                     u11991:
 13654   004BA6  EFEC  F025         	goto	l11773
 13655   004BAA                     u11990:
 13656   004BAA  C02C  F021         	movff	___flmul@prod,??___flmul
 13657   004BAE  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
 13658   004BB2  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
 13659   004BB6  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
 13660   004BBA  3424               	rlcf	(??___flmul+3)^0,w,c
 13661   004BBC  3224               	rrcf	(??___flmul+3)^0,f,c
 13662   004BBE  3223               	rrcf	(??___flmul+2)^0,f,c
 13663   004BC0  3222               	rrcf	(??___flmul+1)^0,f,c
 13664   004BC2  3221               	rrcf	??___flmul^0,f,c
 13665   004BC4  C021  F02C         	movff	??___flmul,___flmul@prod
 13666   004BC8  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
 13667   004BCC  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
 13668   004BD0  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
 13669   004BD4  4A30               	infsnz	___flmul@temp^0,f,c
 13670   004BD6  2A31               	incf	(___flmul@temp+1)^0,f,c
 13671   004BD8                     l11773:
 13672   004BD8  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 13673   004BDA  EFF7  F025         	goto	u12001
 13674   004BDE  5031               	movf	(___flmul@temp+1)^0,w,c
 13675   004BE0  E108               	bnz	u12000
 13676   004BE2  2830               	incf	___flmul@temp^0,w,c
 13677   004BE4  A0D8               	btfss	status,0,c
 13678   004BE6  EFF7  F025         	goto	u12001
 13679   004BEA  EFF9  F025         	goto	u12000
 13680   004BEE                     u12001:
 13681   004BEE  EF03  F026         	goto	l11777
 13682   004BF2                     u12000:
 13683   004BF2  0E00               	movlw	0
 13684   004BF4  6E2C               	movwf	___flmul@prod^0,c
 13685   004BF6  0E00               	movlw	0
 13686   004BF8  6E2D               	movwf	(___flmul@prod+1)^0,c
 13687   004BFA  0E80               	movlw	128
 13688   004BFC  6E2E               	movwf	(___flmul@prod+2)^0,c
 13689   004BFE  0E7F               	movlw	127
 13690   004C00  6E2F               	movwf	(___flmul@prod+3)^0,c
 13691   004C02  EF31  F026         	goto	l11789
 13692   004C06                     l11777:
 13693   004C06  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 13694   004C08  EF10  F026         	goto	u12010
 13695   004C0C  5031               	movf	(___flmul@temp+1)^0,w,c
 13696   004C0E  E106               	bnz	u12011
 13697   004C10  0430               	decf	___flmul@temp^0,w,c
 13698   004C12  B0D8               	btfsc	status,0,c
 13699   004C14  EF0E  F026         	goto	u12011
 13700   004C18  EF10  F026         	goto	u12010
 13701   004C1C                     u12011:
 13702   004C1C  EF1C  F026         	goto	l1326
 13703   004C20                     u12010:
 13704   004C20  0E00               	movlw	0
 13705   004C22  6E2C               	movwf	___flmul@prod^0,c
 13706   004C24  0E00               	movlw	0
 13707   004C26  6E2D               	movwf	(___flmul@prod+1)^0,c
 13708   004C28  0E00               	movlw	0
 13709   004C2A  6E2E               	movwf	(___flmul@prod+2)^0,c
 13710   004C2C  0E00               	movlw	0
 13711   004C2E  6E2F               	movwf	(___flmul@prod+3)^0,c
 13712   004C30  0E00               	movlw	0
 13713   004C32  6E25               	movwf	___flmul@sign^0,c
 13714   004C34  EF31  F026         	goto	l11789
 13715   004C38                     l1326:
 13716   004C38  C030  F027         	movff	___flmul@temp,___flmul@bexp
 13717   004C3C  0EFF               	movlw	255
 13718   004C3E  162C               	andwf	___flmul@prod^0,f,c
 13719   004C40  0EFF               	movlw	255
 13720   004C42  162D               	andwf	(___flmul@prod+1)^0,f,c
 13721   004C44  0E7F               	movlw	127
 13722   004C46  162E               	andwf	(___flmul@prod+2)^0,f,c
 13723   004C48  0E00               	movlw	0
 13724   004C4A  162F               	andwf	(___flmul@prod+3)^0,f,c
 13725   004C4C  A027               	btfss	___flmul@bexp^0,0,c
 13726   004C4E  EF2B  F026         	goto	u12021
 13727   004C52  EF2D  F026         	goto	u12020
 13728   004C56                     u12021:
 13729   004C56  EF2E  F026         	goto	l11787
 13730   004C5A                     u12020:
 13731   004C5A  8E2E               	bsf	(___flmul@prod+2)^0,7,c
 13732   004C5C                     l11787:
 13733   004C5C  90D8               	bcf	status,0,c
 13734   004C5E  3027               	rrcf	___flmul@bexp^0,w,c
 13735   004C60  6E2F               	movwf	(___flmul@prod+3)^0,c
 13736   004C62                     l11789:
 13737   004C62  5025               	movf	___flmul@sign^0,w,c
 13738   004C64  122F               	iorwf	(___flmul@prod+3)^0,f,c
 13739   004C66  C02C  F019         	movff	___flmul@prod,?___flmul
 13740   004C6A  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
 13741   004C6E  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
 13742   004C72  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
 13743   004C76                     l1313:
 13744   004C76  0012               	return		;funcret
 13745   004C78                     __end_of___flmul:
 13746                           	callstack 0
 13747                           
 13748 ;; *************** function ___xxtofl *****************
 13749 ;; Defined at:
 13750 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 13751 ;; Parameters:    Size  Location     Type
 13752 ;;  sign            1    wreg     unsigned char 
 13753 ;;  val             4   10[COMRAM] long 
 13754 ;; Auto vars:     Size  Location     Type
 13755 ;;  sign            1   18[COMRAM] unsigned char 
 13756 ;;  arg             4   20[COMRAM] unsigned long 
 13757 ;;  exp             1   19[COMRAM] unsigned char 
 13758 ;; Return value:  Size  Location     Type
 13759 ;;                  4   10[COMRAM] unsigned char 
 13760 ;; Registers used:
 13761 ;;		wreg, status,2, status,0
 13762 ;; Tracked objects:
 13763 ;;		On entry : 0/0
 13764 ;;		On exit  : 0/0
 13765 ;;		Unchanged: 0/0
 13766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13767 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13768 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13769 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13770 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13771 ;;Total ram usage:       14 bytes
 13772 ;; Hardware stack levels used: 1
 13773 ;; This function calls:
 13774 ;;		Nothing
 13775 ;; This function is called by:
 13776 ;;		_convert_arr_to_float
 13777 ;;		_send_the_result_to_LCD
 13778 ;;		_powf
 13779 ;; This function uses a non-reentrant model
 13780 ;;
 13781                           
 13782                           	psect	text43
 13783   005FF0                     __ptext43:
 13784                           	callstack 0
 13785   005FF0                     ___xxtofl:
 13786                           	callstack 29
 13787                           
 13788                           ;incstack = 0
 13789                           ;___xxtofl@sign stored from wreg
 13790   005FF0  6E13               	movwf	___xxtofl@sign^0,c
 13791   005FF2  5013               	movf	___xxtofl@sign^0,w,c
 13792   005FF4  B4D8               	btfsc	status,2,c
 13793   005FF6  EFFF  F02F         	goto	u12471
 13794   005FFA  EF01  F030         	goto	u12470
 13795   005FFE                     u12471:
 13796   005FFE  EF23  F030         	goto	l1350
 13797   006002                     u12470:
 13798   006002  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 13799   006004  EF08  F030         	goto	u12480
 13800   006008  EF06  F030         	goto	u12481
 13801   00600C                     u12481:
 13802   00600C  EF23  F030         	goto	l1350
 13803   006010                     u12480:
 13804   006010  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
 13805   006014  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
 13806   006018  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
 13807   00601C  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
 13808   006020  1E0F               	comf	??___xxtofl^0,f,c
 13809   006022  1E10               	comf	(??___xxtofl+1)^0,f,c
 13810   006024  1E11               	comf	(??___xxtofl+2)^0,f,c
 13811   006026  1E12               	comf	(??___xxtofl+3)^0,f,c
 13812   006028  2A0F               	incf	??___xxtofl^0,f,c
 13813   00602A  0E00               	movlw	0
 13814   00602C  2210               	addwfc	(??___xxtofl+1)^0,f,c
 13815   00602E  2211               	addwfc	(??___xxtofl+2)^0,f,c
 13816   006030  2212               	addwfc	(??___xxtofl+3)^0,f,c
 13817   006032  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
 13818   006036  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
 13819   00603A  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
 13820   00603E  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
 13821   006042  EF2B  F030         	goto	l12171
 13822   006046                     l1350:
 13823   006046  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
 13824   00604A  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13825   00604E  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13826   006052  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13827   006056                     l12171:
 13828   006056  500B               	movf	___xxtofl@val^0,w,c
 13829   006058  100C               	iorwf	(___xxtofl@val+1)^0,w,c
 13830   00605A  100D               	iorwf	(___xxtofl@val+2)^0,w,c
 13831   00605C  100E               	iorwf	(___xxtofl@val+3)^0,w,c
 13832   00605E  A4D8               	btfss	status,2,c
 13833   006060  EF34  F030         	goto	u12491
 13834   006064  EF36  F030         	goto	u12490
 13835   006068                     u12491:
 13836   006068  EF40  F030         	goto	l12177
 13837   00606C                     u12490:
 13838   00606C  0E00               	movlw	0
 13839   00606E  6E0B               	movwf	?___xxtofl^0,c
 13840   006070  0E00               	movlw	0
 13841   006072  6E0C               	movwf	(?___xxtofl+1)^0,c
 13842   006074  0E00               	movlw	0
 13843   006076  6E0D               	movwf	(?___xxtofl+2)^0,c
 13844   006078  0E00               	movlw	0
 13845   00607A  6E0E               	movwf	(?___xxtofl+3)^0,c
 13846   00607C  EFD1  F030         	goto	l1353
 13847   006080                     l12177:
 13848   006080  0E96               	movlw	150
 13849   006082  6E14               	movwf	___xxtofl@exp^0,c
 13850   006084  EF4A  F030         	goto	l12181
 13851   006088                     l12179:
 13852   006088  2A14               	incf	___xxtofl@exp^0,f,c
 13853   00608A  90D8               	bcf	status,0,c
 13854   00608C  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 13855   00608E  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 13856   006090  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 13857   006092  3215               	rrcf	___xxtofl@arg^0,f,c
 13858   006094                     l12181:
 13859   006094  0E00               	movlw	0
 13860   006096  1415               	andwf	___xxtofl@arg^0,w,c
 13861   006098  6E0F               	movwf	??___xxtofl^0,c
 13862   00609A  0E00               	movlw	0
 13863   00609C  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 13864   00609E  6E10               	movwf	(??___xxtofl+1)^0,c
 13865   0060A0  0E00               	movlw	0
 13866   0060A2  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 13867   0060A4  6E11               	movwf	(??___xxtofl+2)^0,c
 13868   0060A6  0EFE               	movlw	254
 13869   0060A8  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 13870   0060AA  6E12               	movwf	(??___xxtofl+3)^0,c
 13871   0060AC  500F               	movf	??___xxtofl^0,w,c
 13872   0060AE  1010               	iorwf	(??___xxtofl+1)^0,w,c
 13873   0060B0  1011               	iorwf	(??___xxtofl+2)^0,w,c
 13874   0060B2  1012               	iorwf	(??___xxtofl+3)^0,w,c
 13875   0060B4  A4D8               	btfss	status,2,c
 13876   0060B6  EF5F  F030         	goto	u12501
 13877   0060BA  EF61  F030         	goto	u12500
 13878   0060BE                     u12501:
 13879   0060BE  EF44  F030         	goto	l12179
 13880   0060C2                     u12500:
 13881   0060C2  EF6F  F030         	goto	l1357
 13882   0060C6                     l12183:
 13883   0060C6  2A14               	incf	___xxtofl@exp^0,f,c
 13884   0060C8  0E01               	movlw	1
 13885   0060CA  2615               	addwf	___xxtofl@arg^0,f,c
 13886   0060CC  0E00               	movlw	0
 13887   0060CE  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
 13888   0060D0  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
 13889   0060D2  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
 13890   0060D4  90D8               	bcf	status,0,c
 13891   0060D6  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 13892   0060D8  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 13893   0060DA  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 13894   0060DC  3215               	rrcf	___xxtofl@arg^0,f,c
 13895   0060DE                     l1357:
 13896   0060DE  0E00               	movlw	0
 13897   0060E0  1415               	andwf	___xxtofl@arg^0,w,c
 13898   0060E2  6E0F               	movwf	??___xxtofl^0,c
 13899   0060E4  0E00               	movlw	0
 13900   0060E6  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 13901   0060E8  6E10               	movwf	(??___xxtofl+1)^0,c
 13902   0060EA  0E00               	movlw	0
 13903   0060EC  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 13904   0060EE  6E11               	movwf	(??___xxtofl+2)^0,c
 13905   0060F0  0EFF               	movlw	255
 13906   0060F2  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 13907   0060F4  6E12               	movwf	(??___xxtofl+3)^0,c
 13908   0060F6  500F               	movf	??___xxtofl^0,w,c
 13909   0060F8  1010               	iorwf	(??___xxtofl+1)^0,w,c
 13910   0060FA  1011               	iorwf	(??___xxtofl+2)^0,w,c
 13911   0060FC  1012               	iorwf	(??___xxtofl+3)^0,w,c
 13912   0060FE  A4D8               	btfss	status,2,c
 13913   006100  EF84  F030         	goto	u12511
 13914   006104  EF86  F030         	goto	u12510
 13915   006108                     u12511:
 13916   006108  EF63  F030         	goto	l12183
 13917   00610C                     u12510:
 13918   00610C  EF8E  F030         	goto	l12191
 13919   006110                     l12189:
 13920   006110  0614               	decf	___xxtofl@exp^0,f,c
 13921   006112  90D8               	bcf	status,0,c
 13922   006114  3615               	rlcf	___xxtofl@arg^0,f,c
 13923   006116  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
 13924   006118  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
 13925   00611A  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
 13926   00611C                     l12191:
 13927   00611C  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
 13928   00611E  EF93  F030         	goto	u12521
 13929   006122  EF95  F030         	goto	u12520
 13930   006126                     u12521:
 13931   006126  EF9D  F030         	goto	l1364
 13932   00612A                     u12520:
 13933   00612A  0E02               	movlw	2
 13934   00612C  6014               	cpfslt	___xxtofl@exp^0,c
 13935   00612E  EF9B  F030         	goto	u12531
 13936   006132  EF9D  F030         	goto	u12530
 13937   006136                     u12531:
 13938   006136  EF88  F030         	goto	l12189
 13939   00613A                     u12530:
 13940   00613A                     l1364:
 13941   00613A  B014               	btfsc	___xxtofl@exp^0,0,c
 13942   00613C  EFA2  F030         	goto	u12541
 13943   006140  EFA4  F030         	goto	u12540
 13944   006144                     u12541:
 13945   006144  EFA5  F030         	goto	l12197
 13946   006148                     u12540:
 13947   006148  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
 13948   00614A                     l12197:
 13949   00614A  90D8               	bcf	status,0,c
 13950   00614C  3214               	rrcf	___xxtofl@exp^0,f,c
 13951   00614E  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
 13952   006152  6A10               	clrf	(??___xxtofl+1)^0,c
 13953   006154  6A11               	clrf	(??___xxtofl+2)^0,c
 13954   006156  6A12               	clrf	(??___xxtofl+3)^0,c
 13955   006158  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
 13956   00615C  6A11               	clrf	(??___xxtofl+2)^0,c
 13957   00615E  6A10               	clrf	(??___xxtofl+1)^0,c
 13958   006160  6A0F               	clrf	??___xxtofl^0,c
 13959   006162  500F               	movf	??___xxtofl^0,w,c
 13960   006164  1215               	iorwf	___xxtofl@arg^0,f,c
 13961   006166  5010               	movf	(??___xxtofl+1)^0,w,c
 13962   006168  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
 13963   00616A  5011               	movf	(??___xxtofl+2)^0,w,c
 13964   00616C  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
 13965   00616E  5012               	movf	(??___xxtofl+3)^0,w,c
 13966   006170  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
 13967   006172  5013               	movf	___xxtofl@sign^0,w,c
 13968   006174  B4D8               	btfsc	status,2,c
 13969   006176  EFBF  F030         	goto	u12551
 13970   00617A  EFC1  F030         	goto	u12550
 13971   00617E                     u12551:
 13972   00617E  EFC9  F030         	goto	l12207
 13973   006182                     u12550:
 13974   006182  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 13975   006184  EFC8  F030         	goto	u12560
 13976   006188  EFC6  F030         	goto	u12561
 13977   00618C                     u12561:
 13978   00618C  EFC9  F030         	goto	l12207
 13979   006190                     u12560:
 13980   006190  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
 13981   006192                     l12207:
 13982   006192  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
 13983   006196  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
 13984   00619A  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
 13985   00619E  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
 13986   0061A2                     l1353:
 13987   0061A2  0012               	return		;funcret
 13988   0061A4                     __end_of___xxtofl:
 13989                           	callstack 0
 13990                           
 13991 ;; *************** function ___flsub *****************
 13992 ;; Defined at:
 13993 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 13994 ;; Parameters:    Size  Location     Type
 13995 ;;  b               4   90[COMRAM] unsigned char 
 13996 ;;  a               4   94[COMRAM] unsigned char 
 13997 ;; Auto vars:     Size  Location     Type
 13998 ;;		None
 13999 ;; Return value:  Size  Location     Type
 14000 ;;                  4   90[COMRAM] unsigned char 
 14001 ;; Registers used:
 14002 ;;		wreg, status,2, status,0, cstack
 14003 ;; Tracked objects:
 14004 ;;		On entry : 0/0
 14005 ;;		On exit  : 0/0
 14006 ;;		Unchanged: 0/0
 14007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14008 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14010 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14011 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14012 ;;Total ram usage:        8 bytes
 14013 ;; Hardware stack levels used: 1
 14014 ;; Hardware stack levels required when called: 1
 14015 ;; This function calls:
 14016 ;;		___fladd
 14017 ;; This function is called by:
 14018 ;;		_subtraction_operation
 14019 ;;		_efgtoa
 14020 ;;		_powf
 14021 ;; This function uses a non-reentrant model
 14022 ;;
 14023                           
 14024                           	psect	text44
 14025   0076A4                     __ptext44:
 14026                           	callstack 0
 14027   0076A4                     ___flsub:
 14028                           	callstack 28
 14029   0076A4  0E00               	movlw	0
 14030   0076A6  1A5F               	xorwf	___flsub@a^0,f,c
 14031   0076A8  0E00               	movlw	0
 14032   0076AA  1A60               	xorwf	(___flsub@a+1)^0,f,c
 14033   0076AC  0E00               	movlw	0
 14034   0076AE  1A61               	xorwf	(___flsub@a+2)^0,f,c
 14035   0076B0  0E80               	movlw	128
 14036   0076B2  1A62               	xorwf	(___flsub@a+3)^0,f,c
 14037   0076B4  C05B  F032         	movff	___flsub@b,___fladd@b
 14038   0076B8  C05C  F033         	movff	___flsub@b+1,___fladd@b+1
 14039   0076BC  C05D  F034         	movff	___flsub@b+2,___fladd@b+2
 14040   0076C0  C05E  F035         	movff	___flsub@b+3,___fladd@b+3
 14041   0076C4  C05F  F036         	movff	___flsub@a,___fladd@a
 14042   0076C8  C060  F037         	movff	___flsub@a+1,___fladd@a+1
 14043   0076CC  C061  F038         	movff	___flsub@a+2,___fladd@a+2
 14044   0076D0  C062  F039         	movff	___flsub@a+3,___fladd@a+3
 14045   0076D4  ECC7  F021         	call	___fladd	;wreg free
 14046   0076D8  C032  F05B         	movff	?___fladd,?___flsub
 14047   0076DC  C033  F05C         	movff	?___fladd+1,?___flsub+1
 14048   0076E0  C034  F05D         	movff	?___fladd+2,?___flsub+2
 14049   0076E4  C035  F05E         	movff	?___fladd+3,?___flsub+3
 14050   0076E8  0012               	return		;funcret
 14051   0076EA                     __end_of___flsub:
 14052                           	callstack 0
 14053                           
 14054 ;; *************** function ___fladd *****************
 14055 ;; Defined at:
 14056 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 14057 ;; Parameters:    Size  Location     Type
 14058 ;;  b               4   49[COMRAM] unsigned char 
 14059 ;;  a               4   53[COMRAM] unsigned char 
 14060 ;; Auto vars:     Size  Location     Type
 14061 ;;  grs             1   64[COMRAM] unsigned char 
 14062 ;;  bexp            1   63[COMRAM] unsigned char 
 14063 ;;  aexp            1   62[COMRAM] unsigned char 
 14064 ;;  signs           1   61[COMRAM] unsigned char 
 14065 ;; Return value:  Size  Location     Type
 14066 ;;                  4   49[COMRAM] unsigned char 
 14067 ;; Registers used:
 14068 ;;		wreg, status,2, status,0
 14069 ;; Tracked objects:
 14070 ;;		On entry : 0/0
 14071 ;;		On exit  : 0/0
 14072 ;;		Unchanged: 0/0
 14073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14074 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14075 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14076 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14077 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14078 ;;Total ram usage:       16 bytes
 14079 ;; Hardware stack levels used: 1
 14080 ;; This function calls:
 14081 ;;		Nothing
 14082 ;; This function is called by:
 14083 ;;		_convert_arr_to_float
 14084 ;;		_sum_operation
 14085 ;;		___flsub
 14086 ;;		_efgtoa
 14087 ;;		_powf
 14088 ;; This function uses a non-reentrant model
 14089 ;;
 14090                           
 14091                           	psect	text45
 14092   00438E                     __ptext45:
 14093                           	callstack 0
 14094   00438E                     ___fladd:
 14095                           	callstack 29
 14096   00438E  5035               	movf	(___fladd@b+3)^0,w,c
 14097   004390  0B80               	andlw	128
 14098   004392  6E3E               	movwf	___fladd@signs^0,c
 14099   004394  5035               	movf	(___fladd@b+3)^0,w,c
 14100   004396  2435               	addwf	(___fladd@b+3)^0,w,c
 14101   004398  6E40               	movwf	___fladd@bexp^0,c
 14102   00439A  AE34               	btfss	(___fladd@b+2)^0,7,c
 14103   00439C  EFD2  F021         	goto	u11221
 14104   0043A0  EFD4  F021         	goto	u11220
 14105   0043A4                     u11221:
 14106   0043A4  EFD5  F021         	goto	l11331
 14107   0043A8                     u11220:
 14108   0043A8  8040               	bsf	___fladd@bexp^0,0,c
 14109   0043AA                     l11331:
 14110   0043AA  5040               	movf	___fladd@bexp^0,w,c
 14111   0043AC  B4D8               	btfsc	status,2,c
 14112   0043AE  EFDB  F021         	goto	u11231
 14113   0043B2  EFDD  F021         	goto	u11230
 14114   0043B6                     u11231:
 14115   0043B6  EFF2  F021         	goto	l11341
 14116   0043BA                     u11230:
 14117   0043BA  2840               	incf	___fladd@bexp^0,w,c
 14118   0043BC  A4D8               	btfss	status,2,c
 14119   0043BE  EFE3  F021         	goto	u11241
 14120   0043C2  EFE5  F021         	goto	u11240
 14121   0043C6                     u11241:
 14122   0043C6  EFED  F021         	goto	l11337
 14123   0043CA                     u11240:
 14124   0043CA  0E00               	movlw	0
 14125   0043CC  6E32               	movwf	___fladd@b^0,c
 14126   0043CE  0E00               	movlw	0
 14127   0043D0  6E33               	movwf	(___fladd@b+1)^0,c
 14128   0043D2  0E00               	movlw	0
 14129   0043D4  6E34               	movwf	(___fladd@b+2)^0,c
 14130   0043D6  0E00               	movlw	0
 14131   0043D8  6E35               	movwf	(___fladd@b+3)^0,c
 14132   0043DA                     l11337:
 14133   0043DA  8E34               	bsf	(___fladd@b+2)^0,7,c
 14134   0043DC  0E00               	movlw	0
 14135   0043DE  6E35               	movwf	(___fladd@b+3)^0,c
 14136   0043E0  EFFA  F021         	goto	l11343
 14137   0043E4                     l11341:
 14138   0043E4  0E00               	movlw	0
 14139   0043E6  6E32               	movwf	___fladd@b^0,c
 14140   0043E8  0E00               	movlw	0
 14141   0043EA  6E33               	movwf	(___fladd@b+1)^0,c
 14142   0043EC  0E00               	movlw	0
 14143   0043EE  6E34               	movwf	(___fladd@b+2)^0,c
 14144   0043F0  0E00               	movlw	0
 14145   0043F2  6E35               	movwf	(___fladd@b+3)^0,c
 14146   0043F4                     l11343:
 14147   0043F4  5039               	movf	(___fladd@a+3)^0,w,c
 14148   0043F6  0B80               	andlw	128
 14149   0043F8  6E3F               	movwf	___fladd@aexp^0,c
 14150   0043FA  503E               	movf	___fladd@signs^0,w,c
 14151   0043FC  183F               	xorwf	___fladd@aexp^0,w,c
 14152   0043FE  B4D8               	btfsc	status,2,c
 14153   004400  EF04  F022         	goto	u11251
 14154   004404  EF06  F022         	goto	u11250
 14155   004408                     u11251:
 14156   004408  EF07  F022         	goto	l11349
 14157   00440C                     u11250:
 14158   00440C  8C3E               	bsf	___fladd@signs^0,6,c
 14159   00440E                     l11349:
 14160   00440E  5039               	movf	(___fladd@a+3)^0,w,c
 14161   004410  2439               	addwf	(___fladd@a+3)^0,w,c
 14162   004412  6E3F               	movwf	___fladd@aexp^0,c
 14163   004414  AE38               	btfss	(___fladd@a+2)^0,7,c
 14164   004416  EF0F  F022         	goto	u11261
 14165   00441A  EF11  F022         	goto	u11260
 14166   00441E                     u11261:
 14167   00441E  EF12  F022         	goto	l11355
 14168   004422                     u11260:
 14169   004422  803F               	bsf	___fladd@aexp^0,0,c
 14170   004424                     l11355:
 14171   004424  503F               	movf	___fladd@aexp^0,w,c
 14172   004426  B4D8               	btfsc	status,2,c
 14173   004428  EF18  F022         	goto	u11271
 14174   00442C  EF1A  F022         	goto	u11270
 14175   004430                     u11271:
 14176   004430  EF2F  F022         	goto	l11365
 14177   004434                     u11270:
 14178   004434  283F               	incf	___fladd@aexp^0,w,c
 14179   004436  A4D8               	btfss	status,2,c
 14180   004438  EF20  F022         	goto	u11281
 14181   00443C  EF22  F022         	goto	u11280
 14182   004440                     u11281:
 14183   004440  EF2A  F022         	goto	l11361
 14184   004444                     u11280:
 14185   004444  0E00               	movlw	0
 14186   004446  6E36               	movwf	___fladd@a^0,c
 14187   004448  0E00               	movlw	0
 14188   00444A  6E37               	movwf	(___fladd@a+1)^0,c
 14189   00444C  0E00               	movlw	0
 14190   00444E  6E38               	movwf	(___fladd@a+2)^0,c
 14191   004450  0E00               	movlw	0
 14192   004452  6E39               	movwf	(___fladd@a+3)^0,c
 14193   004454                     l11361:
 14194   004454  8E38               	bsf	(___fladd@a+2)^0,7,c
 14195   004456  0E00               	movlw	0
 14196   004458  6E39               	movwf	(___fladd@a+3)^0,c
 14197   00445A  EF37  F022         	goto	l11367
 14198   00445E                     l11365:
 14199   00445E  0E00               	movlw	0
 14200   004460  6E36               	movwf	___fladd@a^0,c
 14201   004462  0E00               	movlw	0
 14202   004464  6E37               	movwf	(___fladd@a+1)^0,c
 14203   004466  0E00               	movlw	0
 14204   004468  6E38               	movwf	(___fladd@a+2)^0,c
 14205   00446A  0E00               	movlw	0
 14206   00446C  6E39               	movwf	(___fladd@a+3)^0,c
 14207   00446E                     l11367:
 14208   00446E  5040               	movf	___fladd@bexp^0,w,c
 14209   004470  5C3F               	subwf	___fladd@aexp^0,w,c
 14210   004472  B0D8               	btfsc	status,0,c
 14211   004474  EF3E  F022         	goto	u11291
 14212   004478  EF40  F022         	goto	u11290
 14213   00447C                     u11291:
 14214   00447C  EF67  F022         	goto	l11403
 14215   004480                     u11290:
 14216   004480  AC3E               	btfss	___fladd@signs^0,6,c
 14217   004482  EF45  F022         	goto	u11301
 14218   004486  EF47  F022         	goto	u11300
 14219   00448A                     u11301:
 14220   00448A  EF49  F022         	goto	l11373
 14221   00448E                     u11300:
 14222   00448E  0E80               	movlw	128
 14223   004490  1A3E               	xorwf	___fladd@signs^0,f,c
 14224   004492                     l11373:
 14225   004492  C040  F041         	movff	___fladd@bexp,___fladd@grs
 14226   004496  C03F  F040         	movff	___fladd@aexp,___fladd@bexp
 14227   00449A  C041  F03F         	movff	___fladd@grs,___fladd@aexp
 14228   00449E  C032  F041         	movff	___fladd@b,___fladd@grs
 14229   0044A2  C036  F032         	movff	___fladd@a,___fladd@b
 14230   0044A6  C041  F036         	movff	___fladd@grs,___fladd@a
 14231   0044AA  C033  F041         	movff	___fladd@b+1,___fladd@grs
 14232   0044AE  C037  F033         	movff	___fladd@a+1,___fladd@b+1
 14233   0044B2  C041  F037         	movff	___fladd@grs,___fladd@a+1
 14234   0044B6  C034  F041         	movff	___fladd@b+2,___fladd@grs
 14235   0044BA  C038  F034         	movff	___fladd@a+2,___fladd@b+2
 14236   0044BE  C041  F038         	movff	___fladd@grs,___fladd@a+2
 14237   0044C2  C035  F041         	movff	___fladd@b+3,___fladd@grs
 14238   0044C6  C039  F035         	movff	___fladd@a+3,___fladd@b+3
 14239   0044CA  C041  F039         	movff	___fladd@grs,___fladd@a+3
 14240   0044CE                     l11403:
 14241   0044CE  0E00               	movlw	0
 14242   0044D0  6E41               	movwf	___fladd@grs^0,c
 14243   0044D2  5040               	movf	___fladd@bexp^0,w,c
 14244   0044D4  C03F  F03A         	movff	___fladd@aexp,??___fladd
 14245   0044D8  6A3B               	clrf	(??___fladd+1)^0,c
 14246   0044DA  5E3A               	subwf	??___fladd^0,f,c
 14247   0044DC  0E00               	movlw	0
 14248   0044DE  5A3B               	subwfb	(??___fladd+1)^0,f,c
 14249   0044E0  BE3B               	btfsc	(??___fladd+1)^0,7,c
 14250   0044E2  EF7C  F022         	goto	u11311
 14251   0044E6  503B               	movf	(??___fladd+1)^0,w,c
 14252   0044E8  E109               	bnz	u11310
 14253   0044EA  0E1A               	movlw	26
 14254   0044EC  5C3A               	subwf	??___fladd^0,w,c
 14255   0044EE  A0D8               	btfss	status,0,c
 14256   0044F0  EF7C  F022         	goto	u11311
 14257   0044F4  EF7E  F022         	goto	u11310
 14258   0044F8                     u11311:
 14259   0044F8  EFB5  F022         	goto	l1224
 14260   0044FC                     u11310:
 14261   0044FC  5032               	movf	___fladd@b^0,w,c
 14262   0044FE  1033               	iorwf	(___fladd@b+1)^0,w,c
 14263   004500  1034               	iorwf	(___fladd@b+2)^0,w,c
 14264   004502  1035               	iorwf	(___fladd@b+3)^0,w,c
 14265   004504  A4D8               	btfss	status,2,c
 14266   004506  EF87  F022         	goto	u11321
 14267   00450A  EF8A  F022         	goto	u11320
 14268   00450E                     u11321:
 14269   00450E  0E01               	movlw	1
 14270   004510  EF8B  F022         	goto	u11330
 14271   004514                     u11320:
 14272   004514  0E00               	movlw	0
 14273   004516                     u11330:
 14274   004516  6E41               	movwf	___fladd@grs^0,c
 14275   004518  0E00               	movlw	0
 14276   00451A  6E32               	movwf	___fladd@b^0,c
 14277   00451C  0E00               	movlw	0
 14278   00451E  6E33               	movwf	(___fladd@b+1)^0,c
 14279   004520  0E00               	movlw	0
 14280   004522  6E34               	movwf	(___fladd@b+2)^0,c
 14281   004524  0E00               	movlw	0
 14282   004526  6E35               	movwf	(___fladd@b+3)^0,c
 14283   004528  C03F  F040         	movff	___fladd@aexp,___fladd@bexp
 14284   00452C  EFBE  F022         	goto	l1223
 14285   004530                     l1225:
 14286   004530  A041               	btfss	___fladd@grs^0,0,c
 14287   004532  EF9D  F022         	goto	u11341
 14288   004536  EF9F  F022         	goto	u11340
 14289   00453A                     u11341:
 14290   00453A  EFA5  F022         	goto	l11415
 14291   00453E                     u11340:
 14292   00453E  90D8               	bcf	status,0,c
 14293   004540  3041               	rrcf	___fladd@grs^0,w,c
 14294   004542  0901               	iorlw	1
 14295   004544  6E41               	movwf	___fladd@grs^0,c
 14296   004546  EFA7  F022         	goto	l11417
 14297   00454A                     l11415:
 14298   00454A  90D8               	bcf	status,0,c
 14299   00454C  3241               	rrcf	___fladd@grs^0,f,c
 14300   00454E                     l11417:
 14301   00454E  A032               	btfss	___fladd@b^0,0,c
 14302   004550  EFAC  F022         	goto	u11351
 14303   004554  EFAE  F022         	goto	u11350
 14304   004558                     u11351:
 14305   004558  EFAF  F022         	goto	l11421
 14306   00455C                     u11350:
 14307   00455C  8E41               	bsf	___fladd@grs^0,7,c
 14308   00455E                     l11421:
 14309   00455E  3435               	rlcf	(___fladd@b+3)^0,w,c
 14310   004560  3235               	rrcf	(___fladd@b+3)^0,f,c
 14311   004562  3234               	rrcf	(___fladd@b+2)^0,f,c
 14312   004564  3233               	rrcf	(___fladd@b+1)^0,f,c
 14313   004566  3232               	rrcf	___fladd@b^0,f,c
 14314   004568  2A40               	incf	___fladd@bexp^0,f,c
 14315   00456A                     l1224:
 14316   00456A  503F               	movf	___fladd@aexp^0,w,c
 14317   00456C  5C40               	subwf	___fladd@bexp^0,w,c
 14318   00456E  A0D8               	btfss	status,0,c
 14319   004570  EFBC  F022         	goto	u11361
 14320   004574  EFBE  F022         	goto	u11360
 14321   004578                     u11361:
 14322   004578  EF98  F022         	goto	l1225
 14323   00457C                     u11360:
 14324   00457C                     l1223:
 14325   00457C  BC3E               	btfsc	___fladd@signs^0,6,c
 14326   00457E  EFC3  F022         	goto	u11371
 14327   004582  EFC5  F022         	goto	u11370
 14328   004586                     u11371:
 14329   004586  EF05  F023         	goto	l11449
 14330   00458A                     u11370:
 14331   00458A  5040               	movf	___fladd@bexp^0,w,c
 14332   00458C  A4D8               	btfss	status,2,c
 14333   00458E  EFCB  F022         	goto	u11381
 14334   004592  EFCD  F022         	goto	u11380
 14335   004596                     u11381:
 14336   004596  EFD7  F022         	goto	l11431
 14337   00459A                     u11380:
 14338   00459A  0E00               	movlw	0
 14339   00459C  6E32               	movwf	?___fladd^0,c
 14340   00459E  0E00               	movlw	0
 14341   0045A0  6E33               	movwf	(?___fladd+1)^0,c
 14342   0045A2  0E00               	movlw	0
 14343   0045A4  6E34               	movwf	(?___fladd+2)^0,c
 14344   0045A6  0E00               	movlw	0
 14345   0045A8  6E35               	movwf	(?___fladd+3)^0,c
 14346   0045AA  EF26  F024         	goto	l1232
 14347   0045AE                     l11431:
 14348   0045AE  5036               	movf	___fladd@a^0,w,c
 14349   0045B0  2632               	addwf	___fladd@b^0,f,c
 14350   0045B2  5037               	movf	(___fladd@a+1)^0,w,c
 14351   0045B4  2233               	addwfc	(___fladd@b+1)^0,f,c
 14352   0045B6  5038               	movf	(___fladd@a+2)^0,w,c
 14353   0045B8  2234               	addwfc	(___fladd@b+2)^0,f,c
 14354   0045BA  5039               	movf	(___fladd@a+3)^0,w,c
 14355   0045BC  2235               	addwfc	(___fladd@b+3)^0,f,c
 14356   0045BE  A035               	btfss	(___fladd@b+3)^0,0,c
 14357   0045C0  EFE4  F022         	goto	u11391
 14358   0045C4  EFE6  F022         	goto	u11390
 14359   0045C8                     u11391:
 14360   0045C8  EF92  F023         	goto	l11485
 14361   0045CC                     u11390:
 14362   0045CC  A041               	btfss	___fladd@grs^0,0,c
 14363   0045CE  EFEB  F022         	goto	u11401
 14364   0045D2  EFED  F022         	goto	u11400
 14365   0045D6                     u11401:
 14366   0045D6  EFF3  F022         	goto	l11439
 14367   0045DA                     u11400:
 14368   0045DA  90D8               	bcf	status,0,c
 14369   0045DC  3041               	rrcf	___fladd@grs^0,w,c
 14370   0045DE  0901               	iorlw	1
 14371   0045E0  6E41               	movwf	___fladd@grs^0,c
 14372   0045E2  EFF5  F022         	goto	l11441
 14373   0045E6                     l11439:
 14374   0045E6  90D8               	bcf	status,0,c
 14375   0045E8  3241               	rrcf	___fladd@grs^0,f,c
 14376   0045EA                     l11441:
 14377   0045EA  A032               	btfss	___fladd@b^0,0,c
 14378   0045EC  EFFA  F022         	goto	u11411
 14379   0045F0  EFFC  F022         	goto	u11410
 14380   0045F4                     u11411:
 14381   0045F4  EFFD  F022         	goto	l11445
 14382   0045F8                     u11410:
 14383   0045F8  8E41               	bsf	___fladd@grs^0,7,c
 14384   0045FA                     l11445:
 14385   0045FA  3435               	rlcf	(___fladd@b+3)^0,w,c
 14386   0045FC  3235               	rrcf	(___fladd@b+3)^0,f,c
 14387   0045FE  3234               	rrcf	(___fladd@b+2)^0,f,c
 14388   004600  3233               	rrcf	(___fladd@b+1)^0,f,c
 14389   004602  3232               	rrcf	___fladd@b^0,f,c
 14390   004604  2A40               	incf	___fladd@bexp^0,f,c
 14391   004606  EF92  F023         	goto	l11485
 14392   00460A                     l11449:
 14393   00460A  5036               	movf	___fladd@a^0,w,c
 14394   00460C  5C32               	subwf	___fladd@b^0,w,c
 14395   00460E  5037               	movf	(___fladd@a+1)^0,w,c
 14396   004610  5833               	subwfb	(___fladd@b+1)^0,w,c
 14397   004612  5038               	movf	(___fladd@a+2)^0,w,c
 14398   004614  5834               	subwfb	(___fladd@b+2)^0,w,c
 14399   004616  5035               	movf	(___fladd@b+3)^0,w,c
 14400   004618  0A80               	xorlw	128
 14401   00461A  6E3A               	movwf	??___fladd^0,c
 14402   00461C  5039               	movf	(___fladd@a+3)^0,w,c
 14403   00461E  0A80               	xorlw	128
 14404   004620  583A               	subwfb	??___fladd^0,w,c
 14405   004622  B0D8               	btfsc	status,0,c
 14406   004624  EF16  F023         	goto	u11421
 14407   004628  EF18  F023         	goto	u11420
 14408   00462C                     u11421:
 14409   00462C  EF43  F023         	goto	l11459
 14410   004630                     u11420:
 14411   004630  5032               	movf	___fladd@b^0,w,c
 14412   004632  5C36               	subwf	___fladd@a^0,w,c
 14413   004634  6E3A               	movwf	??___fladd^0,c
 14414   004636  5033               	movf	(___fladd@b+1)^0,w,c
 14415   004638  5837               	subwfb	(___fladd@a+1)^0,w,c
 14416   00463A  6E3B               	movwf	(??___fladd+1)^0,c
 14417   00463C  5034               	movf	(___fladd@b+2)^0,w,c
 14418   00463E  5838               	subwfb	(___fladd@a+2)^0,w,c
 14419   004640  6E3C               	movwf	(??___fladd+2)^0,c
 14420   004642  5035               	movf	(___fladd@b+3)^0,w,c
 14421   004644  5839               	subwfb	(___fladd@a+3)^0,w,c
 14422   004646  6E3D               	movwf	(??___fladd+3)^0,c
 14423   004648  0EFF               	movlw	255
 14424   00464A  243A               	addwf	??___fladd^0,w,c
 14425   00464C  6E32               	movwf	___fladd@b^0,c
 14426   00464E  0EFF               	movlw	255
 14427   004650  203B               	addwfc	(??___fladd+1)^0,w,c
 14428   004652  6E33               	movwf	(___fladd@b+1)^0,c
 14429   004654  0EFF               	movlw	255
 14430   004656  203C               	addwfc	(??___fladd+2)^0,w,c
 14431   004658  6E34               	movwf	(___fladd@b+2)^0,c
 14432   00465A  0EFF               	movlw	255
 14433   00465C  203D               	addwfc	(??___fladd+3)^0,w,c
 14434   00465E  6E35               	movwf	(___fladd@b+3)^0,c
 14435   004660  0E80               	movlw	128
 14436   004662  1A3E               	xorwf	___fladd@signs^0,f,c
 14437   004664  6C41               	negf	___fladd@grs^0,c
 14438   004666  5041               	movf	___fladd@grs^0,w,c
 14439   004668  A4D8               	btfss	status,2,c
 14440   00466A  EF39  F023         	goto	u11431
 14441   00466E  EF3B  F023         	goto	u11430
 14442   004672                     u11431:
 14443   004672  EF4B  F023         	goto	l1240
 14444   004676                     u11430:
 14445   004676  0E01               	movlw	1
 14446   004678  2632               	addwf	___fladd@b^0,f,c
 14447   00467A  0E00               	movlw	0
 14448   00467C  2233               	addwfc	(___fladd@b+1)^0,f,c
 14449   00467E  2234               	addwfc	(___fladd@b+2)^0,f,c
 14450   004680  2235               	addwfc	(___fladd@b+3)^0,f,c
 14451   004682  EF4B  F023         	goto	l1240
 14452   004686                     l11459:
 14453   004686  5036               	movf	___fladd@a^0,w,c
 14454   004688  5E32               	subwf	___fladd@b^0,f,c
 14455   00468A  5037               	movf	(___fladd@a+1)^0,w,c
 14456   00468C  5A33               	subwfb	(___fladd@b+1)^0,f,c
 14457   00468E  5038               	movf	(___fladd@a+2)^0,w,c
 14458   004690  5A34               	subwfb	(___fladd@b+2)^0,f,c
 14459   004692  5039               	movf	(___fladd@a+3)^0,w,c
 14460   004694  5A35               	subwfb	(___fladd@b+3)^0,f,c
 14461   004696                     l1240:
 14462   004696  5032               	movf	___fladd@b^0,w,c
 14463   004698  1033               	iorwf	(___fladd@b+1)^0,w,c
 14464   00469A  1034               	iorwf	(___fladd@b+2)^0,w,c
 14465   00469C  1035               	iorwf	(___fladd@b+3)^0,w,c
 14466   00469E  A4D8               	btfss	status,2,c
 14467   0046A0  EF54  F023         	goto	u11441
 14468   0046A4  EF56  F023         	goto	u11440
 14469   0046A8                     u11441:
 14470   0046A8  EF8B  F023         	goto	l11483
 14471   0046AC                     u11440:
 14472   0046AC  5041               	movf	___fladd@grs^0,w,c
 14473   0046AE  A4D8               	btfss	status,2,c
 14474   0046B0  EF5C  F023         	goto	u11451
 14475   0046B4  EF5E  F023         	goto	u11450
 14476   0046B8                     u11451:
 14477   0046B8  EF8B  F023         	goto	l11483
 14478   0046BC                     u11450:
 14479   0046BC  0E00               	movlw	0
 14480   0046BE  6E32               	movwf	?___fladd^0,c
 14481   0046C0  0E00               	movlw	0
 14482   0046C2  6E33               	movwf	(?___fladd+1)^0,c
 14483   0046C4  0E00               	movlw	0
 14484   0046C6  6E34               	movwf	(?___fladd+2)^0,c
 14485   0046C8  0E00               	movlw	0
 14486   0046CA  6E35               	movwf	(?___fladd+3)^0,c
 14487   0046CC  EF26  F024         	goto	l1232
 14488   0046D0                     l11467:
 14489   0046D0  90D8               	bcf	status,0,c
 14490   0046D2  3632               	rlcf	___fladd@b^0,f,c
 14491   0046D4  3633               	rlcf	(___fladd@b+1)^0,f,c
 14492   0046D6  3634               	rlcf	(___fladd@b+2)^0,f,c
 14493   0046D8  3635               	rlcf	(___fladd@b+3)^0,f,c
 14494   0046DA  AE41               	btfss	___fladd@grs^0,7,c
 14495   0046DC  EF72  F023         	goto	u11461
 14496   0046E0  EF74  F023         	goto	u11460
 14497   0046E4                     u11461:
 14498   0046E4  EF75  F023         	goto	l11473
 14499   0046E8                     u11460:
 14500   0046E8  8032               	bsf	___fladd@b^0,0,c
 14501   0046EA                     l11473:
 14502   0046EA  A041               	btfss	___fladd@grs^0,0,c
 14503   0046EC  EF7A  F023         	goto	u11471
 14504   0046F0  EF7C  F023         	goto	u11470
 14505   0046F4                     u11471:
 14506   0046F4  EF80  F023         	goto	l11477
 14507   0046F8                     u11470:
 14508   0046F8  80D8               	bsf	status,0,c
 14509   0046FA  3641               	rlcf	___fladd@grs^0,f,c
 14510   0046FC  EF82  F023         	goto	l11479
 14511   004700                     l11477:
 14512   004700  90D8               	bcf	status,0,c
 14513   004702  3641               	rlcf	___fladd@grs^0,f,c
 14514   004704                     l11479:
 14515   004704  5040               	movf	___fladd@bexp^0,w,c
 14516   004706  B4D8               	btfsc	status,2,c
 14517   004708  EF88  F023         	goto	u11481
 14518   00470C  EF8A  F023         	goto	u11480
 14519   004710                     u11481:
 14520   004710  EF8B  F023         	goto	l11483
 14521   004714                     u11480:
 14522   004714  0640               	decf	___fladd@bexp^0,f,c
 14523   004716                     l11483:
 14524   004716  AE34               	btfss	(___fladd@b+2)^0,7,c
 14525   004718  EF90  F023         	goto	u11491
 14526   00471C  EF92  F023         	goto	u11490
 14527   004720                     u11491:
 14528   004720  EF68  F023         	goto	l11467
 14529   004724                     u11490:
 14530   004724                     l11485:
 14531   004724  0E00               	movlw	0
 14532   004726  6E3F               	movwf	___fladd@aexp^0,c
 14533   004728  AE41               	btfss	___fladd@grs^0,7,c
 14534   00472A  EF99  F023         	goto	u11501
 14535   00472E  EF9B  F023         	goto	u11500
 14536   004732                     u11501:
 14537   004732  EFB3  F023         	goto	l1249
 14538   004736                     u11500:
 14539   004736  C041  F03A         	movff	___fladd@grs,??___fladd
 14540   00473A  0E7F               	movlw	127
 14541   00473C  163A               	andwf	??___fladd^0,f,c
 14542   00473E  B4D8               	btfsc	status,2,c
 14543   004740  EFA4  F023         	goto	u11511
 14544   004744  EFA6  F023         	goto	u11510
 14545   004748                     u11511:
 14546   004748  EFAA  F023         	goto	l1250
 14547   00474C                     u11510:
 14548   00474C                     l11491:
 14549   00474C  0E01               	movlw	1
 14550   00474E  6E3F               	movwf	___fladd@aexp^0,c
 14551   004750  EFB3  F023         	goto	l1249
 14552   004754                     l1250:
 14553   004754  A032               	btfss	___fladd@b^0,0,c
 14554   004756  EFAF  F023         	goto	u11521
 14555   00475A  EFB1  F023         	goto	u11520
 14556   00475E                     u11521:
 14557   00475E  EFB3  F023         	goto	l1249
 14558   004762                     u11520:
 14559   004762  EFA6  F023         	goto	l11491
 14560   004766                     l1249:
 14561   004766  503F               	movf	___fladd@aexp^0,w,c
 14562   004768  B4D8               	btfsc	status,2,c
 14563   00476A  EFB9  F023         	goto	u11531
 14564   00476E  EFBB  F023         	goto	u11530
 14565   004772                     u11531:
 14566   004772  EFE6  F023         	goto	l11503
 14567   004776                     u11530:
 14568   004776  0E01               	movlw	1
 14569   004778  2632               	addwf	___fladd@b^0,f,c
 14570   00477A  0E00               	movlw	0
 14571   00477C  2233               	addwfc	(___fladd@b+1)^0,f,c
 14572   00477E  2234               	addwfc	(___fladd@b+2)^0,f,c
 14573   004780  2235               	addwfc	(___fladd@b+3)^0,f,c
 14574   004782  A035               	btfss	(___fladd@b+3)^0,0,c
 14575   004784  EFC6  F023         	goto	u11541
 14576   004788  EFC8  F023         	goto	u11540
 14577   00478C                     u11541:
 14578   00478C  EFE6  F023         	goto	l11503
 14579   004790                     u11540:
 14580   004790  C032  F03A         	movff	___fladd@b,??___fladd
 14581   004794  C033  F03B         	movff	___fladd@b+1,??___fladd+1
 14582   004798  C034  F03C         	movff	___fladd@b+2,??___fladd+2
 14583   00479C  C035  F03D         	movff	___fladd@b+3,??___fladd+3
 14584   0047A0  343D               	rlcf	(??___fladd+3)^0,w,c
 14585   0047A2  323D               	rrcf	(??___fladd+3)^0,f,c
 14586   0047A4  323C               	rrcf	(??___fladd+2)^0,f,c
 14587   0047A6  323B               	rrcf	(??___fladd+1)^0,f,c
 14588   0047A8  323A               	rrcf	??___fladd^0,f,c
 14589   0047AA  C03A  F032         	movff	??___fladd,___fladd@b
 14590   0047AE  C03B  F033         	movff	??___fladd+1,___fladd@b+1
 14591   0047B2  C03C  F034         	movff	??___fladd+2,___fladd@b+2
 14592   0047B6  C03D  F035         	movff	??___fladd+3,___fladd@b+3
 14593   0047BA  2840               	incf	___fladd@bexp^0,w,c
 14594   0047BC  B4D8               	btfsc	status,2,c
 14595   0047BE  EFE3  F023         	goto	u11551
 14596   0047C2  EFE5  F023         	goto	u11550
 14597   0047C6                     u11551:
 14598   0047C6  EFE6  F023         	goto	l11503
 14599   0047CA                     u11550:
 14600   0047CA  2A40               	incf	___fladd@bexp^0,f,c
 14601   0047CC                     l11503:
 14602   0047CC  2840               	incf	___fladd@bexp^0,w,c
 14603   0047CE  B4D8               	btfsc	status,2,c
 14604   0047D0  EFEC  F023         	goto	u11561
 14605   0047D4  EFEE  F023         	goto	u11560
 14606   0047D8                     u11561:
 14607   0047D8  EFF6  F023         	goto	l11507
 14608   0047DC                     u11560:
 14609   0047DC  5040               	movf	___fladd@bexp^0,w,c
 14610   0047DE  A4D8               	btfss	status,2,c
 14611   0047E0  EFF4  F023         	goto	u11571
 14612   0047E4  EFF6  F023         	goto	u11570
 14613   0047E8                     u11571:
 14614   0047E8  EF08  F024         	goto	l11511
 14615   0047EC                     u11570:
 14616   0047EC                     l11507:
 14617   0047EC  0E00               	movlw	0
 14618   0047EE  6E32               	movwf	___fladd@b^0,c
 14619   0047F0  0E00               	movlw	0
 14620   0047F2  6E33               	movwf	(___fladd@b+1)^0,c
 14621   0047F4  0E00               	movlw	0
 14622   0047F6  6E34               	movwf	(___fladd@b+2)^0,c
 14623   0047F8  0E00               	movlw	0
 14624   0047FA  6E35               	movwf	(___fladd@b+3)^0,c
 14625   0047FC  5040               	movf	___fladd@bexp^0,w,c
 14626   0047FE  A4D8               	btfss	status,2,c
 14627   004800  EF04  F024         	goto	u11581
 14628   004804  EF06  F024         	goto	u11580
 14629   004808                     u11581:
 14630   004808  EF08  F024         	goto	l11511
 14631   00480C                     u11580:
 14632   00480C  0E00               	movlw	0
 14633   00480E  6E3E               	movwf	___fladd@signs^0,c
 14634   004810                     l11511:
 14635   004810  A040               	btfss	___fladd@bexp^0,0,c
 14636   004812  EF0D  F024         	goto	u11591
 14637   004816  EF0F  F024         	goto	u11590
 14638   00481A                     u11591:
 14639   00481A  EF12  F024         	goto	l11515
 14640   00481E                     u11590:
 14641   00481E  8E34               	bsf	(___fladd@b+2)^0,7,c
 14642   004820  EF13  F024         	goto	l11517
 14643   004824                     l11515:
 14644   004824  9E34               	bcf	(___fladd@b+2)^0,7,c
 14645   004826                     l11517:
 14646   004826  90D8               	bcf	status,0,c
 14647   004828  3040               	rrcf	___fladd@bexp^0,w,c
 14648   00482A  6E35               	movwf	(___fladd@b+3)^0,c
 14649   00482C  AE3E               	btfss	___fladd@signs^0,7,c
 14650   00482E  EF1B  F024         	goto	u11601
 14651   004832  EF1D  F024         	goto	u11600
 14652   004836                     u11601:
 14653   004836  EF1E  F024         	goto	l11523
 14654   00483A                     u11600:
 14655   00483A  8E35               	bsf	(___fladd@b+3)^0,7,c
 14656   00483C                     l11523:
 14657   00483C  C032  F032         	movff	___fladd@b,?___fladd
 14658   004840  C033  F033         	movff	___fladd@b+1,?___fladd+1
 14659   004844  C034  F034         	movff	___fladd@b+2,?___fladd+2
 14660   004848  C035  F035         	movff	___fladd@b+3,?___fladd+3
 14661   00484C                     l1232:
 14662   00484C  0012               	return		;funcret
 14663   00484E                     __end_of___fladd:
 14664                           	callstack 0
 14665                           
 14666 ;; *************** function ___flneg *****************
 14667 ;; Defined at:
 14668 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 14669 ;; Parameters:    Size  Location     Type
 14670 ;;  f1              4    0[COMRAM] unsigned char 
 14671 ;; Auto vars:     Size  Location     Type
 14672 ;;		None
 14673 ;; Return value:  Size  Location     Type
 14674 ;;                  4    0[COMRAM] unsigned char 
 14675 ;; Registers used:
 14676 ;;		wreg, status,2, status,0
 14677 ;; Tracked objects:
 14678 ;;		On entry : 0/0
 14679 ;;		On exit  : 0/0
 14680 ;;		Unchanged: 0/0
 14681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14683 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14684 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14685 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14686 ;;Total ram usage:        4 bytes
 14687 ;; Hardware stack levels used: 1
 14688 ;; This function calls:
 14689 ;;		Nothing
 14690 ;; This function is called by:
 14691 ;;		_efgtoa
 14692 ;;		_powf
 14693 ;; This function uses a non-reentrant model
 14694 ;;
 14695                           
 14696                           	psect	text46
 14697   0079C0                     __ptext46:
 14698                           	callstack 0
 14699   0079C0                     ___flneg:
 14700                           	callstack 24
 14701   0079C0  5001               	movf	___flneg@f1^0,w,c
 14702   0079C2  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14703   0079C4  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14704   0079C6  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14705   0079C8  B4D8               	btfsc	status,2,c
 14706   0079CA  EFE9  F03C         	goto	u12081
 14707   0079CE  EFEB  F03C         	goto	u12080
 14708   0079D2                     u12081:
 14709   0079D2  EFF3  F03C         	goto	l11827
 14710   0079D6                     u12080:
 14711   0079D6  0E00               	movlw	0
 14712   0079D8  1A01               	xorwf	___flneg@f1^0,f,c
 14713   0079DA  0E00               	movlw	0
 14714   0079DC  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14715   0079DE  0E00               	movlw	0
 14716   0079E0  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14717   0079E2  0E80               	movlw	128
 14718   0079E4  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14719   0079E6                     l11827:
 14720   0079E6  C001  F001         	movff	___flneg@f1,?___flneg
 14721   0079EA  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14722   0079EE  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14723   0079F2  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14724   0079F6  0012               	return		;funcret
 14725   0079F8                     __end_of___flneg:
 14726                           	callstack 0
 14727                           
 14728 ;; *************** function ___flge *****************
 14729 ;; Defined at:
 14730 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 14731 ;; Parameters:    Size  Location     Type
 14732 ;;  ff1             4   98[COMRAM] unsigned char 
 14733 ;;  ff2             4  102[COMRAM] unsigned char 
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;		None
 14736 ;; Return value:  Size  Location     Type
 14737 ;;		None               void
 14738 ;; Registers used:
 14739 ;;		wreg, status,2, status,0
 14740 ;; Tracked objects:
 14741 ;;		On entry : 0/0
 14742 ;;		On exit  : 0/0
 14743 ;;		Unchanged: 0/0
 14744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14745 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14746 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14747 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14748 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14749 ;;Total ram usage:       12 bytes
 14750 ;; Hardware stack levels used: 1
 14751 ;; This function calls:
 14752 ;;		Nothing
 14753 ;; This function is called by:
 14754 ;;		_send_the_result_to_LCD
 14755 ;;		_efgtoa
 14756 ;;		_powf
 14757 ;; This function uses a non-reentrant model
 14758 ;;
 14759                           
 14760                           	psect	text47
 14761   0068CC                     __ptext47:
 14762                           	callstack 0
 14763   0068CC                     ___flge:
 14764                           	callstack 24
 14765   0068CC  0E00               	movlw	0
 14766   0068CE  1463               	andwf	___flge@ff1^0,w,c
 14767   0068D0  6E6B               	movwf	??___flge^0,c
 14768   0068D2  0E00               	movlw	0
 14769   0068D4  1464               	andwf	(___flge@ff1+1)^0,w,c
 14770   0068D6  6E6C               	movwf	(??___flge+1)^0,c
 14771   0068D8  0E80               	movlw	128
 14772   0068DA  1465               	andwf	(___flge@ff1+2)^0,w,c
 14773   0068DC  6E6D               	movwf	(??___flge+2)^0,c
 14774   0068DE  0E7F               	movlw	127
 14775   0068E0  1466               	andwf	(___flge@ff1+3)^0,w,c
 14776   0068E2  6E6E               	movwf	(??___flge+3)^0,c
 14777   0068E4  506B               	movf	??___flge^0,w,c
 14778   0068E6  106C               	iorwf	(??___flge+1)^0,w,c
 14779   0068E8  106D               	iorwf	(??___flge+2)^0,w,c
 14780   0068EA  106E               	iorwf	(??___flge+3)^0,w,c
 14781   0068EC  A4D8               	btfss	status,2,c
 14782   0068EE  EF7B  F034         	goto	u12031
 14783   0068F2  EF7D  F034         	goto	u12030
 14784   0068F6                     u12031:
 14785   0068F6  EF85  F034         	goto	l11805
 14786   0068FA                     u12030:
 14787   0068FA  0E00               	movlw	0
 14788   0068FC  6E63               	movwf	___flge@ff1^0,c
 14789   0068FE  0E00               	movlw	0
 14790   006900  6E64               	movwf	(___flge@ff1+1)^0,c
 14791   006902  0E00               	movlw	0
 14792   006904  6E65               	movwf	(___flge@ff1+2)^0,c
 14793   006906  0E00               	movlw	0
 14794   006908  6E66               	movwf	(___flge@ff1+3)^0,c
 14795   00690A                     l11805:
 14796   00690A  0E00               	movlw	0
 14797   00690C  1467               	andwf	___flge@ff2^0,w,c
 14798   00690E  6E6B               	movwf	??___flge^0,c
 14799   006910  0E00               	movlw	0
 14800   006912  1468               	andwf	(___flge@ff2+1)^0,w,c
 14801   006914  6E6C               	movwf	(??___flge+1)^0,c
 14802   006916  0E80               	movlw	128
 14803   006918  1469               	andwf	(___flge@ff2+2)^0,w,c
 14804   00691A  6E6D               	movwf	(??___flge+2)^0,c
 14805   00691C  0E7F               	movlw	127
 14806   00691E  146A               	andwf	(___flge@ff2+3)^0,w,c
 14807   006920  6E6E               	movwf	(??___flge+3)^0,c
 14808   006922  506B               	movf	??___flge^0,w,c
 14809   006924  106C               	iorwf	(??___flge+1)^0,w,c
 14810   006926  106D               	iorwf	(??___flge+2)^0,w,c
 14811   006928  106E               	iorwf	(??___flge+3)^0,w,c
 14812   00692A  A4D8               	btfss	status,2,c
 14813   00692C  EF9A  F034         	goto	u12041
 14814   006930  EF9C  F034         	goto	u12040
 14815   006934                     u12041:
 14816   006934  EFA4  F034         	goto	l11809
 14817   006938                     u12040:
 14818   006938  0E00               	movlw	0
 14819   00693A  6E67               	movwf	___flge@ff2^0,c
 14820   00693C  0E00               	movlw	0
 14821   00693E  6E68               	movwf	(___flge@ff2+1)^0,c
 14822   006940  0E00               	movlw	0
 14823   006942  6E69               	movwf	(___flge@ff2+2)^0,c
 14824   006944  0E00               	movlw	0
 14825   006946  6E6A               	movwf	(___flge@ff2+3)^0,c
 14826   006948                     l11809:
 14827   006948  AE66               	btfss	(___flge@ff1+3)^0,7,c
 14828   00694A  EFA9  F034         	goto	u12051
 14829   00694E  EFAB  F034         	goto	u12050
 14830   006952                     u12051:
 14831   006952  EFB4  F034         	goto	l11813
 14832   006956                     u12050:
 14833   006956  6C63               	negf	___flge@ff1^0,c
 14834   006958  1E64               	comf	(___flge@ff1+1)^0,f,c
 14835   00695A  B0D8               	btfsc	status,0,c
 14836   00695C  2A64               	incf	(___flge@ff1+1)^0,f,c
 14837   00695E  1E65               	comf	(___flge@ff1+2)^0,f,c
 14838   006960  B0D8               	btfsc	status,0,c
 14839   006962  2A65               	incf	(___flge@ff1+2)^0,f,c
 14840   006964  0E80               	movlw	128
 14841   006966  5666               	subfwb	(___flge@ff1+3)^0,f,c
 14842   006968                     l11813:
 14843   006968  AE6A               	btfss	(___flge@ff2+3)^0,7,c
 14844   00696A  EFB9  F034         	goto	u12061
 14845   00696E  EFBB  F034         	goto	u12060
 14846   006972                     u12061:
 14847   006972  EFC4  F034         	goto	l960
 14848   006976                     u12060:
 14849   006976  6C67               	negf	___flge@ff2^0,c
 14850   006978  1E68               	comf	(___flge@ff2+1)^0,f,c
 14851   00697A  B0D8               	btfsc	status,0,c
 14852   00697C  2A68               	incf	(___flge@ff2+1)^0,f,c
 14853   00697E  1E69               	comf	(___flge@ff2+2)^0,f,c
 14854   006980  B0D8               	btfsc	status,0,c
 14855   006982  2A69               	incf	(___flge@ff2+2)^0,f,c
 14856   006984  0E80               	movlw	128
 14857   006986  566A               	subfwb	(___flge@ff2+3)^0,f,c
 14858   006988                     l960:
 14859   006988  0E00               	movlw	0
 14860   00698A  1A63               	xorwf	___flge@ff1^0,f,c
 14861   00698C  0E00               	movlw	0
 14862   00698E  1A64               	xorwf	(___flge@ff1+1)^0,f,c
 14863   006990  0E00               	movlw	0
 14864   006992  1A65               	xorwf	(___flge@ff1+2)^0,f,c
 14865   006994  0E80               	movlw	128
 14866   006996  1A66               	xorwf	(___flge@ff1+3)^0,f,c
 14867   006998  0E00               	movlw	0
 14868   00699A  1A67               	xorwf	___flge@ff2^0,f,c
 14869   00699C  0E00               	movlw	0
 14870   00699E  1A68               	xorwf	(___flge@ff2+1)^0,f,c
 14871   0069A0  0E00               	movlw	0
 14872   0069A2  1A69               	xorwf	(___flge@ff2+2)^0,f,c
 14873   0069A4  0E80               	movlw	128
 14874   0069A6  1A6A               	xorwf	(___flge@ff2+3)^0,f,c
 14875   0069A8  5067               	movf	___flge@ff2^0,w,c
 14876   0069AA  5C63               	subwf	___flge@ff1^0,w,c
 14877   0069AC  5068               	movf	(___flge@ff2+1)^0,w,c
 14878   0069AE  5864               	subwfb	(___flge@ff1+1)^0,w,c
 14879   0069B0  5069               	movf	(___flge@ff2+2)^0,w,c
 14880   0069B2  5865               	subwfb	(___flge@ff1+2)^0,w,c
 14881   0069B4  506A               	movf	(___flge@ff2+3)^0,w,c
 14882   0069B6  5866               	subwfb	(___flge@ff1+3)^0,w,c
 14883   0069B8  B0D8               	btfsc	status,0,c
 14884   0069BA  EFE1  F034         	goto	u12071
 14885   0069BE  EFE3  F034         	goto	u12070
 14886   0069C2                     u12071:
 14887   0069C2  EFE6  F034         	goto	l11819
 14888   0069C6                     u12070:
 14889   0069C6  90D8               	bcf	status,0,c
 14890   0069C8  EFE7  F034         	goto	l965
 14891   0069CC                     l11819:
 14892   0069CC  80D8               	bsf	status,0,c
 14893   0069CE                     l965:
 14894   0069CE  0012               	return		;funcret
 14895   0069D0                     __end_of___flge:
 14896                           	callstack 0
 14897                           
 14898 ;; *************** function _Division_operation *****************
 14899 ;; Defined at:
 14900 ;;		line 195 in file "calculator_function/calculator_functions.c"
 14901 ;; Parameters:    Size  Location     Type
 14902 ;;  num1_val        4   90[COMRAM] float 
 14903 ;;  num2_val        4   94[COMRAM] float 
 14904 ;;  result          1   98[COMRAM] PTR float 
 14905 ;;		 -> total_result(4), result(4), 
 14906 ;; Auto vars:     Size  Location     Type
 14907 ;;		None
 14908 ;; Return value:  Size  Location     Type
 14909 ;;                  1    wreg      void 
 14910 ;; Registers used:
 14911 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14912 ;; Tracked objects:
 14913 ;;		On entry : 0/0
 14914 ;;		On exit  : 0/0
 14915 ;;		Unchanged: 0/0
 14916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14917 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14918 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14919 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14920 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14921 ;;Total ram usage:        9 bytes
 14922 ;; Hardware stack levels used: 1
 14923 ;; Hardware stack levels required when called: 1
 14924 ;; This function calls:
 14925 ;;		___fldiv
 14926 ;; This function is called by:
 14927 ;;		_main
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           	psect	text48
 14932   0078D8                     __ptext48:
 14933                           	callstack 0
 14934   0078D8                     _Division_operation:
 14935                           	callstack 29
 14936   0078D8                     
 14937                           ;calculator_function/calculator_functions.c: 196: *result = num1_val/num2_val;
 14938   0078D8  C05B  F042         	movff	Division_operation@num1_val,___fldiv@b
 14939   0078DC  C05C  F043         	movff	Division_operation@num1_val+1,___fldiv@b+1
 14940   0078E0  C05D  F044         	movff	Division_operation@num1_val+2,___fldiv@b+2
 14941   0078E4  C05E  F045         	movff	Division_operation@num1_val+3,___fldiv@b+3
 14942   0078E8  C05F  F046         	movff	Division_operation@num2_val,___fldiv@a
 14943   0078EC  C060  F047         	movff	Division_operation@num2_val+1,___fldiv@a+1
 14944   0078F0  C061  F048         	movff	Division_operation@num2_val+2,___fldiv@a+2
 14945   0078F4  C062  F049         	movff	Division_operation@num2_val+3,___fldiv@a+3
 14946   0078F8  EC2B  F028         	call	___fldiv	;wreg free
 14947   0078FC  5063               	movf	Division_operation@result^0,w,c
 14948   0078FE  6ED9               	movwf	fsr2l,c
 14949   007900  6ADA               	clrf	fsr2h,c
 14950   007902  C042  FFDE         	movff	?___fldiv,postinc2
 14951   007906  C043  FFDE         	movff	?___fldiv+1,postinc2
 14952   00790A  C044  FFDE         	movff	?___fldiv+2,postinc2
 14953   00790E  C045  FFDE         	movff	?___fldiv+3,postinc2
 14954   007912  0012               	return		;funcret
 14955   007914                     __end_of_Division_operation:
 14956                           	callstack 0
 14957                           
 14958 ;; *************** function ___fldiv *****************
 14959 ;; Defined at:
 14960 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 14961 ;; Parameters:    Size  Location     Type
 14962 ;;  b               4   65[COMRAM] void 
 14963 ;;  a               4   69[COMRAM] void 
 14964 ;; Auto vars:     Size  Location     Type
 14965 ;;  grs             4   84[COMRAM] unsigned long 
 14966 ;;  rem             4   77[COMRAM] unsigned long 
 14967 ;;  new_exp         2   82[COMRAM] short 
 14968 ;;  aexp            1   89[COMRAM] unsigned char 
 14969 ;;  bexp            1   88[COMRAM] unsigned char 
 14970 ;;  sign            1   81[COMRAM] unsigned char 
 14971 ;; Return value:  Size  Location     Type
 14972 ;;                  4   65[COMRAM] unsigned char 
 14973 ;; Registers used:
 14974 ;;		wreg, status,2, status,0
 14975 ;; Tracked objects:
 14976 ;;		On entry : 0/0
 14977 ;;		On exit  : 0/0
 14978 ;;		Unchanged: 0/0
 14979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14980 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14981 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14982 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14983 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14984 ;;Total ram usage:       25 bytes
 14985 ;; Hardware stack levels used: 1
 14986 ;; This function calls:
 14987 ;;		Nothing
 14988 ;; This function is called by:
 14989 ;;		_Division_operation
 14990 ;;		_efgtoa
 14991 ;;		_powf
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text49
 14996   005056                     __ptext49:
 14997                           	callstack 0
 14998   005056                     ___fldiv:
 14999                           	callstack 24
 15000   005056  5045               	movf	(___fldiv@b+3)^0,w,c
 15001   005058  0B80               	andlw	128
 15002   00505A  6E52               	movwf	___fldiv@sign^0,c
 15003   00505C  5045               	movf	(___fldiv@b+3)^0,w,c
 15004   00505E  2445               	addwf	(___fldiv@b+3)^0,w,c
 15005   005060  6E59               	movwf	___fldiv@bexp^0,c
 15006   005062  AE44               	btfss	(___fldiv@b+2)^0,7,c
 15007   005064  EF36  F028         	goto	u11611
 15008   005068  EF38  F028         	goto	u11610
 15009   00506C                     u11611:
 15010   00506C  EF39  F028         	goto	l11533
 15011   005070                     u11610:
 15012   005070  8059               	bsf	___fldiv@bexp^0,0,c
 15013   005072                     l11533:
 15014   005072  5059               	movf	___fldiv@bexp^0,w,c
 15015   005074  B4D8               	btfsc	status,2,c
 15016   005076  EF3F  F028         	goto	u11621
 15017   00507A  EF41  F028         	goto	u11620
 15018   00507E                     u11621:
 15019   00507E  EF56  F028         	goto	l11543
 15020   005082                     u11620:
 15021   005082  2859               	incf	___fldiv@bexp^0,w,c
 15022   005084  A4D8               	btfss	status,2,c
 15023   005086  EF47  F028         	goto	u11631
 15024   00508A  EF49  F028         	goto	u11630
 15025   00508E                     u11631:
 15026   00508E  EF51  F028         	goto	l11539
 15027   005092                     u11630:
 15028   005092  0E00               	movlw	0
 15029   005094  6E42               	movwf	___fldiv@b^0,c
 15030   005096  0E00               	movlw	0
 15031   005098  6E43               	movwf	(___fldiv@b+1)^0,c
 15032   00509A  0E00               	movlw	0
 15033   00509C  6E44               	movwf	(___fldiv@b+2)^0,c
 15034   00509E  0E00               	movlw	0
 15035   0050A0  6E45               	movwf	(___fldiv@b+3)^0,c
 15036   0050A2                     l11539:
 15037   0050A2  8E44               	bsf	(___fldiv@b+2)^0,7,c
 15038   0050A4  0E00               	movlw	0
 15039   0050A6  6E45               	movwf	(___fldiv@b+3)^0,c
 15040   0050A8  EF5E  F028         	goto	l11545
 15041   0050AC                     l11543:
 15042   0050AC  0E00               	movlw	0
 15043   0050AE  6E42               	movwf	___fldiv@b^0,c
 15044   0050B0  0E00               	movlw	0
 15045   0050B2  6E43               	movwf	(___fldiv@b+1)^0,c
 15046   0050B4  0E00               	movlw	0
 15047   0050B6  6E44               	movwf	(___fldiv@b+2)^0,c
 15048   0050B8  0E00               	movlw	0
 15049   0050BA  6E45               	movwf	(___fldiv@b+3)^0,c
 15050   0050BC                     l11545:
 15051   0050BC  5049               	movf	(___fldiv@a+3)^0,w,c
 15052   0050BE  0B80               	andlw	128
 15053   0050C0  1A52               	xorwf	___fldiv@sign^0,f,c
 15054   0050C2  5049               	movf	(___fldiv@a+3)^0,w,c
 15055   0050C4  2449               	addwf	(___fldiv@a+3)^0,w,c
 15056   0050C6  6E5A               	movwf	___fldiv@aexp^0,c
 15057   0050C8  AE48               	btfss	(___fldiv@a+2)^0,7,c
 15058   0050CA  EF69  F028         	goto	u11641
 15059   0050CE  EF6B  F028         	goto	u11640
 15060   0050D2                     u11641:
 15061   0050D2  EF6C  F028         	goto	l11553
 15062   0050D6                     u11640:
 15063   0050D6  805A               	bsf	___fldiv@aexp^0,0,c
 15064   0050D8                     l11553:
 15065   0050D8  505A               	movf	___fldiv@aexp^0,w,c
 15066   0050DA  B4D8               	btfsc	status,2,c
 15067   0050DC  EF72  F028         	goto	u11651
 15068   0050E0  EF74  F028         	goto	u11650
 15069   0050E4                     u11651:
 15070   0050E4  EF89  F028         	goto	l11563
 15071   0050E8                     u11650:
 15072   0050E8  285A               	incf	___fldiv@aexp^0,w,c
 15073   0050EA  A4D8               	btfss	status,2,c
 15074   0050EC  EF7A  F028         	goto	u11661
 15075   0050F0  EF7C  F028         	goto	u11660
 15076   0050F4                     u11661:
 15077   0050F4  EF84  F028         	goto	l11559
 15078   0050F8                     u11660:
 15079   0050F8  0E00               	movlw	0
 15080   0050FA  6E46               	movwf	___fldiv@a^0,c
 15081   0050FC  0E00               	movlw	0
 15082   0050FE  6E47               	movwf	(___fldiv@a+1)^0,c
 15083   005100  0E00               	movlw	0
 15084   005102  6E48               	movwf	(___fldiv@a+2)^0,c
 15085   005104  0E00               	movlw	0
 15086   005106  6E49               	movwf	(___fldiv@a+3)^0,c
 15087   005108                     l11559:
 15088   005108  8E48               	bsf	(___fldiv@a+2)^0,7,c
 15089   00510A  0E00               	movlw	0
 15090   00510C  6E49               	movwf	(___fldiv@a+3)^0,c
 15091   00510E  EF91  F028         	goto	l11565
 15092   005112                     l11563:
 15093   005112  0E00               	movlw	0
 15094   005114  6E46               	movwf	___fldiv@a^0,c
 15095   005116  0E00               	movlw	0
 15096   005118  6E47               	movwf	(___fldiv@a+1)^0,c
 15097   00511A  0E00               	movlw	0
 15098   00511C  6E48               	movwf	(___fldiv@a+2)^0,c
 15099   00511E  0E00               	movlw	0
 15100   005120  6E49               	movwf	(___fldiv@a+3)^0,c
 15101   005122                     l11565:
 15102   005122  5046               	movf	___fldiv@a^0,w,c
 15103   005124  1047               	iorwf	(___fldiv@a+1)^0,w,c
 15104   005126  1048               	iorwf	(___fldiv@a+2)^0,w,c
 15105   005128  1049               	iorwf	(___fldiv@a+3)^0,w,c
 15106   00512A  A4D8               	btfss	status,2,c
 15107   00512C  EF9A  F028         	goto	u11671
 15108   005130  EF9C  F028         	goto	u11670
 15109   005134                     u11671:
 15110   005134  EFB4  F028         	goto	l11577
 15111   005138                     u11670:
 15112   005138  0E00               	movlw	0
 15113   00513A  6E42               	movwf	___fldiv@b^0,c
 15114   00513C  0E00               	movlw	0
 15115   00513E  6E43               	movwf	(___fldiv@b+1)^0,c
 15116   005140  0E00               	movlw	0
 15117   005142  6E44               	movwf	(___fldiv@b+2)^0,c
 15118   005144  0E00               	movlw	0
 15119   005146  6E45               	movwf	(___fldiv@b+3)^0,c
 15120   005148  0E80               	movlw	128
 15121   00514A  1244               	iorwf	(___fldiv@b+2)^0,f,c
 15122   00514C  0E7F               	movlw	127
 15123   00514E  1245               	iorwf	(___fldiv@b+3)^0,f,c
 15124   005150                     l11571:
 15125   005150  5052               	movf	___fldiv@sign^0,w,c
 15126   005152  1245               	iorwf	(___fldiv@b+3)^0,f,c
 15127   005154  C042  F042         	movff	___fldiv@b,?___fldiv
 15128   005158  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
 15129   00515C  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
 15130   005160  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
 15131   005164  EFF7  F029         	goto	l1277
 15132   005168                     l11577:
 15133   005168  5059               	movf	___fldiv@bexp^0,w,c
 15134   00516A  A4D8               	btfss	status,2,c
 15135   00516C  EFBA  F028         	goto	u11681
 15136   005170  EFBC  F028         	goto	u11680
 15137   005174                     u11681:
 15138   005174  EFC6  F028         	goto	l11585
 15139   005178                     u11680:
 15140   005178  0E00               	movlw	0
 15141   00517A  6E42               	movwf	?___fldiv^0,c
 15142   00517C  0E00               	movlw	0
 15143   00517E  6E43               	movwf	(?___fldiv+1)^0,c
 15144   005180  0E00               	movlw	0
 15145   005182  6E44               	movwf	(?___fldiv+2)^0,c
 15146   005184  0E00               	movlw	0
 15147   005186  6E45               	movwf	(?___fldiv+3)^0,c
 15148   005188  EFF7  F029         	goto	l1277
 15149   00518C                     l11585:
 15150   00518C  505A               	movf	___fldiv@aexp^0,w,c
 15151   00518E  C059  F04A         	movff	___fldiv@bexp,??___fldiv
 15152   005192  6A4B               	clrf	(??___fldiv+1)^0,c
 15153   005194  5E4A               	subwf	??___fldiv^0,f,c
 15154   005196  0E00               	movlw	0
 15155   005198  5A4B               	subwfb	(??___fldiv+1)^0,f,c
 15156   00519A  0E7F               	movlw	127
 15157   00519C  244A               	addwf	??___fldiv^0,w,c
 15158   00519E  6E53               	movwf	___fldiv@new_exp^0,c
 15159   0051A0  0E00               	movlw	0
 15160   0051A2  204B               	addwfc	(??___fldiv+1)^0,w,c
 15161   0051A4  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15162   0051A6  C042  F04E         	movff	___fldiv@b,___fldiv@rem
 15163   0051AA  C043  F04F         	movff	___fldiv@b+1,___fldiv@rem+1
 15164   0051AE  C044  F050         	movff	___fldiv@b+2,___fldiv@rem+2
 15165   0051B2  C045  F051         	movff	___fldiv@b+3,___fldiv@rem+3
 15166   0051B6  0E00               	movlw	0
 15167   0051B8  6E42               	movwf	___fldiv@b^0,c
 15168   0051BA  0E00               	movlw	0
 15169   0051BC  6E43               	movwf	(___fldiv@b+1)^0,c
 15170   0051BE  0E00               	movlw	0
 15171   0051C0  6E44               	movwf	(___fldiv@b+2)^0,c
 15172   0051C2  0E00               	movlw	0
 15173   0051C4  6E45               	movwf	(___fldiv@b+3)^0,c
 15174   0051C6  0E00               	movlw	0
 15175   0051C8  6E55               	movwf	___fldiv@grs^0,c
 15176   0051CA  0E00               	movlw	0
 15177   0051CC  6E56               	movwf	(___fldiv@grs+1)^0,c
 15178   0051CE  0E00               	movlw	0
 15179   0051D0  6E57               	movwf	(___fldiv@grs+2)^0,c
 15180   0051D2  0E00               	movlw	0
 15181   0051D4  6E58               	movwf	(___fldiv@grs+3)^0,c
 15182   0051D6  0E00               	movlw	0
 15183   0051D8  6E5A               	movwf	___fldiv@aexp^0,c
 15184   0051DA  EF27  F029         	goto	l1279
 15185   0051DE                     l11595:
 15186   0051DE  505A               	movf	___fldiv@aexp^0,w,c
 15187   0051E0  B4D8               	btfsc	status,2,c
 15188   0051E2  EFF5  F028         	goto	u11691
 15189   0051E6  EFF7  F028         	goto	u11690
 15190   0051EA                     u11691:
 15191   0051EA  EF0E  F029         	goto	l11603
 15192   0051EE                     u11690:
 15193   0051EE  90D8               	bcf	status,0,c
 15194   0051F0  364E               	rlcf	___fldiv@rem^0,f,c
 15195   0051F2  364F               	rlcf	(___fldiv@rem+1)^0,f,c
 15196   0051F4  3650               	rlcf	(___fldiv@rem+2)^0,f,c
 15197   0051F6  3651               	rlcf	(___fldiv@rem+3)^0,f,c
 15198   0051F8  90D8               	bcf	status,0,c
 15199   0051FA  3642               	rlcf	___fldiv@b^0,f,c
 15200   0051FC  3643               	rlcf	(___fldiv@b+1)^0,f,c
 15201   0051FE  3644               	rlcf	(___fldiv@b+2)^0,f,c
 15202   005200  3645               	rlcf	(___fldiv@b+3)^0,f,c
 15203   005202  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15204   005204  EF06  F029         	goto	u11701
 15205   005208  EF08  F029         	goto	u11700
 15206   00520C                     u11701:
 15207   00520C  EF09  F029         	goto	l1282
 15208   005210                     u11700:
 15209   005210  8042               	bsf	___fldiv@b^0,0,c
 15210   005212                     l1282:
 15211   005212  90D8               	bcf	status,0,c
 15212   005214  3655               	rlcf	___fldiv@grs^0,f,c
 15213   005216  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 15214   005218  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 15215   00521A  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 15216   00521C                     l11603:
 15217   00521C  5046               	movf	___fldiv@a^0,w,c
 15218   00521E  5C4E               	subwf	___fldiv@rem^0,w,c
 15219   005220  5047               	movf	(___fldiv@a+1)^0,w,c
 15220   005222  584F               	subwfb	(___fldiv@rem+1)^0,w,c
 15221   005224  5048               	movf	(___fldiv@a+2)^0,w,c
 15222   005226  5850               	subwfb	(___fldiv@rem+2)^0,w,c
 15223   005228  5049               	movf	(___fldiv@a+3)^0,w,c
 15224   00522A  5851               	subwfb	(___fldiv@rem+3)^0,w,c
 15225   00522C  A0D8               	btfss	status,0,c
 15226   00522E  EF1B  F029         	goto	u11711
 15227   005232  EF1D  F029         	goto	u11710
 15228   005236                     u11711:
 15229   005236  EF26  F029         	goto	l11609
 15230   00523A                     u11710:
 15231   00523A  8C58               	bsf	(___fldiv@grs+3)^0,6,c
 15232   00523C  5046               	movf	___fldiv@a^0,w,c
 15233   00523E  5E4E               	subwf	___fldiv@rem^0,f,c
 15234   005240  5047               	movf	(___fldiv@a+1)^0,w,c
 15235   005242  5A4F               	subwfb	(___fldiv@rem+1)^0,f,c
 15236   005244  5048               	movf	(___fldiv@a+2)^0,w,c
 15237   005246  5A50               	subwfb	(___fldiv@rem+2)^0,f,c
 15238   005248  5049               	movf	(___fldiv@a+3)^0,w,c
 15239   00524A  5A51               	subwfb	(___fldiv@rem+3)^0,f,c
 15240   00524C                     l11609:
 15241   00524C  2A5A               	incf	___fldiv@aexp^0,f,c
 15242   00524E                     l1279:
 15243   00524E  0E19               	movlw	25
 15244   005250  645A               	cpfsgt	___fldiv@aexp^0,c
 15245   005252  EF2D  F029         	goto	u11721
 15246   005256  EF2F  F029         	goto	u11720
 15247   00525A                     u11721:
 15248   00525A  EFEF  F028         	goto	l11595
 15249   00525E                     u11720:
 15250   00525E  504E               	movf	___fldiv@rem^0,w,c
 15251   005260  104F               	iorwf	(___fldiv@rem+1)^0,w,c
 15252   005262  1050               	iorwf	(___fldiv@rem+2)^0,w,c
 15253   005264  1051               	iorwf	(___fldiv@rem+3)^0,w,c
 15254   005266  B4D8               	btfsc	status,2,c
 15255   005268  EF38  F029         	goto	u11731
 15256   00526C  EF3A  F029         	goto	u11730
 15257   005270                     u11731:
 15258   005270  EF52  F029         	goto	l11621
 15259   005274                     u11730:
 15260   005274  8055               	bsf	___fldiv@grs^0,0,c
 15261   005276  EF52  F029         	goto	l11621
 15262   00527A                     l11615:
 15263   00527A  90D8               	bcf	status,0,c
 15264   00527C  3642               	rlcf	___fldiv@b^0,f,c
 15265   00527E  3643               	rlcf	(___fldiv@b+1)^0,f,c
 15266   005280  3644               	rlcf	(___fldiv@b+2)^0,f,c
 15267   005282  3645               	rlcf	(___fldiv@b+3)^0,f,c
 15268   005284  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15269   005286  EF47  F029         	goto	u11741
 15270   00528A  EF49  F029         	goto	u11740
 15271   00528E                     u11741:
 15272   00528E  EF4A  F029         	goto	l1288
 15273   005292                     u11740:
 15274   005292  8042               	bsf	___fldiv@b^0,0,c
 15275   005294                     l1288:
 15276   005294  90D8               	bcf	status,0,c
 15277   005296  3655               	rlcf	___fldiv@grs^0,f,c
 15278   005298  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 15279   00529A  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 15280   00529C  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 15281   00529E  0653               	decf	___fldiv@new_exp^0,f,c
 15282   0052A0  A0D8               	btfss	status,0,c
 15283   0052A2  0654               	decf	(___fldiv@new_exp+1)^0,f,c
 15284   0052A4                     l11621:
 15285   0052A4  AE44               	btfss	(___fldiv@b+2)^0,7,c
 15286   0052A6  EF57  F029         	goto	u11751
 15287   0052AA  EF59  F029         	goto	u11750
 15288   0052AE                     u11751:
 15289   0052AE  EF3D  F029         	goto	l11615
 15290   0052B2                     u11750:
 15291   0052B2  0E00               	movlw	0
 15292   0052B4  6E5A               	movwf	___fldiv@aexp^0,c
 15293   0052B6  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15294   0052B8  EF60  F029         	goto	u11761
 15295   0052BC  EF62  F029         	goto	u11760
 15296   0052C0                     u11761:
 15297   0052C0  EF86  F029         	goto	l1290
 15298   0052C4                     u11760:
 15299   0052C4  0EFF               	movlw	255
 15300   0052C6  1455               	andwf	___fldiv@grs^0,w,c
 15301   0052C8  6E4A               	movwf	??___fldiv^0,c
 15302   0052CA  0EFF               	movlw	255
 15303   0052CC  1456               	andwf	(___fldiv@grs+1)^0,w,c
 15304   0052CE  6E4B               	movwf	(??___fldiv+1)^0,c
 15305   0052D0  0EFF               	movlw	255
 15306   0052D2  1457               	andwf	(___fldiv@grs+2)^0,w,c
 15307   0052D4  6E4C               	movwf	(??___fldiv+2)^0,c
 15308   0052D6  0E7F               	movlw	127
 15309   0052D8  1458               	andwf	(___fldiv@grs+3)^0,w,c
 15310   0052DA  6E4D               	movwf	(??___fldiv+3)^0,c
 15311   0052DC  504A               	movf	??___fldiv^0,w,c
 15312   0052DE  104B               	iorwf	(??___fldiv+1)^0,w,c
 15313   0052E0  104C               	iorwf	(??___fldiv+2)^0,w,c
 15314   0052E2  104D               	iorwf	(??___fldiv+3)^0,w,c
 15315   0052E4  B4D8               	btfsc	status,2,c
 15316   0052E6  EF77  F029         	goto	u11771
 15317   0052EA  EF79  F029         	goto	u11770
 15318   0052EE                     u11771:
 15319   0052EE  EF7D  F029         	goto	l1291
 15320   0052F2                     u11770:
 15321   0052F2                     l11629:
 15322   0052F2  0E01               	movlw	1
 15323   0052F4  6E5A               	movwf	___fldiv@aexp^0,c
 15324   0052F6  EF86  F029         	goto	l1290
 15325   0052FA                     l1291:
 15326   0052FA  A042               	btfss	___fldiv@b^0,0,c
 15327   0052FC  EF82  F029         	goto	u11781
 15328   005300  EF84  F029         	goto	u11780
 15329   005304                     u11781:
 15330   005304  EF86  F029         	goto	l1290
 15331   005308                     u11780:
 15332   005308  EF79  F029         	goto	l11629
 15333   00530C                     l1290:
 15334   00530C  505A               	movf	___fldiv@aexp^0,w,c
 15335   00530E  B4D8               	btfsc	status,2,c
 15336   005310  EF8C  F029         	goto	u11791
 15337   005314  EF8E  F029         	goto	u11790
 15338   005318                     u11791:
 15339   005318  EFB2  F029         	goto	l11641
 15340   00531C                     u11790:
 15341   00531C  0E01               	movlw	1
 15342   00531E  2642               	addwf	___fldiv@b^0,f,c
 15343   005320  0E00               	movlw	0
 15344   005322  2243               	addwfc	(___fldiv@b+1)^0,f,c
 15345   005324  2244               	addwfc	(___fldiv@b+2)^0,f,c
 15346   005326  2245               	addwfc	(___fldiv@b+3)^0,f,c
 15347   005328  A045               	btfss	(___fldiv@b+3)^0,0,c
 15348   00532A  EF99  F029         	goto	u11801
 15349   00532E  EF9B  F029         	goto	u11800
 15350   005332                     u11801:
 15351   005332  EFB2  F029         	goto	l11641
 15352   005336                     u11800:
 15353   005336  C042  F04A         	movff	___fldiv@b,??___fldiv
 15354   00533A  C043  F04B         	movff	___fldiv@b+1,??___fldiv+1
 15355   00533E  C044  F04C         	movff	___fldiv@b+2,??___fldiv+2
 15356   005342  C045  F04D         	movff	___fldiv@b+3,??___fldiv+3
 15357   005346  344D               	rlcf	(??___fldiv+3)^0,w,c
 15358   005348  324D               	rrcf	(??___fldiv+3)^0,f,c
 15359   00534A  324C               	rrcf	(??___fldiv+2)^0,f,c
 15360   00534C  324B               	rrcf	(??___fldiv+1)^0,f,c
 15361   00534E  324A               	rrcf	??___fldiv^0,f,c
 15362   005350  C04A  F042         	movff	??___fldiv,___fldiv@b
 15363   005354  C04B  F043         	movff	??___fldiv+1,___fldiv@b+1
 15364   005358  C04C  F044         	movff	??___fldiv+2,___fldiv@b+2
 15365   00535C  C04D  F045         	movff	??___fldiv+3,___fldiv@b+3
 15366   005360  4A53               	infsnz	___fldiv@new_exp^0,f,c
 15367   005362  2A54               	incf	(___fldiv@new_exp+1)^0,f,c
 15368   005364                     l11641:
 15369   005364  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15370   005366  EFBD  F029         	goto	u11811
 15371   00536A  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 15372   00536C  E108               	bnz	u11810
 15373   00536E  2853               	incf	___fldiv@new_exp^0,w,c
 15374   005370  A0D8               	btfss	status,0,c
 15375   005372  EFBD  F029         	goto	u11811
 15376   005376  EFBF  F029         	goto	u11810
 15377   00537A                     u11811:
 15378   00537A  EFCA  F029         	goto	l11645
 15379   00537E                     u11810:
 15380   00537E  0E00               	movlw	0
 15381   005380  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15382   005382  6853               	setf	___fldiv@new_exp^0,c
 15383   005384  0E00               	movlw	0
 15384   005386  6E42               	movwf	___fldiv@b^0,c
 15385   005388  0E00               	movlw	0
 15386   00538A  6E43               	movwf	(___fldiv@b+1)^0,c
 15387   00538C  0E00               	movlw	0
 15388   00538E  6E44               	movwf	(___fldiv@b+2)^0,c
 15389   005390  0E00               	movlw	0
 15390   005392  6E45               	movwf	(___fldiv@b+3)^0,c
 15391   005394                     l11645:
 15392   005394  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15393   005396  EFD7  F029         	goto	u11820
 15394   00539A  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 15395   00539C  E106               	bnz	u11821
 15396   00539E  0453               	decf	___fldiv@new_exp^0,w,c
 15397   0053A0  B0D8               	btfsc	status,0,c
 15398   0053A2  EFD5  F029         	goto	u11821
 15399   0053A6  EFD7  F029         	goto	u11820
 15400   0053AA                     u11821:
 15401   0053AA  EFE5  F029         	goto	l11649
 15402   0053AE                     u11820:
 15403   0053AE  0E00               	movlw	0
 15404   0053B0  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15405   0053B2  0E00               	movlw	0
 15406   0053B4  6E53               	movwf	___fldiv@new_exp^0,c
 15407   0053B6  0E00               	movlw	0
 15408   0053B8  6E42               	movwf	___fldiv@b^0,c
 15409   0053BA  0E00               	movlw	0
 15410   0053BC  6E43               	movwf	(___fldiv@b+1)^0,c
 15411   0053BE  0E00               	movlw	0
 15412   0053C0  6E44               	movwf	(___fldiv@b+2)^0,c
 15413   0053C2  0E00               	movlw	0
 15414   0053C4  6E45               	movwf	(___fldiv@b+3)^0,c
 15415   0053C6  0E00               	movlw	0
 15416   0053C8  6E52               	movwf	___fldiv@sign^0,c
 15417   0053CA                     l11649:
 15418   0053CA  C053  F059         	movff	___fldiv@new_exp,___fldiv@bexp
 15419   0053CE  A059               	btfss	___fldiv@bexp^0,0,c
 15420   0053D0  EFEC  F029         	goto	u11831
 15421   0053D4  EFEE  F029         	goto	u11830
 15422   0053D8                     u11831:
 15423   0053D8  EFF1  F029         	goto	l11655
 15424   0053DC                     u11830:
 15425   0053DC  8E44               	bsf	(___fldiv@b+2)^0,7,c
 15426   0053DE  EFF2  F029         	goto	l11657
 15427   0053E2                     l11655:
 15428   0053E2  9E44               	bcf	(___fldiv@b+2)^0,7,c
 15429   0053E4                     l11657:
 15430   0053E4  90D8               	bcf	status,0,c
 15431   0053E6  3059               	rrcf	___fldiv@bexp^0,w,c
 15432   0053E8  6E45               	movwf	(___fldiv@b+3)^0,c
 15433   0053EA  EFA8  F028         	goto	l11571
 15434   0053EE                     l1277:
 15435   0053EE  0012               	return		;funcret
 15436   0053F0                     __end_of___fldiv:
 15437                           	callstack 0
 15438                           
 15439 ;; *************** function _Application_Initialization *****************
 15440 ;; Defined at:
 15441 ;;		line 93 in file "newmain.c"
 15442 ;; Parameters:    Size  Location     Type
 15443 ;;		None
 15444 ;; Auto vars:     Size  Location     Type
 15445 ;;		None
 15446 ;; Return value:  Size  Location     Type
 15447 ;;                  1    wreg      void 
 15448 ;; Registers used:
 15449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15450 ;; Tracked objects:
 15451 ;;		On entry : 0/0
 15452 ;;		On exit  : 0/0
 15453 ;;		Unchanged: 0/0
 15454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15455 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15456 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15458 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15459 ;;Total ram usage:        0 bytes
 15460 ;; Hardware stack levels used: 1
 15461 ;; Hardware stack levels required when called: 5
 15462 ;; This function calls:
 15463 ;;		_ecu_layer_Initialization
 15464 ;; This function is called by:
 15465 ;;		_main
 15466 ;; This function uses a non-reentrant model
 15467 ;;
 15468                           
 15469                           	psect	text50
 15470   007AA6                     __ptext50:
 15471                           	callstack 0
 15472   007AA6                     _Application_Initialization:
 15473                           	callstack 25
 15474   007AA6                     
 15475                           ;newmain.c: 95: ecu_layer_Initialization();
 15476   007AA6  EC3C  F03D         	call	_ecu_layer_Initialization	;wreg free
 15477   007AAA  0012               	return		;funcret
 15478   007AAC                     __end_of_Application_Initialization:
 15479                           	callstack 0
 15480                           
 15481 ;; *************** function _ecu_layer_Initialization *****************
 15482 ;; Defined at:
 15483 ;;		line 79 in file "ECU_layer/ecu_layer_init.c"
 15484 ;; Parameters:    Size  Location     Type
 15485 ;;		None
 15486 ;; Auto vars:     Size  Location     Type
 15487 ;;		None
 15488 ;; Return value:  Size  Location     Type
 15489 ;;                  1    wreg      void 
 15490 ;; Registers used:
 15491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15492 ;; Tracked objects:
 15493 ;;		On entry : 0/0
 15494 ;;		On exit  : 0/0
 15495 ;;		Unchanged: 0/0
 15496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15497 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15498 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15500 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15501 ;;Total ram usage:        0 bytes
 15502 ;; Hardware stack levels used: 1
 15503 ;; Hardware stack levels required when called: 4
 15504 ;; This function calls:
 15505 ;;		_ecu_keypad_initialize
 15506 ;;		_lcd_4bit_initialize
 15507 ;; This function is called by:
 15508 ;;		_Application_Initialization
 15509 ;; This function uses a non-reentrant model
 15510 ;;
 15511                           
 15512                           	psect	text51
 15513   007A78                     __ptext51:
 15514                           	callstack 0
 15515   007A78                     _ecu_layer_Initialization:
 15516                           	callstack 25
 15517   007A78                     
 15518                           ;ECU_layer/ecu_layer_init.c: 81:     lcd_4bit_initialize(&lcd1);
 15519   007A78  0EF9               	movlw	low _lcd1
 15520   007A7A  6E12               	movwf	lcd_4bit_initialize@lcd^0,c
 15521   007A7C  EC67  F035         	call	_lcd_4bit_initialize	;wreg free
 15522                           
 15523                           ;ECU_layer/ecu_layer_init.c: 82:     ecu_keypad_initialize(&keypad);
 15524   007A80  0ED6               	movlw	low _keypad
 15525   007A82  6E0F               	movwf	ecu_keypad_initialize@keypad^0,c
 15526   007A84  0E01               	movlw	high _keypad
 15527   007A86  6E10               	movwf	(ecu_keypad_initialize@keypad+1)^0,c
 15528   007A88  ECD8  F039         	call	_ecu_keypad_initialize	;wreg free
 15529   007A8C  0012               	return		;funcret
 15530   007A8E                     __end_of_ecu_layer_Initialization:
 15531                           	callstack 0
 15532                           
 15533 ;; *************** function _lcd_4bit_initialize *****************
 15534 ;; Defined at:
 15535 ;;		line 25 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15536 ;; Parameters:    Size  Location     Type
 15537 ;;  lcd             1   17[COMRAM] PTR const struct .
 15538 ;;		 -> lcd1(6), 
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;  ret             1   20[COMRAM] unsigned char 
 15541 ;;  counter         1   19[COMRAM] unsigned char 
 15542 ;; Return value:  Size  Location     Type
 15543 ;;                  1    wreg      unsigned char 
 15544 ;; Registers used:
 15545 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15546 ;; Tracked objects:
 15547 ;;		On entry : 0/0
 15548 ;;		On exit  : 0/0
 15549 ;;		Unchanged: 0/0
 15550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15551 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15554 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15555 ;;Total ram usage:        4 bytes
 15556 ;; Hardware stack levels used: 1
 15557 ;; Hardware stack levels required when called: 3
 15558 ;; This function calls:
 15559 ;;		_gpio_pin_initialize
 15560 ;;		_lcd_4bit_send_command
 15561 ;; This function is called by:
 15562 ;;		_ecu_layer_Initialization
 15563 ;; This function uses a non-reentrant model
 15564 ;;
 15565                           
 15566                           	psect	text52
 15567   006ACE                     __ptext52:
 15568                           	callstack 0
 15569   006ACE                     _lcd_4bit_initialize:
 15570                           	callstack 25
 15571   006ACE                     
 15572                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 27: uint8 counter = 0 ;
 15573   006ACE  0E00               	movlw	0
 15574   006AD0  6E14               	movwf	lcd_4bit_initialize@counter^0,c
 15575                           
 15576                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 28:     if(((void*)0) == lcd)
 15577   006AD2  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
 15578   006AD4  A4D8               	btfss	status,2,c
 15579   006AD6  EF6F  F035         	goto	u8561
 15580   006ADA  EF71  F035         	goto	u8560
 15581   006ADE                     u8561:
 15582   006ADE  EF73  F035         	goto	l8573
 15583   006AE2                     u8560:
 15584   006AE2                     
 15585                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 31:     }
 15586   006AE2  EFDF  F035         	goto	l192
 15587   006AE6                     l8573:
 15588                           
 15589                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 33:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 34:        
      +                           ret = gpio_pin_initialize(&(lcd->rs));
 15590   006AE6  C012  F00B         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
 15591   006AEA  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15592   006AEC  EC10  F03A         	call	_gpio_pin_initialize	;wreg free
 15593   006AF0  6E15               	movwf	lcd_4bit_initialize@ret^0,c
 15594                           
 15595                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 35:         ret = gpio_pin_initialize(&(lcd->en));
 15596   006AF2  C012  F013         	movff	lcd_4bit_initialize@lcd,??_lcd_4bit_initialize
 15597   006AF6  0E01               	movlw	1
 15598   006AF8  2613               	addwf	??_lcd_4bit_initialize^0,f,c
 15599   006AFA  C013  F00B         	movff	??_lcd_4bit_initialize,gpio_pin_initialize@_pin_config
 15600   006AFE  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15601   006B00  EC10  F03A         	call	_gpio_pin_initialize	;wreg free
 15602   006B04  6E15               	movwf	lcd_4bit_initialize@ret^0,c
 15603   006B06                     
 15604                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 36:         for(counter=0 ;counter < 4 ;counter++)
 15605   006B06  0E00               	movlw	0
 15606   006B08  6E14               	movwf	lcd_4bit_initialize@counter^0,c
 15607   006B0A                     l8581:
 15608   006B0A  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
 15609   006B0C  2414               	addwf	lcd_4bit_initialize@counter^0,w,c
 15610   006B0E  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15611   006B10  0E02               	movlw	2
 15612   006B12  2613               	addwf	??_lcd_4bit_initialize^0,f,c
 15613   006B14  C013  F00B         	movff	??_lcd_4bit_initialize,gpio_pin_initialize@_pin_config
 15614   006B18  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15615   006B1A  EC10  F03A         	call	_gpio_pin_initialize	;wreg free
 15616   006B1E                     
 15617                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 39:         }
 15618   006B1E  2A14               	incf	lcd_4bit_initialize@counter^0,f,c
 15619   006B20  0E03               	movlw	3
 15620   006B22  6414               	cpfsgt	lcd_4bit_initialize@counter^0,c
 15621   006B24  EF96  F035         	goto	u8571
 15622   006B28  EF98  F035         	goto	u8570
 15623   006B2C                     u8571:
 15624   006B2C  EF85  F035         	goto	l8581
 15625   006B30                     u8570:
 15626   006B30                     
 15627                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 40:          _delay((unsigned long)((20)*(8000000ul/40
      +                          00.0)));
 15628   006B30  0E34               	movlw	52
 15629   006B32  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15630   006B34  0EF2               	movlw	242
 15631   006B36                     u13627:
 15632   006B36  2EE8               	decfsz	wreg,f,c
 15633   006B38  D7FE               	bra	u13627
 15634   006B3A  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
 15635   006B3C  D7FC               	bra	u13627
 15636   006B3E  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15637   006B42  0E38               	movlw	56
 15638   006B44  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15639   006B46  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15640   006B4A                     
 15641                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 42:         _delay((unsigned long)((5)*(8000000ul/4000
      +                          .0)));
 15642   006B4A  0E0D               	movlw	13
 15643   006B4C  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15644   006B4E  0EFC               	movlw	252
 15645   006B50                     u13637:
 15646   006B50  2EE8               	decfsz	wreg,f,c
 15647   006B52  D7FE               	bra	u13637
 15648   006B54  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
 15649   006B56  D7FC               	bra	u13637
 15650   006B58  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15651   006B5C  0E38               	movlw	56
 15652   006B5E  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15653   006B60  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15654   006B64                     
 15655                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 44:         _delay((unsigned long)((150)*(8000000ul/40
      +                          00000.0)));
 15656   006B64  0E64               	movlw	100
 15657   006B66                     u13647:
 15658   006B66  2EE8               	decfsz	wreg,f,c
 15659   006B68  D7FE               	bra	u13647
 15660   006B6A  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15661   006B6E  0E38               	movlw	56
 15662   006B70  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15663   006B72  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15664   006B76  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15665   006B7A  0E01               	movlw	1
 15666   006B7C  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15667   006B7E  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15668   006B82  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15669   006B86  0E02               	movlw	2
 15670   006B88  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15671   006B8A  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15672   006B8E  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15673   006B92  0E06               	movlw	6
 15674   006B94  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15675   006B96  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15676   006B9A  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15677   006B9E  0E0C               	movlw	12
 15678   006BA0  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15679   006BA2  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15680   006BA6  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15681   006BAA  0E28               	movlw	40
 15682   006BAC  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15683   006BAE  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15684   006BB2  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15685   006BB6  0E80               	movlw	128
 15686   006BB8  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15687   006BBA  ECA8  F03A         	call	_lcd_4bit_send_command	;wreg free
 15688   006BBE                     l192:
 15689   006BBE  0012               	return		;funcret
 15690   006BC0                     __end_of_lcd_4bit_initialize:
 15691                           	callstack 0
 15692                           
 15693 ;; *************** function _lcd_4bit_send_command *****************
 15694 ;; Defined at:
 15695 ;;		line 65 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15696 ;; Parameters:    Size  Location     Type
 15697 ;;  lcd             1   14[COMRAM] PTR const struct .
 15698 ;;		 -> lcd1(6), 
 15699 ;;  command         1   15[COMRAM] unsigned char 
 15700 ;; Auto vars:     Size  Location     Type
 15701 ;;  ret             1   16[COMRAM] unsigned char 
 15702 ;; Return value:  Size  Location     Type
 15703 ;;                  1    wreg      unsigned char 
 15704 ;; Registers used:
 15705 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15706 ;; Tracked objects:
 15707 ;;		On entry : 0/0
 15708 ;;		On exit  : 0/0
 15709 ;;		Unchanged: 0/0
 15710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15711 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15712 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15714 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15715 ;;Total ram usage:        3 bytes
 15716 ;; Hardware stack levels used: 1
 15717 ;; Hardware stack levels required when called: 2
 15718 ;; This function calls:
 15719 ;;		_gpio_pin_write_logic
 15720 ;;		_lcd_4bit_send_enable_enable
 15721 ;;		_lcd_send_4bit
 15722 ;; This function is called by:
 15723 ;;		_send_the_result_to_LCD
 15724 ;;		_lcd_4bit_initialize
 15725 ;;		_lcd_4bit_set_curser
 15726 ;;		_main
 15727 ;;		_lcd_4bit_send_custome_char
 15728 ;; This function uses a non-reentrant model
 15729 ;;
 15730                           
 15731                           	psect	text53
 15732   007550                     __ptext53:
 15733                           	callstack 0
 15734   007550                     _lcd_4bit_send_command:
 15735                           	callstack 25
 15736   007550                     
 15737                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 68:     if(((void*)0) == lcd)
 15738   007550  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
 15739   007552  A4D8               	btfss	status,2,c
 15740   007554  EFAE  F03A         	goto	u8541
 15741   007558  EFB0  F03A         	goto	u8540
 15742   00755C                     u8541:
 15743   00755C  EFB4  F03A         	goto	l8541
 15744   007560                     u8540:
 15745   007560                     
 15746                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 69:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 70:        
      +                           ret = (STD_ReturnType)0x00;
 15747   007560  0E00               	movlw	0
 15748   007562  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15749                           
 15750                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 71:     }
 15751   007564  EFD5  F03A         	goto	l8543
 15752   007568                     l8541:
 15753                           
 15754                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 73:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 75:        
      +                           ret = gpio_pin_write_logic(&(lcd->rs),LOW);
 15755   007568  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
 15756   00756C  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15757   00756E  0E00               	movlw	0
 15758   007570  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15759   007572  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 15760   007576  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15761                           
 15762                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 76:         ret = lcd_send_4bit(lcd,command >>4);
 15763   007578  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
 15764   00757C  3810               	swapf	lcd_4bit_send_command@command^0,w,c
 15765   00757E  0B0F               	andlw	15
 15766   007580  6E0C               	movwf	lcd_send_4bit@command_data^0,c
 15767   007582  ECA0  F039         	call	_lcd_send_4bit	;wreg free
 15768   007586  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15769                           
 15770                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 77:         ret = lcd_4bit_send_enable_enable(lcd);
 15771   007588  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_enable@lcd
 15772   00758C  ECA7  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
 15773   007590  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15774                           
 15775                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 78:         ret = lcd_send_4bit(lcd,command);
 15776   007592  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
 15777   007596  C010  F00C         	movff	lcd_4bit_send_command@command,lcd_send_4bit@command_data
 15778   00759A  ECA0  F039         	call	_lcd_send_4bit	;wreg free
 15779   00759E  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15780                           
 15781                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 79:         ret = lcd_4bit_send_enable_enable(lcd);
 15782   0075A0  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_enable@lcd
 15783   0075A4  ECA7  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
 15784   0075A8  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15785   0075AA                     l8543:
 15786                           
 15787                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 84:      return ret;
 15788   0075AA  5011               	movf	lcd_4bit_send_command@ret^0,w,c
 15789   0075AC  0012               	return		;funcret
 15790   0075AE                     __end_of_lcd_4bit_send_command:
 15791                           	callstack 0
 15792                           
 15793 ;; *************** function _lcd_send_4bit *****************
 15794 ;; Defined at:
 15795 ;;		line 493 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15796 ;; Parameters:    Size  Location     Type
 15797 ;;  lcd             1   10[COMRAM] PTR const struct .
 15798 ;;		 -> lcd1(6), 
 15799 ;;  command_data    1   11[COMRAM] unsigned char 
 15800 ;; Auto vars:     Size  Location     Type
 15801 ;;  ret             1   13[COMRAM] unsigned char 
 15802 ;; Return value:  Size  Location     Type
 15803 ;;                  1    wreg      unsigned char 
 15804 ;; Registers used:
 15805 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15806 ;; Tracked objects:
 15807 ;;		On entry : 0/0
 15808 ;;		On exit  : 0/0
 15809 ;;		Unchanged: 0/0
 15810 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15811 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15812 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15813 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15814 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15815 ;;Total ram usage:        4 bytes
 15816 ;; Hardware stack levels used: 1
 15817 ;; Hardware stack levels required when called: 1
 15818 ;; This function calls:
 15819 ;;		_gpio_pin_write_logic
 15820 ;; This function is called by:
 15821 ;;		_lcd_4bit_send_command
 15822 ;;		_lcd_4bit_send_char_data
 15823 ;; This function uses a non-reentrant model
 15824 ;;
 15825                           
 15826                           	psect	text54
 15827   007340                     __ptext54:
 15828                           	callstack 0
 15829   007340                     _lcd_send_4bit:
 15830                           	callstack 25
 15831   007340  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15832   007344  0E02               	movlw	2
 15833   007346  260D               	addwf	??_lcd_send_4bit^0,f,c
 15834   007348  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15835   00734C  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15836   00734E  500C               	movf	lcd_send_4bit@command_data^0,w,c
 15837   007350  0B01               	andlw	1
 15838   007352  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15839   007354  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 15840   007358  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15841   00735C  0E03               	movlw	3
 15842   00735E  260D               	addwf	??_lcd_send_4bit^0,f,c
 15843   007360  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15844   007364  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15845   007366  90D8               	bcf	status,0,c
 15846   007368  300C               	rrcf	lcd_send_4bit@command_data^0,w,c
 15847   00736A  0B01               	andlw	1
 15848   00736C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15849   00736E  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 15850   007372  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15851   007376  0E04               	movlw	4
 15852   007378  260D               	addwf	??_lcd_send_4bit^0,f,c
 15853   00737A  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15854   00737E  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15855   007380  400C               	rrncf	lcd_send_4bit@command_data^0,w,c
 15856   007382  42E8               	rrncf	wreg,f,c
 15857   007384  0B3F               	andlw	63
 15858   007386  0B01               	andlw	1
 15859   007388  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15860   00738A  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 15861   00738E                     
 15862                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 498: ret = gpio_pin_write_logic(&(lcd->data[3]),(comma
      +                          nd_data >> 3) & 0x01);
 15863   00738E  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15864   007392  0E05               	movlw	5
 15865   007394  260D               	addwf	??_lcd_send_4bit^0,f,c
 15866   007396  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15867   00739A  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15868   00739C  380C               	swapf	lcd_send_4bit@command_data^0,w,c
 15869   00739E  46E8               	rlncf	wreg,f,c
 15870   0073A0  0B1F               	andlw	31
 15871   0073A2  0B01               	andlw	1
 15872   0073A4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15873   0073A6  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 15874   0073AA  6E0E               	movwf	lcd_send_4bit@ret^0,c
 15875                           
 15876                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 500: return ret;
 15877   0073AC  500E               	movf	lcd_send_4bit@ret^0,w,c
 15878   0073AE  0012               	return		;funcret
 15879   0073B0                     __end_of_lcd_send_4bit:
 15880                           	callstack 0
 15881                           
 15882 ;; *************** function _lcd_4bit_send_enable_enable *****************
 15883 ;; Defined at:
 15884 ;;		line 509 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15885 ;; Parameters:    Size  Location     Type
 15886 ;;  lcd             1   10[COMRAM] PTR const struct .
 15887 ;;		 -> lcd1(6), 
 15888 ;; Auto vars:     Size  Location     Type
 15889 ;;  ret             1   12[COMRAM] unsigned char 
 15890 ;; Return value:  Size  Location     Type
 15891 ;;                  1    wreg      unsigned char 
 15892 ;; Registers used:
 15893 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15894 ;; Tracked objects:
 15895 ;;		On entry : 0/0
 15896 ;;		On exit  : 0/0
 15897 ;;		Unchanged: 0/0
 15898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15899 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15900 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15901 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15902 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15903 ;;Total ram usage:        3 bytes
 15904 ;; Hardware stack levels used: 1
 15905 ;; Hardware stack levels required when called: 1
 15906 ;; This function calls:
 15907 ;;		_gpio_pin_write_logic
 15908 ;; This function is called by:
 15909 ;;		_lcd_4bit_send_command
 15910 ;;		_lcd_4bit_send_char_data
 15911 ;; This function uses a non-reentrant model
 15912 ;;
 15913                           
 15914                           	psect	text55
 15915   00794E                     __ptext55:
 15916                           	callstack 0
 15917   00794E                     _lcd_4bit_send_enable_enable:
 15918                           	callstack 25
 15919   00794E  C00B  F00C         	movff	lcd_4bit_send_enable_enable@lcd,??_lcd_4bit_send_enable_enable
 15920   007952  0E01               	movlw	1
 15921   007954  260C               	addwf	??_lcd_4bit_send_enable_enable^0,f,c
 15922   007956  C00C  F001         	movff	??_lcd_4bit_send_enable_enable,gpio_pin_write_logic@_pin_config
 15923   00795A  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15924   00795C  0E01               	movlw	1
 15925   00795E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15926   007960  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 15927   007964                     
 15928                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 512: _delay((unsigned long)((5)*(8000000ul/4000000.0))
      +                          );
 15929   007964  0E03               	movlw	3
 15930   007966                     u13657:
 15931   007966  2EE8               	decfsz	wreg,f,c
 15932   007968  D7FE               	bra	u13657
 15933   00796A  0000               	nop	
 15934   00796C                     
 15935                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 513: ret = gpio_pin_write_logic(&(lcd->en),LOW);
 15936   00796C  C00B  F00C         	movff	lcd_4bit_send_enable_enable@lcd,??_lcd_4bit_send_enable_enable
 15937   007970  0E01               	movlw	1
 15938   007972  260C               	addwf	??_lcd_4bit_send_enable_enable^0,f,c
 15939   007974  C00C  F001         	movff	??_lcd_4bit_send_enable_enable,gpio_pin_write_logic@_pin_config
 15940   007978  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15941   00797A  0E00               	movlw	0
 15942   00797C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15943   00797E  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 15944   007982  6E0D               	movwf	lcd_4bit_send_enable_enable@ret^0,c
 15945   007984                     
 15946                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 515: return ret;
 15947   007984  500D               	movf	lcd_4bit_send_enable_enable@ret^0,w,c
 15948   007986  0012               	return		;funcret
 15949   007988                     __end_of_lcd_4bit_send_enable_enable:
 15950                           	callstack 0
 15951                           
 15952 ;; *************** function _ecu_keypad_initialize *****************
 15953 ;; Defined at:
 15954 ;;		line 25 in file "ECU_layer/Keypad/ecu_keypad.c"
 15955 ;; Parameters:    Size  Location     Type
 15956 ;;  keypad          2   14[COMRAM] PTR const struct .
 15957 ;;		 -> keypad(8), 
 15958 ;; Auto vars:     Size  Location     Type
 15959 ;;  columns         1   19[COMRAM] unsigned char 
 15960 ;;  rows            1   18[COMRAM] unsigned char 
 15961 ;;  ret             1    0        unsigned char 
 15962 ;; Return value:  Size  Location     Type
 15963 ;;                  1    wreg      unsigned char 
 15964 ;; Registers used:
 15965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15966 ;; Tracked objects:
 15967 ;;		On entry : 0/0
 15968 ;;		On exit  : 0/0
 15969 ;;		Unchanged: 0/0
 15970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15971 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15972 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15973 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15974 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15975 ;;Total ram usage:        6 bytes
 15976 ;; Hardware stack levels used: 1
 15977 ;; Hardware stack levels required when called: 2
 15978 ;; This function calls:
 15979 ;;		_gpio_pin_direction_initialize
 15980 ;;		_gpio_pin_initialize
 15981 ;; This function is called by:
 15982 ;;		_ecu_layer_Initialization
 15983 ;; This function uses a non-reentrant model
 15984 ;;
 15985                           
 15986                           	psect	text56
 15987   0073B0                     __ptext56:
 15988                           	callstack 0
 15989   0073B0                     _ecu_keypad_initialize:
 15990                           	callstack 26
 15991   0073B0                     
 15992                           ;ECU_layer/Keypad/ecu_keypad.c: 27: uint8 rows,columns;;ECU_layer/Keypad/ecu_keypad.c: 2
      +                          8:     if(((void*)0) == keypad)
 15993   0073B0  500F               	movf	ecu_keypad_initialize@keypad^0,w,c
 15994   0073B2  1010               	iorwf	(ecu_keypad_initialize@keypad+1)^0,w,c
 15995   0073B4  A4D8               	btfss	status,2,c
 15996   0073B6  EFDF  F039         	goto	u6091
 15997   0073BA  EFE1  F039         	goto	u6090
 15998   0073BE                     u6091:
 15999   0073BE  EFE3  F039         	goto	l6247
 16000   0073C2                     u6090:
 16001   0073C2                     
 16002                           ;ECU_layer/Keypad/ecu_keypad.c: 31:     }
 16003   0073C2  EF0F  F03A         	goto	l368
 16004   0073C6                     l6247:
 16005                           
 16006                           ;ECU_layer/Keypad/ecu_keypad.c: 33:     {;ECU_layer/Keypad/ecu_keypad.c: 34:         for
      +                          (rows = 0;rows < 4 ;rows++)
 16007   0073C6  0E00               	movlw	0
 16008   0073C8  6E13               	movwf	ecu_keypad_initialize@rows^0,c
 16009   0073CA                     l6253:
 16010                           
 16011                           ;ECU_layer/Keypad/ecu_keypad.c: 35:         {;ECU_layer/Keypad/ecu_keypad.c: 36:        
      +                               gpio_pin_initialize(&(keypad->keypad_rows_pins[rows]));
 16012   0073CA  5013               	movf	ecu_keypad_initialize@rows^0,w,c
 16013   0073CC  240F               	addwf	ecu_keypad_initialize@keypad^0,w,c
 16014   0073CE  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
 16015   0073D0  0E00               	movlw	0
 16016   0073D2  2010               	addwfc	(ecu_keypad_initialize@keypad+1)^0,w,c
 16017   0073D4  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
 16018   0073D6  EC10  F03A         	call	_gpio_pin_initialize	;wreg free
 16019   0073DA                     
 16020                           ;ECU_layer/Keypad/ecu_keypad.c: 38:         }
 16021   0073DA  2A13               	incf	ecu_keypad_initialize@rows^0,f,c
 16022   0073DC  0E03               	movlw	3
 16023   0073DE  6413               	cpfsgt	ecu_keypad_initialize@rows^0,c
 16024   0073E0  EFF4  F039         	goto	u6101
 16025   0073E4  EFF6  F039         	goto	u6100
 16026   0073E8                     u6101:
 16027   0073E8  EFE5  F039         	goto	l6253
 16028   0073EC                     u6100:
 16029   0073EC                     
 16030                           ;ECU_layer/Keypad/ecu_keypad.c: 39:         for(columns = 0;columns < 4 ;columns++){
 16031   0073EC  0E00               	movlw	0
 16032   0073EE  6E14               	movwf	ecu_keypad_initialize@columns^0,c
 16033   0073F0                     l6265:
 16034                           
 16035                           ;ECU_layer/Keypad/ecu_keypad.c: 40:                 gpio_pin_direction_initialize(&(keyp
      +                          ad->keypad_columns_pins[columns]));
 16036   0073F0  5014               	movf	ecu_keypad_initialize@columns^0,w,c
 16037   0073F2  240F               	addwf	ecu_keypad_initialize@keypad^0,w,c
 16038   0073F4  6E11               	movwf	??_ecu_keypad_initialize^0,c
 16039   0073F6  0E00               	movlw	0
 16040   0073F8  2010               	addwfc	(ecu_keypad_initialize@keypad+1)^0,w,c
 16041   0073FA  6E12               	movwf	(??_ecu_keypad_initialize+1)^0,c
 16042   0073FC  0E04               	movlw	4
 16043   0073FE  2411               	addwf	??_ecu_keypad_initialize^0,w,c
 16044   007400  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
 16045   007402  0E00               	movlw	0
 16046   007404  2012               	addwfc	(??_ecu_keypad_initialize+1)^0,w,c
 16047   007406  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
 16048   007408  EC8F  F031         	call	_gpio_pin_direction_initialize	;wreg free
 16049   00740C                     
 16050                           ;ECU_layer/Keypad/ecu_keypad.c: 41:             }
 16051   00740C  2A14               	incf	ecu_keypad_initialize@columns^0,f,c
 16052   00740E  0E03               	movlw	3
 16053   007410  6414               	cpfsgt	ecu_keypad_initialize@columns^0,c
 16054   007412  EF0D  F03A         	goto	u6111
 16055   007416  EF0F  F03A         	goto	u6110
 16056   00741A                     u6111:
 16057   00741A  EFF8  F039         	goto	l6265
 16058   00741E                     u6110:
 16059   00741E                     l368:
 16060   00741E  0012               	return		;funcret
 16061   007420                     __end_of_ecu_keypad_initialize:
 16062                           	callstack 0
 16063                           
 16064 ;; *************** function _gpio_pin_initialize *****************
 16065 ;; Defined at:
 16066 ;;		line 164 in file "MCAL_layer/GPIO/hal_gpio.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;  _pin_config     2   10[COMRAM] PTR const struct .
 16069 ;;		 -> keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_initialize@relay_pin(1), ecu_led_initialize@led_pin(1), 
 16070 ;;		 -> lcd1(6), keypad(8), 
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;  ret             1   13[COMRAM] unsigned char 
 16073 ;; Return value:  Size  Location     Type
 16074 ;;                  1    wreg      unsigned char 
 16075 ;; Registers used:
 16076 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 0/0
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16082 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16083 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16084 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16085 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16086 ;;Total ram usage:        4 bytes
 16087 ;; Hardware stack levels used: 1
 16088 ;; Hardware stack levels required when called: 1
 16089 ;; This function calls:
 16090 ;;		_gpio_pin_direction_initialize
 16091 ;;		_gpio_pin_write_logic
 16092 ;; This function is called by:
 16093 ;;		_lcd_4bit_initialize
 16094 ;;		_ecu_keypad_initialize
 16095 ;;		_ecu_seven_segment_initialize
 16096 ;;		_lcd_8bit_initialize
 16097 ;;		_ecu_dc_motor_initialize
 16098 ;;		_ecu_led_initialize
 16099 ;;		_ecu_relay_initialize
 16100 ;; This function uses a non-reentrant model
 16101 ;;
 16102                           
 16103                           	psect	text57
 16104   007420                     __ptext57:
 16105                           	callstack 0
 16106   007420                     _gpio_pin_initialize:
 16107                           	callstack 26
 16108   007420                     
 16109                           ;MCAL_layer/GPIO/hal_gpio.c: 167:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
 16110   007420  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
 16111   007422  100C               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
 16112   007424  B4D8               	btfsc	status,2,c
 16113   007426  EF17  F03A         	goto	u5981
 16114   00742A  EF19  F03A         	goto	u5980
 16115   00742E                     u5981:
 16116   00742E  EF2A  F03A         	goto	l6115
 16117   007432                     u5980:
 16118   007432  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
 16119   007436  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
 16120   00743A  30DF               	rrcf	223,w,c
 16121   00743C  32E8               	rrcf	wreg,f,c
 16122   00743E  32E8               	rrcf	wreg,f,c
 16123   007440  0B07               	andlw	7
 16124   007442  6E0D               	movwf	??_gpio_pin_initialize^0,c
 16125   007444  0E07               	movlw	7
 16126   007446  640D               	cpfsgt	??_gpio_pin_initialize^0,c
 16127   007448  EF28  F03A         	goto	u5991
 16128   00744C  EF2A  F03A         	goto	u5990
 16129   007450                     u5991:
 16130   007450  EF2E  F03A         	goto	l6117
 16131   007454                     u5990:
 16132   007454                     l6115:
 16133                           
 16134                           ;MCAL_layer/GPIO/hal_gpio.c: 168:     {;MCAL_layer/GPIO/hal_gpio.c: 169:         ret = (
      +                          STD_ReturnType)0x00;
 16135   007454  0E00               	movlw	0
 16136   007456  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 16137                           
 16138                           ;MCAL_layer/GPIO/hal_gpio.c: 170:     }
 16139   007458  EF44  F03A         	goto	l6119
 16140   00745C                     l6117:
 16141                           
 16142                           ;MCAL_layer/GPIO/hal_gpio.c: 172:     {;MCAL_layer/GPIO/hal_gpio.c: 173:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
 16143   00745C  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
 16144   007460  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
 16145   007464  EC8F  F031         	call	_gpio_pin_direction_initialize	;wreg free
 16146   007468  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 16147                           
 16148                           ;MCAL_layer/GPIO/hal_gpio.c: 174:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
 16149   00746A  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
 16150   00746E  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
 16151   007472  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
 16152   007476  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
 16153   00747A  0E00               	movlw	0
 16154   00747C  BEDF               	btfsc	indf2,7,c
 16155   00747E  0E01               	movlw	1
 16156   007480  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 16157   007482  EC31  F032         	call	_gpio_pin_write_logic	;wreg free
 16158   007486  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 16159   007488                     l6119:
 16160                           
 16161                           ;MCAL_layer/GPIO/hal_gpio.c: 177:      return ret;
 16162   007488  500E               	movf	gpio_pin_initialize@ret^0,w,c
 16163   00748A  0012               	return		;funcret
 16164   00748C                     __end_of_gpio_pin_initialize:
 16165                           	callstack 0
 16166                           
 16167 ;; *************** function _gpio_pin_write_logic *****************
 16168 ;; Defined at:
 16169 ;;		line 83 in file "MCAL_layer/GPIO/hal_gpio.c"
 16170 ;; Parameters:    Size  Location     Type
 16171 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16172 ;;		 -> keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_off@relay_pin(1), ecu_relay_on@relay_pin(1), 
 16173 ;;		 -> ecu_relay_initialize@relay_pin(1), ecu_led_turn_off@led_pin(1), ecu_led_turn_on@led_pin(1), ecu_led_initialize@l
      +ed_pin(1), 
 16174 ;;		 -> lcd1(6), keypad(8), 
 16175 ;;  logic           1    2[COMRAM] enum E3403
 16176 ;; Auto vars:     Size  Location     Type
 16177 ;;  ret             1    9[COMRAM] unsigned char 
 16178 ;; Return value:  Size  Location     Type
 16179 ;;                  1    wreg      unsigned char 
 16180 ;; Registers used:
 16181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16182 ;; Tracked objects:
 16183 ;;		On entry : 0/0
 16184 ;;		On exit  : 0/0
 16185 ;;		Unchanged: 0/0
 16186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16187 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16189 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16190 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16191 ;;Total ram usage:       10 bytes
 16192 ;; Hardware stack levels used: 1
 16193 ;; This function calls:
 16194 ;;		Nothing
 16195 ;; This function is called by:
 16196 ;;		_lcd_4bit_send_command
 16197 ;;		_lcd_4bit_send_char_data
 16198 ;;		_lcd_send_4bit
 16199 ;;		_lcd_4bit_send_enable_enable
 16200 ;;		_ecu_keypad_get_value
 16201 ;;		_gpio_pin_initialize
 16202 ;;		_ecu_seven_segment_write_number
 16203 ;;		_lcd_8bit_send_command
 16204 ;;		_lcd_8bit_send_char_data
 16205 ;;		_lcd_8bit_send_enable_enable
 16206 ;;		_ecu_dc_motor_move_right
 16207 ;;		_ecu_dc_motor_move_left
 16208 ;;		_ecu_dc_motor_stop
 16209 ;;		_ecu_led_turn_on
 16210 ;;		_ecu_led_turn_off
 16211 ;;		_ecu_relay_on
 16212 ;;		_ecu_relay_off
 16213 ;; This function uses a non-reentrant model
 16214 ;;
 16215                           
 16216                           	psect	text58
 16217   006462                     __ptext58:
 16218                           	callstack 0
 16219   006462                     _gpio_pin_write_logic:
 16220                           	callstack 25
 16221   006462                     
 16222                           ;MCAL_layer/GPIO/hal_gpio.c: 83: STD_ReturnType gpio_pin_write_logic(const pin_config_t*
      +                           _pin_config, logic_t logic);MCAL_layer/GPIO/hal_gpio.c: 84: {;MCAL_layer/GPIO/hal_gpio.
      +                          c: 85:     STD_ReturnType ret = (STD_ReturnType)0x01;
 16223   006462  0E01               	movlw	1
 16224   006464  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 16225   006466                     
 16226                           ;MCAL_layer/GPIO/hal_gpio.c: 86:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
 16227   006466  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 16228   006468  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
 16229   00646A  B4D8               	btfsc	status,2,c
 16230   00646C  EF3A  F032         	goto	u5391
 16231   006470  EF3C  F032         	goto	u5390
 16232   006474                     u5391:
 16233   006474  EF4D  F032         	goto	l5663
 16234   006478                     u5390:
 16235   006478  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16236   00647C  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16237   006480  30DF               	rrcf	223,w,c
 16238   006482  32E8               	rrcf	wreg,f,c
 16239   006484  32E8               	rrcf	wreg,f,c
 16240   006486  0B07               	andlw	7
 16241   006488  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16242   00648A  0E07               	movlw	7
 16243   00648C  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
 16244   00648E  EF4B  F032         	goto	u5401
 16245   006492  EF4D  F032         	goto	u5400
 16246   006496                     u5401:
 16247   006496  EFB0  F032         	goto	l5671
 16248   00649A                     u5400:
 16249   00649A                     l5663:
 16250                           
 16251                           ;MCAL_layer/GPIO/hal_gpio.c: 87:     {;MCAL_layer/GPIO/hal_gpio.c: 88:         ret = (ST
      +                          D_ReturnType)0x00;
 16252   00649A  0E00               	movlw	0
 16253   00649C  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 16254                           
 16255                           ;MCAL_layer/GPIO/hal_gpio.c: 89:     }
 16256   00649E  EFC5  F032         	goto	l5673
 16257   0064A2                     l5665:
 16258                           
 16259                           ;MCAL_layer/GPIO/hal_gpio.c: 95:             (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
 16260   0064A2  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16261   0064A6  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16262   0064AA  30DF               	rrcf	223,w,c
 16263   0064AC  32E8               	rrcf	wreg,f,c
 16264   0064AE  32E8               	rrcf	wreg,f,c
 16265   0064B0  0B07               	andlw	7
 16266   0064B2  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16267   0064B4  0E01               	movlw	1
 16268   0064B6  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 16269   0064B8  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 16270   0064BA  EF61  F032         	goto	u5414
 16271   0064BE                     u5415:
 16272   0064BE  90D8               	bcf	status,0,c
 16273   0064C0  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 16274   0064C2                     u5414:
 16275   0064C2  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 16276   0064C4  EF5F  F032         	goto	u5415
 16277   0064C8  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16278   0064CA  0AFF               	xorlw	255
 16279   0064CC  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 16280   0064CE  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16281   0064D2  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16282   0064D6  50DF               	movf	223,w,c
 16283   0064D8  0B07               	andlw	7
 16284   0064DA  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
 16285   0064DC  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
 16286   0064DE  0D02               	mullw	2
 16287   0064E0  0EC2               	movlw	low _lat_registers
 16288   0064E2  24F3               	addwf	243,w,c
 16289   0064E4  6ED9               	movwf	fsr2l,c
 16290   0064E6  0E01               	movlw	high _lat_registers
 16291   0064E8  20F4               	addwfc	prodh,w,c
 16292   0064EA  6EDA               	movwf	fsr2h,c
 16293   0064EC  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
 16294   0064F0  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
 16295   0064F4  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
 16296   0064F8  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
 16297   0064FC  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 16298   0064FE  16DF               	andwf	indf2,f,c
 16299                           
 16300                           ;MCAL_layer/GPIO/hal_gpio.c: 96:             break;
 16301   006500  EFC5  F032         	goto	l5673
 16302   006504                     l5667:
 16303                           
 16304                           ;MCAL_layer/GPIO/hal_gpio.c: 98:             (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
 16305   006504  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16306   006508  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16307   00650C  30DF               	rrcf	223,w,c
 16308   00650E  32E8               	rrcf	wreg,f,c
 16309   006510  32E8               	rrcf	wreg,f,c
 16310   006512  0B07               	andlw	7
 16311   006514  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16312   006516  0E01               	movlw	1
 16313   006518  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 16314   00651A  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 16315   00651C  EF92  F032         	goto	u5424
 16316   006520                     u5425:
 16317   006520  90D8               	bcf	status,0,c
 16318   006522  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 16319   006524                     u5424:
 16320   006524  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 16321   006526  EF90  F032         	goto	u5425
 16322   00652A  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16323   00652E  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16324   006532  50DF               	movf	223,w,c
 16325   006534  0B07               	andlw	7
 16326   006536  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 16327   006538  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 16328   00653A  0D02               	mullw	2
 16329   00653C  0EC2               	movlw	low _lat_registers
 16330   00653E  24F3               	addwf	243,w,c
 16331   006540  6ED9               	movwf	fsr2l,c
 16332   006542  0E01               	movlw	high _lat_registers
 16333   006544  20F4               	addwfc	prodh,w,c
 16334   006546  6EDA               	movwf	fsr2h,c
 16335   006548  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
 16336   00654C  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
 16337   006550  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 16338   006554  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 16339   006558  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16340   00655A  12DF               	iorwf	indf2,f,c
 16341                           
 16342                           ;MCAL_layer/GPIO/hal_gpio.c: 99:             break;
 16343   00655C  EFC5  F032         	goto	l5673
 16344   006560                     l5671:
 16345   006560  5003               	movf	gpio_pin_write_logic@logic^0,w,c
 16346   006562  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16347   006564  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
 16348                           
 16349                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16350                           ; Switch size 1, requested type "simple"
 16351                           ; Number of cases is 1, Range of values is 0 to 0
 16352                           ; switch strategies available:
 16353                           ; Name         Instructions Cycles
 16354                           ; simple_byte            4     3 (average)
 16355                           ;	Chosen strategy is simple_byte
 16356   006566  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16357   006568  0A00               	xorlw	0	; case 0
 16358   00656A  B4D8               	btfsc	status,2,c
 16359   00656C  EFBA  F032         	goto	l13309
 16360   006570  EF4D  F032         	goto	l5663
 16361   006574                     l13309:
 16362                           
 16363                           ; Switch size 1, requested type "simple"
 16364                           ; Number of cases is 2, Range of values is 0 to 1
 16365                           ; switch strategies available:
 16366                           ; Name         Instructions Cycles
 16367                           ; simple_byte            7     4 (average)
 16368                           ;	Chosen strategy is simple_byte
 16369   006574  5004               	movf	??_gpio_pin_write_logic^0,w,c
 16370   006576  0A00               	xorlw	0	; case 0
 16371   006578  B4D8               	btfsc	status,2,c
 16372   00657A  EF51  F032         	goto	l5665
 16373   00657E  0A01               	xorlw	1	; case 1
 16374   006580  B4D8               	btfsc	status,2,c
 16375   006582  EF82  F032         	goto	l5667
 16376   006586  EF4D  F032         	goto	l5663
 16377   00658A                     l5673:
 16378                           
 16379                           ;MCAL_layer/GPIO/hal_gpio.c: 104:      return ret;
 16380   00658A  500A               	movf	gpio_pin_write_logic@ret^0,w,c
 16381   00658C  0012               	return		;funcret
 16382   00658E                     __end_of_gpio_pin_write_logic:
 16383                           	callstack 0
 16384                           
 16385 ;; *************** function _gpio_pin_direction_initialize *****************
 16386 ;; Defined at:
 16387 ;;		line 24 in file "MCAL_layer/GPIO/hal_gpio.c"
 16388 ;; Parameters:    Size  Location     Type
 16389 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16390 ;;		 -> keypad$keypad_columns_pins(4), keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_initialize@relay_pin(1), 
 16391 ;;		 -> ecu_led_initialize@led_pin(1), lcd1(6), keypad(8), 
 16392 ;; Auto vars:     Size  Location     Type
 16393 ;;  ret             1    8[COMRAM] unsigned char 
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  1    wreg      unsigned char 
 16396 ;; Registers used:
 16397 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16403 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16404 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16405 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16406 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16407 ;;Total ram usage:        9 bytes
 16408 ;; Hardware stack levels used: 1
 16409 ;; This function calls:
 16410 ;;		Nothing
 16411 ;; This function is called by:
 16412 ;;		_ecu_keypad_initialize
 16413 ;;		_gpio_pin_initialize
 16414 ;;		_ecu_button_initialize
 16415 ;; This function uses a non-reentrant model
 16416 ;;
 16417                           
 16418                           	psect	text59
 16419   00631E                     __ptext59:
 16420                           	callstack 0
 16421   00631E                     _gpio_pin_direction_initialize:
 16422                           	callstack 26
 16423   00631E                     
 16424                           ;MCAL_layer/GPIO/hal_gpio.c: 24: STD_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t* _pin_config);MCAL_layer/GPIO/hal_gpio.c: 25: {;MCAL_layer/GPIO/hal_gpio.c: 26:
      +                               STD_ReturnType ret = (STD_ReturnType)0x01;
 16425   00631E  0E01               	movlw	1
 16426   006320  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
 16427   006322                     
 16428                           ;MCAL_layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
 16429   006322  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
 16430   006324  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
 16431   006326  B4D8               	btfsc	status,2,c
 16432   006328  EF98  F031         	goto	u5861
 16433   00632C  EF9A  F031         	goto	u5860
 16434   006330                     u5861:
 16435   006330  EFAB  F031         	goto	l5967
 16436   006334                     u5860:
 16437   006334  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16438   006338  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16439   00633C  30DF               	rrcf	223,w,c
 16440   00633E  32E8               	rrcf	wreg,f,c
 16441   006340  32E8               	rrcf	wreg,f,c
 16442   006342  0B07               	andlw	7
 16443   006344  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16444   006346  0E07               	movlw	7
 16445   006348  6403               	cpfsgt	??_gpio_pin_direction_initialize^0,c
 16446   00634A  EFA9  F031         	goto	u5871
 16447   00634E  EFAB  F031         	goto	u5870
 16448   006352                     u5871:
 16449   006352  EF0E  F032         	goto	l5975
 16450   006356                     u5870:
 16451   006356                     l5967:
 16452                           
 16453                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     {;MCAL_layer/GPIO/hal_gpio.c: 29:         ret = (ST
      +                          D_ReturnType)0x00;
 16454   006356  0E00               	movlw	0
 16455   006358  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
 16456                           
 16457                           ;MCAL_layer/GPIO/hal_gpio.c: 30:     }
 16458   00635A  EF2F  F032         	goto	l5977
 16459   00635E                     l5969:
 16460                           
 16461                           ;MCAL_layer/GPIO/hal_gpio.c: 36:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
 16462   00635E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16463   006362  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16464   006366  30DF               	rrcf	223,w,c
 16465   006368  32E8               	rrcf	wreg,f,c
 16466   00636A  32E8               	rrcf	wreg,f,c
 16467   00636C  0B07               	andlw	7
 16468   00636E  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16469   006370  0E01               	movlw	1
 16470   006372  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 16471   006374  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
 16472   006376  EFBF  F031         	goto	u5884
 16473   00637A                     u5885:
 16474   00637A  90D8               	bcf	status,0,c
 16475   00637C  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 16476   00637E                     u5884:
 16477   00637E  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 16478   006380  EFBD  F031         	goto	u5885
 16479   006384  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16480   006386  0AFF               	xorlw	255
 16481   006388  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
 16482   00638A  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16483   00638E  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16484   006392  50DF               	movf	223,w,c
 16485   006394  0B07               	andlw	7
 16486   006396  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
 16487   006398  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
 16488   00639A  0D02               	mullw	2
 16489   00639C  0ECC               	movlw	low _tris_registers
 16490   00639E  24F3               	addwf	243,w,c
 16491   0063A0  6ED9               	movwf	fsr2l,c
 16492   0063A2  0E01               	movlw	high _tris_registers
 16493   0063A4  20F4               	addwfc	prodh,w,c
 16494   0063A6  6EDA               	movwf	fsr2h,c
 16495   0063A8  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
 16496   0063AC  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
 16497   0063B0  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
 16498   0063B4  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
 16499   0063B8  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
 16500   0063BA  16DF               	andwf	indf2,f,c
 16501                           
 16502                           ;MCAL_layer/GPIO/hal_gpio.c: 37:             break;
 16503   0063BC  EF2F  F032         	goto	l5977
 16504   0063C0                     l5971:
 16505                           
 16506                           ;MCAL_layer/GPIO/hal_gpio.c: 39:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
 16507   0063C0  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16508   0063C4  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16509   0063C8  30DF               	rrcf	223,w,c
 16510   0063CA  32E8               	rrcf	wreg,f,c
 16511   0063CC  32E8               	rrcf	wreg,f,c
 16512   0063CE  0B07               	andlw	7
 16513   0063D0  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16514   0063D2  0E01               	movlw	1
 16515   0063D4  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 16516   0063D6  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
 16517   0063D8  EFF0  F031         	goto	u5894
 16518   0063DC                     u5895:
 16519   0063DC  90D8               	bcf	status,0,c
 16520   0063DE  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 16521   0063E0                     u5894:
 16522   0063E0  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 16523   0063E2  EFEE  F031         	goto	u5895
 16524   0063E6  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16525   0063EA  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16526   0063EE  50DF               	movf	223,w,c
 16527   0063F0  0B07               	andlw	7
 16528   0063F2  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
 16529   0063F4  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
 16530   0063F6  0D02               	mullw	2
 16531   0063F8  0ECC               	movlw	low _tris_registers
 16532   0063FA  24F3               	addwf	243,w,c
 16533   0063FC  6ED9               	movwf	fsr2l,c
 16534   0063FE  0E01               	movlw	high _tris_registers
 16535   006400  20F4               	addwfc	prodh,w,c
 16536   006402  6EDA               	movwf	fsr2h,c
 16537   006404  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
 16538   006408  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
 16539   00640C  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
 16540   006410  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
 16541   006414  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16542   006416  12DF               	iorwf	indf2,f,c
 16543                           
 16544                           ;MCAL_layer/GPIO/hal_gpio.c: 40:             break;
 16545   006418  EF2F  F032         	goto	l5977
 16546   00641C                     l5975:
 16547   00641C  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16548   006420  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16549   006424  BCDF               	btfsc	indf2,6,c
 16550   006426  EF17  F032         	goto	u5901
 16551   00642A  EF1A  F032         	goto	u5900
 16552   00642E                     u5901:
 16553   00642E  0E01               	movlw	1
 16554   006430  EF1B  F032         	goto	u5910
 16555   006434                     u5900:
 16556   006434  0E00               	movlw	0
 16557   006436                     u5910:
 16558   006436  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16559   006438  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
 16560                           
 16561                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16562                           ; Switch size 1, requested type "simple"
 16563                           ; Number of cases is 1, Range of values is 0 to 0
 16564                           ; switch strategies available:
 16565                           ; Name         Instructions Cycles
 16566                           ; simple_byte            4     3 (average)
 16567                           ;	Chosen strategy is simple_byte
 16568   00643A  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16569   00643C  0A00               	xorlw	0	; case 0
 16570   00643E  B4D8               	btfsc	status,2,c
 16571   006440  EF24  F032         	goto	l13311
 16572   006444  EFAB  F031         	goto	l5967
 16573   006448                     l13311:
 16574                           
 16575                           ; Switch size 1, requested type "simple"
 16576                           ; Number of cases is 2, Range of values is 0 to 1
 16577                           ; switch strategies available:
 16578                           ; Name         Instructions Cycles
 16579                           ; simple_byte            7     4 (average)
 16580                           ;	Chosen strategy is simple_byte
 16581   006448  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
 16582   00644A  0A00               	xorlw	0	; case 0
 16583   00644C  B4D8               	btfsc	status,2,c
 16584   00644E  EFAF  F031         	goto	l5969
 16585   006452  0A01               	xorlw	1	; case 1
 16586   006454  B4D8               	btfsc	status,2,c
 16587   006456  EFE0  F031         	goto	l5971
 16588   00645A  EFAB  F031         	goto	l5967
 16589   00645E                     l5977:
 16590                           
 16591                           ;MCAL_layer/GPIO/hal_gpio.c: 45:      return ret;
 16592   00645E  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
 16593   006460  0012               	return		;funcret
 16594   006462                     __end_of_gpio_pin_direction_initialize:
 16595                           	callstack 0
 16596                           
 16597                           	psect	rparam
 16598   000000                     
 16599                           	psect	config
 16600                           
 16601                           ; Padding undefined space
 16602   300000                     	org	3145728
 16603   300000  FF                 	db	255
 16604                           
 16605                           ;Config register CONFIG1H @ 0x300001
 16606                           ;	Oscillator Selection bits
 16607                           ;	OSC = EC, EC oscillator, CLKOUT function on RA6
 16608                           ;	Fail-Safe Clock Monitor Enable bit
 16609                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16610                           ;	Internal/External Oscillator Switchover bit
 16611                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16612   300001                     	org	3145729
 16613   300001  04                 	db	4
 16614                           
 16615                           ;Config register CONFIG2L @ 0x300002
 16616                           ;	Power-up Timer Enable bit
 16617                           ;	PWRT = OFF, PWRT disabled
 16618                           ;	Brown-out Reset Enable bits
 16619                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 16620                           ;	Brown Out Reset Voltage bits
 16621                           ;	BORV = 1, 
 16622   300002                     	org	3145730
 16623   300002  09                 	db	9
 16624                           
 16625                           ;Config register CONFIG2H @ 0x300003
 16626                           ;	Watchdog Timer Enable bit
 16627                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16628                           ;	Watchdog Timer Postscale Select bits
 16629                           ;	WDTPS = 32768, 1:32768
 16630   300003                     	org	3145731
 16631   300003  1E                 	db	30
 16632                           
 16633                           ; Padding undefined space
 16634   300004                     	org	3145732
 16635   300004  FF                 	db	255
 16636                           
 16637                           ;Config register CONFIG3H @ 0x300005
 16638                           ;	CCP2 MUX bit
 16639                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 16640                           ;	PORTB A/D Enable bit
 16641                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 16642                           ;	Low-Power Timer1 Oscillator Enable bit
 16643                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16644                           ;	MCLR Pin Enable bit
 16645                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16646   300005                     	org	3145733
 16647   300005  81                 	db	129
 16648                           
 16649                           ;Config register CONFIG4L @ 0x300006
 16650                           ;	Stack Full/Underflow Reset Enable bit
 16651                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16652                           ;	Single-Supply ICSP Enable bit
 16653                           ;	LVP = OFF, Single-Supply ICSP disabled
 16654                           ;	Extended Instruction Set Enable bit
 16655                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16656                           ;	Background Debugger Enable bit
 16657                           ;	DEBUG = 0x1, unprogrammed default
 16658   300006                     	org	3145734
 16659   300006  81                 	db	129
 16660                           
 16661                           ; Padding undefined space
 16662   300007                     	org	3145735
 16663   300007  FF                 	db	255
 16664                           
 16665                           ;Config register CONFIG5L @ 0x300008
 16666                           ;	Code Protection bit
 16667                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 16668                           ;	Code Protection bit
 16669                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 16670                           ;	Code Protection bit
 16671                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 16672                           ;	Code Protection bit
 16673                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 16674   300008                     	org	3145736
 16675   300008  0F                 	db	15
 16676                           
 16677                           ;Config register CONFIG5H @ 0x300009
 16678                           ;	Boot Block Code Protection bit
 16679                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16680                           ;	Data EEPROM Code Protection bit
 16681                           ;	CPD = OFF, Data EEPROM not code-protected
 16682   300009                     	org	3145737
 16683   300009  C0                 	db	192
 16684                           
 16685                           ;Config register CONFIG6L @ 0x30000A
 16686                           ;	Write Protection bit
 16687                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 16688                           ;	Write Protection bit
 16689                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 16690                           ;	Write Protection bit
 16691                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 16692                           ;	Write Protection bit
 16693                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 16694   30000A                     	org	3145738
 16695   30000A  0F                 	db	15
 16696                           
 16697                           ;Config register CONFIG6H @ 0x30000B
 16698                           ;	Configuration Register Write Protection bit
 16699                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16700                           ;	Boot Block Write Protection bit
 16701                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16702                           ;	Data EEPROM Write Protection bit
 16703                           ;	WRTD = OFF, Data EEPROM not write-protected
 16704   30000B                     	org	3145739
 16705   30000B  E0                 	db	224
 16706                           
 16707                           ;Config register CONFIG7L @ 0x30000C
 16708                           ;	Table Read Protection bit
 16709                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 16710                           ;	Table Read Protection bit
 16711                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16712                           ;	Table Read Protection bit
 16713                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 16714                           ;	Table Read Protection bit
 16715                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 16716   30000C                     	org	3145740
 16717   30000C  0F                 	db	15
 16718                           
 16719                           ;Config register CONFIG7H @ 0x30000D
 16720                           ;	Boot Block Table Read Protection bit
 16721                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16722   30000D                     	org	3145741
 16723   30000D  40                 	db	64
 16724                           tosu	equ	0xFFF
 16725                           tosh	equ	0xFFE
 16726                           tosl	equ	0xFFD
 16727                           stkptr	equ	0xFFC
 16728                           pclatu	equ	0xFFB
 16729                           pclath	equ	0xFFA
 16730                           pcl	equ	0xFF9
 16731                           tblptru	equ	0xFF8
 16732                           tblptrh	equ	0xFF7
 16733                           tblptrl	equ	0xFF6
 16734                           tablat	equ	0xFF5
 16735                           prodh	equ	0xFF4
 16736                           prodl	equ	0xFF3
 16737                           indf0	equ	0xFEF
 16738                           postinc0	equ	0xFEE
 16739                           postdec0	equ	0xFED
 16740                           preinc0	equ	0xFEC
 16741                           plusw0	equ	0xFEB
 16742                           fsr0h	equ	0xFEA
 16743                           fsr0l	equ	0xFE9
 16744                           wreg	equ	0xFE8
 16745                           indf1	equ	0xFE7
 16746                           postinc1	equ	0xFE6
 16747                           postdec1	equ	0xFE5
 16748                           preinc1	equ	0xFE4
 16749                           plusw1	equ	0xFE3
 16750                           fsr1h	equ	0xFE2
 16751                           fsr1l	equ	0xFE1
 16752                           bsr	equ	0xFE0
 16753                           indf2	equ	0xFDF
 16754                           postinc2	equ	0xFDE
 16755                           postdec2	equ	0xFDD
 16756                           preinc2	equ	0xFDC
 16757                           plusw2	equ	0xFDB
 16758                           fsr2h	equ	0xFDA
 16759                           fsr2l	equ	0xFD9
 16760                           status	equ	0xFD8

Data Sizes:
    Strings     114
    Constant    112
    Data        61
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     82     128
    BANK1           256    184     250
    BANK2           256      0      96
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    convert_arr_to_float@arr	PTR const unsigned char  size(2) Largest target is 4
		 -> num1(BANK1[4]), num2(BANK1[4]), num3(BANK1[4]), 

    convert_arr_to_float@num_value	PTR float  size(1) Largest target is 4
		 -> num1_val(BANK0[4]), num2_val(BANK0[4]), num3_val(BANK0[4]), 

    convert_float_to_string@str	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), 

    convert_int_to_string@str	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    Division_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    ecu_keypad_get_value@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 

    ecu_keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> get_number_and_operartion@keypad_value(COMRAM[1]), get_third_number_and_third_operartion@keypad_value(COMRAM[1]), 

    ecu_keypad_initialize@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    get_number_and_operartion@counter_num	PTR unsigned char  size(1) Largest target is 1
		 -> counter_num1(BANK0[1]), counter_num2(BANK0[1]), 

    get_number_and_operartion@lcd_counter	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_counter(BANK0[1]), 

    get_number_and_operartion@num	PTR unsigned char  size(2) Largest target is 4
		 -> num1(BANK1[4]), num2(BANK1[4]), 

    get_number_and_operartion@operation	PTR unsigned char  size(1) Largest target is 1
		 -> operation(BANK0[1]), operation2(BANK0[1]), 

    get_third_number_and_third_operartion@counter_num	PTR unsigned char  size(1) Largest target is 1
		 -> counter_num3(BANK0[1]), 

    get_third_number_and_third_operartion@lcd_counter	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_counter(BANK0[1]), 

    get_third_number_and_third_operartion@num	PTR unsigned char  size(2) Largest target is 4
		 -> num3(BANK1[4]), 

    get_third_number_and_third_operartion@operation	PTR unsigned char  size(1) Largest target is 1
		 -> operation3(BANK0[1]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_columns_pins(BANK1[4]), 
		 -> keypad$keypad_rows_pins(BANK1[4]), lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_rows_pins(BANK1[4]), 
		 -> lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), keypad$keypad_columns_pins(BANK1[4]), 

    gpio_pin_read_logic@logic	PTR enum E3403 size(1) Largest target is 1
		 -> ecu_button_read_state@btn_logic(COMRAM[1]), ecu_keypad_get_value@column_val(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_led_turn_off@led_pin(COMRAM[1]), ecu_led_turn_on@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), 
		 -> ecu_relay_off@relay_pin(COMRAM[1]), ecu_relay_on@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_rows_pins(BANK1[4]), 
		 -> lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_enable@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), STR_1(CODE[15]), STR_10(CODE[19]), STR_15(CODE[14]), 
		 -> STR_2(CODE[19]), STR_3(CODE[18]), STR_4(CODE[19]), STR_5(CODE[15]), 
		 -> STR_6(CODE[19]), STR_7(CODE[23]), STR_8(CODE[28]), STR_9(CODE[18]), 

    lcd_4bit_set_curser@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memset@dest	PTR void  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    multiplication_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1400$buffer	PTR unsigned char  size(2) Largest target is 0

    S1400$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_16(CODE[4]), STR_19(CODE[4]), 

    subtraction_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    sum_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _sum_operation->___fladd
    _subtraction_operation->___flsub
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___flge
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _multiplication_operation->___flmul
    _get_third_number_and_third_operartion->_lcd_4bit_send_char_data_pos
    _get_third_number_and_third_operartion->_lcd_4bit_send_string_pos
    _get_number_and_operartion->_lcd_4bit_send_char_data_pos
    _get_number_and_operartion->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_curser
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_curser
    _lcd_4bit_set_curser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _ecu_keypad_get_value->_gpio_pin_write_logic
    _convert_arr_to_float->_powf
    _powf->___flge
    _scalbnf->___flmul
    ___flmul->___xxtofl
    ___xxtofl->___fltol
    ___flsub->___fldiv
    ___fladd->___flmul
    ___flge->___flsub
    _Division_operation->___fldiv
    ___fldiv->___fladd
    _ecu_layer_Initialization->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable_enable->_gpio_pin_write_logic
    _ecu_keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_send_the_result_to_LCD
    _send_the_result_to_LCD->_convert_float_to_string
    _convert_int_to_string->_sprintf
    _convert_float_to_string->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _convert_arr_to_float->_powf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  676458
                                             80 BANK0      2     2      0
         _Application_Initialization
                 _Division_operation
                            ___fltol
               _convert_arr_to_float
          _get_number_and_operartion
_get_third_number_and_third_operarti
                     _initialize_var
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
           _multiplication_operation
             _send_the_result_to_LCD
              _subtraction_operation
                      _sum_operation
 ---------------------------------------------------------------------------------
 (1) _sum_operation                                        9     0      9   13294
                                             65 COMRAM     9     0      9
                            ___fladd
 ---------------------------------------------------------------------------------
 (1) _subtraction_operation                                9     0      9   20550
                                             98 COMRAM     9     0      9
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _send_the_result_to_LCD                              86    82      4  226067
                                             76 BANK0      4     0      4
                                              0 BANK1     82    82      0
                             ___flge
                            ___fltol
                           ___xxtofl
            _convert_float_to_string
              _convert_int_to_string
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _convert_int_to_string                                5     1      4   79544
                                             70 BANK0      4     0      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _convert_float_to_string                              6     0      6   79460
                                             70 BANK0      6     0      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   78039
                                             50 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3   76395
                                            123 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           12     9      3   75526
                                            118 COMRAM     5     2      3
                                             44 BANK0      6     6      0
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              53    47      6   66784
                                            110 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             90 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     837
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     9      3    4750
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    2959
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1008
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _multiplication_operation                             9     0      9   16324
                                             49 COMRAM     9     0      9
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) _initialize_var                                       2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_third_number_and_third_operartion                8     3      5   90431
                                             28 COMRAM     8     3      5
               _ecu_keypad_get_value
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _get_number_and_operartion                            8     3      5   90791
                                             28 COMRAM     8     3      5
               _ecu_keypad_get_value
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_pos                             6     1      5   42465
                                             23 COMRAM     5     0      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   40655
                                             23 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_curser
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_curser                                  6     3      3   20737
                                             17 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   17169
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (2) _ecu_keypad_get_value                                10     7      3    6099
                                             10 COMRAM     9     6      3
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                  9     6      3     444
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _convert_arr_to_float                                17    13      4  115528
                                              0 BANK0     17    13      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   85198
                                            110 COMRAM    17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1600
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   16128
                                             49 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8   15208
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1108
                                             10 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8   19434
                                             90 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8   12178
                                             49 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1896
                                             98 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Division_operation                                   9     0      9    5836
                                             90 COMRAM     9     0      9
                            ___fldiv
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    4720
                                             65 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Application_Initialization                           0     0      0   34354
           _ecu_layer_Initialization
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_Initialization                             0     0      0   34354
              _ecu_keypad_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   27087
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   19869
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bit                                        4     2      2    5905
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_enable                          3     2      1    5353
                                             10 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _ecu_keypad_initialize                                7     5      2    7267
                                             14 COMRAM     6     4      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6574
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    4891
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_Initialization
     _ecu_layer_Initialization
       _ecu_keypad_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_enable
             _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
   _Division_operation
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
   ___fltol
   _convert_arr_to_float
     ___fladd
     ___flmul
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
         ___fladd (ARG)
         ___flmul (ARG)
         ___flsub (ARG)
           ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _get_number_and_operartion
     _ecu_keypad_get_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_enable
         _lcd_send_4bit
       _lcd_4bit_set_curser
         _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_curser
   _get_third_number_and_third_operartion
     _ecu_keypad_get_value
     _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_string_pos
   _initialize_var
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
   _multiplication_operation
     ___flmul
   _send_the_result_to_LCD
     ___flge
     ___fltol
     ___xxtofl
     _convert_float_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
               ___wmul
     _convert_int_to_string
       _memset
       _sprintf
     _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
   _subtraction_operation
     ___flsub
   _sum_operation
     ___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      60       9       37.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      FA       7       97.7%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     52      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259      39        0.0%
DATA                 0      0     259       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 05 16:35:26 2024

                                   ?_lcd_send_4bit 000B                                       ___fldiv@aexp 005A  
                                     ___fldiv@bexp 0059                                       ___fldiv@sign 0052  
                                               _L1 105D                                                 _L2 1059  
                                               _L3 1055                                                 _L4 1051  
                                               _L5 104D                                                 _L6 1049  
                                               _P1 1045                                                 _P2 1041  
                                               _P3 103D                                                 l72 5BA8  
                                               _P4 1039                                                 _P5 1035  
                                               l92 56BC                                                 l97 66B4  
                                     ___awdiv@sign 0006                                                 _bp 1011  
                                               _cp 1021                                ___wmul@multiplicand 0003  
              __end_of_lcd_4bit_send_enable_enable 7988                        _lcd_4bit_send_enable_enable 794E  
                                              l100 7728                                                l103 7822  
                                              l112 7912                                                l202 754E  
                                              l122 6D64                                                l106 785E  
                                              l300 7986                                                l109 789A  
                                              l117 6C9C                                                l207 78D6  
                                              l223 733E                                                l323 7224  
                                              l500 6460                                                l192 6BBE  
                                              l540 748A                                                l452 7A8C  
                                              l197 75AC                                                l526 70E6  
                                              l382 67C4                                                l294 7652  
                                              l519 658C                                                l368 741E  
                                              l297 73AE                                                l672 4186  
                                              l692 7AAA                                                l926 6E28  
                                              l695 7A76                                                l960 6988  
                                              l954 703C                                                l939 6F92  
                                              l965 69CE                                                l992 68CA  
                                              l969 79F6                   send_the_result_to_LCD@result_str 0100  
                                              _lg2 1031                                                _abs 79F8  
                                              _pad 748C                                                _ovt 1025  
                                     ___awmod@sign 0006                                                prod 0FF3  
                           ?_subtraction_operation 0063                                                wreg 0FE8  
                                     ___flmul@aexp 0026                                       ___flmul@bexp 0027  
                          _convert_float_to_string 76EA                                       ___flmul@sign 0025  
                                     ___flmul@temp 0030                                       ___flmul@prod 002C  
                    ??_lcd_4bit_send_enable_enable 000C                                       ___fltol@exp1 000A  
                                             ?_abs 0007                                               l1223 457C  
                                             l1240 4696                                               l1232 484C  
                                             l1224 456A                                               l1225 4530  
                                             l1313 4C76                                               l1250 4754  
                                             l1316 4B08                                               l1412 74F0  
                                             l1309 4912                                               l1350 6046  
                                             l1326 4C38                                               l1318 4B80  
                                             l1430 631C                                               l1319 4B6E  
                                             l1408 74A2                                               l1416 61D4  
                                             l1520 77E6                                               l1249 4766  
                                             l1265 76E8                                               l1353 61A2  
                                             l1441 3DF4                                               l1290 530C  
                                             l1282 5212                                               l1418 61DC  
                                             l1530 6ACC                                               l1291 52FA  
                                             l1419 6222                                               l1364 613A  
                                             l1372 79BE                                               l1444 3794  
                                             l1277 53EE                                               l1357 60DE  
                                             l1710 33D0                                               l1446 35DA  
                                             l1279 524E                                               l1535 7A12  
                                             l1288 5294                                               l1544 5FEE  
                                             l1538 7A2A                                               l1474 3BDC  
                                             l1490 718C                                               l1547 5F32  
                                             l1379 7768                                               l1740 4E5C  
                                             l1644 340C                                               l1564 76A2  
                                             l1717 7AAC                                               l1558 7602  
                                             l1486 7184                                               l1727 5DDC  
                                             l1744 4EBA                                               l1736 5054  
                                             l1576 6EE2                                               l1584 77A8  
                                             l1673 1582                                               l1649 1380  
                                             l1498 5942                                               l1747 4F7E  
                                             l1659 1410                                               l1755 794C  
                                             l1749 4FEC                                               l1677 15E0  
                                             l1669 14D0                                               l5117 7A52  
                                             l6111 7420                                               l5119 7A6E  
                                             l6113 7432                                               l5401 6D78  
                                             l6115 7454                                               l5411 6D9E  
                                             l5403 6D80                                               l6117 745C  
                                             l6109 7420                                               l6133 7988  
                                             l5421 6DD6                                               l5413 6DA6  
                                             l5405 6D84                                               ?_pad 000F  
                                             l6119 7488                                               l6135 7994  
                                             l5431 6E02                                               l5423 6DDC  
                                             l5415 6DB8                                               l5407 6D92  
                                             l6241 73B0                                               l6161 7082  
                                             l6153 703E                                               l6137 79A0  
                                             l5425 6DF2                                               l5417 6DC0  
                                             l5433 6E08                                               l5409 6D9A  
                                             l5441 6EE4                                               l5601 6AC4  
                                             l6243 73B0                                               l6163 7086  
                                             l6155 703E                                               l6139 79A4  
                                             l5435 6E18                                               l5427 6DFA  
                                             l5419 6DC8                                               l5451 6F10  
                                             l5443 6EE8                                               l5531 681A  
                                             l5523 67C6                                               l5611 75BC  
                                             l6253 73CA                                               l6245 73C2  
                                             l6157 7050                                               l7141 6CC8  
                                             l5437 6E20                                               l5429 6DFC  
                                             l5461 6F48                                               l5453 6F18  
                                             l5445 6EF6                                               l4901 6E70  
                                             l5533 681C                                               l5525 67DC  
                                             l5621 5E54                                               l5613 75D0  
                                             l6255 73DA                                               l6247 73C6  
                                             l6159 7060                                               l6431 66E0  
                                             l7143 6CF2                                               l7135 6C9E  
                                             l5471 6F82                                               l5463 6F5E  
                                             l5455 6F2A                                               l5447 6EFE  
                                             l4903 6EA2                                               l5535 682C  
                                             l5631 5F22                                               l5623 5E68  
                                             l6265 73F0                                               l6257 73DC  
                                             l6441 66F8                                               l6433 66F0  
                                             l6425 66B6                                               l7145 6CF6  
                                             l5473 6F8A                                               l5465 6F66  
                                             l5457 6F32                                               l5449 6F02  
                                             l8121 776A                                               l5481 6FD2  
                                             l5561 68AA                                               l5545 6856  
                                             l5537 6830                                               l5529 67F0  
                                             l5641 5FDE                                               l5625 5E76  
                                             l5633 5F56                                               l5617 5DDE  
                                             l5609 75AE                                               l6267 740C  
                                             l6259 73EC                                               l6451 6712  
                                             l6435 66F4                                               l6427 66C6  
                                             l7147 6D12                                               l5467 6F6C  
                                             l5459 6F3A                                               l8123 7776  
                                             l8131 749A                                               l5483 7000  
                                             l5563 68BA                                               l5555 687E  
                                             l5547 6860                                               l5539 683E  
                                             l5635 5F92                                               l5619 5DFE  
                                             l5661 6478                                               l6269 740E  
                                             l6453 6722                                               l6429 66CE  
                                             l5397 6D66                                               l5469 6F72  
                                             l5581 7A06                                               l8125 7784  
                                             l8133 74AE                                               l5485 7010  
                                             l5477 6F94                                               l5557 688A  
                                             l5549 686A                                               l5637 5FA6  
                                             l5629 5EE6                                               l8141 7914  
                                             l5671 6560                                               l5663 649A  
                                             l6471 67A2                                               l6463 674A  
                                             l6455 6736                                               l6447 66FC  
                                             l5399 6D6A                                               l8127 7788  
                                             l8135 74BE                                               l5487 7034  
                                             l5479 6FC2                                               l5559 689A  
                                             l5591 6A62                                               l5583 69D0  
                                             l5639 5FCE                                               l8151 7678  
                                             l8143 791C                                               l5665 64A2  
                                             l5673 658A                                               l5657 6462  
                                             l6473 67B2                                               l6465 676A  
                                             l6457 6746                                               l6449 6710  
                                             l8137 74C2                                               l8129 748C  
                                             l8161 61E4                                               l5489 703A  
                                             l5585 69F0                                               l8153 7684  
                                             l8145 7654                                               l5667 6504  
                                             l5659 6466                                               l6475 67B4  
                                             l6467 677A                                               l5579 79F8  
                                             l8139 74E0                                               l8171 621E  
                                             l8163 61F4                                               l5587 6A2E  
                                             l5595 6A6E                                               l8147 7668  
                                             l8155 7688                                               l6469 67A0  
                                             l4893 6E2A                                               l8181 6272  
                                             l8173 622A                                               l8165 61FA  
                                             l8157 61A4                                               l5597 6A80  
                                             l5589 6A56                                               l8149 7674  
                                             l8431 738E                                               l8423 7340  
                                             l4895 6E3A                                               l8191 62DA  
                                             l8183 6278                                               l8175 6234  
                                             l8167 620A                                               l8159 61C8  
                                             l5951 7112                                               l5961 631E  
                                             l8441 796C                                               l8425 7340  
                                             l8601 6B8E                                               l4897 6E4A  
                                             l8193 62EA                                               l8177 623A  
                                             l8185 6294                                               l8169 6216  
                                             l5953 711A                                               l5971 63C0  
                                             l5963 6322                                               l8443 7984  
                                             l8435 794E                                               l8427 7358  
                                             l8603 6B9A                                               l8611 74F2  
                                             l4899 6E54                                               l8195 62F0  
                                             l8187 62AE                                               l8179 626C  
                                             l5955 7136                                               l5947 70E8  
                                             l5965 6334                                               l8437 794E  
                                             l8429 7372                                               l8541 7568  
                                             l8605 6BA6                                               l8613 7502  
                                             l8621 718E                                               l8701 59FC  
                                             l8197 6300                                               l8189 62C0  
                                             l5957 7156                                               l5949 70F0  
                                             l5975 641C                                               l5967 6356  
                                             l8439 7964                                               l8543 75AA  
                                             l8607 6BB2                                               l8615 750A  
                                             l8631 71D4                                               l8623 7192  
                                             l8711 5A66                                               l8703 5A0E  
                                             l5959 715E                                               l5969 635E  
                                             l5977 645E                                               l8537 7550  
                                             l8617 754C                                               l8625 7198  
                                             l8633 71E8                                               l8713 5A7C  
                                             l8721 5AE2                                               l8705 5A20  
                                             l8539 7560                                               l8571 6AE2  
                                             l8627 71AC                                               l8635 7222  
                                             l8643 789C                                               l8723 5AF8  
                                             l8731 5B40                                               l8715 5AB2  
                                             l8707 5A32                                               l8581 6B0A  
                                             l8573 6AE6                                               l8629 71C0  
                                             l8645 78AC                                               l8661 7308  
                                             l8653 72B4                                               l8733 5B5C  
                                             l8725 5B12                                               l8717 5ABC  
                                             l8709 5A4A                                               l8741 5404  
                                             l8591 6B4A                                               l8583 6B1E  
                                             l8575 6B06                                               l8647 78B4  
                                             l8663 730C                                               l8655 72C4  
                                             l8735 5B72                                               l8727 5B2C  
                                             l8719 5AD6                                               l8751 5484  
                                             l8743 541C                                               l8593 6B64  
                                             l8585 6B20                                               l8569 6ACE  
                                             l8681 7A78                                               l8833 7AA6  
                                             l8649 78D4                                               l8657 72C8  
                                             l8729 5B34                                               l8761 54E4  
                                             l8753 5496                                               l8745 542C  
                                             l8737 53F0                                               l8595 6B6A  
                                             l8587 6B30                                               l8659 72DC  
                                             l8691 5980                                               l8683 5944  
                                             l8771 557E                                               l8763 5500  
                                             l8755 54A8                                               l8747 543E  
                                             l8739 53F4                                               l8597 6B76  
                                             l8589 6B3E                                               l8693 5992  
                                             l8685 5948                                               l8765 5516  
                                             l8773 55B4                                               l8757 54BA  
                                             l8749 5466                                               l8599 6B82  
                                             l8695 59BA                                               l8687 5958  
                                             l8791 5648                                               l8775 55C6  
                                             l8783 55F6                                               l8767 554C  
                                             l8759 54CC                                               l8697 59D8  
                                             l8689 5970                                               l8785 560C  
                                             l8793 5654                                               l8777 55D0  
                                             l8769 5568                                               l8699 59EA  
                                             l8795 5670                                               l8787 5626  
                                             l8779 55EA                                               l8797 5686  
                                             l8789 5640                                               STR_1 10B6  
                                             STR_2 107A                                               STR_3 10A4  
                                             STR_4 107A                                               STR_5 10B6  
                                             STR_6 107A                                               STR_7 108D  
                                             STR_8 1071                                               STR_9 10A4  
                                             _LATA 0F89                                               _LATB 0F8A  
                                             _LATC 0F8B                                               _LATD 0F8C  
                                             _LATE 0F8D                                               u4020 6E3A  
                                             u4021 6E36                                               u4030 6E4A  
                                             u4031 6E46                                               u4040 6E70  
                                             u5000 6FC2                                               u4041 6E6C  
                                             u5001 6FBE                                               u4050 6EA2  
                                             u5010 7000                                               u4051 6E9E  
                                             u5011 6FFC                                               u5020 7034  
                                             u5100 6810                                               u5021 7030  
                                             u5110 683E                                               u5111 683A  
                                             u5120 6852                                               u5200 6A2E  
                                             u5121 684E                                               u5105 6806  
                                             u5201 6A2A                                               u6010 79BE  
                                             u5130 687A                                               u5210 6A56  
                                             u6011 79BA                                               u5131 6876  
                                             u5211 6A52                                               u6100 73EC  
                                             u6020 7050                                               u5140 689A  
                                             u5220 6A80                                               u5300 5E76  
                                             u6101 73E8                                               u6021 704C  
                                             u5141 6896                                               u5221 6A7C  
                                             u5301 5E72                                               u6110 741E  
                                             u6030 7060                                               u5150 68AA  
                                             u6111 741A                                               u6031 705C  
                                             u5151 68A6                                               u5400 649A  
                                             u6040 7082                                               u5240 6ABA  
                                             u5320 5EE2                                               u5401 6496  
                                             u6041 707E                                               u5241 6AB4  
                                             u5321 5EDE                                               u5090 67DC  
                                             u5250 6ABC                                               u5330 5F06  
                                             u5091 67D8                                               u5235 6A92  
                                             u5315 5E8A                                               u5180 7A06  
                                             u5340 5F22                                               u5316 5E94  
                                             u5181 7A02                                               u5341 5F1E  
                                             u5317 5EA4                                               u5414 64C2  
                                             u6054 70DA                                               u5190 6A10  
                                             u5350 5F76                                               u5270 75BC  
                                             u5415 64BE                                               u6055 70D6  
                                             u5335 5EFC                                               u5271 75B8  
                                             u5424 6524                                               u5360 5F92  
                                             u5280 5E26                                               u5425 6520  
                                             u5361 5F8E                                               u6090 73C2  
                                             u5370 5FCE                                               u5290 5E54  
                                             u6091 73BE                                               u5195 6A06  
                                             u5371 5FCA                                               u5355 5F6C  
                                             u5291 5E50                                               u4900 6DB8  
                                             u8100 61C8                                               u4901 6DB4  
                                             u8101 61C4                                               u5285 5E1C  
                                             u5390 6478                                               u6430 66E0  
                                             u4910 6DD6                                               u8030 77A8  
                                             u8110 61F4                                               u5391 6474  
                                             u6431 66DC                                               u4911 6DD2  
                                             u8031 77A4                                               u8111 61F0  
                                             u6440 66F0                                               u4920 6DF2  
                                             u8040 749A                                               u8120 620A  
                                             u6441 66EC                                               u4921 6DEE  
                                             u8041 7496                                               u8121 6206  
                                             u6450 6722                                               u4930 6E18  
                                             u8050 74E0                                               u8130 62AE  
                                             u6451 671E                                               u4931 6E14  
                                             u8051 74DC                                               u8131 62AA  
                                             u5900 6434                                               u6460 677A  
                                             u4940 6EF6                                               u8140 62C0  
                                             u8060 794C                                               u5901 642E  
                                             u6461 6776                                               u4941 6EF2  
                                             u8141 62BC                                               u8061 7948  
                                             u5910 6436                                               u6470 67B2  
                                             u4950 6F10                                               u8150 62DA  
                                             u8070 76A2                                               u6471 67AE  
                                             u4951 6F0C                                               u8151 62D6  
                                             u8071 769E                                               u6480 67C4  
                                             u4880 6D78                                               u4960 6F2A  
                                             u8160 62EA                                               u8080 61B4  
                                             u5840 7112                                               u6481 67C0  
                                             u4881 6D74                                               u4961 6F26  
                                             u8161 62E6                                               u8081 61AE  
                                             u5841 710E                                               u7370 6D12  
                                             u4890 6D92                                               u4970 6F48  
                                             u8090 61B6                                               u5850 7184  
                                             u7371 6D0E                                               u4891 6D8E  
                                             u4971 6F44                                               u5851 7180  
                                             u5860 6334                                               u4980 6F5E  
                                             u5861 6330                                               u4981 6F5A  
                                             u5870 6356                                               u4990 6F82  
                                             u5871 6352                                               u4991 6F7E  
                                             u8600 72C4                                               u8601 72C0  
                                             u8610 7302                                               u5884 637E  
                                             u5980 7432                                               u8540 7560  
                                             u8620 732E                                               u8700 5A20  
                                             u5885 637A                                               u5981 742E  
                                             u8541 755C                                               u8701 5A1C  
                                             u5894 63E0                                               u5990 7454  
                                             u8630 733E                                               u8710 5A32  
                                             u5895 63DC                                               u5991 7450  
                                             u8631 733A                                               u8711 5A2E  
                                             u8560 6AE2                                               u8720 5A4A  
                                             u8800 54E4                                               u8561 6ADE  
                                             u8617 72F8                                               u8721 5A46  
                                             u8801 54E0                                               u8570 6B30  
                                             u8730 5AF8                                               u8650 5980  
                                             u8810 55C6                                               u8571 6B2C  
                                             u8627 7324                                               u8731 5AF4  
                                             u8651 597C                                               u8811 55C2  
                                             u8580 7502                                               u8660 5992  
                                             u8820 560C                                               u8740 542C  
                                             u8581 74FE                                               u8661 598E  
                                             u8821 5608                                               u8741 5428  
                                             u8590 78AC                                               u8670 59EA  
                                             u8750 543E                                               u8591 78A8  
                                             u8671 59E6                                               u8751 543A  
                                             u8680 59FC                                               u8760 5496  
                                             u8681 59F8                                               u8761 5492  
                                             u8690 5A0E                                               u8770 54A8  
                                             u8691 5A0A                                               u8771 54A4  
                                             u8780 54BA                                               u8781 54B6  
                                             u8790 54CC                                               u8791 54C8  
                                 ??_initialize_var 0001                                               abs@a 0007  
                                             _lcd1 00F9                                               _dbuf 0200  
                   gpio_pin_read_logic@_pin_config 0001                                               _cp_h 106D  
                                             _cp_l 1069                                               _dp_h 1009  
                                             _dp_l 1001                                               _labs 75AE  
                                             _main 3DF6                                               _dtoa 61A4  
                                             _num1 01F6                                               _num2 01F2  
                                             _num3 01EE                          lcd_4bit_set_curser@column 0014  
                                             _prec 00D4                                               _powf 10E4  
                                             pad@i 0015                                               pad@p 0012  
                                             fsr0h 0FEA                                               fsr1h 0FE2  
                                             indf0 0FEF                                               fsr2h 0FDA  
                                             fsr0l 0FE9                                               indf1 0FE7  
                                             indf2 0FDF                                               fsr1l 0FE1  
                                             fsr2l 0FD9                  lcd_4bit_send_char_data_pos@column 001A  
                                    ___fpclassifyf 69D0                                               prodh 0FF4  
                                             prodl 0FF3                                               start 0000  
                                  ___fldiv@new_exp 0053                         ecu_keypad_get_value@keypad 000B  
                        lcd_send_4bit@command_data 000C                                       ___param_bank 0000  
                       ??_multiplication_operation 003B                              _lcd_4bit_send_command 7550  
                                            ??_abs 0009                               _gpio_pin_write_logic 6462  
                   lcd_4bit_send_string_pos@column 001A                                              ??_pad 0014  
                                     _total_result 00DF                                              l12001 3C10  
                                            l12011 3C38                                              l12003 3C16  
                                            l12021 3C6C                                              l12005 3C1E  
                                            l12013 3C3E                                              l12031 3D22  
                                            l12023 3CC4                                              l12015 3C50  
                                            l12007 3C2E                                              l12103 5886  
                                            l11401 44CA                                              l12201 6172  
                                            l12041 3D92                                              l12033 3D3E  
                                            l12025 3CF8                                              l12017 3C62  
                                            l12009 3C32                                              l12113 58E8  
                                            l12105 58B0                                              l11411 4528  
                                            l11403 44CE                                              l11331 43AA  
                                            l12203 6182                                              l12211 4C78  
                                            l12043 3DAA                                              l12035 3D46  
                                            l12027 3D00                                              l12019 3C66  
                                            l12107 58BE                                              l12115 5914  
                                            l11501 47CA                                              l11421 455E  
                                            l11413 453E                                              l11405 44D2  
                                            l11333 43BA                                              l11341 43E4  
                                            l11325 438E                                              l12205 6190  
                                            l12301 5CEA                                              l12221 4D08  
                                            l12213 4C88                                              l12045 3DBA  
                                            l12037 3D54                                              l12029 3D04  
                                            l12061 56FA                                              l12053 56BE  
                                            l11511 4810                                              l11503 47CC  
                                            l11431 45AE                                              l11423 4568  
                                            l11415 454A                                              l11407 44FC  
                                            l11351 4414                                              l11343 43F4  
                                            l11335 43CA                                              l11327 439A  
                                            l12207 6192                                              l12303 5D06  
                                            l12311 5D66                                              l12215 4CBC  
                                            l12047 3DD0                                              l12039 3D84  
                                            l12071 5760                                              l12063 571C  
                                            l12055 56E0                                              l12119 5920  
                                            l12143 77AA                                              l11601 5210  
                                            l11521 483A                                              l11513 481E  
                                            l11505 47DC                                              l11441 45EA  
                                            l11433 45BE                                              l11425 458A  
                                            l11417 454E                                              l11409 4518  
                                            l11361 4454                                              l11353 4422  
                                            l11345 43FA                                              l11337 43DA  
                                            l11329 43A8                                              l12313 5D98  
                                            l12305 5D3A                                              l12233 4D7C  
                                            l12241 4DA8                                              l12217 4CEA  
                                            l12225 4D1C                                              l12401 15AE  
                                            l12321 1104                                              l12049 3DD8  
                                            l12081 57B2                                              l12073 577C  
                                            l12065 5724                                              l12057 56E8  
                                            l12145 77B2                                              l12161 7758  
                                            l12153 772A                                              l11611 525E  
                                            l11603 521C                                              l11531 5070  
                                            l11523 483C                                              l11515 4824  
                                            l11507 47EC                                              l11451 4630  
                                            l11443 45F8                                              l11435 45CC  
                                            l11427 459A                                              l11419 455C  
                                            l11371 448E                                              l11363 4456  
                                            l11355 4424                                              l11347 440C  
                                            l11339 43DC                                              l12171 6056  
                                            l12315 5DCC                                              l12307 5D42  
                                            l12251 4E34                                              l12243 4DFC  
                                            l12235 4D8A                                              l12227 4D3A  
                                            l12219 4CF8                                              l12411 1642  
                                            l12403 15C4                                              l12323 114C  
                                            l12083 57BC                                              l12075 5794  
                                            l12067 5738                                              l12059 56F6  
                                            l12147 77C2                                              l12155 7738  
                                            l11613 5274                                              l11621 52A4  
                                            l11605 523A                                              l11541 50A4  
                                            l11533 5072                                              l11517 4826  
                                            l11509 480C                                              l11461 46AC  
                                            l11453 4664                                              l11445 45FA  
                                            l11437 45DA                                              l11381 44A2  
                                            l11373 4492                                              l11357 4434  
                                            l11365 445E                                              l11349 440E  
                                            l12181 6094                                              l12173 606C  
                                            l12165 5FF2                                              l11701 4932  
                                            l12309 5D5E                                              l12261 4F08  
                                            l12253 4E9C                                              l12245 4E10  
                                            l12229 4D68                                              l12501 1B56  
                                            l12413 1688                                              l12405 15F0  
                                            l12341 120C                                              l12333 1190  
                                            l13301 57F8                                              l12085 57CE  
                                            l12093 57E4                                              l12077 579E  
                                            l12069 5744                                              l12149 77DE  
                                            l12157 7740                                              l13311 6448  
                                            l11623 52B2                                              l11615 527A  
                                            l11607 523C                                              l11551 50D6  
                                            l11535 5082                                              l11543 50AC  
                                            l11527 5056                                              l11519 482C  
                                            l11471 46E8                                              l11463 46BC  
                                            l11455 4666                                              l11447 4604  
                                            l11439 45E6                                              l11391 44B6  
                                            l11383 44A6                                              l11375 4496  
                                            l11367 446E                                              l11359 4444  
                                            l12191 611C                                              l12183 60C6  
                                            l12167 6002                                              l11711 4972  
                                            l12271 4FC4                                              l12263 4F46  
                                            l12255 4EAA                                              l12247 4E1A  
                                            l12511 1BF8                                              l12503 1B68  
                                            l12415 16A4                                              l12407 15FE  
                                            l12423 16F2                                              l12351 1276  
                                            l12343 121C                                              l12335 11B2  
                                            l12327 1160                                              l12319 10E4  
                                            l13303 589A                                              l12087 57D4  
                                            l12095 5816                                              l12159 7748  
                                            l11633 531C                                              l11641 5364  
                                            l11625 52B6                                              l11617 5284  
                                            l11609 524C                                              l11561 510A  
                                            l11553 50D8                                              l11545 50BC  
                                            l11537 5092                                              l11529 5062  
                                            l11801 68CC                                              l11481 4714  
                                            l11473 46EA                                              l11457 4676  
                                            l11449 460A                                              l11393 44BA  
                                            l11385 44AA                                              l11377 449A  
                                            l11369 4480                                              l12193 612A  
                                            l12185 60C8                                              l12177 6080  
                                            l12169 6010                                              l11721 49BC  
                                            l11713 497E                                              l11705 4946  
                                            l12281 5BD6                                              l12265 4F8E  
                                            l12257 4ED4                                              l12249 4E26  
                                            l12601 2586                                              l12521 1C70  
                                            l12513 1C10                                              l12505 1B78  
                                            l12441 1772                                              l12425 1702  
                                            l12417 16BA                                              l12409 1632  
                                            l12353 1350                                              l12345 122A  
                                            l12337 11D4                                              l12329 117C  
                                            l13305 5906                                              l12097 5836  
                                            l12089 57DC                                              l11651 53CE  
                                            l11643 537E                                              l11635 5328  
                                            l11627 52C4                                              l11619 5292  
                                            l11571 5150                                              l11555 50E8  
                                            l11563 5112                                              l11547 50C2  
                                            l11539 50A2                                              l11811 6956  
                                            l11803 68FA                                              l11491 474C  
                                            l11475 46F8                                              l11467 46D0  
                                            l11483 4716                                              l11459 4686  
                                            l11395 44BE                                              l11387 44AE  
                                            l11379 449E                                              l12195 6148  
                                            l12187 60D4                                              l12179 6088  
                                            l11731 4A0E                                              l11723 49C8  
                                            l11715 4996                                              l11707 4952  
                                            l12291 5C6A                                              l12283 5C0A  
                                            l12267 4F98                                              l12259 4EF4  
                                            l12611 2764                                              l12603 25BA  
                                            l12531 1D92                                              l12523 1C8C  
                                            l12507 1BD0                                              l12443 1796  
                                            l12435 172A                                              l12427 1710  
                                            l12419 16DE                                              l12371 1424  
                                            l12363 13CC                                              l12355 139C  
                                            l12347 1246                                              l13307 71FC  
                                            l12099 585E                                              l13309 6574  
                                            l11653 53DC                                              l11645 5394  
                                            l11637 5336                                              l11629 52F2  
                                            l11581 5178                                              l11573 5154  
                                            l11565 5122                                              l11557 50F8  
                                            l11549 50C8                                              l11813 6968  
                                            l11805 690A                                              l11477 4700  
                                            l11469 46DA                                              l11485 4724  
                                            l11397 44C2                                              l11389 44B2  
                                            l12197 614A                                              l12189 6110  
                                            l11741 4A8C                                              l11733 4A1E  
                                            l11725 49D8                                              l11717 49A2  
                                            l11709 495C                                              l12293 5C86  
                                            l12285 5C12                                              l12277 5BAA  
                                            l12269 4FAE                                              l12701 2F80  
                                            l12621 2846                                              l12613 2774  
                                            l12605 2686                                              l12541 1E68  
                                            l12533 1DA2                                              l12525 1C9C  
                                            l12517 1C38                                              l12509 1BE8  
                                            l12445 17A4                                              l12453 17C2  
                                            l12437 1740                                              l12381 148A  
                                            l12373 1432                                              l12365 13EE  
                                            l12357 13B8                                              l12349 125A  
                                            l11901 3624                                              l11655 53E2  
                                            l11647 53AE                                              l11639 5360  
                                            l11591 51C6                                              l11567 5138  
                                            l11559 5108                                              l11815 6976  
                                            l11807 6938                                              l11823 79C0  
                                            l11495 4776                                              l11487 4728  
                                            l11479 4704                                              l11399 44C6  
                                            l12199 614E                                              l11751 4B06  
                                            l11743 4AC2                                              l11735 4A3A  
                                            l11727 49E4                                              l11719 49AE  
                                            l11671 486A                                              l12287 5C2E  
                                            l12295 5C92                                              l12279 5BBA  
                                            l12711 30F0                                              l12703 2FB4  
                                            l12631 2988                                              l12615 278E  
                                            l12607 26AC                                              l12551 1FCE  
                                            l12543 1EB6                                              l12535 1DB2  
                                            l12527 1CEA                                              l12519 1C5C  
                                            l12623 287A                                              l12439 1750  
                                            l12391 1534                                              l12383 1498  
                                            l12375 145A                                              l12367 13FC  
                                            l11911 371A                                              l11903 3662  
                                            l11831 340E                                              l11657 53E4  
                                            l11649 53CA                                              l11593 51D6  
                                            l11585 518C                                              l11569 5148  
                                            l11577 5168                                              l11817 69C6  
                                            l11809 6948                                              l11825 79D6  
                                            l11497 4782                                              l11489 4736  
                                            l11761 4B66                                              l11753 4B18  
                                            l11745 4AD0                                              l11737 4A46  
                                            l11729 49F4                                              l11681 48B0  
                                            l11673 487A                                              l11665 484E  
                                            l12297 5CAE                                              l12289 5C62  
                                            l12721 32A8                                              l12713 3148  
                                            l12705 2FE8                                              l12633 29BC  
                                            l12625 28A4                                              l12617 27C2  
                                            l12609 2730                                              l12561 2162  
                                            l12553 2002                                              l12545 1EEA  
                                            l12537 1DCC                                              l12529 1D5E  
                                            l12481 1948                                              l12473 1830  
                                            l12457 17D6                                              l12393 154C  
                                            l12385 14E4                                              l11921 37AC  
                                            l11913 3722                                              l11905 3694  
                                            l11841 345A                                              l11833 3414  
                                            l11595 51DE                                              l11587 51A6  
                                            l11579 5178                                              l11819 69CC  
                                            l11827 79E6                                              l11499 4790  
                                            l11771 4BD4                                              l11755 4B26  
                                            l11747 4AEE                                              l11739 4A62  
                                            l11691 48DC                                              l11683 48B6  
                                            l11675 488A                                              l11667 485A  
                                            l12299 5CE2                                              l12731 33A0  
                                            l12723 32DC                                              l12715 31A0  
                                            l12707 3040                                              l12635 29CC  
                                            l12627 28FC                                              l12619 2812  
                                            l12571 22AE                                              l12563 21BA  
                                            l12555 205A                                              l12547 1F42  
                                            l12539 1E16                                              l12491 1A8A  
                                            l12483 197C                                              l12475 1864  
                                            l12459 17FA                                              l12395 155A  
                                            l12387 14FC                                              l12379 146E  
                                            l11931 37DE                                              l11923 37B8  
                                            l11907 36D2                                              l11851 3498  
                                            l11843 3464                                              l11835 3424  
                                            l13291 4064                                              l11597 51EE  
                                            l11589 51B6                                              l11781 4C3C  
                                            l11765 4B90                                              l11773 4BD8  
                                            l11757 4B2A                                              l11749 4AF8  
                                            l11693 48EC                                              l11685 48BC  
                                            l11677 489A                                              l11669 4868  
                                            l12733 33E0                                              l12725 3310  
                                            l12717 321C                                              l12709 3098  
                                            l12645 29F4                                              l12629 2954  
                                            l12581 2374                                              l12573 22E2  
                                            l12565 21EE                                              l12557 20B2  
                                            l12549 1F9A                                              l12493 1ABE  
                                            l12485 19B0                                              l12477 18BC  
                                            l12469 181C                                              l11941 3826  
                                            l11933 37EC                                              l11925 37C0  
                                            l11909 36E6                                              l11917 3762  
                                            l11861 34E0                                              l11853 34A0  
                                            l11845 346C                                              l11837 3432  
                                            l12741 76EA                                              l12901 4234  
                                            l13293 40A8                                              l11599 5202  
                                            l11791 4C66                                              l11783 4C4C  
                                            l11775 4BF2                                              l11767 4B9C  
                                            l11759 4B38                                              l11695 48FC  
                                            l11687 48CA                                              l11679 48A0  
                                            l12735 33F8                                              l12727 3320  
                                            l12719 3274                                              l12663 2AD8  
                                            l12671 2B5E                                              l12647 2A0C  
                                            l12655 2A8A                                              l12591 24C0  
                                            l12583 23A8                                              l12575 2316  
                                            l12567 2222                                              l12559 210A  
                                            l12487 1A60                                              l12479 18F0  
                                            l12495 1AF6                                              l12399 1592  
                                            l11951 393A                                              l11943 3836  
                                            l11935 3804                                              l11927 37C8  
                                            l11919 379C                                              l11863 34E6  
                                            l11847 347C                                              l11855 34A4  
                                            l11839 3436                                              l12743 7706  
                                            l12751 761C                                              l12911 42E8  
                                            l12903 4260                                              l13295 41AE  
                                            l12831 3E26                                              l12823 3DF6  
                                            l11785 4C5A                                              l11777 4C06  
                                            l11769 4BAA                                              l11697 4902  
                                            l11689 48CC                                              l12729 3354  
                                            l12681 2D6E                                              l12673 2BC0  
                                            l12665 2AF4                                              l12657 2AC4  
                                            l12593 24F4                                              l12585 23DC  
                                            l12577 234A                                              l12569 227A  
                                            l12497 1B06                                              l12489 1A70  
                                            l12761 6598                                              l11961 39DA  
                                            l11945 384A                                              l11953 3940  
                                            l11937 3816                                              l11929 37CC  
                                            l11881 356A                                              l11865 34EE  
                                            l11857 34CA                                              l11873 3528  
                                            l11849 348C                                              l12753 7638  
                                            l12745 7604                                              l12921 437A  
                                            l13297 42BA                                              l12905 428C  
                                            l13289 3FE0                                              l12841 3E96  
                                            l12833 3E40                                              l12825 3DFA  
                                            l11795 76A4                                              l11787 4C5C  
                                            l11779 4C20                                              l11699 4922  
                                            l12691 2E34                                              l12683 2DA2  
                                            l12675 2BD0                                              l12667 2B4A  
                                            l12595 2504                                              l12587 2410  
                                            l12579 235A                                              l12499 1B22  
                                            l12771 669E                                              l11971 3AB6  
                                            l11963 3A0C                                              l11955 395E  
                                            l11947 38AE                                              l11939 381E  
                                            l11883 3572                                              l11875 354E  
                                            l11891 358A                                              l11867 3502  
                                            l11859 34DC                                              l12747 7604  
                                            l13299 4316                                              l12915 4300  
                                            l12851 3EF8                                              l12843 3EAE  
                                            l12835 3E4C                                              l12827 3DFE  
                                            l11797 76B4                                              l11789 4C62  
                                            l12693 2E68                                              l12685 2DD6  
                                            l12677 2BF2                                              l12597 251E  
                                            l12589 2444                                              l12773 66A0  
                                            l12765 65AC                                              l12757 658E  
                                            l12781 7860                                              l11981 3B18  
                                            l11973 3ABC                                              l11965 3A1C  
                                            l11957 3992                                              l11949 3906  
                                            l11893 35A4                                              l11877 3560  
                                            l11869 350C                                              l12749 7618  
                                            l12917 4344                                              l12909 42A4  
                                            l12861 3F5E                                              l12853 3F10  
                                            l12845 3EC4                                              l12837 3E64  
                                            l12829 3E0A                                              l12783 78D8  
                                            l12695 2EC0                                              l12687 2DE6  
                                            l12679 2D5E                                              l12599 2552  
                                            l12775 66A2                                              l12767 65CC  
                                            l12759 6594                                              l11991 3BB2  
                                            l11983 3B20                                              l11975 3AF0  
                                            l11967 3A2C                                              l11959 39C4  
                                            l11879 3564                                              l12791 6C56  
                                            l12919 4360                                              l12871 3FF6  
                                            l12863 3F74                                              l12855 3F26  
                                            l12847 3EE0                                              l12839 3E7A  
                                            l12697 2F18                                              l12689 2E00  
                                            l12769 6600                                              l11993 3BD2  
                                            l11985 3B26                                              l11977 3B04  
                                            l11969 3A60                                              l11897 35EA  
                                            l12793 6C6C                                              l12785 6BC0  
                                            l12777 77E8                                              l12873 4022  
                                            l12865 3FA0                                              l12857 3F3A  
                                            l12699 2F4C                                              l11995 3BEE  
                                            l11987 3B2E                                              l11979 3B08  
                                            l11899 35F0                                              l12795 6C78  
                                            l12787 6C18                                              l12779 7824  
                                            l12891 415A                                              l12883 4092  
                                            l12859 3F4C                                              l11997 3BFC  
                                            l11989 3B3A                                              l12797 6C84  
                                            l12789 6C3A                                              l12885 40D6  
                                            l12877 404E                                              l12869 3FCC  
                                            l11999 3C0C                                              l12887 4102  
                                            l12879 407A                                              l12895 419A  
                                            l12897 41DC                                              l12889 412E  
                                            l12899 4208                                      ___fltol@sign1 0009  
                                            ?_labs 0001                                    __end_of___fladd 484E  
                                            ?_main 0001                                              ?_dtoa 0017  
                                  __end_of___fldiv 53F0                                    __end_of___awdiv 6E2A  
                                  __end_of___flneg 79F8                                              STR_10 107A  
                                            STR_11 10D3                                              STR_12 10E0  
                                            STR_14 10E0                                              STR_15 10C5  
                                            STR_16 10D8                                              STR_19 10DC  
                                  __end_of___awmod 6F94                                    __end_of___flmul 4C78  
                                            ?_powf 006F                                    __end_of___flsub 76EA  
                                  __end_of___fltol 68CC                                              u12000 4BF2  
                                            u12001 4BEE                                              u12010 4C20  
                                            u12011 4C1C                                              u11300 448E  
                                            u11220 43A8                                              u12020 4C5A  
                                            u12100 347C                                              u11301 448A  
                                            u11221 43A4                                              u12021 4C56  
                                            u12101 3478                                              u12030 68FA  
                                            u11310 44FC                                              u11230 43BA  
                                            u12110 348C                                              u12031 68F6  
                                            u11311 44F8                                              u11231 43B6  
                                            u12111 3488                                              u12040 6938  
                                            u11400 45DA                                              u11320 4514  
                                            u11240 43CA                                              u13000 15C4  
                                            u12200 375E                                              u12120 34CA  
                                            u12041 6934                                              u11401 45D6  
                                            u11321 450E                                              u11241 43C6  
                                            u13001 15C0                                              u12201 375A  
                                            u12121 34C6                                              u12050 6956  
                                            u11410 45F8                                              u11330 4516  
                                            u11250 440C                                              u13010 15E0  
                                            u12210 3794                                              u12130 34DC  
                                            u12051 6952                                              u11411 45F4  
                                            u11251 4408                                              u13011 15DC  
                                            u12211 3790                                              u12131 34D8  
                                            u12060 6976                                              u11500 4736  
                                            u11420 4630                                              u11340 453E  
                                            u11260 4422                                              u13100 1796  
                                            u13020 15FE                                              u12300 3AB6  
                                            u12220 37AC                                              u12140 354E  
                                  ___awdiv@divisor 0003                                              u12061 6972  
                                            u11501 4732                                              u11421 462C  
                                            u11341 453A                                              u11261 441E  
                                            u13101 1792                                              u13021 15FA  
                                            u12301 3AB2                                              u12221 37A8  
                                            u12141 354A                                              u12070 69C6  
                                            u11510 474C                                              u11430 4676  
                                            u11350 455C                                              u11270 4434  
                                            u13110 17A4                                              u13030 1642  
                                            u12310 3B04                                              u12230 37DE  
                                            u12150 3560                                              u12071 69C2  
                                            u11511 4748                                              u11431 4672  
                                            u11351 4558                                              u11271 4430  
                                            u13111 17A0                                              u13031 163E  
                                            u12311 3B00                                              u12231 37DA  
                                            u12151 355C                                              u12080 79D6  
                                            u11600 483A                                              u11520 4762  
                                            u11440 46AC                                              u11360 457C  
                                            u11280 4444                                              u13200 2A0C  
                                            u13120 17FA                                              u13040 1688  
                                            u12400 3DBA                                              u12320 3BB2  
                                            u12240 37EC                                              u12160 35D6  
                                            u12081 79D2                                              u11601 4836  
                                            u11521 475E                                              u11441 46A8  
                                            u11361 4578                                              u11281 4440  
                                            u13201 2A08                                              u13121 17F6  
                                            u13041 1684                                              u12401 3DB6  
                                            u12321 3BAE                                              u12241 37E8  
                                            u12161 35D2                                              u11610 5070  
                                            u11530 4776                                              u11450 46BC  
                                            u11370 458A                                              u11290 4480  
                                            u13210 2A86                                              u13130 1818  
                                            u13050 16BA                                              u12330 3BEE  
                                            u12250 3816                                              u12170 3662  
                                            u12090 3432                                              u12410 56E0  
                                            u11611 506C                                              u11531 4772  
                                            u11451 46B8                                              u11371 4586  
                                            u11291 447C                                              u13211 2A82  
                                            u13131 1814                                              u13051 16B6  
                                            u12331 3BEA                                              u12251 3812  
                                            u12171 365E                                              u12091 342E  
                                            u12411 56DC                                              u11700 5210  
                                            u11620 5082                                              u11540 4790  
                                            u11460 46E8                                              u11380 459A  
                                            u12500 60C2                                              u13220 2AC4  
                                            u13140 1B22                                              u13060 1710  
                                            u12340 3BFC                                              u12260 395E  
                                            u12180 3694                                              u12420 571C  
                                            u11701 520C                                              u11621 507E  
                                            u11541 478C                                              u11461 46E4  
                                            u11381 4596                                              u12501 60BE  
                                            u13221 2AC0                                              u13141 1B1E  
                                            u13061 170C                                              u12341 3BF8  
                                            u12261 395A                                              u12181 3690  
                                            u12421 5718                                              u11710 523A  
                                            u11630 5092                                              u11550 47CA  
                                            u11470 46F8                                              u11390 45CC  
                                            u12510 610C                                              u13310 2D5E  
                                            u13230 2AF4                                              u13070 1726  
                                            u12350 3C50                                              u12270 39C4  
                                            u12190 36D2                                              u12430 5760  
                                            u11711 5236                                              u11631 508E  
                                            u11551 47C6                                              u11471 46F4  
                                            u11391 45C8                                              u12511 6108  
                                            u13311 2D5A                                              u13231 2AF0  
                                            u13071 1722                                              u12351 3C4C  
                                            u12271 39C0                                              u12191 36CE  
                                            u12431 575C                                              u11800 5336  
                                            u11720 525E                                              u11640 50D6  
                                            u11560 47DC                                              u11480 4714  
                                            u12520 612A                                              u12600 4D3A  
                                            u13240 2B4A                                              u13160 1C34  
                                            u13080 1740                                              u12360 3D22  
                                            u12280 3A0C                                              u12440 577C  
                                            u11801 5332                                              u11721 525A  
                                            u11641 50D2                                              u11561 47D8  
                                            u11481 4710                                              u12521 6126  
                                            u12601 4D36                                              u13305 2D24  
                                            u13241 2B46                                              u13161 1C30  
                                            u13081 173C                                              u12361 3D1E  
                                            u12281 3A08                                              u12441 5778  
                                            u11810 537E                                              u11730 5274  
                                            u11650 50E8                                              u11570 47EC  
                                            u11490 4724                                              u12530 613A  
                                            u12610 4D68                                              u13306 2D2E  
                                            u13170 1C5C                                              u13090 1772  
                                            u12370 3D3E                                              u12290 3A1C  
                                            u12450 5832                                              u11811 537A  
                                            u11731 5270                                              u11651 50E4  
                                            u11571 47E8                                              u11491 4720  
                                            u12531 6136                                              u12611 4D64  
                                            u13307 2D3E                                              u13171 1C58  
                                            u13155 1B8C                                              u13091 176E  
                                            u12371 3D3A                                              u12291 3A18  
                                            u12451 582E                                              u11820 53AE  
                                            u11740 5292                                              u11660 50F8  
                                            u11580 480C                                              u12540 6148  
                                            u11900 4922                                              u12620 4D8A  
                                            u13340 33A0                                              u13260 2BF2  
                                            u13156 1B96                                              u12380 3DA4  
                                            u12460 77DE                                              u13420 3EF4  
                                            u11821 53AA                                              u11741 528E  
                                            u11661 50F4                                              u11581 4808  
                                            u12541 6144                                              u11901 491E  
                                            u12621 4D86                                              u13341 339C  
                                            u13325 3332                                              u13261 2BEE  
                                            u13157 1BA6                                              u12381 3D9E  
                                            u12461 77DA                                              u13421 3EF0  
                                            u11830 53DC                                              u11750 52B2  
                                            u11670 5138                                              u11590 481E  
                                            u12550 6182                                              u12470 6002  
                                            u11910 4932                                              u12710 5BD6  
                                            u13350 33F8                                              u13190 29F0  
                                            u12390 3DA6                                              u13430 3F3A  
                                            u11831 53D8                                              u11751 52AE  
                                            u11671 5134                                              u11591 481A  
                                            u12551 617E                                              u12471 5FFE  
                                            u11911 492E                                              u12711 5BD2  
                                            u13351 33F4                                              u13335 3368  
                                            u13255 2B8C                                              u13191 29EC  
                                            u13431 3F36                                              u11760 52C4  
                                            u11680 5178                                              u12560 6190  
                                            u12480 6010                                              u11920 4AAC  
                                            u11840 4868                                              u12720 5C2E  
                                            u12640 4DFC                                              u13336 3372  
                                            u13256 2B96                                              u12800 11B2  
                                            u13360 7618                                              u13440 3F4C  
                                            u11761 52C0                                              u11681 5174  
                                            u12561 618C                                              u12481 600C  
                                            u11841 4864                                              u12721 5C2A  
                                            u12705 5030                                              u12641 4DF8  
                                            u13337 3382                                              u13257 2BA6  
                                            u13185 1E28                                              u12801 11AE  
                                            u13361 7614                                              u13441 3F48  
                                            u11770 52F2                                              u11690 51EE  
                                            u12490 606C                                              u11930 4B06  
                                            u11850 487A                                              u12730 5C86  
                                            u12650 4E34                                              u12570 4CBC  
                                            u12810 11D4                                              u13370 65A8  
                                            u13450 3F5E                                              u11771 52EE  
                                            u11691 51EA                                              u12491 6068  
                                            u11931 4B02                                              u11851 4876  
                                            u12731 5C82                                              u12651 4E30  
                                            u12635 4DBC                                              u12571 4CB8  
                                            u13275 2C0A                                              u12811 11D0  
                                            u13371 65A4                                              u13507 550A  
                                            u13451 3F5A                                              u11780 5308  
                                            u11940 4B26                                              u11860 488A  
                                            u12740 5CAE                                              u12660 4EAA  
                                            u12636 4DC6                                              u12580 4CEA  
                                            u13276 2C14                                              u12900 13B8  
                                            u12820 122A                                              u13380 66B4  
                                            u13460 3F70                                              u11781 5304  
                                            u11941 4B22                                              u11925 4AA2  
                                            u11861 4886                                              u12741 5CAA  
                                            u12661 4EA6                                              u12637 4DD6  
                                            u12581 4CE6                                              u13285 2C62  
                                            u13277 2C24                                              u12901 13B4  
                                            u12821 1226                                              u13381 66B0  
                                            u13517 553C                                              u13461 3F6C  
                                            u11790 531C                                              u11950 4B38  
                                            u11870 48CA                                              u12750 5D06  
                                            u12670 4F46                                              u12590 4CF8  
                                            u13286 2C6C                                              u12910 13EE  
                                            u12830 1246                                              u13390 6C18  
                                            u11791 5318                                              u11951 4B34  
                                            u11871 48C6                                              u12751 5D02  
                                            u12671 4F42                                              u12591 4CF4  
                                            u13295 2CAA                                              u13287 2C7C  
                                            u12911 13EA                                              u12831 1242  
                                            u13607 5B98                                              u13527 5572  
                                            u13391 6C14                                              u11960 4B66  
                                            u11880 48DC                                              u12760 5D5E  
                                            u12680 4FAE                                              u13296 2CB4  
                                            u12920 13FC                                              u12840 1276  
                                            u11961 4B62                                              u11881 48D8  
                                            u12761 5D5A                                              u12681 4FAA  
                                            u13297 2CC4                                              u12921 13F8  
                                            u12841 1272                                              u13617 673C  
                                            u13537 55A4                                              u11970 4B7C  
                                            u11890 48EC                                              u12690 4FC4  
                                            u12930 1432                                              u13627 6B36  
                                            u11971 4B78                                              u11891 48E8  
                                            u12691 4FC0                                              u12931 142E  
                                            u13547 567A                                              u11980 4B90  
                                            u12940 148A                                              u12780 114C  
                                            u13637 6B50                                              u11981 4B8C  
                                            u12941 1486                                              u12781 1148  
                                            u13557 56AC                                              u13477 3E32  
                                            u11990 4BAA                                              u12950 1498  
                                            u12870 1326                                              u12790 117C  
                                            u13647 6B66                                              u11991 4BA6  
                                            u12775 5D78                                              u12951 1494  
                                            u12855 128A                                              u12791 1178  
                                            u13567 5962                                              u13487 436C  
                                            u12960 14FC                                              u12880 1350  
                                            u12856 1294                                              u13657 7966  
                                            u12961 14F8                                              u12881 134C  
                                            u12865 12D4                                              u12857 12A4  
                                            u13577 5A70                                              u13497 540E  
                                            u12970 154C                                              u12890 139C  
                                            u12866 12DE                                              u12971 1548  
                                            u12891 1398                                              u12875 131C  
                                            u12867 12EE                                              u13587 5AA2  
                                            u12980 155A                                              u12981 1556  
                                            u13597 5B66                                              u12990 15AE  
                                            u12991 15AA                                    ___awdiv@counter 0005  
                                     vfpfcnvrt@fmt 0078                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                             ?_ecu_keypad_initialize 000F  
                                            _lg2_h 102D                                              _lg2_l 1029  
                                            _flags 00D6                                read_prec_or_width@c 0009  
                                            _errno 01E6                                read_prec_or_width@n 000A  
                                            _ivln2 101D                                              _fputc 6E2A  
                                            _fputs 776A                                    __end_of_ivln2_h 1069  
                                            _temp1 01EC                                    __end_of_ivln2_l 101D  
                                            _temp2 01EA                                              _two24 1061  
                                  __end_of_scalbnf 5DDE                                              labs@a 0001  
                                            pad@fp 000F                                              _width 00D2  
                                            _putch 7AAC                                              dtoa@d 0018  
                                            dtoa@i 0021                                              dtoa@p 001E  
                                            _sqrtf 4C78                                              dtoa@s 0020  
                                            dtoa@w 001C                          convert_arr_to_float@count 0090  
               __end_of_Application_Initialization 7AAC                         _Application_Initialization 7AA6  
                                            tablat 0FF5                                              powf@i 0128  
                                            powf@j 01A8                                              powf@k 01A4  
                                            powf@n 0188                                              powf@r 0150  
                                            powf@s 0158                                              powf@t 01B0  
                                            powf@u 017C                                              powf@v 0180  
                                            powf@w 0144                                              powf@x 006F  
                                            powf@y 0073                                              powf@z 01B4  
                       ?_get_number_and_operartion 001D                                              status 0FD8  
                                  __end_of_sprintf 776A                                     ?___fpclassifyf 0001  
                           _send_the_result_to_LCD 6BC0                        ecu_keypad_get_value@columns 0013  
                   ?_gpio_pin_direction_initialize 0001                                    ??_lcd_send_4bit 000D  
                                  __initialization 7226                                       __end_of_cp_h 1071  
                                     __end_of_cp_l 106D                                       __end_of_dp_h 1011  
                                     __end_of_dp_l 1009                                       __end_of_labs 7604  
                                     __end_of_main 438E                                       __end_of_dtoa 631E  
                                     __end_of_powf 340E                              ?_gpio_pin_write_logic 0001  
                         gpio_pin_read_logic@logic 0003                                      _lat_registers 01C2  
                                           ??_labs 0005                                             ??_main 00D0  
                                           ??_dtoa 001A                                             ??_powf 0077  
                                    __activetblptr 0002                          ??_convert_float_to_string 0080  
                               _Division_operation 78D8                         __end_of_read_prec_or_width 718E  
                                           ?_fputc 0001                                             ?_fputs 0009  
                                 ___awdiv@dividend 0001                                             ?_putch 0001  
                                           ?_sqrtf 0001                        ecu_keypad_initialize@keypad 000F  
                              ?_Division_operation 005B                 get_number_and_operartion@operation 0021  
                                 __end_of___xxtofl 61A4                                      _sum_operation 77E8  
                 __end_of_lcd_4bit_send_string_pos 7340                             ?_lcd_4bit_send_command 000F  
                                     vfprintf@cfmt 007F                                             ___flge 68CC  
                                           ___fleq 6F94                          _convert_arr_to_float$2095 0087  
                        _convert_arr_to_float$2096 008B                                          ??___fladd 003A  
                                           ___wmul 7A52                                          ??___fldiv 004A  
                                        ??___awdiv 0005                                          ??___flneg 0005  
                                        ??___awmod 0005                                          ??___flmul 0021  
                                        ??___flsub 0063                                          ??___fltol 0005  
                                           _efgtoa 340E                               ??_Division_operation 0064  
                                           _floorf 5DDE                                             _memcpy 7654  
                             read_prec_or_width@ap 0008                                             _keypad 01D6  
                                           _memset 7988                                             clear_0 728C  
                                           clear_1 7298                                             clear_2 72A4  
                                 ___awdiv@quotient 0007                                    ___awmod@divisor 0003  
                                           isa$std 0001                                             _result 00E3  
                                 lcd_send_4bit@lcd 000B                                    ___awmod@counter 0005  
                                           pad@buf 0010                                   lcd_send_4bit@ret 000E  
                                           dtoa@fp 0017                                             _strcpy 7914  
                                           fputc@c 0001                                             fputs@c 000C  
                                           fputs@i 000D                                             fputs@s 0009  
                                        ??_scalbnf 0038                                    ___fpclassifyf@e 0009  
                                  ___fpclassifyf@u 000B                                    ___fpclassifyf@x 0001  
                                     __mediumconst 0000                                             powf@s2 0190  
                                           powf@t1 018C                                             powf@t2 011C  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                                           powf@y1 012C                                             tblptru 0FF8  
                                           powf@ax 0178                                             powf@is 0198  
                                           powf@hx 0168                                             powf@hy 0184  
                                           powf@ix 01AC                                             powf@iy 0194  
                                           powf@sn 0164                                             putch@c 0001  
                                 __end_of_vfprintf 77E8                                             sqrtf@i 000E  
                                           sqrtf@m 001A                                             sqrtf@q 0012  
                                           sqrtf@r 001E                                             sqrtf@s 000A  
                                           sqrtf@t 0016                          ecu_keypad_get_value@value 000D  
                                           sqrtf@x 0001                                          ??_sprintf 0080  
                                       ___flge@ff1 0063                                         ___flge@ff2 0067  
                                  ??___fpclassifyf 0005                                       ___xxtofl@arg 0015  
                          ??_convert_int_to_string 0080                                       ___xxtofl@exp 0014  
                                     ___xxtofl@val 000B                                         ___fleq@ff1 0001  
                                       ___fleq@ff2 0005                                         __accesstop 0080  
                          __end_of__initialization 72AA              get_number_and_operartion@keypad_value 0024  
                                       ___flneg@f1 0001                                     ?_sum_operation 0042  
                  __end_of_convert_float_to_string 772A                                      ___rparam_used 0001  
                                       ___fltol@f1 0001                                 ecu_relay_off@F3487 00D7  
                          _lcd_4bit_send_char_data 74F2                   __end_of_multiplication_operation 789C  
                           ??_gpio_pin_write_logic 0004                                     __pcstackCOMRAM 0001  
                                     __pidataBANK0 7A9E                                       __pidataBANK1 7A2C  
                                     __pidataBANK2 7A8E                                      __end_of_lg2_h 1031  
                                    __end_of_lg2_l 102D                           _ecu_layer_Initialization 7A78  
                                    __end_of_ivln2 1021                                      __end_of_fputc 6EE4  
                                    __end_of_fputs 77AA                                      __end_of_two24 1065  
                                    __end_of_putch 7AAE                                      __end_of_sqrtf 5056  
                                       __end_of_L1 1061                                         __end_of_L2 105D  
                                       __end_of_L3 1059                                         __end_of_L4 1055  
                                       __end_of_L5 1051                                         __end_of_L6 104D  
                                       __end_of_P1 1049                                         __end_of_P2 1045  
                                       __end_of_P3 1041                                         __end_of_P4 103D  
                                       __end_of_P5 1039                           lcd_4bit_send_command@lcd 000F  
                         lcd_4bit_send_command@ret 0011                                         __end_of_bp 1019  
                                       __end_of_cp 1025                            ??_subtraction_operation 006C  
                     __end_of_ecu_keypad_get_value 67C6           gpio_pin_direction_initialize@_pin_config 0001  
                     ?_lcd_4bit_send_char_data_pos 0018                                            ??_fputc 0004  
                                          ??_fputs 000C                                            ??_putch 0001  
                                          ??_sqrtf 0005                                         __pbssBANK0 00D2  
                                       __pbssBANK1 01DE                                         __pbssBANK2 0200  
                              initialize_var@count 0001                      subtraction_operation@num1_val 0063  
                    subtraction_operation@num2_val 0067                                            ?___flge 0063  
                                          ?___fleq 0001                                            ?___wmul 0001  
                                          ?_efgtoa 006F                                            ?_floorf 005B  
                                          ?_memcpy 0001                                            ?_memset 0001  
                          ??_ecu_keypad_initialize 0011                       ecu_keypad_initialize@columns 0014  
                                          ?_strcpy 0001                                          ?___xxtofl 000B  
                        ?_lcd_4bit_send_string_pos 0018                                      _keypad_values 0250  
                          ?_send_the_result_to_LCD 00CC                                    ??_sum_operation 004B  
                      ?_Application_Initialization 0001                                     _tris_registers 01CC  
                      ??_get_number_and_operartion 0022                          ??_lcd_4bit_send_char_data 0011  
                                          __Hparam 0000                                            __Lparam 0000  
                              _gpio_pin_initialize 7420                                            ___fladd 438E  
                                          ___fldiv 5056                                _gpio_pin_read_logic 703E  
                                          ___awdiv 6D66                                            ___flneg 79C0  
                                          ___awmod 6EE4                                            ___flmul 484E  
                                          ___flsub 76A4                                            ___fltol 67C6  
                                        ?_vfprintf 007C                                       __psmallconst 1000  
                                          __pcinit 7226                                            __ramtop 1000  
                                          __ptext0 3DF6                                            __ptext1 77E8  
                                          __ptext2 7824                                            __ptext3 6BC0  
                                          __ptext4 7604                                            __ptext5 76EA  
                                          __ptext6 772A                                            __ptext7 77AA  
                                          __ptext8 56BE                                            __ptext9 70E8  
                  ??_gpio_pin_direction_initialize 0003                              read_prec_or_width@fmt 0007  
                                          _ivln2_h 1065                                            _ivln2_l 1019  
                                       ??___xxtofl 000F                                            _scalbnf 5BAA  
                                 ___awmod@dividend 0001                                            efgtoa@c 0074  
                                          efgtoa@d 008B                                            efgtoa@e 008F  
                                          efgtoa@f 0070                                            efgtoa@g 00A2  
                                          efgtoa@h 0099                                            efgtoa@i 0097  
                                          efgtoa@l 009D                                            efgtoa@m 008D  
                                          efgtoa@n 00A6                                            efgtoa@p 0082  
                                          efgtoa@t 0084                                            efgtoa@u 00A8  
                                          efgtoa@w 0091                          ?_multiplication_operation 0032  
                             ?_gpio_pin_initialize 000B                               ?_gpio_pin_read_logic 0001  
                   __end_of_send_the_result_to_LCD 6C9E                                            _sprintf 772A  
                             end_of_initialization 72AA                                            floorf@e 0069  
                                          floorf@m 0065                                            floorf@u 006B  
                                          floorf@x 005B                                            memcpy@d 0008  
                                          memcpy@n 0005                                            memcpy@s 000A  
                                          fputc@fp 0003                                            memset@c 0003  
                                          memset@n 0005                                            memset@p 0007  
                                    __Lmediumconst 0000                                            fputs@fp 000B  
                               _read_prec_or_width 70E8                            ??_lcd_4bit_send_command 0011  
                             _ecu_keypad_get_value 66B6                                         _operation2 00F4  
                                       _operation3 00F3                                            powf@p_h 01A0  
                                          powf@p_l 016C                                            powf@s_h 0174  
                                          powf@t_h 0170                                            powf@s_l 0130  
                                          powf@t_l 0134                                            powf@z_h 0120  
                                          powf@z_l 0124                                  __end_of_vfpfcnvrt 5944  
                                       efgtoa@mode 0089                                         efgtoa@sign 00A1  
                            __end_of_lcd_send_4bit 73B0                                            postdec1 0FE5  
                                          postdec2 0FDD                                ?_read_prec_or_width 0007  
                                          postinc0 0FEE                                            postinc1 0FE6  
                                          postinc2 0FDE                                   vfpfcnvrt@convarg 00AC  
                      _send_the_result_to_LCD$2097 0150                                         ??_vfprintf 007F  
                                          sqrtf@ix 0022                                            strcpy@d 0005  
                              _lcd_4bit_initialize 6ACE                          _get_number_and_operartion 5944  
                  __end_of_lcd_4bit_send_char_data 7550                                        ___fladd@grs 0041  
                       lcd_4bit_send_char_data@lcd 000F                         lcd_4bit_send_char_data@ret 0011  
                                    ___xxtofl@sign 0013                              ??_gpio_pin_initialize 000D  
                            ??_gpio_pin_read_logic 0004                               ??_read_prec_or_width 0009  
                                      ___fldiv@grs 0055                                        ___fldiv@rem 004E  
   get_third_number_and_third_operartion@operation 0021                       send_the_result_to_LCD@result 00CC  
                  lcd_4bit_send_char_data_pos@data 001B                               ?_lcd_4bit_initialize 0012  
                                      ___flmul@grs 0028                         ??_ecu_layer_Initialization 0016  
                    __end_of_convert_int_to_string 7654                              ?_ecu_keypad_get_value 000B  
                              _lcd_4bit_set_curser 718E                              ecu_led_turn_off@F3493 00DB  
                     __end_of_convert_arr_to_float 66B6                        lcd_4bit_send_string_pos@lcd 0018  
                      lcd_4bit_send_string_pos@row 0019                        lcd_4bit_send_string_pos@str 001B  
                                   __end_of___flge 69D0                                     __end_of___fleq 703E  
                         ?_convert_float_to_string 00C6                                        vfpfcnvrt@ap 0079  
                                      vfpfcnvrt@cp 00B1                                        vfpfcnvrt@fp 0077  
                                   __end_of___wmul 7A78                                     __end_of_efgtoa 3DF6  
                                   __end_of_floorf 5FF0                                     __end_of_memcpy 76A4  
                                       floorf@F521 01DE                                     __end_of_memset 79C0  
                     ?_lcd_4bit_send_enable_enable 000B                      __end_of_subtraction_operation 7860  
                                   __end_of_strcpy 794E                                start_initialization 7226  
                             ?_lcd_4bit_set_curser 0012                                        __end_of_lg2 1035  
                                      __end_of_abs 7A2C                                        __end_of_pad 74F2  
                                      __end_of_ovt 1029              __end_of_gpio_pin_direction_initialize 6462  
                    _gpio_pin_direction_initialize 631E                              ??_lcd_4bit_initialize 0013  
                                     _counter_num1 00F8                                       _counter_num2 00F7  
                                     _counter_num3 00F6                              __end_of___fpclassifyf 6ACE  
                      subtraction_operation@result 006B                                        vfprintf@fmt 007D  
                                         ??___flge 006B                                           ??___fleq 0009  
                                         ??___wmul 0005                                           ??_efgtoa 0075  
                                      __pdataBANK0 00F9                                        __pdataBANK1 01B8  
                                      __pdataBANK2 0250                                           ??_floorf 005F  
                                         ??_memcpy 0007                                           ??_memset 0007  
                                       memset@dest 0001                       lcd_4bit_send_command@command 0010  
                                ecu_relay_on@F3482 00D8                                           ??_strcpy 0004  
                                        ___fladd@a 0036                                          ___fladd@b 0032  
                       convert_int_to_string@value 00C6                      __end_of_ecu_keypad_initialize 7420  
                                        ___fldiv@a 0046                                          ___fldiv@b 0042  
                                        ___flmul@a 001D                                          ___flmul@b 0019  
                            ??_lcd_4bit_set_curser 0015                                          ___flsub@a 005F  
                                        ___flsub@b 005B                                      __pcstackBANK0 0080  
                                    __pcstackBANK1 0100                             ??_ecu_keypad_get_value 000E  
                                      _efgtoa$1541 0086                                          _dtoa$1510 001A  
                                         ?___fladd 0032                                     _initialize_var 6C9E  
                  gpio_pin_write_logic@_pin_config 0001                                           ?___fldiv 0042  
                                         ?___awdiv 0001                                           ?___flneg 0001  
                                         ?___awmod 0001                                           ?___flmul 0019  
                                         ?___flsub 005B                                           ?___fltol 0001  
                        gpio_pin_write_logic@logic 0003                                       _keypad_value 00DE  
                              sum_operation@result 004A                     multiplication_operation@result 003A  
                                      __smallconst 1000                                           ?_scalbnf 0032  
                  convert_arr_to_float@count_power 008F                    convert_arr_to_float@counter_num 0082  
                                         ?_sprintf 00B2                               _convert_arr_to_float 658E  
                                        _powf$2100 014C                                          _powf$2101 019C  
                                        _powf$2102 0138                                          _powf$2110 0110  
                                        _powf$2111 0114                                          _powf$2103 0100  
                                        _powf$2112 0118                                          _powf$2104 0104  
                                        _powf$2105 0160                                          _powf$2106 013C  
                                        _powf$2107 0140                                          _powf$2108 0108  
                                        _powf$2109 010C                                          _powf$2098 0148  
                                        _powf$2099 015C                   __end_of_ecu_layer_Initialization 7A8E  
                    convert_arr_to_float@num_value 0083                                     ___wmul@product 0005  
             get_number_and_operartion@lcd_counter 0020                              __end_of_sum_operation 7824  
                       lcd_4bit_initialize@counter 0014                              sum_operation@num1_val 0042  
                            sum_operation@num2_val 0046      __end_of_get_third_number_and_third_operartion 56BE  
          ??_get_third_number_and_third_operartion 0022             ?_get_third_number_and_third_operartion 001D  
            _get_third_number_and_third_operartion 53F0                          ecu_relay_initialize@F3477 00D9  
                                      _lcd_counter 00FF                      __end_of_lcd_4bit_send_command 75AE  
                           __end_of_initialize_var 6D66                                          _operation 00F5  
           ecu_keypad_get_value@clear_rows_counter 0011                   gpio_pin_direction_initialize@ret 0009  
                                       powf@yisint 0154                                          _vfpfcnvrt 56BE  
                         _lcd_4bit_send_string_pos 72B4                          ecu_keypad_initialize@rows 0013  
                       Division_operation@num1_val 005B                         Division_operation@num2_val 005F  
                                ___wmul@multiplier 0001                               ecu_led_turn_on@F3488 00DC  
                   lcd_4bit_send_char_data_pos@lcd 0018                     lcd_4bit_send_char_data_pos@ret 001C  
                   lcd_4bit_send_char_data_pos@row 0019                             gpio_pin_initialize@ret 000E  
              __end_of_lcd_4bit_send_char_data_pos 78D8                        _lcd_4bit_send_char_data_pos 789C  
                            ?_convert_arr_to_float 0080                                         vfpfcnvrt@c 00B0  
                          gpio_pin_write_logic@ret 000A                           ?_lcd_4bit_send_char_data 000F  
                                        copy_data0 723A                                          copy_data1 725A  
                                        copy_data2 727A                  __end_of_get_number_and_operartion 5BAA  
                   ecu_keypad_get_value@column_val 0010               get_number_and_operartion@counter_num 001F  
                    ??_lcd_4bit_send_char_data_pos 001C                                           __Hrparam 0000  
                     convert_float_to_string@value 00C6                                    ?_initialize_var 0001  
                   lcd_4bit_send_enable_enable@lcd 000B                                          memcpy@tmp 0007  
                   lcd_4bit_send_enable_enable@ret 000D                                         vfprintf@ap 007E  
                                         __Lrparam 0000                                         vfprintf@fp 007C  
                       convert_float_to_string@str 00CA                            ecu_led_initialize@F3483 00DD  
                           lcd_4bit_set_curser@lcd 0012                             lcd_4bit_set_curser@ret 0017  
                           lcd_4bit_set_curser@row 0013                                         ?_vfpfcnvrt 0077  
                      __end_of_gpio_pin_initialize 748C   get_third_number_and_third_operartion@lcd_counter 0020  
                      __end_of_gpio_pin_read_logic 70E8                           _multiplication_operation 7860  
                   gpio_pin_initialize@_pin_config 000B                                 ___fpclassifyf@F465 01E2  
         get_third_number_and_third_operartion@num 001D                           ecu_keypad_get_value@rows 0012  
                                       sprintf@fmt 00B4                                           ___xxtofl 5FF0  
                                         __ptext10 7A52                                           __ptext11 340E  
                                         __ptext20 748C                                           __ptext12 7914  
                                         __ptext21 776A                                           __ptext13 7654  
                                         __ptext30 53F0                                           __ptext22 6E2A  
                                         __ptext14 75AE                                           __ptext31 5944  
                                         __ptext23 7AAC                                           __ptext15 5DDE  
                                         __ptext40 4C78                                           __ptext32 72B4  
                                         __ptext24 79F8                                           __ptext16 69D0  
                                         __ptext41 5BAA                                           __ptext33 789C  
                                         __ptext25 6EE4                                           __ptext17 67C6  
                                         __ptext50 7AA6                                           __ptext42 484E  
                                         __ptext34 718E                                           __ptext26 6D66  
                                         __ptext18 6F94                                           __ptext51 7A78  
                                         __ptext43 5FF0                                           __ptext35 74F2  
                                         __ptext27 7988                                           __ptext19 61A4  
                                         __ptext52 6ACE                                           __ptext44 76A4  
                                         __ptext36 66B6                                           __ptext28 7860  
                                         __ptext53 7550                                           __ptext45 438E  
                                         __ptext37 703E                                           __ptext29 6C9E  
                                         __ptext54 7340                                           __ptext46 79C0  
                                         __ptext38 658E                                           __ptext55 794E  
                                         __ptext47 68CC                                           __ptext39 10E4  
                                         __ptext56 73B0                                           __ptext48 78D8  
                                         __ptext57 7420                                           __ptext49 5056  
                                         __ptext58 6462                                           __ptext59 631E  
                                       strcpy@dest 0001                                           _num1_val 00EF  
                                         _num2_val 00EB                                           _num3_val 00E7  
get_third_number_and_third_operartion@keypad_value 0024                              _convert_int_to_string 7604  
                                         efgtoa@fp 006F                                           efgtoa@ne 0080  
                                         efgtoa@pp 0088                                           efgtoa@ou 0093  
                                         isa$xinst 0000                         __end_of_Division_operation 7914  
                                         _vfprintf 77AA                            convert_arr_to_float@arr 0080  
 get_third_number_and_third_operartion@counter_num 001F                          ?_ecu_layer_Initialization 0001  
                         ??_send_the_result_to_LCD 0080                           Division_operation@result 0063  
                      __end_of_lcd_4bit_initialize 6BC0                                           memcpy@d1 0001  
                                         memcpy@s1 0003                             ??_convert_arr_to_float 0084  
                            _subtraction_operation 7824                       __end_of_gpio_pin_write_logic 658E  
                                         scalbnf@n 0036                                           scalbnf@u 003C  
                                         scalbnf@x 0032                                           scalbnf@y 0040  
                                        sprintf@ap 00B9                   multiplication_operation@num1_val 0032  
                 multiplication_operation@num2_val 0036                       ??_Application_Initialization 0016  
                         ecu_led_turn_toggle@F3498 00DA                                          strcpy@src 0003  
                                      efgtoa@nmode 008A                                      _lcd_send_4bit 7340  
                                      ??_vfpfcnvrt 007A                        __end_of_lcd_4bit_set_curser 7226  
                                      _temp_result 01E8                                           sprintf@f 00BA  
                                         sprintf@s 00B2                                     _port_registers 01B8  
                         convert_int_to_string@str 00C8                              _ecu_keypad_initialize 73B0  
                                    ___fladd@signs 003E                                       ___fladd@aexp 003F  
                                     ___fladd@bexp 0040                       get_number_and_operartion@num 001D  
                      lcd_4bit_send_char_data@data 0010                             ?_convert_int_to_string 00C6  
                       ??_lcd_4bit_send_string_pos 001D                             lcd_4bit_initialize@lcd 0012  
                           lcd_4bit_initialize@ret 0015  
