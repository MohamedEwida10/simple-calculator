

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 05 14:54:09 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 23/03/2023 GMT
    84                           ; 
    85                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   007990                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _lcd1
   123   007990  02                 	db	2
   124   007991  0A                 	db	10
   125   007992  12                 	db	18
   126   007993  1A                 	db	26
   127   007994  22                 	db	34
   128   007995  2A                 	db	42
   129                           
   130                           ;initializer for _lcd_counter
   131   007996  01                 	db	1
   132                           
   133                           	psect	idataBANK1
   134   00791E                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _port_registers
   138   00791E  80                 	db	128
   139   00791F  0F                 	db	15
   140   007920  81                 	db	129
   141   007921  0F                 	db	15
   142   007922  82                 	db	130
   143   007923  0F                 	db	15
   144   007924  83                 	db	131
   145   007925  0F                 	db	15
   146   007926  84                 	db	132
   147   007927  0F                 	db	15
   148                           
   149                           ;initializer for _lat_registers
   150   007928  89                 	db	137
   151   007929  0F                 	db	15
   152   00792A  8A                 	db	138
   153   00792B  0F                 	db	15
   154   00792C  8B                 	db	139
   155   00792D  0F                 	db	15
   156   00792E  8C                 	db	140
   157   00792F  0F                 	db	15
   158   007930  8D                 	db	141
   159   007931  0F                 	db	15
   160                           
   161                           ;initializer for _tris_registers
   162   007932  92                 	db	146
   163   007933  0F                 	db	15
   164   007934  93                 	db	147
   165   007935  0F                 	db	15
   166   007936  94                 	db	148
   167   007937  0F                 	db	15
   168   007938  95                 	db	149
   169   007939  0F                 	db	15
   170   00793A  96                 	db	150
   171   00793B  0F                 	db	15
   172                           
   173                           ;initializer for _keypad
   174   00793C  03                 	db	3
   175   00793D  0B                 	db	11
   176   00793E  13                 	db	19
   177   00793F  1B                 	db	27
   178   007940  63                 	db	99
   179   007941  6B                 	db	107
   180   007942  73                 	db	115
   181   007943  7B                 	db	123
   182                           
   183                           	psect	idataBANK2
   184   007980                     __pidataBANK2:
   185                           	callstack 0
   186                           
   187                           ;initializer for _keypad_values
   188   007980  37                 	db	55
   189   007981  38                 	db	56
   190   007982  39                 	db	57
   191   007983  2F                 	db	47
   192   007984  34                 	db	52
   193   007985  35                 	db	53
   194   007986  36                 	db	54
   195   007987  2A                 	db	42
   196   007988  31                 	db	49
   197   007989  32                 	db	50
   198   00798A  33                 	db	51
   199   00798B  2D                 	db	45
   200   00798C  23                 	db	35
   201   00798D  30                 	db	48
   202   00798E  3D                 	db	61
   203   00798F  2B                 	db	43
   204                           
   205                           	psect	smallconst
   206   001000                     __psmallconst:
   207                           	callstack 0
   208   001000  00                 	db	0
   209   001001                     _dp_l:
   210                           	callstack 0
   211   001001  0000               	dw	0
   212   001003  0000               	dw	0
   213   001005  CFDC               	dw	53212
   214   001007  35D1               	dw	13777
   215   001009                     __end_of_dp_l:
   216                           	callstack 0
   217   001009                     _dp_h:
   218                           	callstack 0
   219   001009  0000               	dw	0
   220   00100B  0000               	dw	0
   221   00100D  C000               	dw	49152
   222   00100F  3F15               	dw	16149
   223   001011                     __end_of_dp_h:
   224                           	callstack 0
   225   001011                     _bp:
   226                           	callstack 0
   227   001011  0000               	dw	0
   228   001013  3F80               	dw	16256
   229   001015  0000               	dw	0
   230   001017  3FC0               	dw	16320
   231   001019                     __end_of_bp:
   232                           	callstack 0
   233   001019  A570               	dw	42352
   234   00101B  36EC               	dw	14060
   235   00101D                     __end_of_ivln2_l:
   236                           	callstack 0
   237   00101D  AA3B               	dw	43579
   238   00101F  3FB8               	dw	16312
   239   001021                     __end_of_ivln2:
   240                           	callstack 0
   241   001021  384F               	dw	14415
   242   001023  3F76               	dw	16246
   243   001025                     __end_of_cp:
   244                           	callstack 0
   245   001025  AA3C               	dw	43580
   246   001027  3338               	dw	13112
   247   001029                     __end_of_ovt:
   248                           	callstack 0
   249   001029  BE8C               	dw	48780
   250   00102B  35BF               	dw	13759
   251   00102D                     __end_of_lg2_l:
   252                           	callstack 0
   253   00102D  7200               	dw	29184
   254   00102F  3F31               	dw	16177
   255   001031                     __end_of_lg2_h:
   256                           	callstack 0
   257   001031  7218               	dw	29208
   258   001033  3F31               	dw	16177
   259   001035                     __end_of_lg2:
   260                           	callstack 0
   261   001035  BB4C               	dw	47948
   262   001037  3331               	dw	13105
   263   001039                     __end_of_P5:
   264                           	callstack 0
   265   001039  EA0E               	dw	59918
   266   00103B  B5DD               	dw	46557
   267   00103D                     __end_of_P4:
   268                           	callstack 0
   269   00103D  B355               	dw	45909
   270   00103F  388A               	dw	14474
   271   001041                     __end_of_P3:
   272                           	callstack 0
   273   001041  0B61               	dw	2913
   274   001043  BB36               	dw	47926
   275   001045                     __end_of_P2:
   276                           	callstack 0
   277   001045  AAAB               	dw	43691
   278   001047  3E2A               	dw	15914
   279   001049                     __end_of_P1:
   280                           	callstack 0
   281   001049  F142               	dw	61762
   282   00104B  3E53               	dw	15955
   283   00104D                     __end_of_L6:
   284                           	callstack 0
   285   00104D  3255               	dw	12885
   286   00104F  3E6C               	dw	15980
   287   001051                     __end_of_L5:
   288                           	callstack 0
   289   001051  A305               	dw	41733
   290   001053  3E8B               	dw	16011
   291   001055                     __end_of_L4:
   292                           	callstack 0
   293   001055  AAAB               	dw	43691
   294   001057  3EAA               	dw	16042
   295   001059                     __end_of_L3:
   296                           	callstack 0
   297   001059  6DB7               	dw	28087
   298   00105B  3EDB               	dw	16091
   299   00105D                     __end_of_L2:
   300                           	callstack 0
   301   00105D  999A               	dw	39322
   302   00105F  3F19               	dw	16153
   303   001061                     __end_of_L1:
   304                           	callstack 0
   305   001061  0000               	dw	0
   306   001063  4B80               	dw	19328
   307   001065                     __end_of_two24:
   308                           	callstack 0
   309   001065  AA00               	dw	43520
   310   001067  3FB8               	dw	16312
   311   001069                     __end_of_ivln2_h:
   312                           	callstack 0
   313   001069  23C6               	dw	9158
   314   00106B  B8F6               	dw	47350
   315   00106D                     __end_of_cp_l:
   316                           	callstack 0
   317   00106D  4000               	dw	16384
   318   00106F  3F76               	dw	16246
   319   001071                     __end_of_cp_h:
   320                           	callstack 0
   321   000000                     _PORTE	set	3972
   322   000000                     _PORTD	set	3971
   323   000000                     _PORTC	set	3970
   324   000000                     _PORTB	set	3969
   325   000000                     _PORTA	set	3968
   326   000000                     _LATA	set	3977
   327   000000                     _TRISA	set	3986
   328   000000                     _TRISE	set	3990
   329   000000                     _TRISD	set	3989
   330   000000                     _TRISC	set	3988
   331   000000                     _TRISB	set	3987
   332   000000                     _LATE	set	3981
   333   000000                     _LATD	set	3980
   334   000000                     _LATC	set	3979
   335   000000                     _LATB	set	3978
   336   001071                     STR_4:
   337   001071  20                 	db	32
   338   001072  20                 	db	32
   339   001073  20                 	db	32
   340   001074  20                 	db	32
   341   001075  20                 	db	32
   342   001076  20                 	db	32
   343   001077  20                 	db	32
   344   001078  20                 	db	32
   345   001079  20                 	db	32
   346   00107A  20                 	db	32
   347   00107B  20                 	db	32
   348   00107C  20                 	db	32
   349   00107D  20                 	db	32
   350   00107E  20                 	db	32
   351   00107F  20                 	db	32
   352   001080  20                 	db	32
   353   001081  20                 	db	32
   354   001082  20                 	db	32
   355   001083  20                 	db	32
   356   001084  20                 	db	32
   357   001085  20                 	db	32
   358   001086  20                 	db	32
   359   001087  20                 	db	32
   360   001088  20                 	db	32
   361   001089  20                 	db	32
   362   00108A  20                 	db	32
   363   00108B  20                 	db	32
   364   00108C  00                 	db	0
   365   00108D                     STR_3:
   366   00108D  68                 	db	104	;'h'
   367   00108E  69                 	db	105	;'i'
   368   00108F  6E                 	db	110	;'n'
   369   001090  74                 	db	116	;'t'
   370   001091  3A                 	db	58	;':'
   371   001092  6D                 	db	109	;'m'
   372   001093  61                 	db	97	;'a'
   373   001094  78                 	db	120	;'x'
   374   001095  20                 	db	32
   375   001096  32                 	db	50	;'2'
   376   001097  20                 	db	32
   377   001098  6F                 	db	111	;'o'
   378   001099  70                 	db	112	;'p'
   379   00109A  65                 	db	101	;'e'
   380   00109B  72                 	db	114	;'r'
   381   00109C  61                 	db	97	;'a'
   382   00109D  74                 	db	116	;'t'
   383   00109E  69                 	db	105	;'i'
   384   00109F  6F                 	db	111	;'o'
   385   0010A0  6E                 	db	110	;'n'
   386   0010A1  21                 	db	33
   387   0010A2  21                 	db	33
   388   0010A3  00                 	db	0
   389   0010A4                     STR_1:
   390   0010A4  68                 	db	104	;'h'
   391   0010A5  69                 	db	105	;'i'
   392   0010A6  6E                 	db	110	;'n'
   393   0010A7  74                 	db	116	;'t'
   394   0010A8  3A                 	db	58	;':'
   395   0010A9  6D                 	db	109	;'m'
   396   0010AA  61                 	db	97	;'a'
   397   0010AB  78                 	db	120	;'x'
   398   0010AC  20                 	db	32
   399   0010AD  34                 	db	52	;'4'
   400   0010AE  20                 	db	32
   401   0010AF  64                 	db	100	;'d'
   402   0010B0  69                 	db	105	;'i'
   403   0010B1  67                 	db	103	;'g'
   404   0010B2  69                 	db	105	;'i'
   405   0010B3  74                 	db	116	;'t'
   406   0010B4  73                 	db	115	;'s'
   407   0010B5  00                 	db	0
   408   0010B6                     STR_11:
   409   0010B6  63                 	db	99	;'c'
   410   0010B7  61                 	db	97	;'a'
   411   0010B8  6C                 	db	108	;'l'
   412   0010B9  63                 	db	99	;'c'
   413   0010BA  20                 	db	32
   414   0010BB  69                 	db	105	;'i'
   415   0010BC  73                 	db	115	;'s'
   416   0010BD  20                 	db	32
   417   0010BE  72                 	db	114	;'r'
   418   0010BF  65                 	db	101	;'e'
   419   0010C0  61                 	db	97	;'a'
   420   0010C1  64                 	db	100	;'d'
   421   0010C2  79                 	db	121	;'y'
   422   0010C3  00                 	db	0
   423   0010C4                     STR_7:
   424   0010C4  25                 	db	37
   425   0010C5  2E                 	db	46
   426   0010C6  32                 	db	50	;'2'
   427   0010C7  66                 	db	102	;'f'
   428   0010C8  00                 	db	0
   429   0010C9                     STR_12:
   430   0010C9  69                 	db	105	;'i'
   431   0010CA  6E                 	db	110	;'n'
   432   0010CB  66                 	db	102	;'f'
   433   0010CC  00                 	db	0
   434   0010CD                     STR_15:
   435   0010CD  6E                 	db	110	;'n'
   436   0010CE  61                 	db	97	;'a'
   437   0010CF  6E                 	db	110	;'n'
   438   0010D0  00                 	db	0
   439   0010D1                     STR_8:
   440   0010D1  25                 	db	37
   441   0010D2  69                 	db	105	;'i'
   442   0010D3  00                 	db	0
   443   0010D4  00                 	db	0	; dummy byte at the end
   444   000000                     
   445                           ; #config settings
   446                           
   447                           	psect	cinit
   448   007118                     __pcinit:
   449                           	callstack 0
   450   007118                     start_initialization:
   451                           	callstack 0
   452   007118                     __initialization:
   453                           	callstack 0
   454                           
   455                           ; Initialize objects allocated to BANK2 (16 bytes)
   456                           ; load TBLPTR registers with __pidataBANK2
   457   007118  0E80               	movlw	low __pidataBANK2
   458   00711A  6EF6               	movwf	tblptrl,c
   459   00711C  0E79               	movlw	high __pidataBANK2
   460   00711E  6EF7               	movwf	tblptrh,c
   461   007120  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   462   007122  6EF8               	movwf	tblptru,c
   463   007124  EE02  F050         	lfsr	0,__pdataBANK2
   464   007128  EE10 F010          	lfsr	1,16
   465   00712C                     copy_data0:
   466   00712C  0009               	tblrd		*+
   467   00712E  CFF5 FFEE          	movff	tablat,postinc0
   468   007132  50E5               	movf	postdec1,w,c
   469   007134  50E1               	movf	fsr1l,w,c
   470   007136  E1FA               	bnz	copy_data0
   471                           
   472                           ; Initialize objects allocated to BANK1 (38 bytes)
   473                           ; load TBLPTR registers with __pidataBANK1
   474   007138  0E1E               	movlw	low __pidataBANK1
   475   00713A  6EF6               	movwf	tblptrl,c
   476   00713C  0E79               	movlw	high __pidataBANK1
   477   00713E  6EF7               	movwf	tblptrh,c
   478   007140  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   479   007142  6EF8               	movwf	tblptru,c
   480   007144  EE01  F0B8         	lfsr	0,__pdataBANK1
   481   007148  EE10 F026          	lfsr	1,38
   482   00714C                     copy_data1:
   483   00714C  0009               	tblrd		*+
   484   00714E  CFF5 FFEE          	movff	tablat,postinc0
   485   007152  50E5               	movf	postdec1,w,c
   486   007154  50E1               	movf	fsr1l,w,c
   487   007156  E1FA               	bnz	copy_data1
   488                           
   489                           ; Initialize objects allocated to BANK0 (7 bytes)
   490                           ; load TBLPTR registers with __pidataBANK0
   491   007158  0E90               	movlw	low __pidataBANK0
   492   00715A  6EF6               	movwf	tblptrl,c
   493   00715C  0E79               	movlw	high __pidataBANK0
   494   00715E  6EF7               	movwf	tblptrh,c
   495   007160  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   496   007162  6EF8               	movwf	tblptru,c
   497   007164  EE00  F0F9         	lfsr	0,__pdataBANK0
   498   007168  EE10 F007          	lfsr	1,7
   499   00716C                     copy_data2:
   500   00716C  0009               	tblrd		*+
   501   00716E  CFF5 FFEE          	movff	tablat,postinc0
   502   007172  50E5               	movf	postdec1,w,c
   503   007174  50E1               	movf	fsr1l,w,c
   504   007176  E1FA               	bnz	copy_data2
   505                           
   506                           ; Clear objects allocated to BANK2 (80 bytes)
   507   007178  EE02  F000         	lfsr	0,__pbssBANK2
   508   00717C  0E50               	movlw	80
   509   00717E                     clear_0:
   510   00717E  6AEE               	clrf	postinc0,c
   511   007180  06E8               	decf	wreg,f,c
   512   007182  E1FD               	bnz	clear_0
   513                           
   514                           ; Clear objects allocated to BANK1 (28 bytes)
   515   007184  EE01  F0DE         	lfsr	0,__pbssBANK1
   516   007188  0E1C               	movlw	28
   517   00718A                     clear_1:
   518   00718A  6AEE               	clrf	postinc0,c
   519   00718C  06E8               	decf	wreg,f,c
   520   00718E  E1FD               	bnz	clear_1
   521                           
   522                           ; Clear objects allocated to BANK0 (39 bytes)
   523   007190  EE00  F0D2         	lfsr	0,__pbssBANK0
   524   007194  0E27               	movlw	39
   525   007196                     clear_2:
   526   007196  6AEE               	clrf	postinc0,c
   527   007198  06E8               	decf	wreg,f,c
   528   00719A  E1FD               	bnz	clear_2
   529   00719C                     end_of_initialization:
   530                           	callstack 0
   531   00719C                     __end_of__initialization:
   532                           	callstack 0
   533   00719C  0E00               	movlw	low (__Lmediumconst shr (0+16))
   534   00719E  6EF8               	movwf	tblptru,c
   535   0071A0  0100               	movlb	0
   536   0071A2  EFF4  F01E         	goto	_main	;jump to C main() function
   537                           
   538                           	psect	bssBANK0
   539   0000D2                     __pbssBANK0:
   540                           	callstack 0
   541   0000D2                     _width:
   542                           	callstack 0
   543   0000D2                     	ds	2
   544   0000D4                     _prec:
   545                           	callstack 0
   546   0000D4                     	ds	2
   547   0000D6                     _flags:
   548                           	callstack 0
   549   0000D6                     	ds	1
   550   0000D7                     ecu_relay_off@F3487:
   551                           	callstack 0
   552   0000D7                     	ds	1
   553   0000D8                     ecu_relay_on@F3482:
   554                           	callstack 0
   555   0000D8                     	ds	1
   556   0000D9                     ecu_relay_initialize@F3477:
   557                           	callstack 0
   558   0000D9                     	ds	1
   559   0000DA                     ecu_led_turn_toggle@F3498:
   560                           	callstack 0
   561   0000DA                     	ds	1
   562   0000DB                     ecu_led_turn_off@F3493:
   563                           	callstack 0
   564   0000DB                     	ds	1
   565   0000DC                     ecu_led_turn_on@F3488:
   566                           	callstack 0
   567   0000DC                     	ds	1
   568   0000DD                     ecu_led_initialize@F3483:
   569                           	callstack 0
   570   0000DD                     	ds	1
   571   0000DE                     _keypad_value:
   572                           	callstack 0
   573   0000DE                     	ds	1
   574   0000DF                     _total_result:
   575                           	callstack 0
   576   0000DF                     	ds	4
   577   0000E3                     _result:
   578                           	callstack 0
   579   0000E3                     	ds	4
   580   0000E7                     _num3_val:
   581                           	callstack 0
   582   0000E7                     	ds	4
   583   0000EB                     _num2_val:
   584                           	callstack 0
   585   0000EB                     	ds	4
   586   0000EF                     _num1_val:
   587                           	callstack 0
   588   0000EF                     	ds	4
   589   0000F3                     _operation3:
   590                           	callstack 0
   591   0000F3                     	ds	1
   592   0000F4                     _operation2:
   593                           	callstack 0
   594   0000F4                     	ds	1
   595   0000F5                     _operation:
   596                           	callstack 0
   597   0000F5                     	ds	1
   598   0000F6                     _counter_num3:
   599                           	callstack 0
   600   0000F6                     	ds	1
   601   0000F7                     _counter_num2:
   602                           	callstack 0
   603   0000F7                     	ds	1
   604   0000F8                     _counter_num1:
   605                           	callstack 0
   606   0000F8                     	ds	1
   607                           
   608                           	psect	dataBANK0
   609   0000F9                     __pdataBANK0:
   610                           	callstack 0
   611   0000F9                     _lcd1:
   612                           	callstack 0
   613   0000F9                     	ds	6
   614   0000FF                     _lcd_counter:
   615                           	callstack 0
   616   0000FF                     	ds	1
   617                           
   618                           	psect	bssBANK1
   619   0001DE                     __pbssBANK1:
   620                           	callstack 0
   621   0001DE                     floorf@F521:
   622                           	callstack 0
   623   0001DE                     	ds	4
   624   0001E2                     ___fpclassifyf@F465:
   625                           	callstack 0
   626   0001E2                     	ds	4
   627   0001E6                     _errno:
   628                           	callstack 0
   629   0001E6                     	ds	2
   630   0001E8                     _temp_result:
   631                           	callstack 0
   632   0001E8                     	ds	2
   633   0001EA                     _temp2:
   634                           	callstack 0
   635   0001EA                     	ds	2
   636   0001EC                     _temp1:
   637                           	callstack 0
   638   0001EC                     	ds	2
   639   0001EE                     _num3:
   640                           	callstack 0
   641   0001EE                     	ds	4
   642   0001F2                     _num2:
   643                           	callstack 0
   644   0001F2                     	ds	4
   645   0001F6                     _num1:
   646                           	callstack 0
   647   0001F6                     	ds	4
   648                           
   649                           	psect	dataBANK1
   650   0001B8                     __pdataBANK1:
   651                           	callstack 0
   652   0001B8                     _port_registers:
   653                           	callstack 0
   654   0001B8                     	ds	10
   655   0001C2                     _lat_registers:
   656                           	callstack 0
   657   0001C2                     	ds	10
   658   0001CC                     _tris_registers:
   659                           	callstack 0
   660   0001CC                     	ds	10
   661   0001D6                     _keypad:
   662                           	callstack 0
   663   0001D6                     	ds	8
   664                           
   665                           	psect	bssBANK2
   666   000200                     __pbssBANK2:
   667                           	callstack 0
   668   000200                     _dbuf:
   669                           	callstack 0
   670   000200                     	ds	80
   671                           
   672                           	psect	dataBANK2
   673   000250                     __pdataBANK2:
   674                           	callstack 0
   675   000250                     _keypad_values:
   676                           	callstack 0
   677   000250                     	ds	16
   678                           
   679                           	psect	cstackBANK1
   680   000100                     __pcstackBANK1:
   681                           	callstack 0
   682   000100                     _powf$2099:
   683                           	callstack 0
   684   000100                     send_the_result_to_LCD@result_str:
   685                           	callstack 0
   686                           
   687                           ; 80 bytes @ 0x0
   688   000100                     	ds	4
   689   000104                     _powf$2100:
   690                           	callstack 0
   691                           
   692                           ; 4 bytes @ 0x4
   693   000104                     	ds	4
   694   000108                     _powf$2104:
   695                           	callstack 0
   696                           
   697                           ; 4 bytes @ 0x8
   698   000108                     	ds	4
   699   00010C                     _powf$2105:
   700                           	callstack 0
   701                           
   702                           ; 4 bytes @ 0xC
   703   00010C                     	ds	4
   704   000110                     _powf$2106:
   705                           	callstack 0
   706                           
   707                           ; 4 bytes @ 0x10
   708   000110                     	ds	4
   709   000114                     _powf$2107:
   710                           	callstack 0
   711                           
   712                           ; 4 bytes @ 0x14
   713   000114                     	ds	4
   714   000118                     _powf$2108:
   715                           	callstack 0
   716                           
   717                           ; 4 bytes @ 0x18
   718   000118                     	ds	4
   719   00011C                     powf@t2:
   720                           	callstack 0
   721                           
   722                           ; 4 bytes @ 0x1C
   723   00011C                     	ds	4
   724   000120                     powf@z_h:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0x20
   728   000120                     	ds	4
   729   000124                     powf@z_l:
   730                           	callstack 0
   731                           
   732                           ; 4 bytes @ 0x24
   733   000124                     	ds	4
   734   000128                     powf@i:
   735                           	callstack 0
   736                           
   737                           ; 4 bytes @ 0x28
   738   000128                     	ds	4
   739   00012C                     powf@y1:
   740                           	callstack 0
   741                           
   742                           ; 4 bytes @ 0x2C
   743   00012C                     	ds	4
   744   000130                     powf@s_l:
   745                           	callstack 0
   746                           
   747                           ; 4 bytes @ 0x30
   748   000130                     	ds	4
   749   000134                     powf@t_l:
   750                           	callstack 0
   751                           
   752                           ; 4 bytes @ 0x34
   753   000134                     	ds	4
   754   000138                     _powf$2098:
   755                           	callstack 0
   756                           
   757                           ; 4 bytes @ 0x38
   758   000138                     	ds	4
   759   00013C                     _powf$2102:
   760                           	callstack 0
   761                           
   762                           ; 4 bytes @ 0x3C
   763   00013C                     	ds	4
   764   000140                     _powf$2103:
   765                           	callstack 0
   766                           
   767                           ; 4 bytes @ 0x40
   768   000140                     	ds	4
   769   000144                     powf@w:
   770                           	callstack 0
   771                           
   772                           ; 4 bytes @ 0x44
   773   000144                     	ds	4
   774   000148                     _powf$2094:
   775                           	callstack 0
   776                           
   777                           ; 4 bytes @ 0x48
   778   000148                     	ds	4
   779   00014C                     _powf$2096:
   780                           	callstack 0
   781                           
   782                           ; 4 bytes @ 0x4C
   783   00014C                     	ds	4
   784   000150                     _send_the_result_to_LCD$2093:
   785                           	callstack 0
   786   000150                     powf@r:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x50
   790   000150                     	ds	4
   791   000154                     powf@yisint:
   792                           	callstack 0
   793                           
   794                           ; 4 bytes @ 0x54
   795   000154                     	ds	4
   796   000158                     powf@s:
   797                           	callstack 0
   798                           
   799                           ; 4 bytes @ 0x58
   800   000158                     	ds	4
   801   00015C                     _powf$2095:
   802                           	callstack 0
   803                           
   804                           ; 4 bytes @ 0x5C
   805   00015C                     	ds	4
   806   000160                     _powf$2101:
   807                           	callstack 0
   808                           
   809                           ; 4 bytes @ 0x60
   810   000160                     	ds	4
   811   000164                     powf@sn:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x64
   815   000164                     	ds	4
   816   000168                     powf@hx:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x68
   820   000168                     	ds	4
   821   00016C                     powf@p_l:
   822                           	callstack 0
   823                           
   824                           ; 4 bytes @ 0x6C
   825   00016C                     	ds	4
   826   000170                     powf@t_h:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x70
   830   000170                     	ds	4
   831   000174                     powf@s_h:
   832                           	callstack 0
   833                           
   834                           ; 4 bytes @ 0x74
   835   000174                     	ds	4
   836   000178                     powf@ax:
   837                           	callstack 0
   838                           
   839                           ; 4 bytes @ 0x78
   840   000178                     	ds	4
   841   00017C                     powf@u:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x7C
   845   00017C                     	ds	4
   846   000180                     powf@v:
   847                           	callstack 0
   848                           
   849                           ; 4 bytes @ 0x80
   850   000180                     	ds	4
   851   000184                     powf@hy:
   852                           	callstack 0
   853                           
   854                           ; 4 bytes @ 0x84
   855   000184                     	ds	4
   856   000188                     powf@n:
   857                           	callstack 0
   858                           
   859                           ; 4 bytes @ 0x88
   860   000188                     	ds	4
   861   00018C                     powf@t1:
   862                           	callstack 0
   863                           
   864                           ; 4 bytes @ 0x8C
   865   00018C                     	ds	4
   866   000190                     powf@s2:
   867                           	callstack 0
   868                           
   869                           ; 4 bytes @ 0x90
   870   000190                     	ds	4
   871   000194                     powf@iy:
   872                           	callstack 0
   873                           
   874                           ; 4 bytes @ 0x94
   875   000194                     	ds	4
   876   000198                     powf@is:
   877                           	callstack 0
   878                           
   879                           ; 4 bytes @ 0x98
   880   000198                     	ds	4
   881   00019C                     _powf$2097:
   882                           	callstack 0
   883                           
   884                           ; 4 bytes @ 0x9C
   885   00019C                     	ds	4
   886   0001A0                     powf@p_h:
   887                           	callstack 0
   888                           
   889                           ; 4 bytes @ 0xA0
   890   0001A0                     	ds	4
   891   0001A4                     powf@k:
   892                           	callstack 0
   893                           
   894                           ; 4 bytes @ 0xA4
   895   0001A4                     	ds	4
   896   0001A8                     powf@j:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0xA8
   900   0001A8                     	ds	4
   901   0001AC                     powf@ix:
   902                           	callstack 0
   903                           
   904                           ; 4 bytes @ 0xAC
   905   0001AC                     	ds	4
   906   0001B0                     powf@t:
   907                           	callstack 0
   908                           
   909                           ; 4 bytes @ 0xB0
   910   0001B0                     	ds	4
   911   0001B4                     powf@z:
   912                           	callstack 0
   913                           
   914                           ; 4 bytes @ 0xB4
   915   0001B4                     	ds	4
   916                           
   917                           	psect	cstackBANK0
   918   000080                     __pcstackBANK0:
   919                           	callstack 0
   920   000080                     convert_arr_to_float@arr:
   921                           	callstack 0
   922   000080                     efgtoa@ne:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x0
   926   000080                     	ds	2
   927   000082                     convert_arr_to_float@counter_num:
   928                           	callstack 0
   929   000082                     efgtoa@p:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x2
   933   000082                     	ds	1
   934   000083                     convert_arr_to_float@num_value:
   935                           	callstack 0
   936                           
   937                           ; 1 bytes @ 0x3
   938   000083                     	ds	1
   939   000084                     ??_convert_arr_to_float:
   940   000084                     efgtoa@t:
   941                           	callstack 0
   942                           
   943                           ; 2 bytes @ 0x4
   944   000084                     	ds	2
   945   000086                     _efgtoa$1537:
   946                           	callstack 0
   947                           
   948                           ; 2 bytes @ 0x6
   949   000086                     	ds	1
   950   000087                     _convert_arr_to_float$2091:
   951                           	callstack 0
   952                           
   953                           ; 4 bytes @ 0x7
   954   000087                     	ds	1
   955   000088                     efgtoa@pp:
   956                           	callstack 0
   957                           
   958                           ; 1 bytes @ 0x8
   959   000088                     	ds	1
   960   000089                     efgtoa@mode:
   961                           	callstack 0
   962                           
   963                           ; 1 bytes @ 0x9
   964   000089                     	ds	1
   965   00008A                     efgtoa@nmode:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0xA
   969   00008A                     	ds	1
   970   00008B                     efgtoa@d:
   971                           	callstack 0
   972   00008B                     _convert_arr_to_float$2092:
   973                           	callstack 0
   974                           
   975                           ; 4 bytes @ 0xB
   976   00008B                     	ds	2
   977   00008D                     efgtoa@m:
   978                           	callstack 0
   979                           
   980                           ; 2 bytes @ 0xD
   981   00008D                     	ds	2
   982   00008F                     convert_arr_to_float@count_power:
   983                           	callstack 0
   984   00008F                     efgtoa@e:
   985                           	callstack 0
   986                           
   987                           ; 2 bytes @ 0xF
   988   00008F                     	ds	1
   989   000090                     convert_arr_to_float@count:
   990                           	callstack 0
   991                           
   992                           ; 1 bytes @ 0x10
   993   000090                     	ds	1
   994   000091                     efgtoa@w:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x11
   998   000091                     	ds	2
   999   000093                     efgtoa@ou:
  1000                           	callstack 0
  1001                           
  1002                           ; 4 bytes @ 0x13
  1003   000093                     	ds	4
  1004   000097                     efgtoa@i:
  1005                           	callstack 0
  1006                           
  1007                           ; 2 bytes @ 0x17
  1008   000097                     	ds	2
  1009   000099                     efgtoa@h:
  1010                           	callstack 0
  1011                           
  1012                           ; 4 bytes @ 0x19
  1013   000099                     	ds	4
  1014   00009D                     efgtoa@l:
  1015                           	callstack 0
  1016                           
  1017                           ; 4 bytes @ 0x1D
  1018   00009D                     	ds	4
  1019   0000A1                     efgtoa@sign:
  1020                           	callstack 0
  1021                           
  1022                           ; 1 bytes @ 0x21
  1023   0000A1                     	ds	1
  1024   0000A2                     efgtoa@g:
  1025                           	callstack 0
  1026                           
  1027                           ; 4 bytes @ 0x22
  1028   0000A2                     	ds	4
  1029   0000A6                     efgtoa@n:
  1030                           	callstack 0
  1031                           
  1032                           ; 2 bytes @ 0x26
  1033   0000A6                     	ds	2
  1034   0000A8                     efgtoa@u:
  1035                           	callstack 0
  1036                           
  1037                           ; 4 bytes @ 0x28
  1038   0000A8                     	ds	4
  1039   0000AC                     vfpfcnvrt@convarg:
  1040                           	callstack 0
  1041                           
  1042                           ; 4 bytes @ 0x2C
  1043   0000AC                     	ds	4
  1044   0000B0                     vfpfcnvrt@c:
  1045                           	callstack 0
  1046                           
  1047                           ; 1 bytes @ 0x30
  1048   0000B0                     	ds	1
  1049   0000B1                     vfpfcnvrt@cp:
  1050                           	callstack 0
  1051                           
  1052                           ; 1 bytes @ 0x31
  1053   0000B1                     	ds	1
  1054   0000B2                     ?_sprintf:
  1055                           	callstack 0
  1056   0000B2                     sprintf@s:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x32
  1060   0000B2                     	ds	2
  1061   0000B4                     sprintf@fmt:
  1062                           	callstack 0
  1063                           
  1064                           ; 1 bytes @ 0x34
  1065   0000B4                     	ds	5
  1066   0000B9                     sprintf@ap:
  1067                           	callstack 0
  1068                           
  1069                           ; 1 bytes @ 0x39
  1070   0000B9                     	ds	1
  1071   0000BA                     sprintf@f:
  1072                           	callstack 0
  1073                           
  1074                           ; 12 bytes @ 0x3A
  1075   0000BA                     	ds	12
  1076   0000C6                     convert_int_to_string@value:
  1077                           	callstack 0
  1078   0000C6                     convert_float_to_string@value:
  1079                           	callstack 0
  1080                           
  1081                           ; 4 bytes @ 0x46
  1082   0000C6                     	ds	2
  1083   0000C8                     convert_int_to_string@str:
  1084                           	callstack 0
  1085                           
  1086                           ; 2 bytes @ 0x48
  1087   0000C8                     	ds	2
  1088   0000CA                     convert_float_to_string@str:
  1089                           	callstack 0
  1090                           
  1091                           ; 2 bytes @ 0x4A
  1092   0000CA                     	ds	2
  1093   0000CC                     send_the_result_to_LCD@result:
  1094                           	callstack 0
  1095                           
  1096                           ; 4 bytes @ 0x4C
  1097   0000CC                     	ds	4
  1098   0000D0                     ??_main:
  1099                           
  1100                           ; 1 bytes @ 0x50
  1101   0000D0                     	ds	2
  1102                           
  1103                           	psect	cstackCOMRAM
  1104   000001                     __pcstackCOMRAM:
  1105                           	callstack 0
  1106   000001                     ?___fpclassifyf:
  1107                           	callstack 0
  1108   000001                     ?___wmul:
  1109                           	callstack 0
  1110   000001                     ?___awdiv:
  1111                           	callstack 0
  1112   000001                     ?___awmod:
  1113                           	callstack 0
  1114   000001                     ?_labs:
  1115                           	callstack 0
  1116   000001                     ?_sqrtf:
  1117                           	callstack 0
  1118   000001                     ?___flneg:
  1119                           	callstack 0
  1120   000001                     ?___fltol:
  1121                           	callstack 0
  1122   000001                     initialize_var@count:
  1123                           	callstack 0
  1124   000001                     gpio_pin_direction_initialize@_pin_config:
  1125                           	callstack 0
  1126   000001                     gpio_pin_write_logic@_pin_config:
  1127                           	callstack 0
  1128   000001                     gpio_pin_read_logic@_pin_config:
  1129                           	callstack 0
  1130   000001                     ___wmul@multiplier:
  1131                           	callstack 0
  1132   000001                     ___awdiv@dividend:
  1133                           	callstack 0
  1134   000001                     ___awmod@dividend:
  1135                           	callstack 0
  1136   000001                     memset@dest:
  1137                           	callstack 0
  1138   000001                     memcpy@d1:
  1139                           	callstack 0
  1140   000001                     fputc@c:
  1141                           	callstack 0
  1142   000001                     strcpy@dest:
  1143                           	callstack 0
  1144   000001                     ___fleq@ff1:
  1145                           	callstack 0
  1146   000001                     ___flneg@f1:
  1147                           	callstack 0
  1148   000001                     ___fltol@f1:
  1149                           	callstack 0
  1150   000001                     ___fpclassifyf@x:
  1151                           	callstack 0
  1152   000001                     labs@a:
  1153                           	callstack 0
  1154   000001                     sqrtf@x:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x0
  1158   000001                     	ds	2
  1159   000003                     ??_gpio_pin_direction_initialize:
  1160   000003                     gpio_pin_write_logic@logic:
  1161                           	callstack 0
  1162   000003                     gpio_pin_read_logic@logic:
  1163                           	callstack 0
  1164   000003                     fputc@fp:
  1165                           	callstack 0
  1166   000003                     strcpy@src:
  1167                           	callstack 0
  1168   000003                     ___wmul@multiplicand:
  1169                           	callstack 0
  1170   000003                     ___awdiv@divisor:
  1171                           	callstack 0
  1172   000003                     ___awmod@divisor:
  1173                           	callstack 0
  1174   000003                     memset@c:
  1175                           	callstack 0
  1176   000003                     memcpy@s1:
  1177                           	callstack 0
  1178                           
  1179                           ; 2 bytes @ 0x2
  1180   000003                     	ds	1
  1181   000004                     ??_gpio_pin_write_logic:
  1182   000004                     ??_gpio_pin_read_logic:
  1183   000004                     ??_fputc:
  1184   000004                     ??_strcpy:
  1185                           
  1186                           ; 1 bytes @ 0x3
  1187   000004                     	ds	1
  1188   000005                     ??___fpclassifyf:
  1189   000005                     ??_labs:
  1190   000005                     ??_sqrtf:
  1191   000005                     ??___fltol:
  1192   000005                     ___awdiv@counter:
  1193                           	callstack 0
  1194   000005                     ___awmod@counter:
  1195                           	callstack 0
  1196   000005                     ___wmul@product:
  1197                           	callstack 0
  1198   000005                     memset@n:
  1199                           	callstack 0
  1200   000005                     memcpy@n:
  1201                           	callstack 0
  1202   000005                     strcpy@d:
  1203                           	callstack 0
  1204   000005                     ___fleq@ff2:
  1205                           	callstack 0
  1206                           
  1207                           ; 4 bytes @ 0x4
  1208   000005                     	ds	1
  1209   000006                     ___awdiv@sign:
  1210                           	callstack 0
  1211   000006                     ___awmod@sign:
  1212                           	callstack 0
  1213                           
  1214                           ; 1 bytes @ 0x5
  1215   000006                     	ds	1
  1216   000007                     ?_abs:
  1217                           	callstack 0
  1218   000007                     ?_read_prec_or_width:
  1219                           	callstack 0
  1220   000007                     read_prec_or_width@fmt:
  1221                           	callstack 0
  1222   000007                     memcpy@tmp:
  1223                           	callstack 0
  1224   000007                     ___awdiv@quotient:
  1225                           	callstack 0
  1226   000007                     memset@p:
  1227                           	callstack 0
  1228   000007                     abs@a:
  1229                           	callstack 0
  1230                           
  1231                           ; 2 bytes @ 0x6
  1232   000007                     	ds	1
  1233   000008                     read_prec_or_width@ap:
  1234                           	callstack 0
  1235   000008                     memcpy@d:
  1236                           	callstack 0
  1237                           
  1238                           ; 2 bytes @ 0x7
  1239   000008                     	ds	1
  1240   000009                     ??_abs:
  1241   000009                     ??___fleq:
  1242   000009                     gpio_pin_direction_initialize@ret:
  1243                           	callstack 0
  1244   000009                     ___fltol@sign1:
  1245                           	callstack 0
  1246   000009                     read_prec_or_width@c:
  1247                           	callstack 0
  1248   000009                     ___fpclassifyf@e:
  1249                           	callstack 0
  1250   000009                     fputs@s:
  1251                           	callstack 0
  1252                           
  1253                           ; 2 bytes @ 0x8
  1254   000009                     	ds	1
  1255   00000A                     gpio_pin_write_logic@ret:
  1256                           	callstack 0
  1257   00000A                     ___fltol@exp1:
  1258                           	callstack 0
  1259   00000A                     read_prec_or_width@n:
  1260                           	callstack 0
  1261   00000A                     memcpy@s:
  1262                           	callstack 0
  1263   00000A                     sqrtf@s:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x9
  1267   00000A                     	ds	1
  1268   00000B                     ?___xxtofl:
  1269                           	callstack 0
  1270   00000B                     lcd_send_4bit@lcd:
  1271                           	callstack 0
  1272   00000B                     lcd_4bit_send_enable_enable@lcd:
  1273                           	callstack 0
  1274   00000B                     fputs@fp:
  1275                           	callstack 0
  1276   00000B                     ecu_keypad_get_value@keypad:
  1277                           	callstack 0
  1278   00000B                     gpio_pin_initialize@_pin_config:
  1279                           	callstack 0
  1280   00000B                     ___xxtofl@val:
  1281                           	callstack 0
  1282   00000B                     ___fpclassifyf@u:
  1283                           	callstack 0
  1284                           
  1285                           ; 4 bytes @ 0xA
  1286   00000B                     	ds	1
  1287   00000C                     ??_lcd_4bit_send_enable_enable:
  1288   00000C                     lcd_send_4bit@command_data:
  1289                           	callstack 0
  1290   00000C                     fputs@c:
  1291                           	callstack 0
  1292                           
  1293                           ; 1 bytes @ 0xB
  1294   00000C                     	ds	1
  1295   00000D                     ??_gpio_pin_initialize:
  1296   00000D                     ??_lcd_send_4bit:
  1297   00000D                     lcd_4bit_send_enable_enable@ret:
  1298                           	callstack 0
  1299   00000D                     ecu_keypad_get_value@value:
  1300                           	callstack 0
  1301   00000D                     fputs@i:
  1302                           	callstack 0
  1303                           
  1304                           ; 2 bytes @ 0xC
  1305   00000D                     	ds	1
  1306   00000E                     ??_ecu_keypad_get_value:
  1307   00000E                     lcd_send_4bit@ret:
  1308                           	callstack 0
  1309   00000E                     gpio_pin_initialize@ret:
  1310                           	callstack 0
  1311   00000E                     sqrtf@i:
  1312                           	callstack 0
  1313                           
  1314                           ; 4 bytes @ 0xD
  1315   00000E                     	ds	1
  1316   00000F                     ??___xxtofl:
  1317   00000F                     lcd_4bit_send_command@lcd:
  1318                           	callstack 0
  1319   00000F                     lcd_4bit_send_char_data@lcd:
  1320                           	callstack 0
  1321   00000F                     pad@fp:
  1322                           	callstack 0
  1323   00000F                     ecu_keypad_initialize@keypad:
  1324                           	callstack 0
  1325                           
  1326                           ; 2 bytes @ 0xE
  1327   00000F                     	ds	1
  1328   000010                     lcd_4bit_send_command@command:
  1329                           	callstack 0
  1330   000010                     lcd_4bit_send_char_data@data:
  1331                           	callstack 0
  1332   000010                     ecu_keypad_get_value@column_val:
  1333                           	callstack 0
  1334   000010                     pad@buf:
  1335                           	callstack 0
  1336                           
  1337                           ; 2 bytes @ 0xF
  1338   000010                     	ds	1
  1339   000011                     ??_ecu_keypad_initialize:
  1340   000011                     lcd_4bit_send_command@ret:
  1341                           	callstack 0
  1342   000011                     lcd_4bit_send_char_data@ret:
  1343                           	callstack 0
  1344   000011                     ecu_keypad_get_value@clear_rows_counter:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x10
  1348   000011                     	ds	1
  1349   000012                     lcd_4bit_initialize@lcd:
  1350                           	callstack 0
  1351   000012                     lcd_4bit_set_curser@lcd:
  1352                           	callstack 0
  1353   000012                     ecu_keypad_get_value@rows:
  1354                           	callstack 0
  1355   000012                     pad@p:
  1356                           	callstack 0
  1357   000012                     sqrtf@q:
  1358                           	callstack 0
  1359                           
  1360                           ; 4 bytes @ 0x11
  1361   000012                     	ds	1
  1362   000013                     ??_lcd_4bit_initialize:
  1363   000013                     lcd_4bit_set_curser@row:
  1364                           	callstack 0
  1365   000013                     ecu_keypad_initialize@rows:
  1366                           	callstack 0
  1367   000013                     ecu_keypad_get_value@columns:
  1368                           	callstack 0
  1369   000013                     ___xxtofl@sign:
  1370                           	callstack 0
  1371                           
  1372                           ; 1 bytes @ 0x12
  1373   000013                     	ds	1
  1374   000014                     ??_pad:
  1375   000014                     lcd_4bit_initialize@counter:
  1376                           	callstack 0
  1377   000014                     lcd_4bit_set_curser@column:
  1378                           	callstack 0
  1379   000014                     ecu_keypad_initialize@columns:
  1380                           	callstack 0
  1381   000014                     ___xxtofl@exp:
  1382                           	callstack 0
  1383                           
  1384                           ; 1 bytes @ 0x13
  1385   000014                     	ds	1
  1386   000015                     ??_lcd_4bit_set_curser:
  1387   000015                     lcd_4bit_initialize@ret:
  1388                           	callstack 0
  1389   000015                     pad@i:
  1390                           	callstack 0
  1391   000015                     ___xxtofl@arg:
  1392                           	callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x14
  1395   000015                     	ds	1
  1396   000016                     sqrtf@t:
  1397                           	callstack 0
  1398                           
  1399                           ; 4 bytes @ 0x15
  1400   000016                     	ds	1
  1401   000017                     lcd_4bit_set_curser@ret:
  1402                           	callstack 0
  1403   000017                     dtoa@fp:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x16
  1407   000017                     	ds	1
  1408   000018                     lcd_4bit_send_char_data_pos@lcd:
  1409                           	callstack 0
  1410   000018                     lcd_4bit_send_string_pos@lcd:
  1411                           	callstack 0
  1412   000018                     dtoa@d:
  1413                           	callstack 0
  1414                           
  1415                           ; 2 bytes @ 0x17
  1416   000018                     	ds	1
  1417   000019                     ?___flmul:
  1418                           	callstack 0
  1419   000019                     lcd_4bit_send_char_data_pos@row:
  1420                           	callstack 0
  1421   000019                     lcd_4bit_send_string_pos@row:
  1422                           	callstack 0
  1423   000019                     ___flmul@b:
  1424                           	callstack 0
  1425                           
  1426                           ; 4 bytes @ 0x18
  1427   000019                     	ds	1
  1428   00001A                     lcd_4bit_send_char_data_pos@column:
  1429                           	callstack 0
  1430   00001A                     lcd_4bit_send_string_pos@column:
  1431                           	callstack 0
  1432   00001A                     _dtoa$1506:
  1433                           	callstack 0
  1434   00001A                     sqrtf@m:
  1435                           	callstack 0
  1436                           
  1437                           ; 4 bytes @ 0x19
  1438   00001A                     	ds	1
  1439   00001B                     lcd_4bit_send_char_data_pos@data:
  1440                           	callstack 0
  1441   00001B                     lcd_4bit_send_string_pos@str:
  1442                           	callstack 0
  1443                           
  1444                           ; 2 bytes @ 0x1A
  1445   00001B                     	ds	1
  1446   00001C                     lcd_4bit_send_char_data_pos@ret:
  1447                           	callstack 0
  1448   00001C                     dtoa@w:
  1449                           	callstack 0
  1450                           
  1451                           ; 2 bytes @ 0x1B
  1452   00001C                     	ds	1
  1453   00001D                     get_number_and_operartion@num:
  1454                           	callstack 0
  1455   00001D                     get_third_number_and_third_operartion@num:
  1456                           	callstack 0
  1457   00001D                     ___flmul@a:
  1458                           	callstack 0
  1459                           
  1460                           ; 4 bytes @ 0x1C
  1461   00001D                     	ds	1
  1462   00001E                     dtoa@p:
  1463                           	callstack 0
  1464   00001E                     sqrtf@r:
  1465                           	callstack 0
  1466                           
  1467                           ; 4 bytes @ 0x1D
  1468   00001E                     	ds	1
  1469   00001F                     get_number_and_operartion@counter_num:
  1470                           	callstack 0
  1471   00001F                     get_third_number_and_third_operartion@counter_num:
  1472                           	callstack 0
  1473                           
  1474                           ; 1 bytes @ 0x1E
  1475   00001F                     	ds	1
  1476   000020                     get_number_and_operartion@lcd_counter:
  1477                           	callstack 0
  1478   000020                     get_third_number_and_third_operartion@lcd_counter:
  1479                           	callstack 0
  1480   000020                     dtoa@s:
  1481                           	callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x1F
  1484   000020                     	ds	1
  1485   000021                     ??___flmul:
  1486   000021                     get_number_and_operartion@operation:
  1487                           	callstack 0
  1488   000021                     get_third_number_and_third_operartion@operation:
  1489                           	callstack 0
  1490   000021                     dtoa@i:
  1491                           	callstack 0
  1492                           
  1493                           ; 2 bytes @ 0x20
  1494   000021                     	ds	1
  1495   000022                     ??_get_number_and_operartion:
  1496   000022                     ??_get_third_number_and_third_operartion:
  1497   000022                     sqrtf@ix:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x21
  1501   000022                     	ds	2
  1502   000024                     get_number_and_operartion@keypad_value:
  1503                           	callstack 0
  1504   000024                     get_third_number_and_third_operartion@keypad_value:
  1505                           	callstack 0
  1506                           
  1507                           ; 1 bytes @ 0x23
  1508   000024                     	ds	1
  1509   000025                     ___flmul@sign:
  1510                           	callstack 0
  1511                           
  1512                           ; 1 bytes @ 0x24
  1513   000025                     	ds	1
  1514   000026                     ___flmul@aexp:
  1515                           	callstack 0
  1516                           
  1517                           ; 1 bytes @ 0x25
  1518   000026                     	ds	1
  1519   000027                     ___flmul@bexp:
  1520                           	callstack 0
  1521                           
  1522                           ; 1 bytes @ 0x26
  1523   000027                     	ds	1
  1524   000028                     ___flmul@grs:
  1525                           	callstack 0
  1526                           
  1527                           ; 4 bytes @ 0x27
  1528   000028                     	ds	4
  1529   00002C                     ___flmul@prod:
  1530                           	callstack 0
  1531                           
  1532                           ; 4 bytes @ 0x2B
  1533   00002C                     	ds	4
  1534   000030                     ___flmul@temp:
  1535                           	callstack 0
  1536                           
  1537                           ; 2 bytes @ 0x2F
  1538   000030                     	ds	2
  1539   000032                     ?___fladd:
  1540                           	callstack 0
  1541   000032                     ?_scalbnf:
  1542                           	callstack 0
  1543   000032                     multiplication_operation@num1_val:
  1544                           	callstack 0
  1545   000032                     ___fladd@b:
  1546                           	callstack 0
  1547   000032                     scalbnf@x:
  1548                           	callstack 0
  1549                           
  1550                           ; 4 bytes @ 0x31
  1551   000032                     	ds	4
  1552   000036                     scalbnf@n:
  1553                           	callstack 0
  1554   000036                     multiplication_operation@num2_val:
  1555                           	callstack 0
  1556   000036                     ___fladd@a:
  1557                           	callstack 0
  1558                           
  1559                           ; 4 bytes @ 0x35
  1560   000036                     	ds	2
  1561   000038                     ??_scalbnf:
  1562                           
  1563                           ; 1 bytes @ 0x37
  1564   000038                     	ds	2
  1565   00003A                     ??___fladd:
  1566   00003A                     multiplication_operation@result:
  1567                           	callstack 0
  1568                           
  1569                           ; 1 bytes @ 0x39
  1570   00003A                     	ds	1
  1571   00003B                     
  1572                           ; 1 bytes @ 0x3A
  1573   00003B                     	ds	1
  1574   00003C                     scalbnf@u:
  1575                           	callstack 0
  1576                           
  1577                           ; 4 bytes @ 0x3B
  1578   00003C                     	ds	2
  1579   00003E                     ___fladd@signs:
  1580                           	callstack 0
  1581                           
  1582                           ; 1 bytes @ 0x3D
  1583   00003E                     	ds	1
  1584   00003F                     ___fladd@aexp:
  1585                           	callstack 0
  1586                           
  1587                           ; 1 bytes @ 0x3E
  1588   00003F                     	ds	1
  1589   000040                     ___fladd@bexp:
  1590                           	callstack 0
  1591   000040                     scalbnf@y:
  1592                           	callstack 0
  1593                           
  1594                           ; 4 bytes @ 0x3F
  1595   000040                     	ds	1
  1596   000041                     ___fladd@grs:
  1597                           	callstack 0
  1598                           
  1599                           ; 1 bytes @ 0x40
  1600   000041                     	ds	1
  1601   000042                     ?___fldiv:
  1602                           	callstack 0
  1603   000042                     sum_operation@num1_val:
  1604                           	callstack 0
  1605   000042                     ___fldiv@b:
  1606                           	callstack 0
  1607                           
  1608                           ; 4 bytes @ 0x41
  1609   000042                     	ds	4
  1610   000046                     sum_operation@num2_val:
  1611                           	callstack 0
  1612   000046                     ___fldiv@a:
  1613                           	callstack 0
  1614                           
  1615                           ; 4 bytes @ 0x45
  1616   000046                     	ds	4
  1617   00004A                     ??___fldiv:
  1618   00004A                     sum_operation@result:
  1619                           	callstack 0
  1620                           
  1621                           ; 1 bytes @ 0x49
  1622   00004A                     	ds	1
  1623   00004B                     
  1624                           ; 1 bytes @ 0x4A
  1625   00004B                     	ds	3
  1626   00004E                     ___fldiv@rem:
  1627                           	callstack 0
  1628                           
  1629                           ; 4 bytes @ 0x4D
  1630   00004E                     	ds	4
  1631   000052                     ___fldiv@sign:
  1632                           	callstack 0
  1633                           
  1634                           ; 1 bytes @ 0x51
  1635   000052                     	ds	1
  1636   000053                     ___fldiv@new_exp:
  1637                           	callstack 0
  1638                           
  1639                           ; 2 bytes @ 0x52
  1640   000053                     	ds	2
  1641   000055                     ___fldiv@grs:
  1642                           	callstack 0
  1643                           
  1644                           ; 4 bytes @ 0x54
  1645   000055                     	ds	4
  1646   000059                     ___fldiv@bexp:
  1647                           	callstack 0
  1648                           
  1649                           ; 1 bytes @ 0x58
  1650   000059                     	ds	1
  1651   00005A                     ___fldiv@aexp:
  1652                           	callstack 0
  1653                           
  1654                           ; 1 bytes @ 0x59
  1655   00005A                     	ds	1
  1656   00005B                     ?___flsub:
  1657                           	callstack 0
  1658   00005B                     ?_floorf:
  1659                           	callstack 0
  1660   00005B                     Division_operation@num1_val:
  1661                           	callstack 0
  1662   00005B                     ___flsub@b:
  1663                           	callstack 0
  1664   00005B                     floorf@x:
  1665                           	callstack 0
  1666                           
  1667                           ; 4 bytes @ 0x5A
  1668   00005B                     	ds	4
  1669   00005F                     ??_floorf:
  1670   00005F                     Division_operation@num2_val:
  1671                           	callstack 0
  1672   00005F                     ___flsub@a:
  1673                           	callstack 0
  1674                           
  1675                           ; 4 bytes @ 0x5E
  1676   00005F                     	ds	4
  1677   000063                     Division_operation@result:
  1678                           	callstack 0
  1679   000063                     subtraction_operation@num1_val:
  1680                           	callstack 0
  1681   000063                     ___flge@ff1:
  1682                           	callstack 0
  1683                           
  1684                           ; 4 bytes @ 0x62
  1685   000063                     	ds	1
  1686   000064                     
  1687                           ; 1 bytes @ 0x63
  1688   000064                     	ds	1
  1689   000065                     floorf@m:
  1690                           	callstack 0
  1691                           
  1692                           ; 4 bytes @ 0x64
  1693   000065                     	ds	2
  1694   000067                     subtraction_operation@num2_val:
  1695                           	callstack 0
  1696   000067                     ___flge@ff2:
  1697                           	callstack 0
  1698                           
  1699                           ; 4 bytes @ 0x66
  1700   000067                     	ds	2
  1701   000069                     floorf@e:
  1702                           	callstack 0
  1703                           
  1704                           ; 2 bytes @ 0x68
  1705   000069                     	ds	2
  1706   00006B                     ??___flge:
  1707   00006B                     subtraction_operation@result:
  1708                           	callstack 0
  1709   00006B                     floorf@u:
  1710                           	callstack 0
  1711                           
  1712                           ; 4 bytes @ 0x6A
  1713   00006B                     	ds	1
  1714   00006C                     
  1715                           ; 1 bytes @ 0x6B
  1716   00006C                     	ds	3
  1717   00006F                     ?_powf:
  1718                           	callstack 0
  1719   00006F                     efgtoa@fp:
  1720                           	callstack 0
  1721   00006F                     powf@x:
  1722                           	callstack 0
  1723                           
  1724                           ; 4 bytes @ 0x6E
  1725   00006F                     	ds	1
  1726   000070                     efgtoa@f:
  1727                           	callstack 0
  1728                           
  1729                           ; 4 bytes @ 0x6F
  1730   000070                     	ds	3
  1731   000073                     powf@y:
  1732                           	callstack 0
  1733                           
  1734                           ; 4 bytes @ 0x72
  1735   000073                     	ds	1
  1736   000074                     efgtoa@c:
  1737                           	callstack 0
  1738                           
  1739                           ; 1 bytes @ 0x73
  1740   000074                     	ds	1
  1741   000075                     ??_efgtoa:
  1742                           
  1743                           ; 1 bytes @ 0x74
  1744   000075                     	ds	2
  1745   000077                     ??_powf:
  1746   000077                     vfpfcnvrt@fp:
  1747                           	callstack 0
  1748                           
  1749                           ; 1 bytes @ 0x76
  1750   000077                     	ds	1
  1751   000078                     vfpfcnvrt@fmt:
  1752                           	callstack 0
  1753                           
  1754                           ; 1 bytes @ 0x77
  1755   000078                     	ds	1
  1756   000079                     vfpfcnvrt@ap:
  1757                           	callstack 0
  1758                           
  1759                           ; 1 bytes @ 0x78
  1760   000079                     	ds	1
  1761   00007A                     ??_vfpfcnvrt:
  1762                           
  1763                           ; 1 bytes @ 0x79
  1764   00007A                     	ds	2
  1765   00007C                     ?_vfprintf:
  1766                           	callstack 0
  1767   00007C                     vfprintf@fp:
  1768                           	callstack 0
  1769                           
  1770                           ; 1 bytes @ 0x7B
  1771   00007C                     	ds	1
  1772   00007D                     vfprintf@fmt:
  1773                           	callstack 0
  1774                           
  1775                           ; 1 bytes @ 0x7C
  1776   00007D                     	ds	1
  1777   00007E                     vfprintf@ap:
  1778                           	callstack 0
  1779                           
  1780                           ; 1 bytes @ 0x7D
  1781   00007E                     	ds	1
  1782   00007F                     vfprintf@cfmt:
  1783                           	callstack 0
  1784                           
  1785                           ; 1 bytes @ 0x7E
  1786   00007F                     	ds	1
  1787   000080                     
  1788                           ; 1 bytes @ 0x7F
  1789 ;;
  1790 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1791 ;;
  1792 ;; *************** function _main *****************
  1793 ;; Defined at:
  1794 ;;		line 13 in file "newmain.c"
  1795 ;; Parameters:    Size  Location     Type
  1796 ;;		None
  1797 ;; Auto vars:     Size  Location     Type
  1798 ;;		None
  1799 ;; Return value:  Size  Location     Type
  1800 ;;                  2  636[None  ] int 
  1801 ;; Registers used:
  1802 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1803 ;; Tracked objects:
  1804 ;;		On entry : 0/0
  1805 ;;		On exit  : 0/0
  1806 ;;		Unchanged: 0/0
  1807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1808 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1809 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1810 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1811 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1812 ;;Total ram usage:        2 bytes
  1813 ;; Hardware stack levels required when called: 10
  1814 ;; This function calls:
  1815 ;;		_Application_Initialization
  1816 ;;		_Division_operation
  1817 ;;		___fltol
  1818 ;;		_convert_arr_to_float
  1819 ;;		_get_number_and_operartion
  1820 ;;		_get_third_number_and_third_operartion
  1821 ;;		_initialize_var
  1822 ;;		_lcd_4bit_send_command
  1823 ;;		_lcd_4bit_send_string_pos
  1824 ;;		_multiplication_operation
  1825 ;;		_send_the_result_to_LCD
  1826 ;;		_subtraction_operation
  1827 ;;		_sum_operation
  1828 ;; This function is called by:
  1829 ;;		Startup code after reset
  1830 ;; This function uses a non-reentrant model
  1831 ;;
  1832                           
  1833                           	psect	text0
  1834   003DE8                     __ptext0:
  1835                           	callstack 0
  1836   003DE8                     _main:
  1837                           	callstack 21
  1838   003DE8                     
  1839                           ;newmain.c: 14:     Application_Initialization();
  1840   003DE8  ECCC  F03C         	call	_Application_Initialization	;wreg free
  1841   003DEC                     l12772:
  1842                           
  1843                           ;newmain.c: 18:     initialize_var();
  1844   003DEC  ECC8  F035         	call	_initialize_var	;wreg free
  1845   003DF0                     
  1846                           ;newmain.c: 20:     lcd_4bit_send_command(&lcd1,0x01);
  1847   003DF0  0EF9               	movlw	low _lcd1
  1848   003DF2  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1849   003DF4  0E01               	movlw	1
  1850   003DF6  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1851   003DF8  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  1852   003DFC                     
  1853                           ;newmain.c: 21:     lcd_4bit_send_string_pos(&lcd1,2,1,"calc is ready");
  1854   003DFC  0EF9               	movlw	low _lcd1
  1855   003DFE  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1856   003E00  0E02               	movlw	2
  1857   003E02  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  1858   003E04  0E01               	movlw	1
  1859   003E06  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  1860   003E08  0EB6               	movlw	low STR_11
  1861   003E0A  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  1862   003E0C  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1863   003E0E  A4D8               	btfss	status,2,c
  1864   003E10  0E10               	movlw	high __smallconst
  1865   003E12  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1866   003E14  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  1867   003E18                     
  1868                           ;newmain.c: 22:  _delay((unsigned long)((1000)*(8000000ul/4000.0)));
  1869   003E18  0E0B               	movlw	11
  1870   003E1A  0100               	movlb	0	; () banked
  1871   003E1C  6FD1               	movwf	(??_main+1)& (0+255),b
  1872   003E1E  0E26               	movlw	38
  1873   003E20  6FD0               	movwf	??_main& (0+255),b
  1874   003E22  0E5D               	movlw	93
  1875   003E24                     u13417:
  1876   003E24  2EE8               	decfsz	wreg,f,c
  1877   003E26  D7FE               	bra	u13417
  1878   003E28  2FD0               	decfsz	??_main& (0+255),f,b
  1879   003E2A  D7FC               	bra	u13417
  1880   003E2C  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  1881   003E2E  D7FA               	bra	u13417
  1882   003E30  D000               	nop2	
  1883   003E32                     
  1884                           ;newmain.c: 23:  lcd_4bit_send_command(&lcd1,0x01);
  1885   003E32  0EF9               	movlw	low _lcd1
  1886   003E34  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1887   003E36  0E01               	movlw	1
  1888   003E38  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1889   003E3A  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  1890   003E3E                     
  1891                           ;newmain.c: 25:     get_number_and_operartion(num1,&counter_num1,&lcd_counter,&operation
      +                          );
  1892   003E3E  0EF6               	movlw	low _num1
  1893   003E40  6E1D               	movwf	get_number_and_operartion@num^0,c
  1894   003E42  0E01               	movlw	high _num1
  1895   003E44  6E1E               	movwf	(get_number_and_operartion@num+1)^0,c
  1896   003E46  0EF8               	movlw	low _counter_num1
  1897   003E48  6E1F               	movwf	get_number_and_operartion@counter_num^0,c
  1898   003E4A  0EFF               	movlw	low _lcd_counter
  1899   003E4C  6E20               	movwf	get_number_and_operartion@lcd_counter^0,c
  1900   003E4E  0EF5               	movlw	low _operation
  1901   003E50  6E21               	movwf	get_number_and_operartion@operation^0,c
  1902   003E52  EC7E  F02E         	call	_get_number_and_operartion	;wreg free
  1903   003E56                     
  1904                           ;newmain.c: 26:     convert_arr_to_float( num1,counter_num1,&num1_val);
  1905   003E56  0EF6               	movlw	low _num1
  1906   003E58  0100               	movlb	0	; () banked
  1907   003E5A  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1908   003E5C  0E01               	movlw	high _num1
  1909   003E5E  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1910   003E60  C0F8  F082         	movff	_counter_num1,convert_arr_to_float@counter_num
  1911   003E64  0EEF               	movlw	low _num1_val
  1912   003E66  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1913   003E68  EC40  F032         	call	_convert_arr_to_float	;wreg free
  1914   003E6C                     
  1915                           ;newmain.c: 27:      temp1 = num1_val;
  1916   003E6C  C0EF  F001         	movff	_num1_val,___fltol@f1
  1917   003E70  C0F0  F002         	movff	_num1_val+1,___fltol@f1+1
  1918   003E74  C0F1  F003         	movff	_num1_val+2,___fltol@f1+2
  1919   003E78  C0F2  F004         	movff	_num1_val+3,___fltol@f1+3
  1920   003E7C  EC5C  F033         	call	___fltol	;wreg free
  1921   003E80  C001  F1EC         	movff	?___fltol,_temp1
  1922   003E84  C002  F1ED         	movff	?___fltol+1,_temp1+1
  1923   003E88                     
  1924                           ;newmain.c: 28:     get_number_and_operartion(num2,&counter_num2,&lcd_counter,&operation
      +                          2);
  1925   003E88  0EF2               	movlw	low _num2
  1926   003E8A  6E1D               	movwf	get_number_and_operartion@num^0,c
  1927   003E8C  0E01               	movlw	high _num2
  1928   003E8E  6E1E               	movwf	(get_number_and_operartion@num+1)^0,c
  1929   003E90  0EF7               	movlw	low _counter_num2
  1930   003E92  6E1F               	movwf	get_number_and_operartion@counter_num^0,c
  1931   003E94  0EFF               	movlw	low _lcd_counter
  1932   003E96  6E20               	movwf	get_number_and_operartion@lcd_counter^0,c
  1933   003E98  0EF4               	movlw	low _operation2
  1934   003E9A  6E21               	movwf	get_number_and_operartion@operation^0,c
  1935   003E9C  EC7E  F02E         	call	_get_number_and_operartion	;wreg free
  1936   003EA0                     
  1937                           ;newmain.c: 29:     convert_arr_to_float( num2,counter_num2,&num2_val);
  1938   003EA0  0EF2               	movlw	low _num2
  1939   003EA2  0100               	movlb	0	; () banked
  1940   003EA4  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1941   003EA6  0E01               	movlw	high _num2
  1942   003EA8  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1943   003EAA  C0F7  F082         	movff	_counter_num2,convert_arr_to_float@counter_num
  1944   003EAE  0EEB               	movlw	low _num2_val
  1945   003EB0  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1946   003EB2  EC40  F032         	call	_convert_arr_to_float	;wreg free
  1947   003EB6                     
  1948                           ;newmain.c: 30:     temp2 = num2_val;
  1949   003EB6  C0EB  F001         	movff	_num2_val,___fltol@f1
  1950   003EBA  C0EC  F002         	movff	_num2_val+1,___fltol@f1+1
  1951   003EBE  C0ED  F003         	movff	_num2_val+2,___fltol@f1+2
  1952   003EC2  C0EE  F004         	movff	_num2_val+3,___fltol@f1+3
  1953   003EC6  EC5C  F033         	call	___fltol	;wreg free
  1954   003ECA  C001  F1EA         	movff	?___fltol,_temp2
  1955   003ECE  C002  F1EB         	movff	?___fltol+1,_temp2+1
  1956   003ED2                     
  1957                           ;newmain.c: 32:     if(operation2 == '='){}
  1958   003ED2  0E3D               	movlw	61
  1959   003ED4  0100               	movlb	0	; () banked
  1960   003ED6  19F4               	xorwf	_operation2& (0+255),w,b
  1961   003ED8  A4D8               	btfss	status,2,c
  1962   003EDA  EF71  F01F         	goto	u13361
  1963   003EDE  EF73  F01F         	goto	u13360
  1964   003EE2                     u13361:
  1965   003EE2  EF75  F01F         	goto	l12798
  1966   003EE6                     u13360:
  1967   003EE6  EF8C  F01F         	goto	l12802
  1968   003EEA                     l12798:
  1969                           
  1970                           ; BSR set to: 0
  1971                           ;newmain.c: 34:     get_third_number_and_third_operartion(num3,&counter_num3,&lcd_counte
      +                          r,&operation3);
  1972   003EEA  0EEE               	movlw	low _num3
  1973   003EEC  6E1D               	movwf	get_third_number_and_third_operartion@num^0,c
  1974   003EEE  0E01               	movlw	high _num3
  1975   003EF0  6E1E               	movwf	(get_third_number_and_third_operartion@num+1)^0,c
  1976   003EF2  0EF6               	movlw	low _counter_num3
  1977   003EF4  6E1F               	movwf	get_third_number_and_third_operartion@counter_num^0,c
  1978   003EF6  0EFF               	movlw	low _lcd_counter
  1979   003EF8  6E20               	movwf	get_third_number_and_third_operartion@lcd_counter^0,c
  1980   003EFA  0EF3               	movlw	low _operation3
  1981   003EFC  6E21               	movwf	get_third_number_and_third_operartion@operation^0,c
  1982   003EFE  EC34  F02B         	call	_get_third_number_and_third_operartion	;wreg free
  1983   003F02                     
  1984                           ;newmain.c: 35:     convert_arr_to_float( num3,counter_num3,&num3_val);
  1985   003F02  0EEE               	movlw	low _num3
  1986   003F04  0100               	movlb	0	; () banked
  1987   003F06  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1988   003F08  0E01               	movlw	high _num3
  1989   003F0A  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1990   003F0C  C0F6  F082         	movff	_counter_num3,convert_arr_to_float@counter_num
  1991   003F10  0EE7               	movlw	low _num3_val
  1992   003F12  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1993   003F14  EC40  F032         	call	_convert_arr_to_float	;wreg free
  1994   003F18                     l12802:
  1995                           
  1996                           ;newmain.c: 38:     if((operation2 == '*' || operation2 == '/') && (operation == '+' || 
      +                          operation == '-'))
  1997   003F18  0E2A               	movlw	42
  1998   003F1A  0100               	movlb	0	; () banked
  1999   003F1C  19F4               	xorwf	_operation2& (0+255),w,b
  2000   003F1E  B4D8               	btfsc	status,2,c
  2001   003F20  EF94  F01F         	goto	u13371
  2002   003F24  EF96  F01F         	goto	u13370
  2003   003F28                     u13371:
  2004   003F28  EF9F  F01F         	goto	l12806
  2005   003F2C                     u13370:
  2006   003F2C                     
  2007                           ; BSR set to: 0
  2008   003F2C  0E2F               	movlw	47
  2009   003F2E  19F4               	xorwf	_operation2& (0+255),w,b
  2010   003F30  A4D8               	btfss	status,2,c
  2011   003F32  EF9D  F01F         	goto	u13381
  2012   003F36  EF9F  F01F         	goto	u13380
  2013   003F3A                     u13381:
  2014   003F3A  EFC6  F020         	goto	l12842
  2015   003F3E                     u13380:
  2016   003F3E                     l12806:
  2017                           
  2018                           ; BSR set to: 0
  2019   003F3E  0E2B               	movlw	43
  2020   003F40  19F5               	xorwf	_operation& (0+255),w,b
  2021   003F42  B4D8               	btfsc	status,2,c
  2022   003F44  EFA6  F01F         	goto	u13391
  2023   003F48  EFA8  F01F         	goto	u13390
  2024   003F4C                     u13391:
  2025   003F4C  EFDF  F01F         	goto	l12816
  2026   003F50                     u13390:
  2027   003F50                     
  2028                           ; BSR set to: 0
  2029   003F50  0E2D               	movlw	45
  2030   003F52  19F5               	xorwf	_operation& (0+255),w,b
  2031   003F54  A4D8               	btfss	status,2,c
  2032   003F56  EFAF  F01F         	goto	u13401
  2033   003F5A  EFB1  F01F         	goto	u13400
  2034   003F5E                     u13401:
  2035   003F5E  EFC6  F020         	goto	l12842
  2036   003F62                     u13400:
  2037   003F62  EFDF  F01F         	goto	l12816
  2038   003F66                     l12810:
  2039                           
  2040                           ; BSR set to: 0
  2041   003F66  C0EB  F032         	movff	_num2_val,multiplication_operation@num1_val
  2042   003F6A  C0EC  F033         	movff	_num2_val+1,multiplication_operation@num1_val+1
  2043   003F6E  C0ED  F034         	movff	_num2_val+2,multiplication_operation@num1_val+2
  2044   003F72  C0EE  F035         	movff	_num2_val+3,multiplication_operation@num1_val+3
  2045   003F76  C0E7  F036         	movff	_num3_val,multiplication_operation@num2_val
  2046   003F7A  C0E8  F037         	movff	_num3_val+1,multiplication_operation@num2_val+1
  2047   003F7E  C0E9  F038         	movff	_num3_val+2,multiplication_operation@num2_val+2
  2048   003F82  C0EA  F039         	movff	_num3_val+3,multiplication_operation@num2_val+3
  2049   003F86  0EE3               	movlw	low _result
  2050   003F88  6E3A               	movwf	multiplication_operation@result^0,c
  2051   003F8A  ECA9  F03B         	call	_multiplication_operation	;wreg free
  2052   003F8E  EF20  F020         	goto	l12824
  2053   003F92                     l12812:
  2054                           
  2055                           ; BSR set to: 0
  2056   003F92  C0EB  F05B         	movff	_num2_val,Division_operation@num1_val
  2057   003F96  C0EC  F05C         	movff	_num2_val+1,Division_operation@num1_val+1
  2058   003F9A  C0ED  F05D         	movff	_num2_val+2,Division_operation@num1_val+2
  2059   003F9E  C0EE  F05E         	movff	_num2_val+3,Division_operation@num1_val+3
  2060   003FA2  C0E7  F05F         	movff	_num3_val,Division_operation@num2_val
  2061   003FA6  C0E8  F060         	movff	_num3_val+1,Division_operation@num2_val+1
  2062   003FAA  C0E9  F061         	movff	_num3_val+2,Division_operation@num2_val+2
  2063   003FAE  C0EA  F062         	movff	_num3_val+3,Division_operation@num2_val+3
  2064   003FB2  0EE3               	movlw	low _result
  2065   003FB4  6E63               	movwf	Division_operation@result^0,c
  2066   003FB6  ECE5  F03B         	call	_Division_operation	;wreg free
  2067   003FBA  EF20  F020         	goto	l12824
  2068   003FBE                     l12816:
  2069                           
  2070                           ; BSR set to: 0
  2071   003FBE  51F4               	movf	_operation2& (0+255),w,b
  2072   003FC0  6FD0               	movwf	??_main& (0+255),b
  2073   003FC2  6BD1               	clrf	(??_main+1)& (0+255),b
  2074                           
  2075                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2076                           ; Switch size 1, requested type "simple"
  2077                           ; Number of cases is 1, Range of values is 0 to 0
  2078                           ; switch strategies available:
  2079                           ; Name         Instructions Cycles
  2080                           ; simple_byte            4     3 (average)
  2081                           ;	Chosen strategy is simple_byte
  2082   003FC4  51D1               	movf	(??_main+1)& (0+255),w,b
  2083   003FC6  0A00               	xorlw	0	; case 0
  2084   003FC8  B4D8               	btfsc	status,2,c
  2085   003FCA  EFE9  F01F         	goto	l13236
  2086   003FCE  EF20  F020         	goto	l12824
  2087   003FD2                     l13236:
  2088                           
  2089                           ; BSR set to: 0
  2090                           ; Switch size 1, requested type "simple"
  2091                           ; Number of cases is 2, Range of values is 42 to 47
  2092                           ; switch strategies available:
  2093                           ; Name         Instructions Cycles
  2094                           ; simple_byte            7     4 (average)
  2095                           ;	Chosen strategy is simple_byte
  2096   003FD2  51D0               	movf	??_main& (0+255),w,b
  2097   003FD4  0A2A               	xorlw	42	; case 42
  2098   003FD6  B4D8               	btfsc	status,2,c
  2099   003FD8  EFB3  F01F         	goto	l12810
  2100   003FDC  0A05               	xorlw	5	; case 47
  2101   003FDE  B4D8               	btfsc	status,2,c
  2102   003FE0  EFC9  F01F         	goto	l12812
  2103   003FE4  EF20  F020         	goto	l12824
  2104   003FE8                     l12818:
  2105                           
  2106                           ; BSR set to: 0
  2107   003FE8  C0EF  F042         	movff	_num1_val,sum_operation@num1_val
  2108   003FEC  C0F0  F043         	movff	_num1_val+1,sum_operation@num1_val+1
  2109   003FF0  C0F1  F044         	movff	_num1_val+2,sum_operation@num1_val+2
  2110   003FF4  C0F2  F045         	movff	_num1_val+3,sum_operation@num1_val+3
  2111   003FF8  C0E3  F046         	movff	_result,sum_operation@num2_val
  2112   003FFC  C0E4  F047         	movff	_result+1,sum_operation@num2_val+1
  2113   004000  C0E5  F048         	movff	_result+2,sum_operation@num2_val+2
  2114   004004  C0E6  F049         	movff	_result+3,sum_operation@num2_val+3
  2115   004008  0EDF               	movlw	low _total_result
  2116   00400A  6E4A               	movwf	sum_operation@result^0,c
  2117   00400C  EC6D  F03B         	call	_sum_operation	;wreg free
  2118   004010  EF42  F020         	goto	l12830
  2119   004014                     l12820:
  2120                           
  2121                           ; BSR set to: 0
  2122   004014  C0EF  F063         	movff	_num1_val,subtraction_operation@num1_val
  2123   004018  C0F0  F064         	movff	_num1_val+1,subtraction_operation@num1_val+1
  2124   00401C  C0F1  F065         	movff	_num1_val+2,subtraction_operation@num1_val+2
  2125   004020  C0F2  F066         	movff	_num1_val+3,subtraction_operation@num1_val+3
  2126   004024  C0E3  F067         	movff	_result,subtraction_operation@num2_val
  2127   004028  C0E4  F068         	movff	_result+1,subtraction_operation@num2_val+1
  2128   00402C  C0E5  F069         	movff	_result+2,subtraction_operation@num2_val+2
  2129   004030  C0E6  F06A         	movff	_result+3,subtraction_operation@num2_val+3
  2130   004034  0EDF               	movlw	low _total_result
  2131   004036  6E6B               	movwf	subtraction_operation@result^0,c
  2132   004038  EC8B  F03B         	call	_subtraction_operation	;wreg free
  2133   00403C  EF42  F020         	goto	l12830
  2134   004040                     l12824:
  2135   004040  0100               	movlb	0	; () banked
  2136   004042  51F5               	movf	_operation& (0+255),w,b
  2137   004044  6FD0               	movwf	??_main& (0+255),b
  2138   004046  6BD1               	clrf	(??_main+1)& (0+255),b
  2139                           
  2140                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2141                           ; Switch size 1, requested type "simple"
  2142                           ; Number of cases is 1, Range of values is 0 to 0
  2143                           ; switch strategies available:
  2144                           ; Name         Instructions Cycles
  2145                           ; simple_byte            4     3 (average)
  2146                           ;	Chosen strategy is simple_byte
  2147   004048  51D1               	movf	(??_main+1)& (0+255),w,b
  2148   00404A  0A00               	xorlw	0	; case 0
  2149   00404C  B4D8               	btfsc	status,2,c
  2150   00404E  EF2B  F020         	goto	l13238
  2151   004052  EF42  F020         	goto	l12830
  2152   004056                     l13238:
  2153                           
  2154                           ; BSR set to: 0
  2155                           ; Switch size 1, requested type "simple"
  2156                           ; Number of cases is 2, Range of values is 43 to 45
  2157                           ; switch strategies available:
  2158                           ; Name         Instructions Cycles
  2159                           ; simple_byte            7     4 (average)
  2160                           ;	Chosen strategy is simple_byte
  2161   004056  51D0               	movf	??_main& (0+255),w,b
  2162   004058  0A2B               	xorlw	43	; case 43
  2163   00405A  B4D8               	btfsc	status,2,c
  2164   00405C  EFF4  F01F         	goto	l12818
  2165   004060  0A06               	xorlw	6	; case 45
  2166   004062  B4D8               	btfsc	status,2,c
  2167   004064  EF0A  F020         	goto	l12820
  2168   004068  EF42  F020         	goto	l12830
  2169   00406C                     l12826:
  2170                           
  2171                           ; BSR set to: 0
  2172   00406C  C0DF  F0CC         	movff	_total_result,send_the_result_to_LCD@result
  2173   004070  C0E0  F0CD         	movff	_total_result+1,send_the_result_to_LCD@result+1
  2174   004074  C0E1  F0CE         	movff	_total_result+2,send_the_result_to_LCD@result+2
  2175   004078  C0E2  F0CF         	movff	_total_result+3,send_the_result_to_LCD@result+3
  2176   00407C  EC59  F035         	call	_send_the_result_to_LCD	;wreg free
  2177   004080  EFA9  F021         	goto	l12866
  2178   004084                     l12830:
  2179   004084  0100               	movlb	0	; () banked
  2180   004086  51F3               	movf	_operation3& (0+255),w,b
  2181   004088  6FD0               	movwf	??_main& (0+255),b
  2182   00408A  6BD1               	clrf	(??_main+1)& (0+255),b
  2183                           
  2184                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2185                           ; Switch size 1, requested type "simple"
  2186                           ; Number of cases is 1, Range of values is 0 to 0
  2187                           ; switch strategies available:
  2188                           ; Name         Instructions Cycles
  2189                           ; simple_byte            4     3 (average)
  2190                           ;	Chosen strategy is simple_byte
  2191   00408C  51D1               	movf	(??_main+1)& (0+255),w,b
  2192   00408E  0A00               	xorlw	0	; case 0
  2193   004090  B4D8               	btfsc	status,2,c
  2194   004092  EF4D  F020         	goto	l13240
  2195   004096  EFA9  F021         	goto	l12866
  2196   00409A                     l13240:
  2197                           
  2198                           ; BSR set to: 0
  2199                           ; Switch size 1, requested type "simple"
  2200                           ; Number of cases is 5, Range of values is 42 to 61
  2201                           ; switch strategies available:
  2202                           ; Name         Instructions Cycles
  2203                           ; simple_byte           16     9 (average)
  2204                           ;	Chosen strategy is simple_byte
  2205   00409A  51D0               	movf	??_main& (0+255),w,b
  2206   00409C  0A2A               	xorlw	42	; case 42
  2207   00409E  B4D8               	btfsc	status,2,c
  2208   0040A0  EFA9  F021         	goto	l12866
  2209   0040A4  0A01               	xorlw	1	; case 43
  2210   0040A6  B4D8               	btfsc	status,2,c
  2211   0040A8  EFA9  F021         	goto	l12866
  2212   0040AC  0A06               	xorlw	6	; case 45
  2213   0040AE  B4D8               	btfsc	status,2,c
  2214   0040B0  EFA9  F021         	goto	l12866
  2215   0040B4  0A02               	xorlw	2	; case 47
  2216   0040B6  B4D8               	btfsc	status,2,c
  2217   0040B8  EFA9  F021         	goto	l12866
  2218   0040BC  0A12               	xorlw	18	; case 61
  2219   0040BE  B4D8               	btfsc	status,2,c
  2220   0040C0  EF36  F020         	goto	l12826
  2221   0040C4  EFA9  F021         	goto	l12866
  2222   0040C8                     l12832:
  2223                           
  2224                           ; BSR set to: 0
  2225   0040C8  C0EF  F042         	movff	_num1_val,sum_operation@num1_val
  2226   0040CC  C0F0  F043         	movff	_num1_val+1,sum_operation@num1_val+1
  2227   0040D0  C0F1  F044         	movff	_num1_val+2,sum_operation@num1_val+2
  2228   0040D4  C0F2  F045         	movff	_num1_val+3,sum_operation@num1_val+3
  2229   0040D8  C0EB  F046         	movff	_num2_val,sum_operation@num2_val
  2230   0040DC  C0EC  F047         	movff	_num2_val+1,sum_operation@num2_val+1
  2231   0040E0  C0ED  F048         	movff	_num2_val+2,sum_operation@num2_val+2
  2232   0040E4  C0EE  F049         	movff	_num2_val+3,sum_operation@num2_val+3
  2233   0040E8  0EE3               	movlw	low _result
  2234   0040EA  6E4A               	movwf	sum_operation@result^0,c
  2235   0040EC  EC6D  F03B         	call	_sum_operation	;wreg free
  2236   0040F0  EF4B  F021         	goto	l12856
  2237   0040F4                     l12834:
  2238                           
  2239                           ; BSR set to: 0
  2240   0040F4  C0EF  F063         	movff	_num1_val,subtraction_operation@num1_val
  2241   0040F8  C0F0  F064         	movff	_num1_val+1,subtraction_operation@num1_val+1
  2242   0040FC  C0F1  F065         	movff	_num1_val+2,subtraction_operation@num1_val+2
  2243   004100  C0F2  F066         	movff	_num1_val+3,subtraction_operation@num1_val+3
  2244   004104  C0EB  F067         	movff	_num2_val,subtraction_operation@num2_val
  2245   004108  C0EC  F068         	movff	_num2_val+1,subtraction_operation@num2_val+1
  2246   00410C  C0ED  F069         	movff	_num2_val+2,subtraction_operation@num2_val+2
  2247   004110  C0EE  F06A         	movff	_num2_val+3,subtraction_operation@num2_val+3
  2248   004114  0EE3               	movlw	low _result
  2249   004116  6E6B               	movwf	subtraction_operation@result^0,c
  2250   004118  EC8B  F03B         	call	_subtraction_operation	;wreg free
  2251   00411C  EF4B  F021         	goto	l12856
  2252   004120                     l12836:
  2253                           
  2254                           ; BSR set to: 0
  2255   004120  C0EF  F032         	movff	_num1_val,multiplication_operation@num1_val
  2256   004124  C0F0  F033         	movff	_num1_val+1,multiplication_operation@num1_val+1
  2257   004128  C0F1  F034         	movff	_num1_val+2,multiplication_operation@num1_val+2
  2258   00412C  C0F2  F035         	movff	_num1_val+3,multiplication_operation@num1_val+3
  2259   004130  C0EB  F036         	movff	_num2_val,multiplication_operation@num2_val
  2260   004134  C0EC  F037         	movff	_num2_val+1,multiplication_operation@num2_val+1
  2261   004138  C0ED  F038         	movff	_num2_val+2,multiplication_operation@num2_val+2
  2262   00413C  C0EE  F039         	movff	_num2_val+3,multiplication_operation@num2_val+3
  2263   004140  0EE3               	movlw	low _result
  2264   004142  6E3A               	movwf	multiplication_operation@result^0,c
  2265   004144  ECA9  F03B         	call	_multiplication_operation	;wreg free
  2266   004148  EF4B  F021         	goto	l12856
  2267   00414C                     l12838:
  2268                           
  2269                           ; BSR set to: 0
  2270   00414C  C0EF  F05B         	movff	_num1_val,Division_operation@num1_val
  2271   004150  C0F0  F05C         	movff	_num1_val+1,Division_operation@num1_val+1
  2272   004154  C0F1  F05D         	movff	_num1_val+2,Division_operation@num1_val+2
  2273   004158  C0F2  F05E         	movff	_num1_val+3,Division_operation@num1_val+3
  2274   00415C  C0EB  F05F         	movff	_num2_val,Division_operation@num2_val
  2275   004160  C0EC  F060         	movff	_num2_val+1,Division_operation@num2_val+1
  2276   004164  C0ED  F061         	movff	_num2_val+2,Division_operation@num2_val+2
  2277   004168  C0EE  F062         	movff	_num2_val+3,Division_operation@num2_val+3
  2278   00416C  0EE3               	movlw	low _result
  2279   00416E  6E63               	movwf	Division_operation@result^0,c
  2280   004170  ECE5  F03B         	call	_Division_operation	;wreg free
  2281   004174  EF4B  F021         	goto	l12856
  2282   004178                     l667:
  2283                           
  2284                           ; BSR set to: 0
  2285   004178  C0EF  F0E3         	movff	_num1_val,_result
  2286   00417C  C0F0  F0E4         	movff	_num1_val+1,_result+1
  2287   004180  C0F1  F0E5         	movff	_num1_val+2,_result+2
  2288   004184  C0F2  F0E6         	movff	_num1_val+3,_result+3
  2289   004188  EF4B  F021         	goto	l12856
  2290   00418C                     l12842:
  2291                           
  2292                           ; BSR set to: 0
  2293   00418C  51F5               	movf	_operation& (0+255),w,b
  2294   00418E  6FD0               	movwf	??_main& (0+255),b
  2295   004190  6BD1               	clrf	(??_main+1)& (0+255),b
  2296                           
  2297                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2298                           ; Switch size 1, requested type "simple"
  2299                           ; Number of cases is 1, Range of values is 0 to 0
  2300                           ; switch strategies available:
  2301                           ; Name         Instructions Cycles
  2302                           ; simple_byte            4     3 (average)
  2303                           ;	Chosen strategy is simple_byte
  2304   004192  51D1               	movf	(??_main+1)& (0+255),w,b
  2305   004194  0A00               	xorlw	0	; case 0
  2306   004196  B4D8               	btfsc	status,2,c
  2307   004198  EFD0  F020         	goto	l13242
  2308   00419C  EF4B  F021         	goto	l12856
  2309   0041A0                     l13242:
  2310                           
  2311                           ; BSR set to: 0
  2312                           ; Switch size 1, requested type "simple"
  2313                           ; Number of cases is 5, Range of values is 42 to 61
  2314                           ; switch strategies available:
  2315                           ; Name         Instructions Cycles
  2316                           ; simple_byte           16     9 (average)
  2317                           ;	Chosen strategy is simple_byte
  2318   0041A0  51D0               	movf	??_main& (0+255),w,b
  2319   0041A2  0A2A               	xorlw	42	; case 42
  2320   0041A4  B4D8               	btfsc	status,2,c
  2321   0041A6  EF90  F020         	goto	l12836
  2322   0041AA  0A01               	xorlw	1	; case 43
  2323   0041AC  B4D8               	btfsc	status,2,c
  2324   0041AE  EF64  F020         	goto	l12832
  2325   0041B2  0A06               	xorlw	6	; case 45
  2326   0041B4  B4D8               	btfsc	status,2,c
  2327   0041B6  EF7A  F020         	goto	l12834
  2328   0041BA  0A02               	xorlw	2	; case 47
  2329   0041BC  B4D8               	btfsc	status,2,c
  2330   0041BE  EFA6  F020         	goto	l12838
  2331   0041C2  0A12               	xorlw	18	; case 61
  2332   0041C4  B4D8               	btfsc	status,2,c
  2333   0041C6  EFBC  F020         	goto	l667
  2334   0041CA  EF4B  F021         	goto	l12856
  2335   0041CE                     l12844:
  2336                           
  2337                           ; BSR set to: 0
  2338   0041CE  C0E3  F042         	movff	_result,sum_operation@num1_val
  2339   0041D2  C0E4  F043         	movff	_result+1,sum_operation@num1_val+1
  2340   0041D6  C0E5  F044         	movff	_result+2,sum_operation@num1_val+2
  2341   0041DA  C0E6  F045         	movff	_result+3,sum_operation@num1_val+3
  2342   0041DE  C0E7  F046         	movff	_num3_val,sum_operation@num2_val
  2343   0041E2  C0E8  F047         	movff	_num3_val+1,sum_operation@num2_val+1
  2344   0041E6  C0E9  F048         	movff	_num3_val+2,sum_operation@num2_val+2
  2345   0041EA  C0EA  F049         	movff	_num3_val+3,sum_operation@num2_val+3
  2346   0041EE  0EDF               	movlw	low _total_result
  2347   0041F0  6E4A               	movwf	sum_operation@result^0,c
  2348   0041F2  EC6D  F03B         	call	_sum_operation	;wreg free
  2349   0041F6  EF79  F021         	goto	l12862
  2350   0041FA                     l12846:
  2351                           
  2352                           ; BSR set to: 0
  2353   0041FA  C0E3  F063         	movff	_result,subtraction_operation@num1_val
  2354   0041FE  C0E4  F064         	movff	_result+1,subtraction_operation@num1_val+1
  2355   004202  C0E5  F065         	movff	_result+2,subtraction_operation@num1_val+2
  2356   004206  C0E6  F066         	movff	_result+3,subtraction_operation@num1_val+3
  2357   00420A  C0E7  F067         	movff	_num3_val,subtraction_operation@num2_val
  2358   00420E  C0E8  F068         	movff	_num3_val+1,subtraction_operation@num2_val+1
  2359   004212  C0E9  F069         	movff	_num3_val+2,subtraction_operation@num2_val+2
  2360   004216  C0EA  F06A         	movff	_num3_val+3,subtraction_operation@num2_val+3
  2361   00421A  0EDF               	movlw	low _total_result
  2362   00421C  6E6B               	movwf	subtraction_operation@result^0,c
  2363   00421E  EC8B  F03B         	call	_subtraction_operation	;wreg free
  2364   004222  EF79  F021         	goto	l12862
  2365   004226                     l12848:
  2366                           
  2367                           ; BSR set to: 0
  2368   004226  C0E3  F032         	movff	_result,multiplication_operation@num1_val
  2369   00422A  C0E4  F033         	movff	_result+1,multiplication_operation@num1_val+1
  2370   00422E  C0E5  F034         	movff	_result+2,multiplication_operation@num1_val+2
  2371   004232  C0E6  F035         	movff	_result+3,multiplication_operation@num1_val+3
  2372   004236  C0E7  F036         	movff	_num3_val,multiplication_operation@num2_val
  2373   00423A  C0E8  F037         	movff	_num3_val+1,multiplication_operation@num2_val+1
  2374   00423E  C0E9  F038         	movff	_num3_val+2,multiplication_operation@num2_val+2
  2375   004242  C0EA  F039         	movff	_num3_val+3,multiplication_operation@num2_val+3
  2376   004246  0EDF               	movlw	low _total_result
  2377   004248  6E3A               	movwf	multiplication_operation@result^0,c
  2378   00424A  ECA9  F03B         	call	_multiplication_operation	;wreg free
  2379   00424E  EF79  F021         	goto	l12862
  2380   004252                     l12850:
  2381                           
  2382                           ; BSR set to: 0
  2383   004252  C0E3  F05B         	movff	_result,Division_operation@num1_val
  2384   004256  C0E4  F05C         	movff	_result+1,Division_operation@num1_val+1
  2385   00425A  C0E5  F05D         	movff	_result+2,Division_operation@num1_val+2
  2386   00425E  C0E6  F05E         	movff	_result+3,Division_operation@num1_val+3
  2387   004262  C0E7  F05F         	movff	_num3_val,Division_operation@num2_val
  2388   004266  C0E8  F060         	movff	_num3_val+1,Division_operation@num2_val+1
  2389   00426A  C0E9  F061         	movff	_num3_val+2,Division_operation@num2_val+2
  2390   00426E  C0EA  F062         	movff	_num3_val+3,Division_operation@num2_val+3
  2391   004272  0EDF               	movlw	low _total_result
  2392   004274  6E63               	movwf	Division_operation@result^0,c
  2393   004276  ECE5  F03B         	call	_Division_operation	;wreg free
  2394   00427A  EF79  F021         	goto	l12862
  2395   00427E                     l12852:
  2396                           
  2397                           ; BSR set to: 0
  2398   00427E  C0E3  F0CC         	movff	_result,send_the_result_to_LCD@result
  2399   004282  C0E4  F0CD         	movff	_result+1,send_the_result_to_LCD@result+1
  2400   004286  C0E5  F0CE         	movff	_result+2,send_the_result_to_LCD@result+2
  2401   00428A  C0E6  F0CF         	movff	_result+3,send_the_result_to_LCD@result+3
  2402   00428E  EC59  F035         	call	_send_the_result_to_LCD	;wreg free
  2403   004292  EF79  F021         	goto	l12862
  2404   004296                     l12856:
  2405   004296  0100               	movlb	0	; () banked
  2406   004298  51F4               	movf	_operation2& (0+255),w,b
  2407   00429A  6FD0               	movwf	??_main& (0+255),b
  2408   00429C  6BD1               	clrf	(??_main+1)& (0+255),b
  2409                           
  2410                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2411                           ; Switch size 1, requested type "simple"
  2412                           ; Number of cases is 1, Range of values is 0 to 0
  2413                           ; switch strategies available:
  2414                           ; Name         Instructions Cycles
  2415                           ; simple_byte            4     3 (average)
  2416                           ;	Chosen strategy is simple_byte
  2417   00429E  51D1               	movf	(??_main+1)& (0+255),w,b
  2418   0042A0  0A00               	xorlw	0	; case 0
  2419   0042A2  B4D8               	btfsc	status,2,c
  2420   0042A4  EF56  F021         	goto	l13244
  2421   0042A8  EF79  F021         	goto	l12862
  2422   0042AC                     l13244:
  2423                           
  2424                           ; BSR set to: 0
  2425                           ; Switch size 1, requested type "simple"
  2426                           ; Number of cases is 5, Range of values is 42 to 61
  2427                           ; switch strategies available:
  2428                           ; Name         Instructions Cycles
  2429                           ; simple_byte           16     9 (average)
  2430                           ;	Chosen strategy is simple_byte
  2431   0042AC  51D0               	movf	??_main& (0+255),w,b
  2432   0042AE  0A2A               	xorlw	42	; case 42
  2433   0042B0  B4D8               	btfsc	status,2,c
  2434   0042B2  EF13  F021         	goto	l12848
  2435   0042B6  0A01               	xorlw	1	; case 43
  2436   0042B8  B4D8               	btfsc	status,2,c
  2437   0042BA  EFE7  F020         	goto	l12844
  2438   0042BE  0A06               	xorlw	6	; case 45
  2439   0042C0  B4D8               	btfsc	status,2,c
  2440   0042C2  EFFD  F020         	goto	l12846
  2441   0042C6  0A02               	xorlw	2	; case 47
  2442   0042C8  B4D8               	btfsc	status,2,c
  2443   0042CA  EF29  F021         	goto	l12850
  2444   0042CE  0A12               	xorlw	18	; case 61
  2445   0042D0  B4D8               	btfsc	status,2,c
  2446   0042D2  EF3F  F021         	goto	l12852
  2447   0042D6  EF79  F021         	goto	l12862
  2448   0042DA                     l12858:
  2449                           
  2450                           ; BSR set to: 0
  2451   0042DA  C0DF  F0CC         	movff	_total_result,send_the_result_to_LCD@result
  2452   0042DE  C0E0  F0CD         	movff	_total_result+1,send_the_result_to_LCD@result+1
  2453   0042E2  C0E1  F0CE         	movff	_total_result+2,send_the_result_to_LCD@result+2
  2454   0042E6  C0E2  F0CF         	movff	_total_result+3,send_the_result_to_LCD@result+3
  2455   0042EA  EC59  F035         	call	_send_the_result_to_LCD	;wreg free
  2456   0042EE  EF9B  F021         	goto	l12864
  2457   0042F2                     l12862:
  2458   0042F2  0100               	movlb	0	; () banked
  2459   0042F4  51F3               	movf	_operation3& (0+255),w,b
  2460   0042F6  6FD0               	movwf	??_main& (0+255),b
  2461   0042F8  6BD1               	clrf	(??_main+1)& (0+255),b
  2462                           
  2463                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2464                           ; Switch size 1, requested type "simple"
  2465                           ; Number of cases is 1, Range of values is 0 to 0
  2466                           ; switch strategies available:
  2467                           ; Name         Instructions Cycles
  2468                           ; simple_byte            4     3 (average)
  2469                           ;	Chosen strategy is simple_byte
  2470   0042FA  51D1               	movf	(??_main+1)& (0+255),w,b
  2471   0042FC  0A00               	xorlw	0	; case 0
  2472   0042FE  B4D8               	btfsc	status,2,c
  2473   004300  EF84  F021         	goto	l13246
  2474   004304  EF9B  F021         	goto	l12864
  2475   004308                     l13246:
  2476                           
  2477                           ; BSR set to: 0
  2478                           ; Switch size 1, requested type "simple"
  2479                           ; Number of cases is 5, Range of values is 42 to 61
  2480                           ; switch strategies available:
  2481                           ; Name         Instructions Cycles
  2482                           ; simple_byte           16     9 (average)
  2483                           ;	Chosen strategy is simple_byte
  2484   004308  51D0               	movf	??_main& (0+255),w,b
  2485   00430A  0A2A               	xorlw	42	; case 42
  2486   00430C  B4D8               	btfsc	status,2,c
  2487   00430E  EF9B  F021         	goto	l12864
  2488   004312  0A01               	xorlw	1	; case 43
  2489   004314  B4D8               	btfsc	status,2,c
  2490   004316  EF9B  F021         	goto	l12864
  2491   00431A  0A06               	xorlw	6	; case 45
  2492   00431C  B4D8               	btfsc	status,2,c
  2493   00431E  EF9B  F021         	goto	l12864
  2494   004322  0A02               	xorlw	2	; case 47
  2495   004324  B4D8               	btfsc	status,2,c
  2496   004326  EF9B  F021         	goto	l12864
  2497   00432A  0A12               	xorlw	18	; case 61
  2498   00432C  B4D8               	btfsc	status,2,c
  2499   00432E  EF6D  F021         	goto	l12858
  2500   004332  EF9B  F021         	goto	l12864
  2501   004336                     l12864:
  2502                           
  2503                           ;newmain.c: 83:        temp_result = total_result;
  2504   004336  C0DF  F001         	movff	_total_result,___fltol@f1
  2505   00433A  C0E0  F002         	movff	_total_result+1,___fltol@f1+1
  2506   00433E  C0E1  F003         	movff	_total_result+2,___fltol@f1+2
  2507   004342  C0E2  F004         	movff	_total_result+3,___fltol@f1+3
  2508   004346  EC5C  F033         	call	___fltol	;wreg free
  2509   00434A  C001  F1E8         	movff	?___fltol,_temp_result
  2510   00434E  C002  F1E9         	movff	?___fltol+1,_temp_result+1
  2511   004352                     l12866:
  2512                           
  2513                           ;newmain.c: 88:     _delay((unsigned long)((5000)*(8000000ul/4000.0)));
  2514   004352  0E33               	movlw	51
  2515   004354  0100               	movlb	0	; () banked
  2516   004356  6FD1               	movwf	(??_main+1)& (0+255),b
  2517   004358  0EBB               	movlw	187
  2518   00435A  6FD0               	movwf	??_main& (0+255),b
  2519   00435C  0EDF               	movlw	223
  2520   00435E                     u13427:
  2521   00435E  2EE8               	decfsz	wreg,f,c
  2522   004360  D7FE               	bra	u13427
  2523   004362  2FD0               	decfsz	??_main& (0+255),f,b
  2524   004364  D7FC               	bra	u13427
  2525   004366  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  2526   004368  D7FA               	bra	u13427
  2527   00436A  D000               	nop2	
  2528   00436C                     
  2529                           ;newmain.c: 89:  lcd_4bit_send_command(&lcd1,0x01);
  2530   00436C  0EF9               	movlw	low _lcd1
  2531   00436E  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2532   004370  0E01               	movlw	1
  2533   004372  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2534   004374  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  2535   004378  EFF6  F01E         	goto	l12772
  2536   00437C  EF00  F000         	goto	start
  2537   004380                     __end_of_main:
  2538                           	callstack 0
  2539                           
  2540 ;; *************** function _sum_operation *****************
  2541 ;; Defined at:
  2542 ;;		line 144 in file "calculator_function/calculator_functions.c"
  2543 ;; Parameters:    Size  Location     Type
  2544 ;;  num1_val        4   65[COMRAM] float 
  2545 ;;  num2_val        4   69[COMRAM] float 
  2546 ;;  result          1   73[COMRAM] PTR float 
  2547 ;;		 -> total_result(4), result(4), 
  2548 ;; Auto vars:     Size  Location     Type
  2549 ;;		None
  2550 ;; Return value:  Size  Location     Type
  2551 ;;                  1    wreg      void 
  2552 ;; Registers used:
  2553 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2554 ;; Tracked objects:
  2555 ;;		On entry : 0/0
  2556 ;;		On exit  : 0/0
  2557 ;;		Unchanged: 0/0
  2558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2559 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2560 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2561 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2562 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2563 ;;Total ram usage:        9 bytes
  2564 ;; Hardware stack levels used: 1
  2565 ;; Hardware stack levels required when called: 1
  2566 ;; This function calls:
  2567 ;;		___fladd
  2568 ;; This function is called by:
  2569 ;;		_main
  2570 ;; This function uses a non-reentrant model
  2571 ;;
  2572                           
  2573                           	psect	text1
  2574   0076DA                     __ptext1:
  2575                           	callstack 0
  2576   0076DA                     _sum_operation:
  2577                           	callstack 29
  2578   0076DA                     
  2579                           ;calculator_function/calculator_functions.c: 145: *result = num1_val+num2_val;
  2580   0076DA  C042  F032         	movff	sum_operation@num1_val,___fladd@b
  2581   0076DE  C043  F033         	movff	sum_operation@num1_val+1,___fladd@b+1
  2582   0076E2  C044  F034         	movff	sum_operation@num1_val+2,___fladd@b+2
  2583   0076E6  C045  F035         	movff	sum_operation@num1_val+3,___fladd@b+3
  2584   0076EA  C046  F036         	movff	sum_operation@num2_val,___fladd@a
  2585   0076EE  C047  F037         	movff	sum_operation@num2_val+1,___fladd@a+1
  2586   0076F2  C048  F038         	movff	sum_operation@num2_val+2,___fladd@a+2
  2587   0076F6  C049  F039         	movff	sum_operation@num2_val+3,___fladd@a+3
  2588   0076FA  ECC0  F021         	call	___fladd	;wreg free
  2589   0076FE  504A               	movf	sum_operation@result^0,w,c
  2590   007700  6ED9               	movwf	fsr2l,c
  2591   007702  6ADA               	clrf	fsr2h,c
  2592   007704  C032  FFDE         	movff	?___fladd,postinc2
  2593   007708  C033  FFDE         	movff	?___fladd+1,postinc2
  2594   00770C  C034  FFDE         	movff	?___fladd+2,postinc2
  2595   007710  C035  FFDE         	movff	?___fladd+3,postinc2
  2596   007714  0012               	return		;funcret
  2597   007716                     __end_of_sum_operation:
  2598                           	callstack 0
  2599                           
  2600 ;; *************** function _subtraction_operation *****************
  2601 ;; Defined at:
  2602 ;;		line 154 in file "calculator_function/calculator_functions.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;  num1_val        4   98[COMRAM] float 
  2605 ;;  num2_val        4  102[COMRAM] float 
  2606 ;;  result          1  106[COMRAM] PTR float 
  2607 ;;		 -> total_result(4), result(4), 
  2608 ;; Auto vars:     Size  Location     Type
  2609 ;;		None
  2610 ;; Return value:  Size  Location     Type
  2611 ;;                  1    wreg      void 
  2612 ;; Registers used:
  2613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2614 ;; Tracked objects:
  2615 ;;		On entry : 0/0
  2616 ;;		On exit  : 0/0
  2617 ;;		Unchanged: 0/0
  2618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2619 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2622 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2623 ;;Total ram usage:        9 bytes
  2624 ;; Hardware stack levels used: 1
  2625 ;; Hardware stack levels required when called: 2
  2626 ;; This function calls:
  2627 ;;		___flsub
  2628 ;; This function is called by:
  2629 ;;		_main
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text2
  2634   007716                     __ptext2:
  2635                           	callstack 0
  2636   007716                     _subtraction_operation:
  2637                           	callstack 28
  2638   007716                     
  2639                           ;calculator_function/calculator_functions.c: 155: *result = num1_val-num2_val;
  2640   007716  C063  F05B         	movff	subtraction_operation@num1_val,___flsub@b
  2641   00771A  C064  F05C         	movff	subtraction_operation@num1_val+1,___flsub@b+1
  2642   00771E  C065  F05D         	movff	subtraction_operation@num1_val+2,___flsub@b+2
  2643   007722  C066  F05E         	movff	subtraction_operation@num1_val+3,___flsub@b+3
  2644   007726  C067  F05F         	movff	subtraction_operation@num2_val,___flsub@a
  2645   00772A  C068  F060         	movff	subtraction_operation@num2_val+1,___flsub@a+1
  2646   00772E  C069  F061         	movff	subtraction_operation@num2_val+2,___flsub@a+2
  2647   007732  C06A  F062         	movff	subtraction_operation@num2_val+3,___flsub@a+3
  2648   007736  ECCB  F03A         	call	___flsub	;wreg free
  2649   00773A  506B               	movf	subtraction_operation@result^0,w,c
  2650   00773C  6ED9               	movwf	fsr2l,c
  2651   00773E  6ADA               	clrf	fsr2h,c
  2652   007740  C05B  FFDE         	movff	?___flsub,postinc2
  2653   007744  C05C  FFDE         	movff	?___flsub+1,postinc2
  2654   007748  C05D  FFDE         	movff	?___flsub+2,postinc2
  2655   00774C  C05E  FFDE         	movff	?___flsub+3,postinc2
  2656   007750  0012               	return		;funcret
  2657   007752                     __end_of_subtraction_operation:
  2658                           	callstack 0
  2659                           
  2660 ;; *************** function _send_the_result_to_LCD *****************
  2661 ;; Defined at:
  2662 ;;		line 183 in file "calculator_function/calculator_functions.c"
  2663 ;; Parameters:    Size  Location     Type
  2664 ;;  result          4   76[BANK0 ] float 
  2665 ;; Auto vars:     Size  Location     Type
  2666 ;;  result_str     80    0[BANK1 ] float [20]
  2667 ;; Return value:  Size  Location     Type
  2668 ;;                  1    wreg      void 
  2669 ;; Registers used:
  2670 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2671 ;; Tracked objects:
  2672 ;;		On entry : 0/0
  2673 ;;		On exit  : 0/0
  2674 ;;		Unchanged: 0/0
  2675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2676 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2677 ;;      Locals:         0       0      82       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2679 ;;      Totals:         0       4      82       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2680 ;;Total ram usage:       86 bytes
  2681 ;; Hardware stack levels used: 1
  2682 ;; Hardware stack levels required when called: 9
  2683 ;; This function calls:
  2684 ;;		___flge
  2685 ;;		___fltol
  2686 ;;		___xxtofl
  2687 ;;		_convert_float_to_string
  2688 ;;		_convert_int_to_string
  2689 ;;		_lcd_4bit_send_command
  2690 ;;		_lcd_4bit_send_string_pos
  2691 ;; This function is called by:
  2692 ;;		_main
  2693 ;; This function uses a non-reentrant model
  2694 ;;
  2695                           
  2696                           	psect	text3
  2697   006AB2                     __ptext3:
  2698                           	callstack 0
  2699   006AB2                     _send_the_result_to_LCD:
  2700                           	callstack 21
  2701   006AB2                     
  2702                           ;calculator_function/calculator_functions.c: 184: float32 result_str[20];;calculator_fun
      +                          ction/calculator_functions.c: 185: if(result > (uint32)result){
  2703   006AB2  C0CC  F001         	movff	send_the_result_to_LCD@result,___fltol@f1
  2704   006AB6  C0CD  F002         	movff	send_the_result_to_LCD@result+1,___fltol@f1+1
  2705   006ABA  C0CE  F003         	movff	send_the_result_to_LCD@result+2,___fltol@f1+2
  2706   006ABE  C0CF  F004         	movff	send_the_result_to_LCD@result+3,___fltol@f1+3
  2707   006AC2  EC5C  F033         	call	___fltol	;wreg free
  2708   006AC6  C001  F00B         	movff	?___fltol,___xxtofl@val
  2709   006ACA  C002  F00C         	movff	?___fltol+1,___xxtofl@val+1
  2710   006ACE  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2711   006AD0  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2712   006AD2  0E00               	movlw	0
  2713   006AD4  EC71  F02F         	call	___xxtofl
  2714   006AD8  C00B  F063         	movff	?___xxtofl,___flge@ff1
  2715   006ADC  C00C  F064         	movff	?___xxtofl+1,___flge@ff1+1
  2716   006AE0  C00D  F065         	movff	?___xxtofl+2,___flge@ff1+2
  2717   006AE4  C00E  F066         	movff	?___xxtofl+3,___flge@ff1+3
  2718   006AE8  C0CC  F067         	movff	send_the_result_to_LCD@result,___flge@ff2
  2719   006AEC  C0CD  F068         	movff	send_the_result_to_LCD@result+1,___flge@ff2+1
  2720   006AF0  C0CE  F069         	movff	send_the_result_to_LCD@result+2,___flge@ff2+2
  2721   006AF4  C0CF  F06A         	movff	send_the_result_to_LCD@result+3,___flge@ff2+3
  2722   006AF8  ECDF  F033         	call	___flge	;wreg free
  2723   006AFC  B0D8               	btfsc	status,0,c
  2724   006AFE  EF83  F035         	goto	u13331
  2725   006B02  EF85  F035         	goto	u13330
  2726   006B06                     u13331:
  2727   006B06  EF96  F035         	goto	l12736
  2728   006B0A                     u13330:
  2729   006B0A                     
  2730                           ;calculator_function/calculator_functions.c: 186: convert_float_to_string(result,result_
      +                          str);
  2731   006B0A  C0CC  F0C6         	movff	send_the_result_to_LCD@result,convert_float_to_string@value
  2732   006B0E  C0CD  F0C7         	movff	send_the_result_to_LCD@result+1,convert_float_to_string@value+1
  2733   006B12  C0CE  F0C8         	movff	send_the_result_to_LCD@result+2,convert_float_to_string@value+2
  2734   006B16  C0CF  F0C9         	movff	send_the_result_to_LCD@result+3,convert_float_to_string@value+3
  2735   006B1A  0E00               	movlw	low send_the_result_to_LCD@result_str
  2736   006B1C  0100               	movlb	0	; () banked
  2737   006B1E  6FCA               	movwf	convert_float_to_string@str& (0+255),b
  2738   006B20  0E01               	movlw	high send_the_result_to_LCD@result_str
  2739   006B22  6FCB               	movwf	(convert_float_to_string@str+1)& (0+255),b
  2740   006B24  ECEE  F03A         	call	_convert_float_to_string	;wreg free
  2741                           
  2742                           ;calculator_function/calculator_functions.c: 187: }
  2743   006B28  EFAF  F035         	goto	l12740
  2744   006B2C                     l12736:
  2745                           
  2746                           ;calculator_function/calculator_functions.c: 189: convert_int_to_string((uint32)result,(
      +                          uint32)result_str);
  2747   006B2C  C0CC  F001         	movff	send_the_result_to_LCD@result,___fltol@f1
  2748   006B30  C0CD  F002         	movff	send_the_result_to_LCD@result+1,___fltol@f1+1
  2749   006B34  C0CE  F003         	movff	send_the_result_to_LCD@result+2,___fltol@f1+2
  2750   006B38  C0CF  F004         	movff	send_the_result_to_LCD@result+3,___fltol@f1+3
  2751   006B3C  EC5C  F033         	call	___fltol	;wreg free
  2752   006B40  C001  F150         	movff	?___fltol,_send_the_result_to_LCD$2093
  2753   006B44  C002  F151         	movff	?___fltol+1,_send_the_result_to_LCD$2093+1
  2754   006B48                     
  2755                           ;calculator_function/calculator_functions.c: 189: convert_int_to_string((uint32)result,(
      +                          uint32)result_str);
  2756   006B48  C150  F0C6         	movff	_send_the_result_to_LCD$2093,convert_int_to_string@value
  2757   006B4C  C151  F0C7         	movff	_send_the_result_to_LCD$2093+1,convert_int_to_string@value+1
  2758   006B50  0E00               	movlw	low send_the_result_to_LCD@result_str
  2759   006B52  0100               	movlb	0	; () banked
  2760   006B54  6FC8               	movwf	convert_int_to_string@str& (0+255),b
  2761   006B56  0E01               	movlw	high send_the_result_to_LCD@result_str
  2762   006B58  6FC9               	movwf	(convert_int_to_string@str+1)& (0+255),b
  2763   006B5A  EC7B  F03A         	call	_convert_int_to_string	;wreg free
  2764   006B5E                     l12740:
  2765                           
  2766                           ;calculator_function/calculator_functions.c: 191: lcd_4bit_send_command(&lcd1,0x08);
  2767   006B5E  0EF9               	movlw	low _lcd1
  2768   006B60  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2769   006B62  0E08               	movlw	8
  2770   006B64  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2771   006B66  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  2772   006B6A                     
  2773                           ;calculator_function/calculator_functions.c: 192: lcd_4bit_send_command(&lcd1,0x0C);
  2774   006B6A  0EF9               	movlw	low _lcd1
  2775   006B6C  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2776   006B6E  0E0C               	movlw	12
  2777   006B70  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2778   006B72  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  2779   006B76                     
  2780                           ;calculator_function/calculator_functions.c: 193: lcd_4bit_send_string_pos(&lcd1,3,1,res
      +                          ult_str);
  2781   006B76  0EF9               	movlw	low _lcd1
  2782   006B78  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2783   006B7A  0E03               	movlw	3
  2784   006B7C  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  2785   006B7E  0E01               	movlw	1
  2786   006B80  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  2787   006B82  0E00               	movlw	low send_the_result_to_LCD@result_str
  2788   006B84  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  2789   006B86  0E01               	movlw	high send_the_result_to_LCD@result_str
  2790   006B88  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2791   006B8A  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  2792   006B8E  0012               	return		;funcret
  2793   006B90                     __end_of_send_the_result_to_LCD:
  2794                           	callstack 0
  2795                           
  2796 ;; *************** function _convert_int_to_string *****************
  2797 ;; Defined at:
  2798 ;;		line 469 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  2799 ;; Parameters:    Size  Location     Type
  2800 ;;  value           2   70[BANK0 ] unsigned int 
  2801 ;;  str             2   72[BANK0 ] PTR unsigned char 
  2802 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  2803 ;; Auto vars:     Size  Location     Type
  2804 ;;  ret             1    0        unsigned char 
  2805 ;; Return value:  Size  Location     Type
  2806 ;;                  1    wreg      unsigned char 
  2807 ;; Registers used:
  2808 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2809 ;; Tracked objects:
  2810 ;;		On entry : 0/0
  2811 ;;		On exit  : 0/0
  2812 ;;		Unchanged: 0/0
  2813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2814 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2818 ;;Total ram usage:        4 bytes
  2819 ;; Hardware stack levels used: 1
  2820 ;; Hardware stack levels required when called: 8
  2821 ;; This function calls:
  2822 ;;		_memset
  2823 ;;		_sprintf
  2824 ;; This function is called by:
  2825 ;;		_send_the_result_to_LCD
  2826 ;; This function uses a non-reentrant model
  2827 ;;
  2828                           
  2829                           	psect	text4
  2830   0074F6                     __ptext4:
  2831                           	callstack 0
  2832   0074F6                     _convert_int_to_string:
  2833                           	callstack 21
  2834   0074F6                     
  2835                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 471:     if(((void*)0) == str)
  2836   0074F6  0100               	movlb	0	; () banked
  2837   0074F8  51C8               	movf	convert_int_to_string@str& (0+255),w,b
  2838   0074FA  11C9               	iorwf	(convert_int_to_string@str+1)& (0+255),w,b
  2839   0074FC  A4D8               	btfss	status,2,c
  2840   0074FE  EF83  F03A         	goto	u13301
  2841   007502  EF85  F03A         	goto	u13300
  2842   007506                     u13301:
  2843   007506  EF87  F03A         	goto	l12698
  2844   00750A                     u13300:
  2845   00750A                     
  2846                           ; BSR set to: 0
  2847                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 474:     }
  2848   00750A  EFA2  F03A         	goto	l289
  2849   00750E                     l12698:
  2850                           
  2851                           ; BSR set to: 0
  2852                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 476:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 477:      
      +                             memset(str,'\0',20);
  2853   00750E  C0C8  F001         	movff	convert_int_to_string@str,memset@dest
  2854   007512  C0C9  F002         	movff	convert_int_to_string@str+1,memset@dest+1
  2855   007516  0E00               	movlw	0
  2856   007518  6E04               	movwf	(memset@c+1)^0,c
  2857   00751A  0E00               	movlw	0
  2858   00751C  6E03               	movwf	memset@c^0,c
  2859   00751E  0E00               	movlw	0
  2860   007520  6E06               	movwf	(memset@n+1)^0,c
  2861   007522  0E14               	movlw	20
  2862   007524  6E05               	movwf	memset@n^0,c
  2863   007526  EC3D  F03C         	call	_memset	;wreg free
  2864   00752A                     
  2865                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 478:         sprintf(str,"%i",value);
  2866   00752A  C0C8  F0B2         	movff	convert_int_to_string@str,sprintf@s
  2867   00752E  C0C9  F0B3         	movff	convert_int_to_string@str+1,sprintf@s+1
  2868   007532  0ED1               	movlw	low STR_8
  2869   007534  0100               	movlb	0	; () banked
  2870   007536  6FB4               	movwf	sprintf@fmt& (0+255),b
  2871   007538  C0C6  F0B5         	movff	convert_int_to_string@value,?_sprintf+3
  2872   00753C  C0C7  F0B6         	movff	convert_int_to_string@value+1,?_sprintf+4
  2873   007540  EC0E  F03B         	call	_sprintf	;wreg free
  2874   007544                     l289:
  2875   007544  0012               	return		;funcret
  2876   007546                     __end_of_convert_int_to_string:
  2877                           	callstack 0
  2878                           
  2879 ;; *************** function _convert_float_to_string *****************
  2880 ;; Defined at:
  2881 ;;		line 133 in file "calculator_function/calculator_functions.c"
  2882 ;; Parameters:    Size  Location     Type
  2883 ;;  value           4   70[BANK0 ] float 
  2884 ;;  str             2   74[BANK0 ] PTR unsigned char 
  2885 ;;		 -> send_the_result_to_LCD@result_str(80), 
  2886 ;; Auto vars:     Size  Location     Type
  2887 ;;		None
  2888 ;; Return value:  Size  Location     Type
  2889 ;;                  1    wreg      void 
  2890 ;; Registers used:
  2891 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2892 ;; Tracked objects:
  2893 ;;		On entry : 0/0
  2894 ;;		On exit  : 0/0
  2895 ;;		Unchanged: 0/0
  2896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2897 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2901 ;;Total ram usage:        6 bytes
  2902 ;; Hardware stack levels used: 1
  2903 ;; Hardware stack levels required when called: 8
  2904 ;; This function calls:
  2905 ;;		_memset
  2906 ;;		_sprintf
  2907 ;; This function is called by:
  2908 ;;		_send_the_result_to_LCD
  2909 ;; This function uses a non-reentrant model
  2910 ;;
  2911                           
  2912                           	psect	text5
  2913   0075DC                     __ptext5:
  2914                           	callstack 0
  2915   0075DC                     _convert_float_to_string:
  2916                           	callstack 21
  2917   0075DC                     
  2918                           ;calculator_function/calculator_functions.c: 134:     memset(str,'\0',20);
  2919   0075DC  C0CA  F001         	movff	convert_float_to_string@str,memset@dest
  2920   0075E0  C0CB  F002         	movff	convert_float_to_string@str+1,memset@dest+1
  2921   0075E4  0E00               	movlw	0
  2922   0075E6  6E04               	movwf	(memset@c+1)^0,c
  2923   0075E8  0E00               	movlw	0
  2924   0075EA  6E03               	movwf	memset@c^0,c
  2925   0075EC  0E00               	movlw	0
  2926   0075EE  6E06               	movwf	(memset@n+1)^0,c
  2927   0075F0  0E14               	movlw	20
  2928   0075F2  6E05               	movwf	memset@n^0,c
  2929   0075F4  EC3D  F03C         	call	_memset	;wreg free
  2930   0075F8                     
  2931                           ;calculator_function/calculator_functions.c: 135:     sprintf(str,"%.2f",value);
  2932   0075F8  C0CA  F0B2         	movff	convert_float_to_string@str,sprintf@s
  2933   0075FC  C0CB  F0B3         	movff	convert_float_to_string@str+1,sprintf@s+1
  2934   007600  0EC4               	movlw	low STR_7
  2935   007602  0100               	movlb	0	; () banked
  2936   007604  6FB4               	movwf	sprintf@fmt& (0+255),b
  2937   007606  C0C6  F0B5         	movff	convert_float_to_string@value,?_sprintf+3
  2938   00760A  C0C7  F0B6         	movff	convert_float_to_string@value+1,?_sprintf+4
  2939   00760E  C0C8  F0B7         	movff	convert_float_to_string@value+2,?_sprintf+5
  2940   007612  C0C9  F0B8         	movff	convert_float_to_string@value+3,?_sprintf+6
  2941   007616  EC0E  F03B         	call	_sprintf	;wreg free
  2942   00761A  0012               	return		;funcret
  2943   00761C                     __end_of_convert_float_to_string:
  2944                           	callstack 0
  2945                           
  2946 ;; *************** function _sprintf *****************
  2947 ;; Defined at:
  2948 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2949 ;; Parameters:    Size  Location     Type
  2950 ;;  s               2   50[BANK0 ] PTR unsigned char 
  2951 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  2952 ;;  fmt             1   52[BANK0 ] PTR const unsigned char 
  2953 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(5), 
  2954 ;; Auto vars:     Size  Location     Type
  2955 ;;  f              12   58[BANK0 ] struct _IO_FILE
  2956 ;;  ret             2    0        int 
  2957 ;;  ap              1   57[BANK0 ] PTR void [1]
  2958 ;;		 -> ?_sprintf(2), 
  2959 ;; Return value:  Size  Location     Type
  2960 ;;                  2   50[BANK0 ] int 
  2961 ;; Registers used:
  2962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2963 ;; Tracked objects:
  2964 ;;		On entry : 0/0
  2965 ;;		On exit  : 0/0
  2966 ;;		Unchanged: 0/0
  2967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2968 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2972 ;;Total ram usage:       20 bytes
  2973 ;; Hardware stack levels used: 1
  2974 ;; Hardware stack levels required when called: 7
  2975 ;; This function calls:
  2976 ;;		_vfprintf
  2977 ;; This function is called by:
  2978 ;;		_convert_float_to_string
  2979 ;;		_convert_int_to_string
  2980 ;;		_convert_byte_to_string
  2981 ;;		_convert_short_to_string
  2982 ;; This function uses a non-reentrant model
  2983 ;;
  2984                           
  2985                           	psect	text6
  2986   00761C                     __ptext6:
  2987                           	callstack 0
  2988   00761C                     _sprintf:
  2989                           	callstack 21
  2990   00761C  0EB5               	movlw	low (?_sprintf+3)
  2991   00761E  0100               	movlb	0	; () banked
  2992   007620  6FB9               	movwf	sprintf@ap& (0+255),b
  2993   007622  C0B2  F0BA         	movff	sprintf@s,sprintf@f
  2994   007626  C0B3  F0BB         	movff	sprintf@s+1,sprintf@f+1
  2995   00762A                     
  2996                           ; BSR set to: 0
  2997   00762A  0E00               	movlw	0
  2998   00762C  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  2999   00762E  0E00               	movlw	0
  3000   007630  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  3001   007632                     
  3002                           ; BSR set to: 0
  3003   007632  0E00               	movlw	0
  3004   007634  6FC5               	movwf	(sprintf@f+11)& (0+255),b
  3005   007636  0E00               	movlw	0
  3006   007638  6FC4               	movwf	(sprintf@f+10)& (0+255),b
  3007   00763A                     
  3008                           ; BSR set to: 0
  3009   00763A  0EBA               	movlw	low sprintf@f
  3010   00763C  6E7C               	movwf	vfprintf@fp^0,c
  3011   00763E  C0B4  F07D         	movff	sprintf@fmt,vfprintf@fmt
  3012   007642  0EB9               	movlw	low sprintf@ap
  3013   007644  6E7E               	movwf	vfprintf@ap^0,c
  3014   007646  EC4E  F03B         	call	_vfprintf	;wreg free
  3015   00764A  0100               	movlb	0	; () banked
  3016   00764C  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  3017   00764E  25B2               	addwf	sprintf@s& (0+255),w,b
  3018   007650  6ED9               	movwf	fsr2l,c
  3019   007652  51BE               	movf	(sprintf@f+4)& (0+255),w,b
  3020   007654  21B3               	addwfc	(sprintf@s+1)& (0+255),w,b
  3021   007656  6EDA               	movwf	fsr2h,c
  3022   007658  6ADF               	clrf	indf2,c
  3023   00765A                     
  3024                           ; BSR set to: 0
  3025   00765A  0012               	return		;funcret
  3026   00765C                     __end_of_sprintf:
  3027                           	callstack 0
  3028                           
  3029 ;; *************** function _vfprintf *****************
  3030 ;; Defined at:
  3031 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3032 ;; Parameters:    Size  Location     Type
  3033 ;;  fp              1  123[COMRAM] PTR struct _IO_FILE
  3034 ;;		 -> sprintf@f(12), 
  3035 ;;  fmt             1  124[COMRAM] PTR const unsigned char 
  3036 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(5), 
  3037 ;;  ap              1  125[COMRAM] PTR PTR void 
  3038 ;;		 -> sprintf@ap(1), 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;  cfmt            1  126[COMRAM] PTR unsigned char 
  3041 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(5), 
  3042 ;; Return value:  Size  Location     Type
  3043 ;;                  2  123[COMRAM] int 
  3044 ;; Registers used:
  3045 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3046 ;; Tracked objects:
  3047 ;;		On entry : 0/0
  3048 ;;		On exit  : 0/0
  3049 ;;		Unchanged: 0/0
  3050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3051 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3055 ;;Total ram usage:        4 bytes
  3056 ;; Hardware stack levels used: 1
  3057 ;; Hardware stack levels required when called: 6
  3058 ;; This function calls:
  3059 ;;		_vfpfcnvrt
  3060 ;; This function is called by:
  3061 ;;		_sprintf
  3062 ;; This function uses a non-reentrant model
  3063 ;;
  3064                           
  3065                           	psect	text7
  3066   00769C                     __ptext7:
  3067                           	callstack 0
  3068   00769C                     _vfprintf:
  3069                           	callstack 21
  3070   00769C                     
  3071                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3072   00769C  C07D  F07F         	movff	vfprintf@fmt,vfprintf@cfmt
  3073                           
  3074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3075   0076A0  EF5A  F03B         	goto	l12094
  3076   0076A4                     l12092:
  3077                           
  3078                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3079   0076A4  C07C  F077         	movff	vfprintf@fp,vfpfcnvrt@fp
  3080   0076A8  0E7F               	movlw	low vfprintf@cfmt
  3081   0076AA  6E78               	movwf	vfpfcnvrt@fmt^0,c
  3082   0076AC  C07E  F079         	movff	vfprintf@ap,vfpfcnvrt@ap
  3083   0076B0  ECF1  F029         	call	_vfpfcnvrt	;wreg free
  3084   0076B4                     l12094:
  3085                           
  3086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3087   0076B4  C07F  FFF6         	movff	vfprintf@cfmt,tblptrl
  3088   0076B8                     	if	1	;There is more than 1 active tblptr byte
  3089   0076B8  0E10               	movlw	high __smallconst
  3090   0076BA  6EF7               	movwf	tblptrh,c
  3091   0076BC                     	endif
  3092   0076BC                     	if	0	;tblptru may be non-zero
  3093   0076BC                     	endif
  3094   0076BC                     	if	0	;tblptru may be non-zero
  3095   0076BC                     	endif
  3096   0076BC  0008               	tblrd		*
  3097   0076BE  50F5               	movf	tablat,w,c
  3098   0076C0  0900               	iorlw	0
  3099   0076C2  A4D8               	btfss	status,2,c
  3100   0076C4  EF66  F03B         	goto	u12401
  3101   0076C8  EF68  F03B         	goto	u12400
  3102   0076CC                     u12401:
  3103   0076CC  EF52  F03B         	goto	l12092
  3104   0076D0                     u12400:
  3105   0076D0                     
  3106                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3107   0076D0  0E00               	movlw	0
  3108   0076D2  6E7D               	movwf	(?_vfprintf+1)^0,c
  3109   0076D4  0E00               	movlw	0
  3110   0076D6  6E7C               	movwf	?_vfprintf^0,c
  3111   0076D8  0012               	return		;funcret
  3112   0076DA                     __end_of_vfprintf:
  3113                           	callstack 0
  3114                           
  3115 ;; *************** function _vfpfcnvrt *****************
  3116 ;; Defined at:
  3117 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3118 ;; Parameters:    Size  Location     Type
  3119 ;;  fp              1  118[COMRAM] PTR struct _IO_FILE
  3120 ;;		 -> sprintf@f(12), 
  3121 ;;  fmt             1  119[COMRAM] PTR PTR unsigned char 
  3122 ;;		 -> vfprintf@cfmt(1), 
  3123 ;;  ap              1  120[COMRAM] PTR PTR void 
  3124 ;;		 -> sprintf@ap(1), 
  3125 ;; Auto vars:     Size  Location     Type
  3126 ;;  convarg         4   44[BANK0 ] struct .
  3127 ;;  cp              1   49[BANK0 ] PTR unsigned char 
  3128 ;;		 -> STR_10(3), STR_9(3), STR_8(3), STR_7(5), 
  3129 ;;  c               1   48[BANK0 ] unsigned char 
  3130 ;;  done            1    0        _Bool 
  3131 ;; Return value:  Size  Location     Type
  3132 ;;                  1    wreg      void 
  3133 ;; Registers used:
  3134 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3135 ;; Tracked objects:
  3136 ;;		On entry : 0/0
  3137 ;;		On exit  : 0/0
  3138 ;;		Unchanged: 0/0
  3139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3140 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3144 ;;Total ram usage:       11 bytes
  3145 ;; Hardware stack levels used: 1
  3146 ;; Hardware stack levels required when called: 5
  3147 ;; This function calls:
  3148 ;;		_dtoa
  3149 ;;		_efgtoa
  3150 ;;		_fputc
  3151 ;;		_read_prec_or_width
  3152 ;; This function is called by:
  3153 ;;		_vfprintf
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           	psect	text8
  3158   0053E2                     __ptext8:
  3159                           	callstack 0
  3160   0053E2                     _vfpfcnvrt:
  3161                           	callstack 21
  3162   0053E2                     
  3163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3164   0053E2  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3165   0053E4  6ED9               	movwf	fsr2l,c
  3166   0053E6  6ADA               	clrf	fsr2h,c
  3167   0053E8  CFDF FFF6          	movff	indf2,tblptrl
  3168   0053EC                     	if	1	;There is more than 1 active tblptr byte
  3169   0053EC  0E10               	movlw	high __smallconst
  3170   0053EE  6EF7               	movwf	tblptrh,c
  3171   0053F0                     	endif
  3172   0053F0                     	if	0	;tblptru may be non-zero
  3173   0053F0                     	endif
  3174   0053F0                     	if	0	;tblptru may be non-zero
  3175   0053F0                     	endif
  3176   0053F0  0008               	tblrd		*
  3177   0053F2  50F5               	movf	tablat,w,c
  3178   0053F4  0A25               	xorlw	37
  3179   0053F6  A4D8               	btfss	status,2,c
  3180   0053F8  EF00  F02A         	goto	u12351
  3181   0053FC  EF02  F02A         	goto	u12350
  3182   005400                     u12351:
  3183   005400  EF22  F02B         	goto	l12066
  3184   005404                     u12350:
  3185   005404                     
  3186                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3187   005404  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3188   005406  6ED9               	movwf	fsr2l,c
  3189   005408  6ADA               	clrf	fsr2h,c
  3190   00540A  2ADF               	incf	indf2,f,c
  3191   00540C                     
  3192                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3193   00540C  0E00               	movlw	0
  3194   00540E  0100               	movlb	0	; () banked
  3195   005410  6FD3               	movwf	(_width+1)& (0+255),b
  3196   005412  0E00               	movlw	0
  3197   005414  6FD2               	movwf	_width& (0+255),b
  3198   005416  C0D2  F0D6         	movff	_width,_flags
  3199   00541A                     
  3200                           ; BSR set to: 0
  3201                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3202   00541A  69D4               	setf	_prec& (0+255),b
  3203   00541C  69D5               	setf	(_prec+1)& (0+255),b
  3204   00541E                     
  3205                           ; BSR set to: 0
  3206                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3207   00541E  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3208   005420  6ED9               	movwf	fsr2l,c
  3209   005422  6ADA               	clrf	fsr2h,c
  3210   005424  CFDF FFF6          	movff	indf2,tblptrl
  3211   005428                     	if	1	;There is more than 1 active tblptr byte
  3212   005428  0E10               	movlw	high __smallconst
  3213   00542A  6EF7               	movwf	tblptrh,c
  3214   00542C                     	endif
  3215   00542C                     	if	0	;tblptru may be non-zero
  3216   00542C                     	endif
  3217   00542C                     	if	0	;tblptru may be non-zero
  3218   00542C                     	endif
  3219   00542C  0008               	tblrd		*
  3220   00542E  50F5               	movf	tablat,w,c
  3221   005430  0A2E               	xorlw	46
  3222   005432  A4D8               	btfss	status,2,c
  3223   005434  EF1E  F02A         	goto	u12361
  3224   005438  EF20  F02A         	goto	u12360
  3225   00543C                     u12361:
  3226   00543C  EF2E  F02A         	goto	l12014
  3227   005440                     u12360:
  3228   005440                     
  3229                           ; BSR set to: 0
  3230                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3231   005440  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3232   005442  6ED9               	movwf	fsr2l,c
  3233   005444  6ADA               	clrf	fsr2h,c
  3234   005446  2ADF               	incf	indf2,f,c
  3235   005448                     
  3236                           ; BSR set to: 0
  3237                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3238   005448  C078  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3239   00544C  C079  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3240   005450  ECED  F037         	call	_read_prec_or_width	;wreg free
  3241   005454  C007  F0D4         	movff	?_read_prec_or_width,_prec
  3242   005458  C008  F0D5         	movff	?_read_prec_or_width+1,_prec+1
  3243   00545C                     l12014:
  3244                           
  3245                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3246   00545C  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3247   00545E  6ED9               	movwf	fsr2l,c
  3248   005460  6ADA               	clrf	fsr2h,c
  3249   005462  50DF               	movf	indf2,w,c
  3250   005464  0100               	movlb	0	; () banked
  3251   005466  6FB1               	movwf	vfpfcnvrt@cp& (0+255),b
  3252   005468                     
  3253                           ; BSR set to: 0
  3254                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3255   005468  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3256   00546C                     	if	1	;There is more than 1 active tblptr byte
  3257   00546C  0E10               	movlw	high __smallconst
  3258   00546E  6EF7               	movwf	tblptrh,c
  3259   005470                     	endif
  3260   005470                     	if	0	;tblptru may be non-zero
  3261   005470                     	endif
  3262   005470                     	if	0	;tblptru may be non-zero
  3263   005470                     	endif
  3264   005470  0008               	tblrd		*
  3265   005472  50F5               	movf	tablat,w,c
  3266   005474  0A64               	xorlw	100
  3267   005476  B4D8               	btfsc	status,2,c
  3268   005478  EF40  F02A         	goto	u12371
  3269   00547C  EF42  F02A         	goto	u12370
  3270   005480                     u12371:
  3271   005480  EF50  F02A         	goto	l12020
  3272   005484                     u12370:
  3273   005484                     
  3274                           ; BSR set to: 0
  3275   005484  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3276   005488                     	if	1	;There is more than 1 active tblptr byte
  3277   005488  0E10               	movlw	high __smallconst
  3278   00548A  6EF7               	movwf	tblptrh,c
  3279   00548C                     	endif
  3280   00548C                     	if	0	;tblptru may be non-zero
  3281   00548C                     	endif
  3282   00548C                     	if	0	;tblptru may be non-zero
  3283   00548C                     	endif
  3284   00548C  0008               	tblrd		*
  3285   00548E  50F5               	movf	tablat,w,c
  3286   005490  0A69               	xorlw	105
  3287   005492  A4D8               	btfss	status,2,c
  3288   005494  EF4E  F02A         	goto	u12381
  3289   005498  EF50  F02A         	goto	u12380
  3290   00549C                     u12381:
  3291   00549C  EF6B  F02A         	goto	l12028
  3292   0054A0                     u12380:
  3293   0054A0                     l12020:
  3294                           
  3295                           ; BSR set to: 0
  3296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3297   0054A0  5079               	movf	vfpfcnvrt@ap^0,w,c
  3298   0054A2  6ED9               	movwf	fsr2l,c
  3299   0054A4  6ADA               	clrf	fsr2h,c
  3300   0054A6  0E02               	movlw	2
  3301   0054A8  26DF               	addwf	indf2,f,c
  3302   0054AA  5CDF               	subwf	indf2,w,c
  3303   0054AC  6ED9               	movwf	fsr2l,c
  3304   0054AE  6ADA               	clrf	fsr2h,c
  3305   0054B0  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3306   0054B4  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3307   0054B8                     
  3308                           ; BSR set to: 0
  3309                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3310   0054B8  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3311   0054BA  6ED9               	movwf	fsr2l,c
  3312   0054BC  6ADA               	clrf	fsr2h,c
  3313   0054BE  29B1               	incf	vfpfcnvrt@cp& (0+255),w,b
  3314   0054C0  6EDF               	movwf	indf2,c
  3315   0054C2                     
  3316                           ; BSR set to: 0
  3317                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3318   0054C2  C077  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  3319   0054C6  C0AC  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  3320   0054CA  C0AD  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3321   0054CE  EC4B  F030         	call	_dtoa	;wreg free
  3322   0054D2  EF33  F02B         	goto	l1493
  3323   0054D6                     l12028:
  3324                           
  3325                           ; BSR set to: 0
  3326                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3327   0054D6  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3328   0054D8  6ED9               	movwf	fsr2l,c
  3329   0054DA  6ADA               	clrf	fsr2h,c
  3330   0054DC  50DF               	movf	indf2,w,c
  3331   0054DE  6FB1               	movwf	vfpfcnvrt@cp& (0+255),b
  3332   0054E0                     
  3333                           ; BSR set to: 0
  3334                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3335   0054E0  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3336   0054E4                     	if	1	;There is more than 1 active tblptr byte
  3337   0054E4  0E10               	movlw	high __smallconst
  3338   0054E6  6EF7               	movwf	tblptrh,c
  3339   0054E8                     	endif
  3340   0054E8                     	if	0	;tblptru may be non-zero
  3341   0054E8                     	endif
  3342   0054E8                     	if	0	;tblptru may be non-zero
  3343   0054E8                     	endif
  3344   0054E8  0008               	tblrd		*
  3345   0054EA  CFF5 F0B0          	movff	tablat,vfpfcnvrt@c
  3346                           
  3347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3348   0054EE  EF84  F02A         	goto	l12040
  3349   0054F2                     l12032:
  3350                           
  3351                           ; BSR set to: 0
  3352                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3353   0054F2  2BB1               	incf	vfpfcnvrt@cp& (0+255),f,b
  3354                           
  3355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  3356   0054F4  EF9D  F02A         	goto	l12042
  3357   0054F8                     l12034:
  3358                           
  3359                           ; BSR set to: 0
  3360                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3361   0054F8  0E6C               	movlw	108
  3362   0054FA  6FB0               	movwf	vfpfcnvrt@c& (0+255),b
  3363                           
  3364                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  3365   0054FC  EF9D  F02A         	goto	l12042
  3366   005500                     l12036:
  3367                           
  3368                           ; BSR set to: 0
  3369                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3370   005500  0E00               	movlw	0
  3371   005502  6FB0               	movwf	vfpfcnvrt@c& (0+255),b
  3372                           
  3373                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  3374   005504  EF9D  F02A         	goto	l12042
  3375   005508                     l12040:
  3376                           
  3377                           ; BSR set to: 0
  3378   005508  51B0               	movf	vfpfcnvrt@c& (0+255),w,b
  3379   00550A  6E7A               	movwf	??_vfpfcnvrt^0,c
  3380   00550C  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3381                           
  3382                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3383                           ; Switch size 1, requested type "simple"
  3384                           ; Number of cases is 1, Range of values is 0 to 0
  3385                           ; switch strategies available:
  3386                           ; Name         Instructions Cycles
  3387                           ; simple_byte            4     3 (average)
  3388                           ;	Chosen strategy is simple_byte
  3389   00550E  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3390   005510  0A00               	xorlw	0	; case 0
  3391   005512  B4D8               	btfsc	status,2,c
  3392   005514  EF8E  F02A         	goto	l13248
  3393   005518  EF80  F02A         	goto	l12036
  3394   00551C                     l13248:
  3395                           
  3396                           ; BSR set to: 0
  3397                           ; Switch size 1, requested type "simple"
  3398                           ; Number of cases is 3, Range of values is 76 to 108
  3399                           ; switch strategies available:
  3400                           ; Name         Instructions Cycles
  3401                           ; simple_byte           10     6 (average)
  3402                           ;	Chosen strategy is simple_byte
  3403   00551C  507A               	movf	??_vfpfcnvrt^0,w,c
  3404   00551E  0A4C               	xorlw	76	; case 76
  3405   005520  B4D8               	btfsc	status,2,c
  3406   005522  EF79  F02A         	goto	l12032
  3407   005526  0A2A               	xorlw	42	; case 102
  3408   005528  B4D8               	btfsc	status,2,c
  3409   00552A  EF7C  F02A         	goto	l12034
  3410   00552E  0A0A               	xorlw	10	; case 108
  3411   005530  B4D8               	btfsc	status,2,c
  3412   005532  EF79  F02A         	goto	l12032
  3413   005536  EF80  F02A         	goto	l12036
  3414   00553A                     l12042:
  3415                           
  3416                           ; BSR set to: 0
  3417   00553A  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3418   00553E                     	if	1	;There is more than 1 active tblptr byte
  3419   00553E  0E10               	movlw	high __smallconst
  3420   005540  6EF7               	movwf	tblptrh,c
  3421   005542                     	endif
  3422   005542                     	if	0	;tblptru may be non-zero
  3423   005542                     	endif
  3424   005542                     	if	0	;tblptru may be non-zero
  3425   005542                     	endif
  3426   005542  0008               	tblrd		*
  3427   005544  50F5               	movf	tablat,w,c
  3428   005546  0A66               	xorlw	102
  3429   005548  A4D8               	btfss	status,2,c
  3430   00554A  EFA9  F02A         	goto	u12391
  3431   00554E  EFAB  F02A         	goto	u12390
  3432   005552                     u12391:
  3433   005552  EF1C  F02B         	goto	l12062
  3434   005556                     u12390:
  3435   005556  EFD5  F02A         	goto	l12050
  3436   00555A                     l12044:
  3437                           
  3438                           ; BSR set to: 0
  3439                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3440   00555A  5079               	movf	vfpfcnvrt@ap^0,w,c
  3441   00555C  6ED9               	movwf	fsr2l,c
  3442   00555E  6ADA               	clrf	fsr2h,c
  3443   005560  CFDF F07A          	movff	indf2,??_vfpfcnvrt
  3444   005564  0E04               	movlw	4
  3445   005566  26DF               	addwf	indf2,f,c
  3446   005568  507A               	movf	??_vfpfcnvrt^0,w,c
  3447   00556A  6ED9               	movwf	fsr2l,c
  3448   00556C  6ADA               	clrf	fsr2h,c
  3449   00556E  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3450   005572  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3451   005576  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg+2
  3452   00557A  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+3
  3453                           
  3454                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  3455   00557E  EFEA  F02A         	goto	l12052
  3456   005582                     l12046:
  3457                           
  3458                           ; BSR set to: 0
  3459                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3460   005582  5079               	movf	vfpfcnvrt@ap^0,w,c
  3461   005584  6ED9               	movwf	fsr2l,c
  3462   005586  6ADA               	clrf	fsr2h,c
  3463   005588  CFDF F07A          	movff	indf2,??_vfpfcnvrt
  3464   00558C  0E04               	movlw	4
  3465   00558E  26DF               	addwf	indf2,f,c
  3466   005590  507A               	movf	??_vfpfcnvrt^0,w,c
  3467   005592  6ED9               	movwf	fsr2l,c
  3468   005594  6ADA               	clrf	fsr2h,c
  3469   005596  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3470   00559A  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3471   00559E  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg+2
  3472   0055A2  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+3
  3473                           
  3474                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  3475   0055A6  EFEA  F02A         	goto	l12052
  3476   0055AA                     l12050:
  3477                           
  3478                           ; BSR set to: 0
  3479   0055AA  51B0               	movf	vfpfcnvrt@c& (0+255),w,b
  3480   0055AC  6E7A               	movwf	??_vfpfcnvrt^0,c
  3481   0055AE  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3482                           
  3483                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3484                           ; Switch size 1, requested type "simple"
  3485                           ; Number of cases is 1, Range of values is 0 to 0
  3486                           ; switch strategies available:
  3487                           ; Name         Instructions Cycles
  3488                           ; simple_byte            4     3 (average)
  3489                           ;	Chosen strategy is simple_byte
  3490   0055B0  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3491   0055B2  0A00               	xorlw	0	; case 0
  3492   0055B4  B4D8               	btfsc	status,2,c
  3493   0055B6  EFDF  F02A         	goto	l13250
  3494   0055BA  EFEA  F02A         	goto	l12052
  3495   0055BE                     l13250:
  3496                           
  3497                           ; BSR set to: 0
  3498                           ; Switch size 1, requested type "simple"
  3499                           ; Number of cases is 2, Range of values is 76 to 108
  3500                           ; switch strategies available:
  3501                           ; Name         Instructions Cycles
  3502                           ; simple_byte            7     4 (average)
  3503                           ;	Chosen strategy is simple_byte
  3504   0055BE  507A               	movf	??_vfpfcnvrt^0,w,c
  3505   0055C0  0A4C               	xorlw	76	; case 76
  3506   0055C2  B4D8               	btfsc	status,2,c
  3507   0055C4  EFC1  F02A         	goto	l12046
  3508   0055C8  0A20               	xorlw	32	; case 108
  3509   0055CA  B4D8               	btfsc	status,2,c
  3510   0055CC  EFAD  F02A         	goto	l12044
  3511   0055D0  EFEA  F02A         	goto	l12052
  3512   0055D4                     l12052:
  3513                           
  3514                           ; BSR set to: 0
  3515                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3516   0055D4  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3517   0055D6  6ED9               	movwf	fsr2l,c
  3518   0055D8  6ADA               	clrf	fsr2h,c
  3519   0055DA  29B1               	incf	vfpfcnvrt@cp& (0+255),w,b
  3520   0055DC  6EDF               	movwf	indf2,c
  3521                           
  3522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3523   0055DE  EF06  F02B         	goto	l12060
  3524   0055E2                     l12054:
  3525                           
  3526                           ; BSR set to: 0
  3527                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3528   0055E2  C077  F06F         	movff	vfpfcnvrt@fp,efgtoa@fp
  3529   0055E6  C0AC  F070         	movff	vfpfcnvrt@convarg,efgtoa@f
  3530   0055EA  C0AD  F071         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3531   0055EE  C0AE  F072         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3532   0055F2  C0AF  F073         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3533   0055F6  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3534   0055FA                     	if	1	;There is more than 1 active tblptr byte
  3535   0055FA  0E10               	movlw	high __smallconst
  3536   0055FC  6EF7               	movwf	tblptrh,c
  3537   0055FE                     	endif
  3538   0055FE                     	if	0	;tblptru may be non-zero
  3539   0055FE                     	endif
  3540   0055FE                     	if	0	;tblptru may be non-zero
  3541   0055FE                     	endif
  3542   0055FE  0008               	tblrd		*
  3543   005600  CFF5 F074          	movff	tablat,efgtoa@c
  3544   005604  EC00  F01A         	call	_efgtoa	;wreg free
  3545   005608  EF33  F02B         	goto	l1493
  3546   00560C                     l12060:
  3547                           
  3548                           ; BSR set to: 0
  3549   00560C  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3550   005610                     	if	1	;There is more than 1 active tblptr byte
  3551   005610  0E10               	movlw	high __smallconst
  3552   005612  6EF7               	movwf	tblptrh,c
  3553   005614                     	endif
  3554   005614                     	if	0	;tblptru may be non-zero
  3555   005614                     	endif
  3556   005614                     	if	0	;tblptru may be non-zero
  3557   005614                     	endif
  3558   005614  0008               	tblrd		*
  3559   005616  50F5               	movf	tablat,w,c
  3560   005618  6E7A               	movwf	??_vfpfcnvrt^0,c
  3561   00561A  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3562                           
  3563                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3564                           ; Switch size 1, requested type "simple"
  3565                           ; Number of cases is 1, Range of values is 0 to 0
  3566                           ; switch strategies available:
  3567                           ; Name         Instructions Cycles
  3568                           ; simple_byte            4     3 (average)
  3569                           ;	Chosen strategy is simple_byte
  3570   00561C  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3571   00561E  0A00               	xorlw	0	; case 0
  3572   005620  B4D8               	btfsc	status,2,c
  3573   005622  EF15  F02B         	goto	l13252
  3574   005626  EF1C  F02B         	goto	l12062
  3575   00562A                     l13252:
  3576                           
  3577                           ; BSR set to: 0
  3578                           ; Switch size 1, requested type "simple"
  3579                           ; Number of cases is 1, Range of values is 102 to 102
  3580                           ; switch strategies available:
  3581                           ; Name         Instructions Cycles
  3582                           ; simple_byte            4     3 (average)
  3583                           ;	Chosen strategy is simple_byte
  3584   00562A  507A               	movf	??_vfpfcnvrt^0,w,c
  3585   00562C  0A66               	xorlw	102	; case 102
  3586   00562E  B4D8               	btfsc	status,2,c
  3587   005630  EFF1  F02A         	goto	l12054
  3588   005634  EF1C  F02B         	goto	l12062
  3589   005638                     l12062:
  3590                           
  3591                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3592   005638  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3593   00563A  6ED9               	movwf	fsr2l,c
  3594   00563C  6ADA               	clrf	fsr2h,c
  3595   00563E  2ADF               	incf	indf2,f,c
  3596   005640  EF33  F02B         	goto	l1493
  3597   005644                     l12066:
  3598                           
  3599                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3600   005644  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3601   005646  6ED9               	movwf	fsr2l,c
  3602   005648  6ADA               	clrf	fsr2h,c
  3603   00564A  CFDF FFF6          	movff	indf2,tblptrl
  3604   00564E                     	if	1	;There is more than 1 active tblptr byte
  3605   00564E  0E10               	movlw	high __smallconst
  3606   005650  6EF7               	movwf	tblptrh,c
  3607   005652                     	endif
  3608   005652                     	if	0	;tblptru may be non-zero
  3609   005652                     	endif
  3610   005652                     	if	0	;tblptru may be non-zero
  3611   005652                     	endif
  3612   005652  0008               	tblrd		*
  3613   005654  50F5               	movf	tablat,w,c
  3614   005656  6E01               	movwf	fputc@c^0,c
  3615   005658  6A02               	clrf	(fputc@c+1)^0,c
  3616   00565A  C077  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3617   00565E  EC8E  F036         	call	_fputc	;wreg free
  3618   005662  EF1C  F02B         	goto	l12062
  3619   005666                     l1493:
  3620   005666  0012               	return		;funcret
  3621   005668                     __end_of_vfpfcnvrt:
  3622                           	callstack 0
  3623                           
  3624 ;; *************** function _read_prec_or_width *****************
  3625 ;; Defined at:
  3626 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3627 ;; Parameters:    Size  Location     Type
  3628 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3629 ;;		 -> vfprintf@cfmt(1), 
  3630 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3631 ;;		 -> sprintf@ap(1), 
  3632 ;; Auto vars:     Size  Location     Type
  3633 ;;  c               1    8[COMRAM] unsigned char 
  3634 ;;  n               2    9[COMRAM] int 
  3635 ;; Return value:  Size  Location     Type
  3636 ;;                  2    6[COMRAM] int 
  3637 ;; Registers used:
  3638 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3639 ;; Tracked objects:
  3640 ;;		On entry : 0/0
  3641 ;;		On exit  : 0/0
  3642 ;;		Unchanged: 0/0
  3643 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3644 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3648 ;;Total ram usage:        5 bytes
  3649 ;; Hardware stack levels used: 1
  3650 ;; Hardware stack levels required when called: 1
  3651 ;; This function calls:
  3652 ;;		___wmul
  3653 ;; This function is called by:
  3654 ;;		_vfpfcnvrt
  3655 ;; This function uses a non-reentrant model
  3656 ;;
  3657                           
  3658                           	psect	text9
  3659   006FDA                     __ptext9:
  3660                           	callstack 0
  3661   006FDA                     _read_prec_or_width:
  3662                           	callstack 24
  3663   006FDA                     
  3664                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3665   006FDA  0E00               	movlw	0
  3666   006FDC  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3667   006FDE  0E00               	movlw	0
  3668   006FE0  6E0A               	movwf	read_prec_or_width@n^0,c
  3669   006FE2                     
  3670                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3671   006FE2  5007               	movf	read_prec_or_width@fmt^0,w,c
  3672   006FE4  6ED9               	movwf	fsr2l,c
  3673   006FE6  6ADA               	clrf	fsr2h,c
  3674   006FE8  CFDF FFF6          	movff	indf2,tblptrl
  3675   006FEC                     	if	1	;There is more than 1 active tblptr byte
  3676   006FEC  0E10               	movlw	high __smallconst
  3677   006FEE  6EF7               	movwf	tblptrh,c
  3678   006FF0                     	endif
  3679   006FF0                     	if	0	;tblptru may be non-zero
  3680   006FF0                     	endif
  3681   006FF0                     	if	0	;tblptru may be non-zero
  3682   006FF0                     	endif
  3683   006FF0  0008               	tblrd		*
  3684   006FF2  50F5               	movf	tablat,w,c
  3685   006FF4  0A2A               	xorlw	42
  3686   006FF6  A4D8               	btfss	status,2,c
  3687   006FF8  EF00  F038         	goto	u5821
  3688   006FFC  EF02  F038         	goto	u5820
  3689   007000                     u5821:
  3690   007000  EF28  F038         	goto	l5938
  3691   007004                     u5820:
  3692   007004                     
  3693                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3694   007004  5007               	movf	read_prec_or_width@fmt^0,w,c
  3695   007006  6ED9               	movwf	fsr2l,c
  3696   007008  6ADA               	clrf	fsr2h,c
  3697   00700A  2ADF               	incf	indf2,f,c
  3698   00700C                     
  3699                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3700   00700C  5008               	movf	read_prec_or_width@ap^0,w,c
  3701   00700E  6ED9               	movwf	fsr2l,c
  3702   007010  6ADA               	clrf	fsr2h,c
  3703   007012  0E02               	movlw	2
  3704   007014  26DF               	addwf	indf2,f,c
  3705   007016  5CDF               	subwf	indf2,w,c
  3706   007018  6ED9               	movwf	fsr2l,c
  3707   00701A  6ADA               	clrf	fsr2h,c
  3708   00701C  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3709   007020  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3710                           
  3711                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3712   007024  EF3B  F038         	goto	l1481
  3713   007028                     l5934:
  3714                           
  3715                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3716   007028  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3717   00702C  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3718   007030  0E00               	movlw	0
  3719   007032  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3720   007034  0E0A               	movlw	10
  3721   007036  6E03               	movwf	___wmul@multiplicand^0,c
  3722   007038  ECA2  F03C         	call	___wmul	;wreg free
  3723   00703C  5009               	movf	read_prec_or_width@c^0,w,c
  3724   00703E  2401               	addwf	?___wmul^0,w,c
  3725   007040  6E0A               	movwf	read_prec_or_width@n^0,c
  3726   007042  0E00               	movlw	0
  3727   007044  2002               	addwfc	(?___wmul+1)^0,w,c
  3728   007046  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3729   007048                     
  3730                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3731   007048  5007               	movf	read_prec_or_width@fmt^0,w,c
  3732   00704A  6ED9               	movwf	fsr2l,c
  3733   00704C  6ADA               	clrf	fsr2h,c
  3734   00704E  2ADF               	incf	indf2,f,c
  3735   007050                     l5938:
  3736                           
  3737                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3738   007050  5007               	movf	read_prec_or_width@fmt^0,w,c
  3739   007052  6ED9               	movwf	fsr2l,c
  3740   007054  6ADA               	clrf	fsr2h,c
  3741   007056  CFDF FFF6          	movff	indf2,tblptrl
  3742   00705A                     	if	1	;There is more than 1 active tblptr byte
  3743   00705A  0E10               	movlw	high __smallconst
  3744   00705C  6EF7               	movwf	tblptrh,c
  3745   00705E                     	endif
  3746   00705E                     	if	0	;tblptru may be non-zero
  3747   00705E                     	endif
  3748   00705E                     	if	0	;tblptru may be non-zero
  3749   00705E                     	endif
  3750   00705E  0008               	tblrd		*
  3751   007060  50F5               	movf	tablat,w,c
  3752   007062  0FD0               	addlw	208
  3753   007064  6E09               	movwf	read_prec_or_width@c^0,c
  3754   007066  0E09               	movlw	9
  3755   007068  6409               	cpfsgt	read_prec_or_width@c^0,c
  3756   00706A  EF39  F038         	goto	u5831
  3757   00706E  EF3B  F038         	goto	u5830
  3758   007072                     u5831:
  3759   007072  EF14  F038         	goto	l5934
  3760   007076                     u5830:
  3761   007076                     l1481:
  3762                           
  3763                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3764   007076  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3765   00707A  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3766   00707E  0012               	return		;funcret
  3767   007080                     __end_of_read_prec_or_width:
  3768                           	callstack 0
  3769                           
  3770 ;; *************** function ___wmul *****************
  3771 ;; Defined at:
  3772 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3773 ;; Parameters:    Size  Location     Type
  3774 ;;  multiplier      2    0[COMRAM] unsigned int 
  3775 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3776 ;; Auto vars:     Size  Location     Type
  3777 ;;  product         2    4[COMRAM] unsigned int 
  3778 ;; Return value:  Size  Location     Type
  3779 ;;                  2    0[COMRAM] unsigned int 
  3780 ;; Registers used:
  3781 ;;		wreg, status,2, status,0, prodl, prodh
  3782 ;; Tracked objects:
  3783 ;;		On entry : 0/0
  3784 ;;		On exit  : 0/0
  3785 ;;		Unchanged: 0/0
  3786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3787 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3791 ;;Total ram usage:        6 bytes
  3792 ;; Hardware stack levels used: 1
  3793 ;; This function calls:
  3794 ;;		Nothing
  3795 ;; This function is called by:
  3796 ;;		_read_prec_or_width
  3797 ;; This function uses a non-reentrant model
  3798 ;;
  3799                           
  3800                           	psect	text10
  3801   007944                     __ptext10:
  3802                           	callstack 0
  3803   007944                     ___wmul:
  3804                           	callstack 24
  3805   007944  5001               	movf	___wmul@multiplier^0,w,c
  3806   007946  0203               	mulwf	___wmul@multiplicand^0,c
  3807   007948  CFF3 F005          	movff	prodl,___wmul@product
  3808   00794C  CFF4 F006          	movff	prodh,___wmul@product+1
  3809   007950  5001               	movf	___wmul@multiplier^0,w,c
  3810   007952  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3811   007954  50F3               	movf	243,w,c
  3812   007956  2606               	addwf	(___wmul@product+1)^0,f,c
  3813   007958  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3814   00795A  0203               	mulwf	___wmul@multiplicand^0,c
  3815   00795C  50F3               	movf	243,w,c
  3816   00795E  2606               	addwf	(___wmul@product+1)^0,f,c
  3817   007960  C005  F001         	movff	___wmul@product,?___wmul
  3818   007964  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3819   007968  0012               	return		;funcret
  3820   00796A                     __end_of___wmul:
  3821                           	callstack 0
  3822                           
  3823 ;; *************** function _efgtoa *****************
  3824 ;; Defined at:
  3825 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3826 ;; Parameters:    Size  Location     Type
  3827 ;;  fp              1  110[COMRAM] PTR struct _IO_FILE
  3828 ;;		 -> sprintf@f(12), 
  3829 ;;  f               4  111[COMRAM] PTR struct _IO_FILE
  3830 ;;  c               1  115[COMRAM] unsigned char 
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;  u               4   40[BANK0 ] struct flui
  3833 ;;  g               4   34[BANK0 ] struct flui
  3834 ;;  l               4   29[BANK0 ] struct flui
  3835 ;;  h               4   25[BANK0 ] struct flui
  3836 ;;  ou              4   19[BANK0 ] struct flui
  3837 ;;  n               2   38[BANK0 ] int 
  3838 ;;  i               2   23[BANK0 ] int 
  3839 ;;  w               2   17[BANK0 ] int 
  3840 ;;  e               2   15[BANK0 ] int 
  3841 ;;  m               2   13[BANK0 ] int 
  3842 ;;  d               2   11[BANK0 ] int 
  3843 ;;  t               2    4[BANK0 ] int 
  3844 ;;  p               2    2[BANK0 ] int 
  3845 ;;  ne              2    0[BANK0 ] int 
  3846 ;;  sign            1   33[BANK0 ] unsigned char 
  3847 ;;  nmode           1   10[BANK0 ] unsigned char 
  3848 ;;  mode            1    9[BANK0 ] unsigned char 
  3849 ;;  pp              1    8[BANK0 ] unsigned char 
  3850 ;;  esign           1    0        unsigned char 
  3851 ;; Return value:  Size  Location     Type
  3852 ;;                  1    wreg      void 
  3853 ;; Registers used:
  3854 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3855 ;; Tracked objects:
  3856 ;;		On entry : 0/0
  3857 ;;		On exit  : 0/0
  3858 ;;		Unchanged: 0/0
  3859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3860 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3864 ;;Total ram usage:       52 bytes
  3865 ;; Hardware stack levels used: 1
  3866 ;; Hardware stack levels required when called: 4
  3867 ;; This function calls:
  3868 ;;		___fladd
  3869 ;;		___fldiv
  3870 ;;		___fleq
  3871 ;;		___flge
  3872 ;;		___flmul
  3873 ;;		___flneg
  3874 ;;		___flsub
  3875 ;;		___fltol
  3876 ;;		___fpclassifyf
  3877 ;;		_floorf
  3878 ;;		_labs
  3879 ;;		_memcpy
  3880 ;;		_pad
  3881 ;;		_strcpy
  3882 ;; This function is called by:
  3883 ;;		_vfpfcnvrt
  3884 ;; This function uses a non-reentrant model
  3885 ;;
  3886                           
  3887                           	psect	text11
  3888   003400                     __ptext11:
  3889                           	callstack 0
  3890   003400                     _efgtoa:
  3891                           	callstack 21
  3892   003400                     
  3893                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3894   003400  0E00               	movlw	0
  3895   003402  0100               	movlb	0	; () banked
  3896   003404  6FA1               	movwf	efgtoa@sign& (0+255),b
  3897   003406                     
  3898                           ; BSR set to: 0
  3899                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3900   003406  C070  F0A2         	movff	efgtoa@f,efgtoa@g
  3901   00340A  C071  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  3902   00340E  C072  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  3903   003412  C073  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  3904   003416                     
  3905                           ; BSR set to: 0
  3906                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3907   003416  BFA5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3908   003418  EF12  F01A         	goto	u12030
  3909   00341C  EF10  F01A         	goto	u12031
  3910   003420                     u12031:
  3911   003420  EF26  F01A         	goto	l11788
  3912   003424                     u12030:
  3913   003424                     
  3914                           ; BSR set to: 0
  3915                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3916   003424  0E01               	movlw	1
  3917   003426  6FA1               	movwf	efgtoa@sign& (0+255),b
  3918   003428                     
  3919                           ; BSR set to: 0
  3920                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3921   003428  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  3922   00342C  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3923   003430  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3924   003434  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3925   003438  EC59  F03C         	call	___flneg	;wreg free
  3926   00343C  C001  F0A2         	movff	?___flneg,efgtoa@g
  3927   003440  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  3928   003444  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  3929   003448  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  3930   00344C                     l11788:
  3931                           
  3932                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3933   00344C  0E00               	movlw	0
  3934   00344E  0100               	movlb	0	; () banked
  3935   003450  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  3936   003452  0E00               	movlw	0
  3937   003454  6FA6               	movwf	efgtoa@n& (0+255),b
  3938   003456                     
  3939                           ; BSR set to: 0
  3940                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3941   003456  C0D2  F091         	movff	_width,efgtoa@w
  3942   00345A  C0D3  F092         	movff	_width+1,efgtoa@w+1
  3943   00345E                     
  3944                           ; BSR set to: 0
  3945                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3946   00345E  51A1               	movf	efgtoa@sign& (0+255),w,b
  3947   003460  B4D8               	btfsc	status,2,c
  3948   003462  EF35  F01A         	goto	u12041
  3949   003466  EF37  F01A         	goto	u12040
  3950   00346A                     u12041:
  3951   00346A  EF4B  F01A         	goto	l11802
  3952   00346E                     u12040:
  3953   00346E                     
  3954                           ; BSR set to: 0
  3955                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3956   00346E  51A1               	movf	efgtoa@sign& (0+255),w,b
  3957   003470  A4D8               	btfss	status,2,c
  3958   003472  EF3D  F01A         	goto	u12051
  3959   003476  EF3F  F01A         	goto	u12050
  3960   00347A                     u12051:
  3961   00347A  EF45  F01A         	goto	l11798
  3962   00347E                     u12050:
  3963   00347E                     
  3964                           ; BSR set to: 0
  3965   00347E  0E00               	movlw	0
  3966   003480  6F87               	movwf	(_efgtoa$1537+1)& (0+255),b
  3967   003482  0E2B               	movlw	43
  3968   003484  6F86               	movwf	_efgtoa$1537& (0+255),b
  3969   003486  EF49  F01A         	goto	l11800
  3970   00348A                     l11798:
  3971                           
  3972                           ; BSR set to: 0
  3973   00348A  0E00               	movlw	0
  3974   00348C  6F87               	movwf	(_efgtoa$1537+1)& (0+255),b
  3975   00348E  0E2D               	movlw	45
  3976   003490  6F86               	movwf	_efgtoa$1537& (0+255),b
  3977   003492                     l11800:
  3978                           
  3979                           ; BSR set to: 0
  3980   003492  C086  F0A1         	movff	_efgtoa$1537,efgtoa@sign
  3981   003496                     l11802:
  3982                           
  3983                           ; BSR set to: 0
  3984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3985   003496  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3986   00349A  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3987   00349E  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3988   0034A2  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3989   0034A6  EC61  F034         	call	___fpclassifyf	;wreg free
  3990   0034AA  0401               	decf	?___fpclassifyf^0,w,c
  3991   0034AC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3992   0034AE  A4D8               	btfss	status,2,c
  3993   0034B0  EF5C  F01A         	goto	u12061
  3994   0034B4  EF5E  F01A         	goto	u12060
  3995   0034B8                     u12061:
  3996   0034B8  EF8D  F01A         	goto	l11820
  3997   0034BC                     u12060:
  3998   0034BC                     
  3999                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  4000   0034BC  0100               	movlb	0	; () banked
  4001   0034BE  51A1               	movf	efgtoa@sign& (0+255),w,b
  4002   0034C0  B4D8               	btfsc	status,2,c
  4003   0034C2  EF65  F01A         	goto	u12071
  4004   0034C6  EF67  F01A         	goto	u12070
  4005   0034CA                     u12071:
  4006   0034CA  EF70  F01A         	goto	l11812
  4007   0034CE                     u12070:
  4008   0034CE                     
  4009                           ; BSR set to: 0
  4010                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4011   0034CE  C0A1  F200         	movff	efgtoa@sign,_dbuf
  4012   0034D2                     
  4013                           ; BSR set to: 0
  4014                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  4015   0034D2  0791               	decf	efgtoa@w& (0+255),f,b
  4016   0034D4  A0D8               	btfss	status,0,c
  4017   0034D6  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4018   0034D8                     
  4019                           ; BSR set to: 0
  4020                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4021   0034D8  0E00               	movlw	0
  4022   0034DA  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  4023   0034DC  0E01               	movlw	1
  4024   0034DE  6FA6               	movwf	efgtoa@n& (0+255),b
  4025   0034E0                     l11812:
  4026                           
  4027                           ; BSR set to: 0
  4028                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4029   0034E0  0E00               	movlw	low _dbuf
  4030   0034E2  25A6               	addwf	efgtoa@n& (0+255),w,b
  4031   0034E4  6E01               	movwf	strcpy@dest^0,c
  4032   0034E6  0E02               	movlw	high _dbuf
  4033   0034E8  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4034   0034EA  6E02               	movwf	(strcpy@dest+1)^0,c
  4035   0034EC  0EC9               	movlw	low STR_12
  4036   0034EE  6E03               	movwf	strcpy@src^0,c
  4037   0034F0  EC03  F03C         	call	_strcpy	;wreg free
  4038   0034F4                     l11814:
  4039                           
  4040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4041   0034F4  0100               	movlb	0	; () banked
  4042   0034F6  0EFD               	movlw	253
  4043   0034F8  2791               	addwf	efgtoa@w& (0+255),f,b
  4044   0034FA  0EFF               	movlw	255
  4045   0034FC  2392               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4046   0034FE                     
  4047                           ; BSR set to: 0
  4048                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4049   0034FE  C06F  F00F         	movff	efgtoa@fp,pad@fp
  4050   003502  0E00               	movlw	low _dbuf
  4051   003504  6E10               	movwf	pad@buf^0,c
  4052   003506  0E02               	movlw	high _dbuf
  4053   003508  6E11               	movwf	(pad@buf+1)^0,c
  4054   00350A  C091  F012         	movff	efgtoa@w,pad@p
  4055   00350E  C092  F013         	movff	efgtoa@w+1,pad@p+1
  4056   003512  ECBF  F039         	call	_pad	;wreg free
  4057   003516  EFF3  F01E         	goto	l1436
  4058   00351A                     l11820:
  4059                           
  4060                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4061   00351A  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  4062   00351E  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4063   003522  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4064   003526  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4065   00352A  EC61  F034         	call	___fpclassifyf	;wreg free
  4066   00352E  5001               	movf	?___fpclassifyf^0,w,c
  4067   003530  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4068   003532  A4D8               	btfss	status,2,c
  4069   003534  EF9E  F01A         	goto	u12081
  4070   003538  EFA0  F01A         	goto	u12080
  4071   00353C                     u12081:
  4072   00353C  EFBE  F01A         	goto	l11838
  4073   003540                     u12080:
  4074   003540                     
  4075                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  4076   003540  0100               	movlb	0	; () banked
  4077   003542  51A1               	movf	efgtoa@sign& (0+255),w,b
  4078   003544  B4D8               	btfsc	status,2,c
  4079   003546  EFA7  F01A         	goto	u12091
  4080   00354A  EFA9  F01A         	goto	u12090
  4081   00354E                     u12091:
  4082   00354E  EFB2  F01A         	goto	l11830
  4083   003552                     u12090:
  4084   003552                     
  4085                           ; BSR set to: 0
  4086                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  4087   003552  C0A1  F200         	movff	efgtoa@sign,_dbuf
  4088   003556                     
  4089                           ; BSR set to: 0
  4090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  4091   003556  0791               	decf	efgtoa@w& (0+255),f,b
  4092   003558  A0D8               	btfss	status,0,c
  4093   00355A  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4094   00355C                     
  4095                           ; BSR set to: 0
  4096                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4097   00355C  0E00               	movlw	0
  4098   00355E  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  4099   003560  0E01               	movlw	1
  4100   003562  6FA6               	movwf	efgtoa@n& (0+255),b
  4101   003564                     l11830:
  4102                           
  4103                           ; BSR set to: 0
  4104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  4105   003564  0E00               	movlw	low _dbuf
  4106   003566  25A6               	addwf	efgtoa@n& (0+255),w,b
  4107   003568  6E01               	movwf	strcpy@dest^0,c
  4108   00356A  0E02               	movlw	high _dbuf
  4109   00356C  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4110   00356E  6E02               	movwf	(strcpy@dest+1)^0,c
  4111   003570  0ECD               	movlw	low STR_15
  4112   003572  6E03               	movwf	strcpy@src^0,c
  4113   003574  EC03  F03C         	call	_strcpy	;wreg free
  4114   003578  EF7A  F01A         	goto	l11814
  4115   00357C                     l11838:
  4116                           
  4117                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  4118   00357C  0E00               	movlw	0
  4119   00357E  0100               	movlb	0	; () banked
  4120   003580  6FA8               	movwf	efgtoa@u& (0+255),b
  4121   003582  0E00               	movlw	0
  4122   003584  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4123   003586  0E80               	movlw	128
  4124   003588  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4125   00358A  0E3F               	movlw	63
  4126   00358C  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4127                           
  4128                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  4129   00358E  0E00               	movlw	0
  4130   003590  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4131   003592  0E00               	movlw	0
  4132   003594  6F8F               	movwf	efgtoa@e& (0+255),b
  4133   003596                     
  4134                           ; BSR set to: 0
  4135                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  4136   003596  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  4137   00359A  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4138   00359E  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4139   0035A2  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4140   0035A6  0E00               	movlw	0
  4141   0035A8  6E05               	movwf	___fleq@ff2^0,c
  4142   0035AA  0E00               	movlw	0
  4143   0035AC  6E06               	movwf	(___fleq@ff2+1)^0,c
  4144   0035AE  0E00               	movlw	0
  4145   0035B0  6E07               	movwf	(___fleq@ff2+2)^0,c
  4146   0035B2  0E00               	movlw	0
  4147   0035B4  6E08               	movwf	(___fleq@ff2+3)^0,c
  4148   0035B6  EC43  F037         	call	___fleq	;wreg free
  4149   0035BA  B0D8               	btfsc	status,0,c
  4150   0035BC  EFE2  F01A         	goto	u12101
  4151   0035C0  EFE4  F01A         	goto	u12100
  4152   0035C4                     u12101:
  4153   0035C4  EFC3  F01B         	goto	l1439
  4154   0035C8                     u12100:
  4155   0035C8  EFF1  F01A         	goto	l11846
  4156   0035CC                     l1441:
  4157                           
  4158                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  4159   0035CC  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4160   0035D0  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4161   0035D4  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4162   0035D8  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4163   0035DC                     
  4164                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  4165   0035DC  0100               	movlb	0	; () banked
  4166   0035DE  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4167   0035E0  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4168   0035E2                     l11846:
  4169                           
  4170                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4171   0035E2  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4172   0035E6  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4173   0035EA  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4174   0035EE  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4175   0035F2  0E00               	movlw	0
  4176   0035F4  6E1D               	movwf	___flmul@a^0,c
  4177   0035F6  0E00               	movlw	0
  4178   0035F8  6E1E               	movwf	(___flmul@a+1)^0,c
  4179   0035FA  0E20               	movlw	32
  4180   0035FC  6E1F               	movwf	(___flmul@a+2)^0,c
  4181   0035FE  0E41               	movlw	65
  4182   003600  6E20               	movwf	(___flmul@a+3)^0,c
  4183   003602  EC20  F024         	call	___flmul	;wreg free
  4184   003606  C019  F093         	movff	?___flmul,efgtoa@ou
  4185   00360A  C01A  F094         	movff	?___flmul+1,efgtoa@ou+1
  4186   00360E  C01B  F095         	movff	?___flmul+2,efgtoa@ou+2
  4187   003612  C01C  F096         	movff	?___flmul+3,efgtoa@ou+3
  4188   003616  0100               	movlb	0	; () banked
  4189   003618  5193               	movf	efgtoa@ou& (0+255),w,b
  4190   00361A  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4191   00361C  6E01               	movwf	labs@a^0,c
  4192   00361E  5194               	movf	(efgtoa@ou+1)& (0+255),w,b
  4193   003620  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4194   003622  6E02               	movwf	(labs@a+1)^0,c
  4195   003624  5195               	movf	(efgtoa@ou+2)& (0+255),w,b
  4196   003626  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4197   003628  6E03               	movwf	(labs@a+2)^0,c
  4198   00362A  5196               	movf	(efgtoa@ou+3)& (0+255),w,b
  4199   00362C  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4200   00362E  6E04               	movwf	(labs@a+3)^0,c
  4201   003630  EC50  F03A         	call	_labs	;wreg free
  4202   003634  BE04               	btfsc	(?_labs+3)^0,7,c
  4203   003636  EF28  F01B         	goto	u12111
  4204   00363A  5004               	movf	(?_labs+3)^0,w,c
  4205   00363C  1003               	iorwf	(?_labs+2)^0,w,c
  4206   00363E  1002               	iorwf	(?_labs+1)^0,w,c
  4207   003640  E109               	bnz	u12110
  4208   003642  0E02               	movlw	2
  4209   003644  5C01               	subwf	?_labs^0,w,c
  4210   003646  A0D8               	btfss	status,0,c
  4211   003648  EF28  F01B         	goto	u12111
  4212   00364C  EF2A  F01B         	goto	u12110
  4213   003650                     u12111:
  4214   003650  EFE6  F01A         	goto	l1441
  4215   003654                     u12110:
  4216   003654  C093  F063         	movff	efgtoa@ou,___flge@ff1
  4217   003658  C094  F064         	movff	efgtoa@ou+1,___flge@ff1+1
  4218   00365C  C095  F065         	movff	efgtoa@ou+2,___flge@ff1+2
  4219   003660  C096  F066         	movff	efgtoa@ou+3,___flge@ff1+3
  4220   003664  C0A2  F067         	movff	efgtoa@g,___flge@ff2
  4221   003668  C0A3  F068         	movff	efgtoa@g+1,___flge@ff2+1
  4222   00366C  C0A4  F069         	movff	efgtoa@g+2,___flge@ff2+2
  4223   003670  C0A5  F06A         	movff	efgtoa@g+3,___flge@ff2+3
  4224   003674  ECDF  F033         	call	___flge	;wreg free
  4225   003678  A0D8               	btfss	status,0,c
  4226   00367A  EF41  F01B         	goto	u12121
  4227   00367E  EF43  F01B         	goto	u12120
  4228   003682                     u12121:
  4229   003682  EFE6  F01A         	goto	l1441
  4230   003686                     u12120:
  4231   003686                     
  4232                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4233   003686  0100               	movlb	0	; () banked
  4234   003688  51A8               	movf	efgtoa@u& (0+255),w,b
  4235   00368A  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4236   00368C  6E01               	movwf	labs@a^0,c
  4237   00368E  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4238   003690  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4239   003692  6E02               	movwf	(labs@a+1)^0,c
  4240   003694  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4241   003696  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4242   003698  6E03               	movwf	(labs@a+2)^0,c
  4243   00369A  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4244   00369C  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4245   00369E  6E04               	movwf	(labs@a+3)^0,c
  4246   0036A0  EC50  F03A         	call	_labs	;wreg free
  4247   0036A4  BE04               	btfsc	(?_labs+3)^0,7,c
  4248   0036A6  EF62  F01B         	goto	u12130
  4249   0036AA  5004               	movf	(?_labs+3)^0,w,c
  4250   0036AC  1003               	iorwf	(?_labs+2)^0,w,c
  4251   0036AE  1002               	iorwf	(?_labs+1)^0,w,c
  4252   0036B0  E107               	bnz	u12131
  4253   0036B2  0E02               	movlw	2
  4254   0036B4  5C01               	subwf	?_labs^0,w,c
  4255   0036B6  B0D8               	btfsc	status,0,c
  4256   0036B8  EF60  F01B         	goto	u12131
  4257   0036BC  EF62  F01B         	goto	u12130
  4258   0036C0                     u12131:
  4259   0036C0  EFAA  F01B         	goto	l11864
  4260   0036C4                     u12130:
  4261   0036C4                     l11854:
  4262                           
  4263                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  4264   0036C4  C0A8  F0A2         	movff	efgtoa@u,efgtoa@g
  4265   0036C8  C0A9  F0A3         	movff	efgtoa@u+1,efgtoa@g+1
  4266   0036CC  C0AA  F0A4         	movff	efgtoa@u+2,efgtoa@g+2
  4267   0036D0  C0AB  F0A5         	movff	efgtoa@u+3,efgtoa@g+3
  4268                           
  4269                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  4270   0036D4  EFC3  F01B         	goto	l1439
  4271   0036D8                     l11856:
  4272                           
  4273                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  4274   0036D8  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4275   0036DC  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4276   0036E0  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4277   0036E4  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4278   0036E8  0E00               	movlw	0
  4279   0036EA  6E46               	movwf	___fldiv@a^0,c
  4280   0036EC  0E00               	movlw	0
  4281   0036EE  6E47               	movwf	(___fldiv@a+1)^0,c
  4282   0036F0  0E20               	movlw	32
  4283   0036F2  6E48               	movwf	(___fldiv@a+2)^0,c
  4284   0036F4  0E41               	movlw	65
  4285   0036F6  6E49               	movwf	(___fldiv@a+3)^0,c
  4286   0036F8  EC24  F028         	call	___fldiv	;wreg free
  4287   0036FC  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4288   003700  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4289   003704  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4290   003708  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4291   00370C                     
  4292                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  4293   00370C  0100               	movlb	0	; () banked
  4294   00370E  078F               	decf	efgtoa@e& (0+255),f,b
  4295   003710  A0D8               	btfss	status,0,c
  4296   003712  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  4297   003714                     
  4298                           ; BSR set to: 0
  4299                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4300   003714  51A8               	movf	efgtoa@u& (0+255),w,b
  4301   003716  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4302   003718  6E01               	movwf	labs@a^0,c
  4303   00371A  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4304   00371C  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4305   00371E  6E02               	movwf	(labs@a+1)^0,c
  4306   003720  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4307   003722  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4308   003724  6E03               	movwf	(labs@a+2)^0,c
  4309   003726  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4310   003728  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4311   00372A  6E04               	movwf	(labs@a+3)^0,c
  4312   00372C  EC50  F03A         	call	_labs	;wreg free
  4313   003730  BE04               	btfsc	(?_labs+3)^0,7,c
  4314   003732  EFA8  F01B         	goto	u12140
  4315   003736  5004               	movf	(?_labs+3)^0,w,c
  4316   003738  1003               	iorwf	(?_labs+2)^0,w,c
  4317   00373A  1002               	iorwf	(?_labs+1)^0,w,c
  4318   00373C  E107               	bnz	u12141
  4319   00373E  0E02               	movlw	2
  4320   003740  5C01               	subwf	?_labs^0,w,c
  4321   003742  B0D8               	btfsc	status,0,c
  4322   003744  EFA6  F01B         	goto	u12141
  4323   003748  EFA8  F01B         	goto	u12140
  4324   00374C                     u12141:
  4325   00374C  EFAA  F01B         	goto	l11864
  4326   003750                     u12140:
  4327   003750  EF62  F01B         	goto	l11854
  4328   003754                     l11864:
  4329                           
  4330                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4331   003754  C0A2  F063         	movff	efgtoa@g,___flge@ff1
  4332   003758  C0A3  F064         	movff	efgtoa@g+1,___flge@ff1+1
  4333   00375C  C0A4  F065         	movff	efgtoa@g+2,___flge@ff1+2
  4334   003760  C0A5  F066         	movff	efgtoa@g+3,___flge@ff1+3
  4335   003764  C0A8  F067         	movff	efgtoa@u,___flge@ff2
  4336   003768  C0A9  F068         	movff	efgtoa@u+1,___flge@ff2+1
  4337   00376C  C0AA  F069         	movff	efgtoa@u+2,___flge@ff2+2
  4338   003770  C0AB  F06A         	movff	efgtoa@u+3,___flge@ff2+3
  4339   003774  ECDF  F033         	call	___flge	;wreg free
  4340   003778  A0D8               	btfss	status,0,c
  4341   00377A  EFC1  F01B         	goto	u12151
  4342   00377E  EFC3  F01B         	goto	u12150
  4343   003782                     u12151:
  4344   003782  EF6C  F01B         	goto	l11856
  4345   003786                     u12150:
  4346   003786                     l1439:
  4347                           
  4348                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4349   003786  C074  F089         	movff	efgtoa@c,efgtoa@mode
  4350                           
  4351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4352   00378A  C089  F08A         	movff	efgtoa@mode,efgtoa@nmode
  4353   00378E                     
  4354                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4355   00378E  0100               	movlb	0	; () banked
  4356   003790  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  4357   003792  EFCD  F01B         	goto	u12161
  4358   003796  EFCF  F01B         	goto	u12160
  4359   00379A                     u12161:
  4360   00379A  EFD5  F01B         	goto	l11870
  4361   00379E                     u12160:
  4362   00379E                     
  4363                           ; BSR set to: 0
  4364   00379E  C0D4  F082         	movff	_prec,efgtoa@p
  4365   0037A2  C0D5  F083         	movff	_prec+1,efgtoa@p+1
  4366   0037A6  EFD9  F01B         	goto	l11872
  4367   0037AA                     l11870:
  4368                           
  4369                           ; BSR set to: 0
  4370   0037AA  0E00               	movlw	0
  4371   0037AC  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  4372   0037AE  0E06               	movlw	6
  4373   0037B0  6F82               	movwf	efgtoa@p& (0+255),b
  4374   0037B2                     l11872:
  4375                           
  4376                           ; BSR set to: 0
  4377                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4378   0037B2  C082  F08D         	movff	efgtoa@p,efgtoa@m
  4379   0037B6  C083  F08E         	movff	efgtoa@p+1,efgtoa@m+1
  4380   0037BA                     
  4381                           ; BSR set to: 0
  4382                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4383   0037BA  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4384   0037BC  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4385   0037BE                     
  4386                           ; BSR set to: 0
  4387                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4388   0037BE  0E66               	movlw	102
  4389   0037C0  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4390   0037C2  A4D8               	btfss	status,2,c
  4391   0037C4  EFE6  F01B         	goto	u12171
  4392   0037C8  EFE8  F01B         	goto	u12170
  4393   0037CC                     u12171:
  4394   0037CC  EF08  F01C         	goto	l11886
  4395   0037D0                     u12170:
  4396   0037D0                     
  4397                           ; BSR set to: 0
  4398                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4399   0037D0  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4400   0037D2  EFEF  F01B         	goto	u12180
  4401   0037D6  EFED  F01B         	goto	u12181
  4402   0037DA                     u12181:
  4403   0037DA  EFFB  F01B         	goto	l11882
  4404   0037DE                     u12180:
  4405   0037DE                     
  4406                           ; BSR set to: 0
  4407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4408   0037DE  0E00               	movlw	0
  4409   0037E0  6FA8               	movwf	efgtoa@u& (0+255),b
  4410   0037E2  0E00               	movlw	0
  4411   0037E4  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4412   0037E6  0E80               	movlw	128
  4413   0037E8  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4414   0037EA  0E3F               	movlw	63
  4415   0037EC  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4416                           
  4417                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4418   0037EE  0E00               	movlw	0
  4419   0037F0  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4420   0037F2  0E00               	movlw	0
  4421   0037F4  6F8F               	movwf	efgtoa@e& (0+255),b
  4422   0037F6                     l11882:
  4423                           
  4424                           ; BSR set to: 0
  4425                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4426   0037F6  0E67               	movlw	103
  4427   0037F8  1989               	xorwf	efgtoa@mode& (0+255),w,b
  4428   0037FA  B4D8               	btfsc	status,2,c
  4429   0037FC  EF02  F01C         	goto	u12191
  4430   003800  EF04  F01C         	goto	u12190
  4431   003804                     u12191:
  4432   003804  EF08  F01C         	goto	l11886
  4433   003808                     u12190:
  4434   003808                     
  4435                           ; BSR set to: 0
  4436                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4437   003808  518F               	movf	efgtoa@e& (0+255),w,b
  4438   00380A  278D               	addwf	efgtoa@m& (0+255),f,b
  4439   00380C  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  4440   00380E  238E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4441   003810                     l11886:
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4445   003810  0E00               	movlw	0
  4446   003812  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4447   003814  0E00               	movlw	0
  4448   003816  6F97               	movwf	efgtoa@i& (0+255),b
  4449   003818                     
  4450                           ; BSR set to: 0
  4451                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4452   003818  C0A2  F099         	movff	efgtoa@g,efgtoa@h
  4453   00381C  C0A3  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  4454   003820  C0A4  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  4455   003824  C0A5  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  4456   003828                     
  4457                           ; BSR set to: 0
  4458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4459   003828  C0A8  F093         	movff	efgtoa@u,efgtoa@ou
  4460   00382C  C0A9  F094         	movff	efgtoa@u+1,efgtoa@ou+1
  4461   003830  C0AA  F095         	movff	efgtoa@u+2,efgtoa@ou+2
  4462   003834  C0AB  F096         	movff	efgtoa@u+3,efgtoa@ou+3
  4463                           
  4464                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4465   003838  EF99  F01C         	goto	l11900
  4466   00383C                     l11892:
  4467                           
  4468                           ; BSR set to: 0
  4469                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4470   00383C  C099  F042         	movff	efgtoa@h,___fldiv@b
  4471   003840  C09A  F043         	movff	efgtoa@h+1,___fldiv@b+1
  4472   003844  C09B  F044         	movff	efgtoa@h+2,___fldiv@b+2
  4473   003848  C09C  F045         	movff	efgtoa@h+3,___fldiv@b+3
  4474   00384C  C0A8  F046         	movff	efgtoa@u,___fldiv@a
  4475   003850  C0A9  F047         	movff	efgtoa@u+1,___fldiv@a+1
  4476   003854  C0AA  F048         	movff	efgtoa@u+2,___fldiv@a+2
  4477   003858  C0AB  F049         	movff	efgtoa@u+3,___fldiv@a+3
  4478   00385C  EC24  F028         	call	___fldiv	;wreg free
  4479   003860  C042  F05B         	movff	?___fldiv,floorf@x
  4480   003864  C043  F05C         	movff	?___fldiv+1,floorf@x+1
  4481   003868  C044  F05D         	movff	?___fldiv+2,floorf@x+2
  4482   00386C  C045  F05E         	movff	?___fldiv+3,floorf@x+3
  4483   003870  EC75  F02D         	call	_floorf	;wreg free
  4484   003874  C05B  F09D         	movff	?_floorf,efgtoa@l
  4485   003878  C05C  F09E         	movff	?_floorf+1,efgtoa@l+1
  4486   00387C  C05D  F09F         	movff	?_floorf+2,efgtoa@l+2
  4487   003880  C05E  F0A0         	movff	?_floorf+3,efgtoa@l+3
  4488                           
  4489                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4490   003884  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4491   003888  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4492   00388C  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4493   003890  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4494   003894  EC5C  F033         	call	___fltol	;wreg free
  4495   003898  C001  F08B         	movff	?___fltol,efgtoa@d
  4496   00389C  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  4497   0038A0                     
  4498                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4499   0038A0  C099  F05B         	movff	efgtoa@h,___flsub@b
  4500   0038A4  C09A  F05C         	movff	efgtoa@h+1,___flsub@b+1
  4501   0038A8  C09B  F05D         	movff	efgtoa@h+2,___flsub@b+2
  4502   0038AC  C09C  F05E         	movff	efgtoa@h+3,___flsub@b+3
  4503   0038B0  C09D  F01D         	movff	efgtoa@l,___flmul@a
  4504   0038B4  C09E  F01E         	movff	efgtoa@l+1,___flmul@a+1
  4505   0038B8  C09F  F01F         	movff	efgtoa@l+2,___flmul@a+2
  4506   0038BC  C0A0  F020         	movff	efgtoa@l+3,___flmul@a+3
  4507   0038C0  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4508   0038C4  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4509   0038C8  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4510   0038CC  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4511   0038D0  EC20  F024         	call	___flmul	;wreg free
  4512   0038D4  C019  F05F         	movff	?___flmul,___flsub@a
  4513   0038D8  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  4514   0038DC  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  4515   0038E0  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  4516   0038E4  ECCB  F03A         	call	___flsub	;wreg free
  4517   0038E8  C05B  F099         	movff	?___flsub,efgtoa@h
  4518   0038EC  C05C  F09A         	movff	?___flsub+1,efgtoa@h+1
  4519   0038F0  C05D  F09B         	movff	?___flsub+2,efgtoa@h+2
  4520   0038F4  C05E  F09C         	movff	?___flsub+3,efgtoa@h+3
  4521   0038F8                     
  4522                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4523   0038F8  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4524   0038FC  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4525   003900  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4526   003904  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4527   003908  0E00               	movlw	0
  4528   00390A  6E46               	movwf	___fldiv@a^0,c
  4529   00390C  0E00               	movlw	0
  4530   00390E  6E47               	movwf	(___fldiv@a+1)^0,c
  4531   003910  0E20               	movlw	32
  4532   003912  6E48               	movwf	(___fldiv@a+2)^0,c
  4533   003914  0E41               	movlw	65
  4534   003916  6E49               	movwf	(___fldiv@a+3)^0,c
  4535   003918  EC24  F028         	call	___fldiv	;wreg free
  4536   00391C  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4537   003920  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4538   003924  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4539   003928  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4540   00392C                     
  4541                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4542   00392C  0100               	movlb	0	; () banked
  4543   00392E  4B97               	infsnz	efgtoa@i& (0+255),f,b
  4544   003930  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  4545   003932                     l11900:
  4546                           
  4547                           ; BSR set to: 0
  4548                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4549   003932  518D               	movf	efgtoa@m& (0+255),w,b
  4550   003934  5D97               	subwf	efgtoa@i& (0+255),w,b
  4551   003936  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4552   003938  0A80               	xorlw	128
  4553   00393A  6E75               	movwf	??_efgtoa^0,c
  4554   00393C  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  4555   00393E  0A80               	xorlw	128
  4556   003940  5875               	subwfb	??_efgtoa^0,w,c
  4557   003942  A0D8               	btfss	status,0,c
  4558   003944  EFA6  F01C         	goto	u12201
  4559   003948  EFA8  F01C         	goto	u12200
  4560   00394C                     u12201:
  4561   00394C  EF1E  F01C         	goto	l11892
  4562   003950                     u12200:
  4563   003950                     
  4564                           ; BSR set to: 0
  4565                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4566   003950  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4567   003954  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4568   003958  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4569   00395C  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4570   003960  0E00               	movlw	0
  4571   003962  6E1D               	movwf	___flmul@a^0,c
  4572   003964  0E00               	movlw	0
  4573   003966  6E1E               	movwf	(___flmul@a+1)^0,c
  4574   003968  0EA0               	movlw	160
  4575   00396A  6E1F               	movwf	(___flmul@a+2)^0,c
  4576   00396C  0E40               	movlw	64
  4577   00396E  6E20               	movwf	(___flmul@a+3)^0,c
  4578   003970  EC20  F024         	call	___flmul	;wreg free
  4579   003974  C019  F09D         	movff	?___flmul,efgtoa@l
  4580   003978  C01A  F09E         	movff	?___flmul+1,efgtoa@l+1
  4581   00397C  C01B  F09F         	movff	?___flmul+2,efgtoa@l+2
  4582   003980  C01C  F0A0         	movff	?___flmul+3,efgtoa@l+3
  4583   003984                     
  4584                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4585   003984  C099  F063         	movff	efgtoa@h,___flge@ff1
  4586   003988  C09A  F064         	movff	efgtoa@h+1,___flge@ff1+1
  4587   00398C  C09B  F065         	movff	efgtoa@h+2,___flge@ff1+2
  4588   003990  C09C  F066         	movff	efgtoa@h+3,___flge@ff1+3
  4589   003994  C09D  F067         	movff	efgtoa@l,___flge@ff2
  4590   003998  C09E  F068         	movff	efgtoa@l+1,___flge@ff2+1
  4591   00399C  C09F  F069         	movff	efgtoa@l+2,___flge@ff2+2
  4592   0039A0  C0A0  F06A         	movff	efgtoa@l+3,___flge@ff2+3
  4593   0039A4  ECDF  F033         	call	___flge	;wreg free
  4594   0039A8  B0D8               	btfsc	status,0,c
  4595   0039AA  EFD9  F01C         	goto	u12211
  4596   0039AE  EFDB  F01C         	goto	u12210
  4597   0039B2                     u12211:
  4598   0039B2  EFE6  F01C         	goto	l11908
  4599   0039B6                     u12210:
  4600   0039B6                     
  4601                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4602   0039B6  0E00               	movlw	0
  4603   0039B8  0100               	movlb	0	; () banked
  4604   0039BA  6F9D               	movwf	efgtoa@l& (0+255),b
  4605   0039BC  0E00               	movlw	0
  4606   0039BE  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4607   0039C0  0E00               	movlw	0
  4608   0039C2  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4609   0039C4  0E00               	movlw	0
  4610   0039C6  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4611                           
  4612                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  4613   0039C8  EF0F  F01D         	goto	l11914
  4614   0039CC                     l11908:
  4615                           
  4616                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4617   0039CC  C099  F001         	movff	efgtoa@h,___fleq@ff1
  4618   0039D0  C09A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4619   0039D4  C09B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4620   0039D8  C09C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4621   0039DC  C09D  F005         	movff	efgtoa@l,___fleq@ff2
  4622   0039E0  C09E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4623   0039E4  C09F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4624   0039E8  C0A0  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4625   0039EC  EC43  F037         	call	___fleq	;wreg free
  4626   0039F0  A0D8               	btfss	status,0,c
  4627   0039F2  EFFD  F01C         	goto	u12221
  4628   0039F6  EFFF  F01C         	goto	u12220
  4629   0039FA                     u12221:
  4630   0039FA  EF0F  F01D         	goto	l11914
  4631   0039FE                     u12220:
  4632   0039FE  0100               	movlb	0	; () banked
  4633   003A00  B18B               	btfsc	efgtoa@d& (0+255),0,b
  4634   003A02  EF05  F01D         	goto	u12231
  4635   003A06  EF07  F01D         	goto	u12230
  4636   003A0A                     u12231:
  4637   003A0A  EF0F  F01D         	goto	l11914
  4638   003A0E                     u12230:
  4639   003A0E                     
  4640                           ; BSR set to: 0
  4641                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4642   003A0E  0E00               	movlw	0
  4643   003A10  6F9D               	movwf	efgtoa@l& (0+255),b
  4644   003A12  0E00               	movlw	0
  4645   003A14  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4646   003A16  0E00               	movlw	0
  4647   003A18  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4648   003A1A  0E00               	movlw	0
  4649   003A1C  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4650   003A1E                     l11914:
  4651                           
  4652                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4653   003A1E  C0A2  F032         	movff	efgtoa@g,___fladd@b
  4654   003A22  C0A3  F033         	movff	efgtoa@g+1,___fladd@b+1
  4655   003A26  C0A4  F034         	movff	efgtoa@g+2,___fladd@b+2
  4656   003A2A  C0A5  F035         	movff	efgtoa@g+3,___fladd@b+3
  4657   003A2E  C09D  F036         	movff	efgtoa@l,___fladd@a
  4658   003A32  C09E  F037         	movff	efgtoa@l+1,___fladd@a+1
  4659   003A36  C09F  F038         	movff	efgtoa@l+2,___fladd@a+2
  4660   003A3A  C0A0  F039         	movff	efgtoa@l+3,___fladd@a+3
  4661   003A3E  ECC0  F021         	call	___fladd	;wreg free
  4662   003A42  C032  F099         	movff	?___fladd,efgtoa@h
  4663   003A46  C033  F09A         	movff	?___fladd+1,efgtoa@h+1
  4664   003A4A  C034  F09B         	movff	?___fladd+2,efgtoa@h+2
  4665   003A4E  C035  F09C         	movff	?___fladd+3,efgtoa@h+3
  4666   003A52                     
  4667                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4668   003A52  C099  F063         	movff	efgtoa@h,___flge@ff1
  4669   003A56  C09A  F064         	movff	efgtoa@h+1,___flge@ff1+1
  4670   003A5A  C09B  F065         	movff	efgtoa@h+2,___flge@ff1+2
  4671   003A5E  C09C  F066         	movff	efgtoa@h+3,___flge@ff1+3
  4672   003A62  0E00               	movlw	0
  4673   003A64  6E1D               	movwf	___flmul@a^0,c
  4674   003A66  0E00               	movlw	0
  4675   003A68  6E1E               	movwf	(___flmul@a+1)^0,c
  4676   003A6A  0E20               	movlw	32
  4677   003A6C  6E1F               	movwf	(___flmul@a+2)^0,c
  4678   003A6E  0E41               	movlw	65
  4679   003A70  6E20               	movwf	(___flmul@a+3)^0,c
  4680   003A72  C093  F019         	movff	efgtoa@ou,___flmul@b
  4681   003A76  C094  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  4682   003A7A  C095  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  4683   003A7E  C096  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  4684   003A82  EC20  F024         	call	___flmul	;wreg free
  4685   003A86  C019  F067         	movff	?___flmul,___flge@ff2
  4686   003A8A  C01A  F068         	movff	?___flmul+1,___flge@ff2+1
  4687   003A8E  C01B  F069         	movff	?___flmul+2,___flge@ff2+2
  4688   003A92  C01C  F06A         	movff	?___flmul+3,___flge@ff2+3
  4689   003A96  ECDF  F033         	call	___flge	;wreg free
  4690   003A9A  A0D8               	btfss	status,0,c
  4691   003A9C  EF52  F01D         	goto	u12241
  4692   003AA0  EF54  F01D         	goto	u12240
  4693   003AA4                     u12241:
  4694   003AA4  EF7D  F01D         	goto	l11926
  4695   003AA8                     u12240:
  4696   003AA8                     
  4697                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  4698   003AA8  0100               	movlb	0	; () banked
  4699   003AAA  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4700   003AAC  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4701   003AAE                     
  4702                           ; BSR set to: 0
  4703                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4704   003AAE  C093  F019         	movff	efgtoa@ou,___flmul@b
  4705   003AB2  C094  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  4706   003AB6  C095  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  4707   003ABA  C096  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  4708   003ABE  0E00               	movlw	0
  4709   003AC0  6E1D               	movwf	___flmul@a^0,c
  4710   003AC2  0E00               	movlw	0
  4711   003AC4  6E1E               	movwf	(___flmul@a+1)^0,c
  4712   003AC6  0E20               	movlw	32
  4713   003AC8  6E1F               	movwf	(___flmul@a+2)^0,c
  4714   003ACA  0E41               	movlw	65
  4715   003ACC  6E20               	movwf	(___flmul@a+3)^0,c
  4716   003ACE  EC20  F024         	call	___flmul	;wreg free
  4717   003AD2  C019  F093         	movff	?___flmul,efgtoa@ou
  4718   003AD6  C01A  F094         	movff	?___flmul+1,efgtoa@ou+1
  4719   003ADA  C01B  F095         	movff	?___flmul+2,efgtoa@ou+2
  4720   003ADE  C01C  F096         	movff	?___flmul+3,efgtoa@ou+3
  4721   003AE2                     
  4722                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4723   003AE2  0E66               	movlw	102
  4724   003AE4  0100               	movlb	0	; () banked
  4725   003AE6  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4726   003AE8  A4D8               	btfss	status,2,c
  4727   003AEA  EF79  F01D         	goto	u12251
  4728   003AEE  EF7B  F01D         	goto	u12250
  4729   003AF2                     u12251:
  4730   003AF2  EF7D  F01D         	goto	l11926
  4731   003AF6                     u12250:
  4732   003AF6                     
  4733                           ; BSR set to: 0
  4734                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  4735   003AF6  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4736   003AF8  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4737   003AFA                     l11926:
  4738                           
  4739                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4740   003AFA  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4741   003AFE  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4742   003B02  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4743   003B06  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4744   003B0A                     
  4745                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4746   003B0A  C08F  F080         	movff	efgtoa@e,efgtoa@ne
  4747   003B0E  C090  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  4748   003B12                     
  4749                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4750   003B12  0E00               	movlw	0
  4751   003B14  0100               	movlb	0	; () banked
  4752   003B16  6F88               	movwf	efgtoa@pp& (0+255),b
  4753   003B18                     
  4754                           ; BSR set to: 0
  4755                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4756   003B18  0E00               	movlw	0
  4757   003B1A  6F85               	movwf	(efgtoa@t+1)& (0+255),b
  4758   003B1C  0E00               	movlw	0
  4759   003B1E  6F84               	movwf	efgtoa@t& (0+255),b
  4760   003B20                     
  4761                           ; BSR set to: 0
  4762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4763   003B20  0E00               	movlw	0
  4764   003B22  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4765   003B24  0E00               	movlw	0
  4766   003B26  6F97               	movwf	efgtoa@i& (0+255),b
  4767                           
  4768                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4769   003B28  EF7B  F01E         	goto	l11976
  4770   003B2C                     l11936:
  4771                           
  4772                           ; BSR set to: 0
  4773                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4774   003B2C  C099  F042         	movff	efgtoa@h,___fldiv@b
  4775   003B30  C09A  F043         	movff	efgtoa@h+1,___fldiv@b+1
  4776   003B34  C09B  F044         	movff	efgtoa@h+2,___fldiv@b+2
  4777   003B38  C09C  F045         	movff	efgtoa@h+3,___fldiv@b+3
  4778   003B3C  C0A8  F046         	movff	efgtoa@u,___fldiv@a
  4779   003B40  C0A9  F047         	movff	efgtoa@u+1,___fldiv@a+1
  4780   003B44  C0AA  F048         	movff	efgtoa@u+2,___fldiv@a+2
  4781   003B48  C0AB  F049         	movff	efgtoa@u+3,___fldiv@a+3
  4782   003B4C  EC24  F028         	call	___fldiv	;wreg free
  4783   003B50  C042  F05B         	movff	?___fldiv,floorf@x
  4784   003B54  C043  F05C         	movff	?___fldiv+1,floorf@x+1
  4785   003B58  C044  F05D         	movff	?___fldiv+2,floorf@x+2
  4786   003B5C  C045  F05E         	movff	?___fldiv+3,floorf@x+3
  4787   003B60  EC75  F02D         	call	_floorf	;wreg free
  4788   003B64  C05B  F09D         	movff	?_floorf,efgtoa@l
  4789   003B68  C05C  F09E         	movff	?_floorf+1,efgtoa@l+1
  4790   003B6C  C05D  F09F         	movff	?_floorf+2,efgtoa@l+2
  4791   003B70  C05E  F0A0         	movff	?_floorf+3,efgtoa@l+3
  4792                           
  4793                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4794   003B74  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4795   003B78  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4796   003B7C  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4797   003B80  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4798   003B84  EC5C  F033         	call	___fltol	;wreg free
  4799   003B88  BE02               	btfsc	(?___fltol+1)^0,7,c
  4800   003B8A  EFD2  F01D         	goto	u12260
  4801   003B8E  5002               	movf	(?___fltol+1)^0,w,c
  4802   003B90  E107               	bnz	u12261
  4803   003B92  0E0A               	movlw	10
  4804   003B94  5C01               	subwf	?___fltol^0,w,c
  4805   003B96  B0D8               	btfsc	status,0,c
  4806   003B98  EFD0  F01D         	goto	u12261
  4807   003B9C  EFD2  F01D         	goto	u12260
  4808   003BA0                     u12261:
  4809   003BA0  EFE2  F01D         	goto	l11940
  4810   003BA4                     u12260:
  4811   003BA4  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4812   003BA8  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4813   003BAC  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4814   003BB0  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4815   003BB4  EC5C  F033         	call	___fltol	;wreg free
  4816   003BB8  C001  F08B         	movff	?___fltol,efgtoa@d
  4817   003BBC  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  4818   003BC0  EFE7  F01D         	goto	l1469
  4819   003BC4                     l11940:
  4820   003BC4  0E00               	movlw	0
  4821   003BC6  0100               	movlb	0	; () banked
  4822   003BC8  6F8C               	movwf	(efgtoa@d+1)& (0+255),b
  4823   003BCA  0E09               	movlw	9
  4824   003BCC  6F8B               	movwf	efgtoa@d& (0+255),b
  4825   003BCE                     l1469:
  4826                           
  4827                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4828   003BCE  0100               	movlb	0	; () banked
  4829   003BD0  5188               	movf	efgtoa@pp& (0+255),w,b
  4830   003BD2  A4D8               	btfss	status,2,c
  4831   003BD4  EFEE  F01D         	goto	u12271
  4832   003BD8  EFF0  F01D         	goto	u12270
  4833   003BDC                     u12271:
  4834   003BDC  EF18  F01E         	goto	l11960
  4835   003BE0                     u12270:
  4836   003BE0                     
  4837                           ; BSR set to: 0
  4838   003BE0  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4839   003BE2  EFF7  F01D         	goto	u12280
  4840   003BE6  EFF5  F01D         	goto	u12281
  4841   003BEA                     u12281:
  4842   003BEA  EF18  F01E         	goto	l11960
  4843   003BEE                     u12280:
  4844   003BEE                     
  4845                           ; BSR set to: 0
  4846                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4847   003BEE  0E00               	movlw	low _dbuf
  4848   003BF0  25A6               	addwf	efgtoa@n& (0+255),w,b
  4849   003BF2  6ED9               	movwf	fsr2l,c
  4850   003BF4  0E02               	movlw	high _dbuf
  4851   003BF6  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4852   003BF8  6EDA               	movwf	fsr2h,c
  4853   003BFA  0E2E               	movlw	46
  4854   003BFC  6EDF               	movwf	indf2,c
  4855   003BFE                     
  4856                           ; BSR set to: 0
  4857   003BFE  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4858   003C00  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4859   003C02                     
  4860                           ; BSR set to: 0
  4861                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4862   003C02  0791               	decf	efgtoa@w& (0+255),f,b
  4863   003C04  A0D8               	btfss	status,0,c
  4864   003C06  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4865   003C08                     
  4866                           ; BSR set to: 0
  4867                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4868   003C08  0E01               	movlw	1
  4869   003C0A  6F88               	movwf	efgtoa@pp& (0+255),b
  4870   003C0C  EF18  F01E         	goto	l11960
  4871   003C10                     l11952:
  4872                           
  4873                           ; BSR set to: 0
  4874                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4875   003C10  0E00               	movlw	low _dbuf
  4876   003C12  25A6               	addwf	efgtoa@n& (0+255),w,b
  4877   003C14  6ED9               	movwf	fsr2l,c
  4878   003C16  0E02               	movlw	high _dbuf
  4879   003C18  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4880   003C1A  6EDA               	movwf	fsr2h,c
  4881   003C1C  0E30               	movlw	48
  4882   003C1E  6EDF               	movwf	indf2,c
  4883   003C20                     
  4884                           ; BSR set to: 0
  4885   003C20  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4886   003C22  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4887   003C24                     
  4888                           ; BSR set to: 0
  4889                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4890   003C24  0791               	decf	efgtoa@w& (0+255),f,b
  4891   003C26  A0D8               	btfss	status,0,c
  4892   003C28  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4893   003C2A                     
  4894                           ; BSR set to: 0
  4895                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4896   003C2A  0784               	decf	efgtoa@t& (0+255),f,b
  4897   003C2C  A0D8               	btfss	status,0,c
  4898   003C2E  0785               	decf	(efgtoa@t+1)& (0+255),f,b
  4899   003C30                     l11960:
  4900                           
  4901                           ; BSR set to: 0
  4902                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4903   003C30  5184               	movf	efgtoa@t& (0+255),w,b
  4904   003C32  1185               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4905   003C34  A4D8               	btfss	status,2,c
  4906   003C36  EF1F  F01E         	goto	u12291
  4907   003C3A  EF21  F01E         	goto	u12290
  4908   003C3E                     u12291:
  4909   003C3E  EF08  F01E         	goto	l11952
  4910   003C42                     u12290:
  4911   003C42                     
  4912                           ; BSR set to: 0
  4913                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4914   003C42  0E00               	movlw	low _dbuf
  4915   003C44  25A6               	addwf	efgtoa@n& (0+255),w,b
  4916   003C46  6ED9               	movwf	fsr2l,c
  4917   003C48  0E02               	movlw	high _dbuf
  4918   003C4A  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4919   003C4C  6EDA               	movwf	fsr2h,c
  4920   003C4E  518B               	movf	efgtoa@d& (0+255),w,b
  4921   003C50  0F30               	addlw	48
  4922   003C52  6EDF               	movwf	indf2,c
  4923   003C54                     
  4924                           ; BSR set to: 0
  4925   003C54  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4926   003C56  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4927   003C58                     
  4928                           ; BSR set to: 0
  4929                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4930   003C58  0791               	decf	efgtoa@w& (0+255),f,b
  4931   003C5A  A0D8               	btfss	status,0,c
  4932   003C5C  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4933   003C5E                     
  4934                           ; BSR set to: 0
  4935                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4936   003C5E  C099  F05B         	movff	efgtoa@h,___flsub@b
  4937   003C62  C09A  F05C         	movff	efgtoa@h+1,___flsub@b+1
  4938   003C66  C09B  F05D         	movff	efgtoa@h+2,___flsub@b+2
  4939   003C6A  C09C  F05E         	movff	efgtoa@h+3,___flsub@b+3
  4940   003C6E  C09D  F01D         	movff	efgtoa@l,___flmul@a
  4941   003C72  C09E  F01E         	movff	efgtoa@l+1,___flmul@a+1
  4942   003C76  C09F  F01F         	movff	efgtoa@l+2,___flmul@a+2
  4943   003C7A  C0A0  F020         	movff	efgtoa@l+3,___flmul@a+3
  4944   003C7E  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4945   003C82  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4946   003C86  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4947   003C8A  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4948   003C8E  EC20  F024         	call	___flmul	;wreg free
  4949   003C92  C019  F05F         	movff	?___flmul,___flsub@a
  4950   003C96  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  4951   003C9A  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  4952   003C9E  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  4953   003CA2  ECCB  F03A         	call	___flsub	;wreg free
  4954   003CA6  C05B  F099         	movff	?___flsub,efgtoa@h
  4955   003CAA  C05C  F09A         	movff	?___flsub+1,efgtoa@h+1
  4956   003CAE  C05D  F09B         	movff	?___flsub+2,efgtoa@h+2
  4957   003CB2  C05E  F09C         	movff	?___flsub+3,efgtoa@h+3
  4958   003CB6                     
  4959                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4960   003CB6  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4961   003CBA  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4962   003CBE  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4963   003CC2  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4964   003CC6  0E00               	movlw	0
  4965   003CC8  6E46               	movwf	___fldiv@a^0,c
  4966   003CCA  0E00               	movlw	0
  4967   003CCC  6E47               	movwf	(___fldiv@a+1)^0,c
  4968   003CCE  0E20               	movlw	32
  4969   003CD0  6E48               	movwf	(___fldiv@a+2)^0,c
  4970   003CD2  0E41               	movlw	65
  4971   003CD4  6E49               	movwf	(___fldiv@a+3)^0,c
  4972   003CD6  EC24  F028         	call	___fldiv	;wreg free
  4973   003CDA  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4974   003CDE  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4975   003CE2  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4976   003CE6  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4977   003CEA                     
  4978                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4979   003CEA  0100               	movlb	0	; () banked
  4980   003CEC  0780               	decf	efgtoa@ne& (0+255),f,b
  4981   003CEE  A0D8               	btfss	status,0,c
  4982   003CF0  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  4983   003CF2                     
  4984                           ; BSR set to: 0
  4985                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4986   003CF2  4B97               	infsnz	efgtoa@i& (0+255),f,b
  4987   003CF4  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  4988   003CF6                     l11976:
  4989                           
  4990                           ; BSR set to: 0
  4991                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4992   003CF6  518D               	movf	efgtoa@m& (0+255),w,b
  4993   003CF8  5D97               	subwf	efgtoa@i& (0+255),w,b
  4994   003CFA  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4995   003CFC  0A80               	xorlw	128
  4996   003CFE  6E75               	movwf	??_efgtoa^0,c
  4997   003D00  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  4998   003D02  0A80               	xorlw	128
  4999   003D04  5875               	subwfb	??_efgtoa^0,w,c
  5000   003D06  B0D8               	btfsc	status,0,c
  5001   003D08  EF88  F01E         	goto	u12301
  5002   003D0C  EF8A  F01E         	goto	u12300
  5003   003D10                     u12301:
  5004   003D10  EF98  F01E         	goto	l11980
  5005   003D14                     u12300:
  5006   003D14                     
  5007                           ; BSR set to: 0
  5008   003D14  BFA7               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5009   003D16  EF96  F01E         	goto	u12311
  5010   003D1A  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5011   003D1C  E109               	bnz	u12310
  5012   003D1E  0E4B               	movlw	75
  5013   003D20  5DA6               	subwf	efgtoa@n& (0+255),w,b
  5014   003D22  A0D8               	btfss	status,0,c
  5015   003D24  EF96  F01E         	goto	u12311
  5016   003D28  EF98  F01E         	goto	u12310
  5017   003D2C                     u12311:
  5018   003D2C  EF96  F01D         	goto	l11936
  5019   003D30                     u12310:
  5020   003D30                     l11980:
  5021                           
  5022                           ; BSR set to: 0
  5023                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5024   003D30  0E00               	movlw	0
  5025   003D32  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  5026   003D34  0E4F               	movlw	79
  5027   003D36  6F97               	movwf	efgtoa@i& (0+255),b
  5028   003D38                     
  5029                           ; BSR set to: 0
  5030                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5031   003D38  0E00               	movlw	low _dbuf
  5032   003D3A  2597               	addwf	efgtoa@i& (0+255),w,b
  5033   003D3C  6ED9               	movwf	fsr2l,c
  5034   003D3E  0E02               	movlw	high _dbuf
  5035   003D40  2198               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5036   003D42  6EDA               	movwf	fsr2h,c
  5037   003D44  6ADF               	clrf	indf2,c
  5038   003D46                     
  5039                           ; BSR set to: 0
  5040                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5041   003D46  0E00               	movlw	low _dbuf
  5042   003D48  6E75               	movwf	??_efgtoa^0,c
  5043   003D4A  0E02               	movlw	high _dbuf
  5044   003D4C  6E76               	movwf	(??_efgtoa+1)^0,c
  5045   003D4E  51A6               	movf	efgtoa@n& (0+255),w,b
  5046   003D50  5E75               	subwf	??_efgtoa^0,f,c
  5047   003D52  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5048   003D54  5A76               	subwfb	(??_efgtoa+1)^0,f,c
  5049   003D56  5197               	movf	efgtoa@i& (0+255),w,b
  5050   003D58  2475               	addwf	??_efgtoa^0,w,c
  5051   003D5A  6E01               	movwf	memcpy@d1^0,c
  5052   003D5C  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5053   003D5E  2076               	addwfc	(??_efgtoa+1)^0,w,c
  5054   003D60  6E02               	movwf	(memcpy@d1+1)^0,c
  5055   003D62  0E00               	movlw	low _dbuf
  5056   003D64  6E03               	movwf	memcpy@s1^0,c
  5057   003D66  0E02               	movlw	high _dbuf
  5058   003D68  6E04               	movwf	(memcpy@s1+1)^0,c
  5059   003D6A  C0A6  F005         	movff	efgtoa@n,memcpy@n
  5060   003D6E  C0A7  F006         	movff	efgtoa@n+1,memcpy@n+1
  5061   003D72  ECA3  F03A         	call	_memcpy	;wreg free
  5062   003D76                     
  5063                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5064   003D76  0100               	movlb	0	; () banked
  5065   003D78  51A6               	movf	efgtoa@n& (0+255),w,b
  5066   003D7A  5D97               	subwf	efgtoa@i& (0+255),w,b
  5067   003D7C  6FA6               	movwf	efgtoa@n& (0+255),b
  5068   003D7E  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5069   003D80  5998               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5070   003D82  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  5071   003D84                     
  5072                           ; BSR set to: 0
  5073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5074   003D84  51A1               	movf	efgtoa@sign& (0+255),w,b
  5075   003D86  A4D8               	btfss	status,2,c
  5076   003D88  EFC8  F01E         	goto	u12321
  5077   003D8C  EFCB  F01E         	goto	u12320
  5078   003D90                     u12321:
  5079   003D90  0E01               	movlw	1
  5080   003D92  EFCC  F01E         	goto	u12330
  5081   003D96                     u12320:
  5082   003D96  0E00               	movlw	0
  5083   003D98                     u12330:
  5084   003D98  6F97               	movwf	efgtoa@i& (0+255),b
  5085   003D9A  6B98               	clrf	(efgtoa@i+1)& (0+255),b
  5086   003D9C                     
  5087                           ; BSR set to: 0
  5088                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5089   003D9C  51A1               	movf	efgtoa@sign& (0+255),w,b
  5090   003D9E  B4D8               	btfsc	status,2,c
  5091   003DA0  EFD4  F01E         	goto	u12341
  5092   003DA4  EFD6  F01E         	goto	u12340
  5093   003DA8                     u12341:
  5094   003DA8  EFE1  F01E         	goto	l11994
  5095   003DAC                     u12340:
  5096   003DAC                     
  5097                           ; BSR set to: 0
  5098                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5099   003DAC  07A6               	decf	efgtoa@n& (0+255),f,b
  5100   003DAE  A0D8               	btfss	status,0,c
  5101   003DB0  07A7               	decf	(efgtoa@n+1)& (0+255),f,b
  5102   003DB2  0E00               	movlw	low _dbuf
  5103   003DB4  25A6               	addwf	efgtoa@n& (0+255),w,b
  5104   003DB6  6ED9               	movwf	fsr2l,c
  5105   003DB8  0E02               	movlw	high _dbuf
  5106   003DBA  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5107   003DBC  6EDA               	movwf	fsr2h,c
  5108   003DBE  C0A1  FFDF         	movff	efgtoa@sign,indf2
  5109   003DC2                     l11994:
  5110                           
  5111                           ; BSR set to: 0
  5112                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  5113   003DC2  5197               	movf	efgtoa@i& (0+255),w,b
  5114   003DC4  5F91               	subwf	efgtoa@w& (0+255),f,b
  5115   003DC6  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5116   003DC8  5B92               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5117   003DCA                     
  5118                           ; BSR set to: 0
  5119                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5120   003DCA  C06F  F00F         	movff	efgtoa@fp,pad@fp
  5121   003DCE  0E00               	movlw	low _dbuf
  5122   003DD0  25A6               	addwf	efgtoa@n& (0+255),w,b
  5123   003DD2  6E10               	movwf	pad@buf^0,c
  5124   003DD4  0E02               	movlw	high _dbuf
  5125   003DD6  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5126   003DD8  6E11               	movwf	(pad@buf+1)^0,c
  5127   003DDA  C091  F012         	movff	efgtoa@w,pad@p
  5128   003DDE  C092  F013         	movff	efgtoa@w+1,pad@p+1
  5129   003DE2  ECBF  F039         	call	_pad	;wreg free
  5130   003DE6                     l1436:
  5131   003DE6  0012               	return		;funcret
  5132   003DE8                     __end_of_efgtoa:
  5133                           	callstack 0
  5134                           
  5135 ;; *************** function _strcpy *****************
  5136 ;; Defined at:
  5137 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  5138 ;; Parameters:    Size  Location     Type
  5139 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5140 ;;		 -> dbuf(80), 
  5141 ;;  src             1    2[COMRAM] PTR const unsigned char 
  5142 ;;		 -> STR_15(4), STR_12(4), 
  5143 ;; Auto vars:     Size  Location     Type
  5144 ;;  d               2    4[COMRAM] PTR unsigned char 
  5145 ;;		 -> dbuf(80), 
  5146 ;; Return value:  Size  Location     Type
  5147 ;;                  2    0[COMRAM] PTR unsigned char 
  5148 ;; Registers used:
  5149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5150 ;; Tracked objects:
  5151 ;;		On entry : 0/0
  5152 ;;		On exit  : 0/0
  5153 ;;		Unchanged: 0/0
  5154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5155 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5159 ;;Total ram usage:        6 bytes
  5160 ;; Hardware stack levels used: 1
  5161 ;; This function calls:
  5162 ;;		Nothing
  5163 ;; This function is called by:
  5164 ;;		_efgtoa
  5165 ;; This function uses a non-reentrant model
  5166 ;;
  5167                           
  5168                           	psect	text12
  5169   007806                     __ptext12:
  5170                           	callstack 0
  5171   007806                     _strcpy:
  5172                           	callstack 24
  5173   007806  C001  F005         	movff	strcpy@dest,strcpy@d
  5174   00780A  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  5175   00780E                     l8106:
  5176   00780E  2A03               	incf	strcpy@src^0,f,c
  5177   007810  0403               	decf	strcpy@src^0,w,c
  5178   007812  6E04               	movwf	??_strcpy^0,c
  5179   007814  C004  FFF6         	movff	??_strcpy,tblptrl
  5180   007818                     	if	1	;There is more than 1 active tblptr byte
  5181   007818  0E10               	movlw	high __smallconst
  5182   00781A  6EF7               	movwf	tblptrh,c
  5183   00781C                     	endif
  5184   00781C                     	if	0	;tblptru may be non-zero
  5185   00781C                     	endif
  5186   00781C                     	if	0	;tblptru may be non-zero
  5187   00781C                     	endif
  5188   00781C  C005  FFD9         	movff	strcpy@d,fsr2l
  5189   007820  C006  FFDA         	movff	strcpy@d+1,fsr2h
  5190   007824  4A05               	infsnz	strcpy@d^0,f,c
  5191   007826  2A06               	incf	(strcpy@d+1)^0,f,c
  5192   007828  0008               	tblrd		*
  5193   00782A  CFF5 FFDF          	movff	tablat,indf2
  5194   00782E  50DF               	movf	indf2,w,c
  5195   007830  A4D8               	btfss	status,2,c
  5196   007832  EF1D  F03C         	goto	u8021
  5197   007836  EF1F  F03C         	goto	u8020
  5198   00783A                     u8021:
  5199   00783A  EF07  F03C         	goto	l8106
  5200   00783E                     u8020:
  5201   00783E  0012               	return		;funcret
  5202   007840                     __end_of_strcpy:
  5203                           	callstack 0
  5204                           
  5205 ;; *************** function _memcpy *****************
  5206 ;; Defined at:
  5207 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  5208 ;; Parameters:    Size  Location     Type
  5209 ;;  d1              2    0[COMRAM] PTR void 
  5210 ;;		 -> dbuf(80), 
  5211 ;;  s1              2    2[COMRAM] PTR const void 
  5212 ;;		 -> dbuf(80), 
  5213 ;;  n               2    4[COMRAM] unsigned int 
  5214 ;; Auto vars:     Size  Location     Type
  5215 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5216 ;;		 -> dbuf(80), 
  5217 ;;  d               2    7[COMRAM] PTR unsigned char 
  5218 ;;		 -> dbuf(80), 
  5219 ;;  tmp             1    6[COMRAM] unsigned char 
  5220 ;; Return value:  Size  Location     Type
  5221 ;;                  2    0[COMRAM] PTR void 
  5222 ;; Registers used:
  5223 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5224 ;; Tracked objects:
  5225 ;;		On entry : 0/0
  5226 ;;		On exit  : 0/0
  5227 ;;		Unchanged: 0/0
  5228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5229 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5233 ;;Total ram usage:       11 bytes
  5234 ;; Hardware stack levels used: 1
  5235 ;; This function calls:
  5236 ;;		Nothing
  5237 ;; This function is called by:
  5238 ;;		_efgtoa
  5239 ;; This function uses a non-reentrant model
  5240 ;;
  5241                           
  5242                           	psect	text13
  5243   007546                     __ptext13:
  5244                           	callstack 0
  5245   007546                     _memcpy:
  5246                           	callstack 24
  5247   007546  C003  F00A         	movff	memcpy@s1,memcpy@s
  5248   00754A  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  5249   00754E  C001  F008         	movff	memcpy@d1,memcpy@d
  5250   007552  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  5251   007556  EFBD  F03A         	goto	l8118
  5252   00755A                     l8110:
  5253   00755A  C00A  FFD9         	movff	memcpy@s,fsr2l
  5254   00755E  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  5255   007562  50DF               	movf	indf2,w,c
  5256   007564  6E07               	movwf	memcpy@tmp^0,c
  5257   007566  4A0A               	infsnz	memcpy@s^0,f,c
  5258   007568  2A0B               	incf	(memcpy@s+1)^0,f,c
  5259   00756A  C008  FFD9         	movff	memcpy@d,fsr2l
  5260   00756E  C009  FFDA         	movff	memcpy@d+1,fsr2h
  5261   007572  C007  FFDF         	movff	memcpy@tmp,indf2
  5262   007576  4A08               	infsnz	memcpy@d^0,f,c
  5263   007578  2A09               	incf	(memcpy@d+1)^0,f,c
  5264   00757A                     l8118:
  5265   00757A  0605               	decf	memcpy@n^0,f,c
  5266   00757C  A0D8               	btfss	status,0,c
  5267   00757E  0606               	decf	(memcpy@n+1)^0,f,c
  5268   007580  2805               	incf	memcpy@n^0,w,c
  5269   007582  E106               	bnz	u8031
  5270   007584  2806               	incf	(memcpy@n+1)^0,w,c
  5271   007586  A4D8               	btfss	status,2,c
  5272   007588  EFC8  F03A         	goto	u8031
  5273   00758C  EFCA  F03A         	goto	u8030
  5274   007590                     u8031:
  5275   007590  EFAD  F03A         	goto	l8110
  5276   007594                     u8030:
  5277   007594  0012               	return		;funcret
  5278   007596                     __end_of_memcpy:
  5279                           	callstack 0
  5280                           
  5281 ;; *************** function _labs *****************
  5282 ;; Defined at:
  5283 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  5284 ;; Parameters:    Size  Location     Type
  5285 ;;  a               4    0[COMRAM] long 
  5286 ;; Auto vars:     Size  Location     Type
  5287 ;;		None
  5288 ;; Return value:  Size  Location     Type
  5289 ;;                  4    0[COMRAM] long 
  5290 ;; Registers used:
  5291 ;;		wreg, status,2, status,0
  5292 ;; Tracked objects:
  5293 ;;		On entry : 0/0
  5294 ;;		On exit  : 0/0
  5295 ;;		Unchanged: 0/0
  5296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5297 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5301 ;;Total ram usage:        8 bytes
  5302 ;; Hardware stack levels used: 1
  5303 ;; This function calls:
  5304 ;;		Nothing
  5305 ;; This function is called by:
  5306 ;;		_efgtoa
  5307 ;; This function uses a non-reentrant model
  5308 ;;
  5309                           
  5310                           	psect	text14
  5311   0074A0                     __ptext14:
  5312                           	callstack 0
  5313   0074A0                     _labs:
  5314                           	callstack 24
  5315   0074A0  BE04               	btfsc	(labs@a+3)^0,7,c
  5316   0074A2  EF55  F03A         	goto	u5251
  5317   0074A6  EF57  F03A         	goto	u5250
  5318   0074AA                     u5251:
  5319   0074AA  EF61  F03A         	goto	l5592
  5320   0074AE                     u5250:
  5321   0074AE  C001  F001         	movff	labs@a,?_labs
  5322   0074B2  C002  F002         	movff	labs@a+1,?_labs+1
  5323   0074B6  C003  F003         	movff	labs@a+2,?_labs+2
  5324   0074BA  C004  F004         	movff	labs@a+3,?_labs+3
  5325   0074BE  EF7A  F03A         	goto	l1553
  5326   0074C2                     l5592:
  5327   0074C2  C001  F005         	movff	labs@a,??_labs
  5328   0074C6  C002  F006         	movff	labs@a+1,??_labs+1
  5329   0074CA  C003  F007         	movff	labs@a+2,??_labs+2
  5330   0074CE  C004  F008         	movff	labs@a+3,??_labs+3
  5331   0074D2  1E05               	comf	??_labs^0,f,c
  5332   0074D4  1E06               	comf	(??_labs+1)^0,f,c
  5333   0074D6  1E07               	comf	(??_labs+2)^0,f,c
  5334   0074D8  1E08               	comf	(??_labs+3)^0,f,c
  5335   0074DA  2A05               	incf	??_labs^0,f,c
  5336   0074DC  0E00               	movlw	0
  5337   0074DE  2206               	addwfc	(??_labs+1)^0,f,c
  5338   0074E0  2207               	addwfc	(??_labs+2)^0,f,c
  5339   0074E2  2208               	addwfc	(??_labs+3)^0,f,c
  5340   0074E4  C005  F001         	movff	??_labs,?_labs
  5341   0074E8  C006  F002         	movff	??_labs+1,?_labs+1
  5342   0074EC  C007  F003         	movff	??_labs+2,?_labs+2
  5343   0074F0  C008  F004         	movff	??_labs+3,?_labs+3
  5344   0074F4                     l1553:
  5345   0074F4  0012               	return		;funcret
  5346   0074F6                     __end_of_labs:
  5347                           	callstack 0
  5348                           
  5349 ;; *************** function _floorf *****************
  5350 ;; Defined at:
  5351 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  5352 ;; Parameters:    Size  Location     Type
  5353 ;;  x               4   90[COMRAM] float 
  5354 ;; Auto vars:     Size  Location     Type
  5355 ;;  u               4  106[COMRAM] struct .
  5356 ;;  m               4  100[COMRAM] unsigned long 
  5357 ;;  e               2  104[COMRAM] int 
  5358 ;; Return value:  Size  Location     Type
  5359 ;;                  4   90[COMRAM] float 
  5360 ;; Registers used:
  5361 ;;		wreg, status,2, status,0
  5362 ;; Tracked objects:
  5363 ;;		On entry : 0/0
  5364 ;;		On exit  : 0/0
  5365 ;;		Unchanged: 0/0
  5366 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5367 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5371 ;;Total ram usage:       20 bytes
  5372 ;; Hardware stack levels used: 1
  5373 ;; This function calls:
  5374 ;;		Nothing
  5375 ;; This function is called by:
  5376 ;;		_efgtoa
  5377 ;; This function uses a non-reentrant model
  5378 ;;
  5379                           
  5380                           	psect	text15
  5381   005AEA                     __ptext15:
  5382                           	callstack 0
  5383   005AEA                     _floorf:
  5384                           	callstack 24
  5385   005AEA  C1DE  F06B         	movff	floorf@F521,floorf@u
  5386   005AEE  C1DF  F06C         	movff	floorf@F521+1,floorf@u+1
  5387   005AF2  C1E0  F06D         	movff	floorf@F521+2,floorf@u+2
  5388   005AF6  C1E1  F06E         	movff	floorf@F521+3,floorf@u+3
  5389   005AFA  C05B  F06B         	movff	floorf@x,floorf@u
  5390   005AFE  C05C  F06C         	movff	floorf@x+1,floorf@u+1
  5391   005B02  C05D  F06D         	movff	floorf@x+2,floorf@u+2
  5392   005B06  C05E  F06E         	movff	floorf@x+3,floorf@u+3
  5393   005B0A  0E81               	movlw	129
  5394   005B0C  6E5F               	movwf	??_floorf^0,c
  5395   005B0E  0EFF               	movlw	255
  5396   005B10  6E60               	movwf	(??_floorf+1)^0,c
  5397   005B12  C06B  F061         	movff	floorf@u,??_floorf+2
  5398   005B16  C06C  F062         	movff	floorf@u+1,??_floorf+3
  5399   005B1A  C06D  F063         	movff	floorf@u+2,??_floorf+4
  5400   005B1E  C06E  F064         	movff	floorf@u+3,??_floorf+5
  5401   005B22  0E18               	movlw	24
  5402   005B24  EF99  F02D         	goto	u5260
  5403   005B28                     u5265:
  5404   005B28  90D8               	bcf	status,0,c
  5405   005B2A  3264               	rrcf	(??_floorf+5)^0,f,c
  5406   005B2C  3263               	rrcf	(??_floorf+4)^0,f,c
  5407   005B2E  3262               	rrcf	(??_floorf+3)^0,f,c
  5408   005B30  3261               	rrcf	(??_floorf+2)^0,f,c
  5409   005B32                     u5260:
  5410   005B32  2EE8               	decfsz	wreg,f,c
  5411   005B34  EF94  F02D         	goto	u5265
  5412   005B38  5061               	movf	(??_floorf+2)^0,w,c
  5413   005B3A  245F               	addwf	??_floorf^0,w,c
  5414   005B3C  6E69               	movwf	floorf@e^0,c
  5415   005B3E  0E00               	movlw	0
  5416   005B40  2060               	addwfc	(??_floorf+1)^0,w,c
  5417   005B42  6E6A               	movwf	(floorf@e+1)^0,c
  5418   005B44  BE6A               	btfsc	(floorf@e+1)^0,7,c
  5419   005B46  EFAE  F02D         	goto	u5271
  5420   005B4A  506A               	movf	(floorf@e+1)^0,w,c
  5421   005B4C  E109               	bnz	u5270
  5422   005B4E  0E17               	movlw	23
  5423   005B50  5C69               	subwf	floorf@e^0,w,c
  5424   005B52  A0D8               	btfss	status,0,c
  5425   005B54  EFAE  F02D         	goto	u5271
  5426   005B58  EFB0  F02D         	goto	u5270
  5427   005B5C                     u5271:
  5428   005B5C  EFBA  F02D         	goto	l5602
  5429   005B60                     u5270:
  5430   005B60                     l5600:
  5431   005B60  C05B  F05B         	movff	floorf@x,?_floorf
  5432   005B64  C05C  F05C         	movff	floorf@x+1,?_floorf+1
  5433   005B68  C05D  F05D         	movff	floorf@x+2,?_floorf+2
  5434   005B6C  C05E  F05E         	movff	floorf@x+3,?_floorf+3
  5435   005B70  EF7D  F02E         	goto	l1539
  5436   005B74                     l5602:
  5437   005B74  BE6A               	btfsc	(floorf@e+1)^0,7,c
  5438   005B76  EFBF  F02D         	goto	u5281
  5439   005B7A  EFC1  F02D         	goto	u5280
  5440   005B7E                     u5281:
  5441   005B7E  EF31  F02E         	goto	l5612
  5442   005B82                     u5280:
  5443   005B82  C069  F05F         	movff	floorf@e,??_floorf
  5444   005B86  0EFF               	movlw	255
  5445   005B88  6E60               	movwf	(??_floorf+1)^0,c
  5446   005B8A  0EFF               	movlw	255
  5447   005B8C  6E61               	movwf	(??_floorf+2)^0,c
  5448   005B8E  0E7F               	movlw	127
  5449   005B90  6E62               	movwf	(??_floorf+3)^0,c
  5450   005B92  0E00               	movlw	0
  5451   005B94  6E63               	movwf	(??_floorf+4)^0,c
  5452   005B96                     u5295:
  5453   005B96  665F               	tstfsz	??_floorf^0,c
  5454   005B98  EFD0  F02D         	goto	u5296
  5455   005B9C  EFD8  F02D         	goto	u5297
  5456   005BA0                     u5296:
  5457   005BA0  3463               	rlcf	(??_floorf+4)^0,w,c
  5458   005BA2  3263               	rrcf	(??_floorf+4)^0,f,c
  5459   005BA4  3262               	rrcf	(??_floorf+3)^0,f,c
  5460   005BA6  3261               	rrcf	(??_floorf+2)^0,f,c
  5461   005BA8  3260               	rrcf	(??_floorf+1)^0,f,c
  5462   005BAA  2E5F               	decfsz	??_floorf^0,f,c
  5463   005BAC  EFCB  F02D         	goto	u5295
  5464   005BB0                     u5297:
  5465   005BB0  C060  F065         	movff	??_floorf+1,floorf@m
  5466   005BB4  C061  F066         	movff	??_floorf+2,floorf@m+1
  5467   005BB8  C062  F067         	movff	??_floorf+3,floorf@m+2
  5468   005BBC  C063  F068         	movff	??_floorf+4,floorf@m+3
  5469   005BC0  5065               	movf	floorf@m^0,w,c
  5470   005BC2  146B               	andwf	floorf@u^0,w,c
  5471   005BC4  6E5F               	movwf	??_floorf^0,c
  5472   005BC6  5066               	movf	(floorf@m+1)^0,w,c
  5473   005BC8  146C               	andwf	(floorf@u+1)^0,w,c
  5474   005BCA  6E60               	movwf	(??_floorf+1)^0,c
  5475   005BCC  5067               	movf	(floorf@m+2)^0,w,c
  5476   005BCE  146D               	andwf	(floorf@u+2)^0,w,c
  5477   005BD0  6E61               	movwf	(??_floorf+2)^0,c
  5478   005BD2  5068               	movf	(floorf@m+3)^0,w,c
  5479   005BD4  146E               	andwf	(floorf@u+3)^0,w,c
  5480   005BD6  6E62               	movwf	(??_floorf+3)^0,c
  5481   005BD8  505F               	movf	??_floorf^0,w,c
  5482   005BDA  1060               	iorwf	(??_floorf+1)^0,w,c
  5483   005BDC  1061               	iorwf	(??_floorf+2)^0,w,c
  5484   005BDE  1062               	iorwf	(??_floorf+3)^0,w,c
  5485   005BE0  A4D8               	btfss	status,2,c
  5486   005BE2  EFF5  F02D         	goto	u5301
  5487   005BE6  EFF7  F02D         	goto	u5300
  5488   005BEA                     u5301:
  5489   005BEA  EFF9  F02D         	goto	l5608
  5490   005BEE                     u5300:
  5491   005BEE  EFB0  F02D         	goto	l5600
  5492   005BF2                     l5608:
  5493   005BF2  C06B  F05F         	movff	floorf@u,??_floorf
  5494   005BF6  C06C  F060         	movff	floorf@u+1,??_floorf+1
  5495   005BFA  C06D  F061         	movff	floorf@u+2,??_floorf+2
  5496   005BFE  C06E  F062         	movff	floorf@u+3,??_floorf+3
  5497   005C02  0E20               	movlw	32
  5498   005C04  EF09  F02E         	goto	u5310
  5499   005C08                     u5315:
  5500   005C08  90D8               	bcf	status,0,c
  5501   005C0A  3262               	rrcf	(??_floorf+3)^0,f,c
  5502   005C0C  3261               	rrcf	(??_floorf+2)^0,f,c
  5503   005C0E  3260               	rrcf	(??_floorf+1)^0,f,c
  5504   005C10  325F               	rrcf	??_floorf^0,f,c
  5505   005C12                     u5310:
  5506   005C12  2EE8               	decfsz	wreg,f,c
  5507   005C14  EF04  F02E         	goto	u5315
  5508   005C18  505F               	movf	??_floorf^0,w,c
  5509   005C1A  1060               	iorwf	(??_floorf+1)^0,w,c
  5510   005C1C  1061               	iorwf	(??_floorf+2)^0,w,c
  5511   005C1E  1062               	iorwf	(??_floorf+3)^0,w,c
  5512   005C20  B4D8               	btfsc	status,2,c
  5513   005C22  EF15  F02E         	goto	u5321
  5514   005C26  EF17  F02E         	goto	u5320
  5515   005C2A                     u5321:
  5516   005C2A  EF1F  F02E         	goto	l1542
  5517   005C2E                     u5320:
  5518   005C2E  5065               	movf	floorf@m^0,w,c
  5519   005C30  266B               	addwf	floorf@u^0,f,c
  5520   005C32  5066               	movf	(floorf@m+1)^0,w,c
  5521   005C34  226C               	addwfc	(floorf@u+1)^0,f,c
  5522   005C36  5067               	movf	(floorf@m+2)^0,w,c
  5523   005C38  226D               	addwfc	(floorf@u+2)^0,f,c
  5524   005C3A  5068               	movf	(floorf@m+3)^0,w,c
  5525   005C3C  226E               	addwfc	(floorf@u+3)^0,f,c
  5526   005C3E                     l1542:
  5527   005C3E  1C65               	comf	floorf@m^0,w,c
  5528   005C40  6E5F               	movwf	??_floorf^0,c
  5529   005C42  1C66               	comf	(floorf@m+1)^0,w,c
  5530   005C44  6E60               	movwf	(??_floorf+1)^0,c
  5531   005C46  1C67               	comf	(floorf@m+2)^0,w,c
  5532   005C48  6E61               	movwf	(??_floorf+2)^0,c
  5533   005C4A  1C68               	comf	(floorf@m+3)^0,w,c
  5534   005C4C  6E62               	movwf	(??_floorf+3)^0,c
  5535   005C4E  505F               	movf	??_floorf^0,w,c
  5536   005C50  166B               	andwf	floorf@u^0,f,c
  5537   005C52  5060               	movf	(??_floorf+1)^0,w,c
  5538   005C54  166C               	andwf	(floorf@u+1)^0,f,c
  5539   005C56  5061               	movf	(??_floorf+2)^0,w,c
  5540   005C58  166D               	andwf	(floorf@u+2)^0,f,c
  5541   005C5A  5062               	movf	(??_floorf+3)^0,w,c
  5542   005C5C  166E               	andwf	(floorf@u+3)^0,f,c
  5543   005C5E  EF75  F02E         	goto	l5620
  5544   005C62                     l5612:
  5545   005C62  C06B  F05F         	movff	floorf@u,??_floorf
  5546   005C66  C06C  F060         	movff	floorf@u+1,??_floorf+1
  5547   005C6A  C06D  F061         	movff	floorf@u+2,??_floorf+2
  5548   005C6E  C06E  F062         	movff	floorf@u+3,??_floorf+3
  5549   005C72  0E20               	movlw	32
  5550   005C74  EF41  F02E         	goto	u5330
  5551   005C78                     u5335:
  5552   005C78  90D8               	bcf	status,0,c
  5553   005C7A  3262               	rrcf	(??_floorf+3)^0,f,c
  5554   005C7C  3261               	rrcf	(??_floorf+2)^0,f,c
  5555   005C7E  3260               	rrcf	(??_floorf+1)^0,f,c
  5556   005C80  325F               	rrcf	??_floorf^0,f,c
  5557   005C82                     u5330:
  5558   005C82  2EE8               	decfsz	wreg,f,c
  5559   005C84  EF3C  F02E         	goto	u5335
  5560   005C88  505F               	movf	??_floorf^0,w,c
  5561   005C8A  1060               	iorwf	(??_floorf+1)^0,w,c
  5562   005C8C  1061               	iorwf	(??_floorf+2)^0,w,c
  5563   005C8E  1062               	iorwf	(??_floorf+3)^0,w,c
  5564   005C90  A4D8               	btfss	status,2,c
  5565   005C92  EF4D  F02E         	goto	u5341
  5566   005C96  EF4F  F02E         	goto	u5340
  5567   005C9A                     u5341:
  5568   005C9A  EF59  F02E         	goto	l5616
  5569   005C9E                     u5340:
  5570   005C9E  0E00               	movlw	0
  5571   005CA0  6E6B               	movwf	floorf@u^0,c
  5572   005CA2  0E00               	movlw	0
  5573   005CA4  6E6C               	movwf	(floorf@u+1)^0,c
  5574   005CA6  0E00               	movlw	0
  5575   005CA8  6E6D               	movwf	(floorf@u+2)^0,c
  5576   005CAA  0E00               	movlw	0
  5577   005CAC  6E6E               	movwf	(floorf@u+3)^0,c
  5578   005CAE  EF75  F02E         	goto	l5620
  5579   005CB2                     l5616:
  5580   005CB2  90D8               	bcf	status,0,c
  5581   005CB4  346B               	rlcf	floorf@u^0,w,c
  5582   005CB6  6E5F               	movwf	??_floorf^0,c
  5583   005CB8  346C               	rlcf	(floorf@u+1)^0,w,c
  5584   005CBA  6E60               	movwf	(??_floorf+1)^0,c
  5585   005CBC  346D               	rlcf	(floorf@u+2)^0,w,c
  5586   005CBE  6E61               	movwf	(??_floorf+2)^0,c
  5587   005CC0  346E               	rlcf	(floorf@u+3)^0,w,c
  5588   005CC2  6E62               	movwf	(??_floorf+3)^0,c
  5589   005CC4  505F               	movf	??_floorf^0,w,c
  5590   005CC6  1060               	iorwf	(??_floorf+1)^0,w,c
  5591   005CC8  1061               	iorwf	(??_floorf+2)^0,w,c
  5592   005CCA  1062               	iorwf	(??_floorf+3)^0,w,c
  5593   005CCC  B4D8               	btfsc	status,2,c
  5594   005CCE  EF6B  F02E         	goto	u5351
  5595   005CD2  EF6D  F02E         	goto	u5350
  5596   005CD6                     u5351:
  5597   005CD6  EF75  F02E         	goto	l5620
  5598   005CDA                     u5350:
  5599   005CDA  0E00               	movlw	0
  5600   005CDC  6E6B               	movwf	floorf@u^0,c
  5601   005CDE  0E00               	movlw	0
  5602   005CE0  6E6C               	movwf	(floorf@u+1)^0,c
  5603   005CE2  0E80               	movlw	128
  5604   005CE4  6E6D               	movwf	(floorf@u+2)^0,c
  5605   005CE6  0EBF               	movlw	191
  5606   005CE8  6E6E               	movwf	(floorf@u+3)^0,c
  5607   005CEA                     l5620:
  5608   005CEA  C06B  F05B         	movff	floorf@u,?_floorf
  5609   005CEE  C06C  F05C         	movff	floorf@u+1,?_floorf+1
  5610   005CF2  C06D  F05D         	movff	floorf@u+2,?_floorf+2
  5611   005CF6  C06E  F05E         	movff	floorf@u+3,?_floorf+3
  5612   005CFA                     l1539:
  5613   005CFA  0012               	return		;funcret
  5614   005CFC                     __end_of_floorf:
  5615                           	callstack 0
  5616                           
  5617 ;; *************** function ___fpclassifyf *****************
  5618 ;; Defined at:
  5619 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  5620 ;; Parameters:    Size  Location     Type
  5621 ;;  x               4    0[COMRAM] float 
  5622 ;; Auto vars:     Size  Location     Type
  5623 ;;  u               4   10[COMRAM] struct .
  5624 ;;  e               2    8[COMRAM] int 
  5625 ;; Return value:  Size  Location     Type
  5626 ;;                  2    0[COMRAM] int 
  5627 ;; Registers used:
  5628 ;;		wreg, status,2, status,0
  5629 ;; Tracked objects:
  5630 ;;		On entry : 0/0
  5631 ;;		On exit  : 0/0
  5632 ;;		Unchanged: 0/0
  5633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5634 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5638 ;;Total ram usage:       14 bytes
  5639 ;; Hardware stack levels used: 1
  5640 ;; This function calls:
  5641 ;;		Nothing
  5642 ;; This function is called by:
  5643 ;;		_efgtoa
  5644 ;; This function uses a non-reentrant model
  5645 ;;
  5646                           
  5647                           	psect	text16
  5648   0068C2                     __ptext16:
  5649                           	callstack 0
  5650   0068C2                     ___fpclassifyf:
  5651                           	callstack 24
  5652   0068C2  C1E2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5653   0068C6  C1E3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5654   0068CA  C1E4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5655   0068CE  C1E5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5656   0068D2  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5657   0068D6  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5658   0068DA  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5659   0068DE  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5660   0068E2  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5661   0068E6  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5662   0068EA  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5663   0068EE  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5664   0068F2  0E18               	movlw	24
  5665   0068F4  EF81  F034         	goto	u5170
  5666   0068F8                     u5175:
  5667   0068F8  90D8               	bcf	status,0,c
  5668   0068FA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5669   0068FC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5670   0068FE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5671   006900  3205               	rrcf	??___fpclassifyf^0,f,c
  5672   006902                     u5170:
  5673   006902  2EE8               	decfsz	wreg,f,c
  5674   006904  EF7C  F034         	goto	u5175
  5675   006908  5005               	movf	??___fpclassifyf^0,w,c
  5676   00690A  6E09               	movwf	___fpclassifyf@e^0,c
  5677   00690C  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5678   00690E  5009               	movf	___fpclassifyf@e^0,w,c
  5679   006910  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5680   006912  A4D8               	btfss	status,2,c
  5681   006914  EF8E  F034         	goto	u5181
  5682   006918  EF90  F034         	goto	u5180
  5683   00691C                     u5181:
  5684   00691C  EFB0  F034         	goto	l5574
  5685   006920                     u5180:
  5686   006920  90D8               	bcf	status,0,c
  5687   006922  340B               	rlcf	___fpclassifyf@u^0,w,c
  5688   006924  6E05               	movwf	??___fpclassifyf^0,c
  5689   006926  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5690   006928  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5691   00692A  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5692   00692C  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5693   00692E  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5694   006930  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5695   006932  5005               	movf	??___fpclassifyf^0,w,c
  5696   006934  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5697   006936  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5698   006938  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5699   00693A  A4D8               	btfss	status,2,c
  5700   00693C  EFA2  F034         	goto	u5191
  5701   006940  EFA4  F034         	goto	u5190
  5702   006944                     u5191:
  5703   006944  EFAA  F034         	goto	l5570
  5704   006948                     u5190:
  5705   006948  0E00               	movlw	0
  5706   00694A  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5707   00694C  0E02               	movlw	2
  5708   00694E  6E01               	movwf	?___fpclassifyf^0,c
  5709   006950  EFDF  F034         	goto	l1525
  5710   006954                     l5570:
  5711   006954  0E00               	movlw	0
  5712   006956  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5713   006958  0E03               	movlw	3
  5714   00695A  6E01               	movwf	?___fpclassifyf^0,c
  5715   00695C  EFDF  F034         	goto	l1525
  5716   006960                     l5574:
  5717   006960  2809               	incf	___fpclassifyf@e^0,w,c
  5718   006962  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5719   006964  A4D8               	btfss	status,2,c
  5720   006966  EFB7  F034         	goto	u5201
  5721   00696A  EFB9  F034         	goto	u5200
  5722   00696E                     u5201:
  5723   00696E  EFDB  F034         	goto	l5580
  5724   006972                     u5200:
  5725   006972  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5726   006976  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5727   00697A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5728   00697E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5729   006982  0E09               	movlw	9
  5730   006984                     u5215:
  5731   006984  90D8               	bcf	status,0,c
  5732   006986  3605               	rlcf	??___fpclassifyf^0,f,c
  5733   006988  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5734   00698A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5735   00698C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5736   00698E  2EE8               	decfsz	wreg,f,c
  5737   006990  EFC2  F034         	goto	u5215
  5738   006994  5005               	movf	??___fpclassifyf^0,w,c
  5739   006996  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5740   006998  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5741   00699A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5742   00699C  B4D8               	btfsc	status,2,c
  5743   00699E  EFD3  F034         	goto	u5221
  5744   0069A2  EFD6  F034         	goto	u5220
  5745   0069A6                     u5221:
  5746   0069A6  0E01               	movlw	1
  5747   0069A8  EFD7  F034         	goto	u5230
  5748   0069AC                     u5220:
  5749   0069AC  0E00               	movlw	0
  5750   0069AE                     u5230:
  5751   0069AE  6E01               	movwf	?___fpclassifyf^0,c
  5752   0069B0  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5753   0069B2  EFDF  F034         	goto	l1525
  5754   0069B6                     l5580:
  5755   0069B6  0E00               	movlw	0
  5756   0069B8  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5757   0069BA  0E04               	movlw	4
  5758   0069BC  6E01               	movwf	?___fpclassifyf^0,c
  5759   0069BE                     l1525:
  5760   0069BE  0012               	return		;funcret
  5761   0069C0                     __end_of___fpclassifyf:
  5762                           	callstack 0
  5763                           
  5764 ;; *************** function ___fltol *****************
  5765 ;; Defined at:
  5766 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5767 ;; Parameters:    Size  Location     Type
  5768 ;;  f1              4    0[COMRAM] int 
  5769 ;; Auto vars:     Size  Location     Type
  5770 ;;  exp1            1    9[COMRAM] unsigned char 
  5771 ;;  sign1           1    8[COMRAM] unsigned char 
  5772 ;; Return value:  Size  Location     Type
  5773 ;;                  4    0[COMRAM] long 
  5774 ;; Registers used:
  5775 ;;		wreg, status,2, status,0
  5776 ;; Tracked objects:
  5777 ;;		On entry : 0/0
  5778 ;;		On exit  : 0/0
  5779 ;;		Unchanged: 0/0
  5780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5781 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5785 ;;Total ram usage:       10 bytes
  5786 ;; Hardware stack levels used: 1
  5787 ;; This function calls:
  5788 ;;		Nothing
  5789 ;; This function is called by:
  5790 ;;		_send_the_result_to_LCD
  5791 ;;		_main
  5792 ;;		_efgtoa
  5793 ;; This function uses a non-reentrant model
  5794 ;;
  5795                           
  5796                           	psect	text17
  5797   0066B8                     __ptext17:
  5798                           	callstack 0
  5799   0066B8                     ___fltol:
  5800                           	callstack 24
  5801   0066B8  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5802   0066BA  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5803   0066BC  6E0A               	movwf	___fltol@exp1^0,c
  5804   0066BE  500A               	movf	___fltol@exp1^0,w,c
  5805   0066C0  A4D8               	btfss	status,2,c
  5806   0066C2  EF65  F033         	goto	u5071
  5807   0066C6  EF67  F033         	goto	u5070
  5808   0066CA                     u5071:
  5809   0066CA  EF71  F033         	goto	l5508
  5810   0066CE                     u5070:
  5811   0066CE                     l5504:
  5812   0066CE  0E00               	movlw	0
  5813   0066D0  6E01               	movwf	?___fltol^0,c
  5814   0066D2  0E00               	movlw	0
  5815   0066D4  6E02               	movwf	(?___fltol+1)^0,c
  5816   0066D6  0E00               	movlw	0
  5817   0066D8  6E03               	movwf	(?___fltol+2)^0,c
  5818   0066DA  0E00               	movlw	0
  5819   0066DC  6E04               	movwf	(?___fltol+3)^0,c
  5820   0066DE  EFDE  F033         	goto	l987
  5821   0066E2                     l5508:
  5822   0066E2  C001  F005         	movff	___fltol@f1,??___fltol
  5823   0066E6  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5824   0066EA  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5825   0066EE  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5826   0066F2  0E20               	movlw	32
  5827   0066F4  EF81  F033         	goto	u5080
  5828   0066F8                     u5085:
  5829   0066F8  90D8               	bcf	status,0,c
  5830   0066FA  3208               	rrcf	(??___fltol+3)^0,f,c
  5831   0066FC  3207               	rrcf	(??___fltol+2)^0,f,c
  5832   0066FE  3206               	rrcf	(??___fltol+1)^0,f,c
  5833   006700  3205               	rrcf	??___fltol^0,f,c
  5834   006702                     u5080:
  5835   006702  2EE8               	decfsz	wreg,f,c
  5836   006704  EF7C  F033         	goto	u5085
  5837   006708  5005               	movf	??___fltol^0,w,c
  5838   00670A  6E09               	movwf	___fltol@sign1^0,c
  5839   00670C  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5840   00670E  0EFF               	movlw	255
  5841   006710  1601               	andwf	___fltol@f1^0,f,c
  5842   006712  0EFF               	movlw	255
  5843   006714  1602               	andwf	(___fltol@f1+1)^0,f,c
  5844   006716  0EFF               	movlw	255
  5845   006718  1603               	andwf	(___fltol@f1+2)^0,f,c
  5846   00671A  0E00               	movlw	0
  5847   00671C  1604               	andwf	(___fltol@f1+3)^0,f,c
  5848   00671E  0E96               	movlw	150
  5849   006720  5E0A               	subwf	___fltol@exp1^0,f,c
  5850   006722  BE0A               	btfsc	___fltol@exp1^0,7,c
  5851   006724  EF98  F033         	goto	u5090
  5852   006728  EF96  F033         	goto	u5091
  5853   00672C                     u5091:
  5854   00672C  EFAE  F033         	goto	l5528
  5855   006730                     u5090:
  5856   006730  500A               	movf	___fltol@exp1^0,w,c
  5857   006732  0A80               	xorlw	128
  5858   006734  0F97               	addlw	151
  5859   006736  B0D8               	btfsc	status,0,c
  5860   006738  EFA0  F033         	goto	u5101
  5861   00673C  EFA2  F033         	goto	u5100
  5862   006740                     u5101:
  5863   006740  EFA4  F033         	goto	l5524
  5864   006744                     u5100:
  5865   006744  EF67  F033         	goto	l5504
  5866   006748                     l5524:
  5867   006748  90D8               	bcf	status,0,c
  5868   00674A  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5869   00674C  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5870   00674E  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5871   006750  3201               	rrcf	___fltol@f1^0,f,c
  5872   006752  3E0A               	incfsz	___fltol@exp1^0,f,c
  5873   006754  EFA4  F033         	goto	l5524
  5874   006758  EFC6  F033         	goto	l5538
  5875   00675C                     l5528:
  5876   00675C  0E1F               	movlw	31
  5877   00675E  640A               	cpfsgt	___fltol@exp1^0,c
  5878   006760  EFB4  F033         	goto	u5111
  5879   006764  EFB6  F033         	goto	u5110
  5880   006768                     u5111:
  5881   006768  EFBE  F033         	goto	l5536
  5882   00676C                     u5110:
  5883   00676C  EF67  F033         	goto	l5504
  5884   006770                     l5534:
  5885   006770  90D8               	bcf	status,0,c
  5886   006772  3601               	rlcf	___fltol@f1^0,f,c
  5887   006774  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5888   006776  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5889   006778  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5890   00677A  060A               	decf	___fltol@exp1^0,f,c
  5891   00677C                     l5536:
  5892   00677C  500A               	movf	___fltol@exp1^0,w,c
  5893   00677E  A4D8               	btfss	status,2,c
  5894   006780  EFC4  F033         	goto	u5121
  5895   006784  EFC6  F033         	goto	u5120
  5896   006788                     u5121:
  5897   006788  EFB8  F033         	goto	l5534
  5898   00678C                     u5120:
  5899   00678C                     l5538:
  5900   00678C  5009               	movf	___fltol@sign1^0,w,c
  5901   00678E  B4D8               	btfsc	status,2,c
  5902   006790  EFCC  F033         	goto	u5131
  5903   006794  EFCE  F033         	goto	u5130
  5904   006798                     u5131:
  5905   006798  EFD6  F033         	goto	l5542
  5906   00679C                     u5130:
  5907   00679C  1E04               	comf	(___fltol@f1+3)^0,f,c
  5908   00679E  1E03               	comf	(___fltol@f1+2)^0,f,c
  5909   0067A0  1E02               	comf	(___fltol@f1+1)^0,f,c
  5910   0067A2  6C01               	negf	___fltol@f1^0,c
  5911   0067A4  0E00               	movlw	0
  5912   0067A6  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5913   0067A8  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5914   0067AA  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5915   0067AC                     l5542:
  5916   0067AC  C001  F001         	movff	___fltol@f1,?___fltol
  5917   0067B0  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5918   0067B4  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5919   0067B8  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5920   0067BC                     l987:
  5921   0067BC  0012               	return		;funcret
  5922   0067BE                     __end_of___fltol:
  5923                           	callstack 0
  5924                           
  5925 ;; *************** function ___fleq *****************
  5926 ;; Defined at:
  5927 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5928 ;; Parameters:    Size  Location     Type
  5929 ;;  ff1             4    0[COMRAM] long 
  5930 ;;  ff2             4    4[COMRAM] long 
  5931 ;; Auto vars:     Size  Location     Type
  5932 ;;		None
  5933 ;; Return value:  Size  Location     Type
  5934 ;;		None               void
  5935 ;; Registers used:
  5936 ;;		wreg, status,2, status,0
  5937 ;; Tracked objects:
  5938 ;;		On entry : 0/0
  5939 ;;		On exit  : 0/0
  5940 ;;		Unchanged: 0/0
  5941 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5942 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5945 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5946 ;;Total ram usage:       12 bytes
  5947 ;; Hardware stack levels used: 1
  5948 ;; This function calls:
  5949 ;;		Nothing
  5950 ;; This function is called by:
  5951 ;;		_efgtoa
  5952 ;; This function uses a non-reentrant model
  5953 ;;
  5954                           
  5955                           	psect	text18
  5956   006E86                     __ptext18:
  5957                           	callstack 0
  5958   006E86                     ___fleq:
  5959                           	callstack 24
  5960   006E86  0E00               	movlw	0
  5961   006E88  1401               	andwf	___fleq@ff1^0,w,c
  5962   006E8A  6E09               	movwf	??___fleq^0,c
  5963   006E8C  0E00               	movlw	0
  5964   006E8E  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5965   006E90  6E0A               	movwf	(??___fleq+1)^0,c
  5966   006E92  0E80               	movlw	128
  5967   006E94  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5968   006E96  6E0B               	movwf	(??___fleq+2)^0,c
  5969   006E98  0E7F               	movlw	127
  5970   006E9A  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5971   006E9C  6E0C               	movwf	(??___fleq+3)^0,c
  5972   006E9E  5009               	movf	??___fleq^0,w,c
  5973   006EA0  100A               	iorwf	(??___fleq+1)^0,w,c
  5974   006EA2  100B               	iorwf	(??___fleq+2)^0,w,c
  5975   006EA4  100C               	iorwf	(??___fleq+3)^0,w,c
  5976   006EA6  A4D8               	btfss	status,2,c
  5977   006EA8  EF58  F037         	goto	u4981
  5978   006EAC  EF5A  F037         	goto	u4980
  5979   006EB0                     u4981:
  5980   006EB0  EF62  F037         	goto	l5460
  5981   006EB4                     u4980:
  5982   006EB4  0E00               	movlw	0
  5983   006EB6  6E01               	movwf	___fleq@ff1^0,c
  5984   006EB8  0E00               	movlw	0
  5985   006EBA  6E02               	movwf	(___fleq@ff1+1)^0,c
  5986   006EBC  0E00               	movlw	0
  5987   006EBE  6E03               	movwf	(___fleq@ff1+2)^0,c
  5988   006EC0  0E00               	movlw	0
  5989   006EC2  6E04               	movwf	(___fleq@ff1+3)^0,c
  5990   006EC4                     l5460:
  5991   006EC4  0E00               	movlw	0
  5992   006EC6  1405               	andwf	___fleq@ff2^0,w,c
  5993   006EC8  6E09               	movwf	??___fleq^0,c
  5994   006ECA  0E00               	movlw	0
  5995   006ECC  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5996   006ECE  6E0A               	movwf	(??___fleq+1)^0,c
  5997   006ED0  0E80               	movlw	128
  5998   006ED2  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5999   006ED4  6E0B               	movwf	(??___fleq+2)^0,c
  6000   006ED6  0E7F               	movlw	127
  6001   006ED8  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6002   006EDA  6E0C               	movwf	(??___fleq+3)^0,c
  6003   006EDC  5009               	movf	??___fleq^0,w,c
  6004   006EDE  100A               	iorwf	(??___fleq+1)^0,w,c
  6005   006EE0  100B               	iorwf	(??___fleq+2)^0,w,c
  6006   006EE2  100C               	iorwf	(??___fleq+3)^0,w,c
  6007   006EE4  A4D8               	btfss	status,2,c
  6008   006EE6  EF77  F037         	goto	u4991
  6009   006EEA  EF79  F037         	goto	u4990
  6010   006EEE                     u4991:
  6011   006EEE  EF81  F037         	goto	l5464
  6012   006EF2                     u4990:
  6013   006EF2  0E00               	movlw	0
  6014   006EF4  6E05               	movwf	___fleq@ff2^0,c
  6015   006EF6  0E00               	movlw	0
  6016   006EF8  6E06               	movwf	(___fleq@ff2+1)^0,c
  6017   006EFA  0E00               	movlw	0
  6018   006EFC  6E07               	movwf	(___fleq@ff2+2)^0,c
  6019   006EFE  0E00               	movlw	0
  6020   006F00  6E08               	movwf	(___fleq@ff2+3)^0,c
  6021   006F02                     l5464:
  6022   006F02  5005               	movf	___fleq@ff2^0,w,c
  6023   006F04  1801               	xorwf	___fleq@ff1^0,w,c
  6024   006F06  E10F               	bnz	u5000
  6025   006F08  5006               	movf	(___fleq@ff2+1)^0,w,c
  6026   006F0A  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6027   006F0C  E10C               	bnz	u5000
  6028   006F0E  5007               	movf	(___fleq@ff2+2)^0,w,c
  6029   006F10  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6030   006F12  E109               	bnz	u5000
  6031   006F14  5008               	movf	(___fleq@ff2+3)^0,w,c
  6032   006F16  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6033   006F18  B4D8               	btfsc	status,2,c
  6034   006F1A  EF91  F037         	goto	u5001
  6035   006F1E  EF93  F037         	goto	u5000
  6036   006F22                     u5001:
  6037   006F22  EF96  F037         	goto	l5468
  6038   006F26                     u5000:
  6039   006F26  90D8               	bcf	status,0,c
  6040   006F28  EF97  F037         	goto	l949
  6041   006F2C                     l5468:
  6042   006F2C  80D8               	bsf	status,0,c
  6043   006F2E                     l949:
  6044   006F2E  0012               	return		;funcret
  6045   006F30                     __end_of___fleq:
  6046                           	callstack 0
  6047                           
  6048 ;; *************** function _dtoa *****************
  6049 ;; Defined at:
  6050 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6051 ;; Parameters:    Size  Location     Type
  6052 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6053 ;;		 -> sprintf@f(12), 
  6054 ;;  d               2   23[COMRAM] int 
  6055 ;; Auto vars:     Size  Location     Type
  6056 ;;  i               2   32[COMRAM] int 
  6057 ;;  p               2   29[COMRAM] int 
  6058 ;;  w               2   27[COMRAM] int 
  6059 ;;  s               1   31[COMRAM] unsigned char 
  6060 ;; Return value:  Size  Location     Type
  6061 ;;                  1    wreg      void 
  6062 ;; Registers used:
  6063 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6064 ;; Tracked objects:
  6065 ;;		On entry : 0/0
  6066 ;;		On exit  : 0/0
  6067 ;;		Unchanged: 0/0
  6068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6069 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6073 ;;Total ram usage:       12 bytes
  6074 ;; Hardware stack levels used: 1
  6075 ;; Hardware stack levels required when called: 4
  6076 ;; This function calls:
  6077 ;;		___awdiv
  6078 ;;		___awmod
  6079 ;;		_abs
  6080 ;;		_pad
  6081 ;; This function is called by:
  6082 ;;		_vfpfcnvrt
  6083 ;; This function uses a non-reentrant model
  6084 ;;
  6085                           
  6086                           	psect	text19
  6087   006096                     __ptext19:
  6088                           	callstack 0
  6089   006096                     _dtoa:
  6090                           	callstack 21
  6091   006096                     
  6092                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6093   006096  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6094   006098  EF50  F030         	goto	u8041
  6095   00609C  EF53  F030         	goto	u8040
  6096   0060A0                     u8041:
  6097   0060A0  0E01               	movlw	1
  6098   0060A2  EF54  F030         	goto	u8050
  6099   0060A6                     u8040:
  6100   0060A6  0E00               	movlw	0
  6101   0060A8                     u8050:
  6102   0060A8  6E20               	movwf	dtoa@s^0,c
  6103                           
  6104                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6105   0060AA  0100               	movlb	0	; () banked
  6106   0060AC  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  6107   0060AE  EF5D  F030         	goto	u8060
  6108   0060B2  EF5B  F030         	goto	u8061
  6109   0060B6                     u8061:
  6110   0060B6  EF63  F030         	goto	l1411
  6111   0060BA                     u8060:
  6112   0060BA                     
  6113                           ; BSR set to: 0
  6114   0060BA  0E00               	movlw	0
  6115   0060BC  6E1F               	movwf	(dtoa@p+1)^0,c
  6116   0060BE  0E01               	movlw	1
  6117   0060C0  6E1E               	movwf	dtoa@p^0,c
  6118   0060C2  EF67  F030         	goto	l1413
  6119   0060C6                     l1411:
  6120                           
  6121                           ; BSR set to: 0
  6122   0060C6  C0D4  F01E         	movff	_prec,dtoa@p
  6123   0060CA  C0D5  F01F         	movff	_prec+1,dtoa@p+1
  6124   0060CE                     l1413:
  6125                           
  6126                           ; BSR set to: 0
  6127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6128   0060CE  C0D2  F01C         	movff	_width,dtoa@w
  6129   0060D2  C0D3  F01D         	movff	_width+1,dtoa@w+1
  6130   0060D6                     
  6131                           ; BSR set to: 0
  6132                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6133   0060D6  5020               	movf	dtoa@s^0,w,c
  6134   0060D8  B4D8               	btfsc	status,2,c
  6135   0060DA  EF71  F030         	goto	u8071
  6136   0060DE  EF73  F030         	goto	u8070
  6137   0060E2                     u8071:
  6138   0060E2  EF8A  F030         	goto	l1414
  6139   0060E6                     u8070:
  6140   0060E6                     
  6141                           ; BSR set to: 0
  6142                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6143   0060E6  061C               	decf	dtoa@w^0,f,c
  6144   0060E8  A0D8               	btfss	status,0,c
  6145   0060EA  061D               	decf	(dtoa@w+1)^0,f,c
  6146   0060EC                     
  6147                           ; BSR set to: 0
  6148                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6149   0060EC  5020               	movf	dtoa@s^0,w,c
  6150   0060EE  A4D8               	btfss	status,2,c
  6151   0060F0  EF7C  F030         	goto	u8081
  6152   0060F4  EF7E  F030         	goto	u8080
  6153   0060F8                     u8081:
  6154   0060F8  EF84  F030         	goto	l8132
  6155   0060FC                     u8080:
  6156   0060FC                     
  6157                           ; BSR set to: 0
  6158   0060FC  0E00               	movlw	0
  6159   0060FE  6E1B               	movwf	(_dtoa$1506+1)^0,c
  6160   006100  0E2B               	movlw	43
  6161   006102  6E1A               	movwf	_dtoa$1506^0,c
  6162   006104  EF88  F030         	goto	l8134
  6163   006108                     l8132:
  6164                           
  6165                           ; BSR set to: 0
  6166   006108  0E00               	movlw	0
  6167   00610A  6E1B               	movwf	(_dtoa$1506+1)^0,c
  6168   00610C  0E2D               	movlw	45
  6169   00610E  6E1A               	movwf	_dtoa$1506^0,c
  6170   006110                     l8134:
  6171                           
  6172                           ; BSR set to: 0
  6173   006110  C01A  F020         	movff	_dtoa$1506,dtoa@s
  6174   006114                     l1414:
  6175                           
  6176                           ; BSR set to: 0
  6177                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6178   006114  0E00               	movlw	0
  6179   006116  6E22               	movwf	(dtoa@i+1)^0,c
  6180   006118  0E4F               	movlw	79
  6181   00611A  6E21               	movwf	dtoa@i^0,c
  6182   00611C                     
  6183                           ; BSR set to: 0
  6184                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6185   00611C  0E00               	movlw	0
  6186   00611E  0102               	movlb	2	; () banked
  6187   006120  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6188                           
  6189                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6190   006122  EFC3  F030         	goto	l8148
  6191   006126                     l8138:
  6192                           
  6193                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6194   006126  0621               	decf	dtoa@i^0,f,c
  6195   006128  A0D8               	btfss	status,0,c
  6196   00612A  0622               	decf	(dtoa@i+1)^0,f,c
  6197   00612C                     
  6198                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6199   00612C  0E00               	movlw	low _dbuf
  6200   00612E  2421               	addwf	dtoa@i^0,w,c
  6201   006130  6ED9               	movwf	fsr2l,c
  6202   006132  0E02               	movlw	high _dbuf
  6203   006134  2022               	addwfc	(dtoa@i+1)^0,w,c
  6204   006136  6EDA               	movwf	fsr2h,c
  6205   006138  C018  F001         	movff	dtoa@d,___awmod@dividend
  6206   00613C  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6207   006140  0E00               	movlw	0
  6208   006142  6E04               	movwf	(___awmod@divisor+1)^0,c
  6209   006144  0E0A               	movlw	10
  6210   006146  6E03               	movwf	___awmod@divisor^0,c
  6211   006148  ECEB  F036         	call	___awmod	;wreg free
  6212   00614C  C001  F007         	movff	?___awmod,abs@a
  6213   006150  C002  F008         	movff	?___awmod+1,abs@a+1
  6214   006154  EC75  F03C         	call	_abs	;wreg free
  6215   006158  5007               	movf	?_abs^0,w,c
  6216   00615A  0F30               	addlw	48
  6217   00615C  6EDF               	movwf	indf2,c
  6218   00615E                     
  6219                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
  6220   00615E  061E               	decf	dtoa@p^0,f,c
  6221   006160  A0D8               	btfss	status,0,c
  6222   006162  061F               	decf	(dtoa@p+1)^0,f,c
  6223   006164                     
  6224                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6225   006164  061C               	decf	dtoa@w^0,f,c
  6226   006166  A0D8               	btfss	status,0,c
  6227   006168  061D               	decf	(dtoa@w+1)^0,f,c
  6228   00616A                     
  6229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6230   00616A  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6231   00616E  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6232   006172  0E00               	movlw	0
  6233   006174  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6234   006176  0E0A               	movlw	10
  6235   006178  6E03               	movwf	___awdiv@divisor^0,c
  6236   00617A  EC2C  F036         	call	___awdiv	;wreg free
  6237   00617E  C001  F018         	movff	?___awdiv,dtoa@d
  6238   006182  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6239   006186                     l8148:
  6240                           
  6241                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6242   006186  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6243   006188  EFCE  F030         	goto	u8091
  6244   00618C  5022               	movf	(dtoa@i+1)^0,w,c
  6245   00618E  E108               	bnz	u8090
  6246   006190  0421               	decf	dtoa@i^0,w,c
  6247   006192  A0D8               	btfss	status,0,c
  6248   006194  EFCE  F030         	goto	u8091
  6249   006198  EFD0  F030         	goto	u8090
  6250   00619C                     u8091:
  6251   00619C  EFE6  F030         	goto	l8154
  6252   0061A0                     u8090:
  6253   0061A0  5018               	movf	dtoa@d^0,w,c
  6254   0061A2  1019               	iorwf	(dtoa@d+1)^0,w,c
  6255   0061A4  A4D8               	btfss	status,2,c
  6256   0061A6  EFD7  F030         	goto	u8101
  6257   0061AA  EFD9  F030         	goto	u8100
  6258   0061AE                     u8101:
  6259   0061AE  EF93  F030         	goto	l8138
  6260   0061B2                     u8100:
  6261   0061B2  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  6262   0061B4  EFE6  F030         	goto	u8110
  6263   0061B8  501F               	movf	(dtoa@p+1)^0,w,c
  6264   0061BA  E106               	bnz	u8111
  6265   0061BC  041E               	decf	dtoa@p^0,w,c
  6266   0061BE  B0D8               	btfsc	status,0,c
  6267   0061C0  EFE4  F030         	goto	u8111
  6268   0061C4  EFE6  F030         	goto	u8110
  6269   0061C8                     u8111:
  6270   0061C8  EF93  F030         	goto	l8138
  6271   0061CC                     u8110:
  6272   0061CC                     l8154:
  6273                           
  6274                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6275   0061CC  5020               	movf	dtoa@s^0,w,c
  6276   0061CE  B4D8               	btfsc	status,2,c
  6277   0061D0  EFEC  F030         	goto	u8121
  6278   0061D4  EFEE  F030         	goto	u8120
  6279   0061D8                     u8121:
  6280   0061D8  EFF9  F030         	goto	l8160
  6281   0061DC                     u8120:
  6282   0061DC                     
  6283                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6284   0061DC  0621               	decf	dtoa@i^0,f,c
  6285   0061DE  A0D8               	btfss	status,0,c
  6286   0061E0  0622               	decf	(dtoa@i+1)^0,f,c
  6287   0061E2                     
  6288                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6289   0061E2  0E00               	movlw	low _dbuf
  6290   0061E4  2421               	addwf	dtoa@i^0,w,c
  6291   0061E6  6ED9               	movwf	fsr2l,c
  6292   0061E8  0E02               	movlw	high _dbuf
  6293   0061EA  2022               	addwfc	(dtoa@i+1)^0,w,c
  6294   0061EC  6EDA               	movwf	fsr2h,c
  6295   0061EE  C020  FFDF         	movff	dtoa@s,indf2
  6296   0061F2                     l8160:
  6297                           
  6298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6299   0061F2  C017  F00F         	movff	dtoa@fp,pad@fp
  6300   0061F6  0E00               	movlw	low _dbuf
  6301   0061F8  2421               	addwf	dtoa@i^0,w,c
  6302   0061FA  6E10               	movwf	pad@buf^0,c
  6303   0061FC  0E02               	movlw	high _dbuf
  6304   0061FE  2022               	addwfc	(dtoa@i+1)^0,w,c
  6305   006200  6E11               	movwf	(pad@buf+1)^0,c
  6306   006202  C01C  F012         	movff	dtoa@w,pad@p
  6307   006206  C01D  F013         	movff	dtoa@w+1,pad@p+1
  6308   00620A  ECBF  F039         	call	_pad	;wreg free
  6309   00620E  0012               	return		;funcret
  6310   006210                     __end_of_dtoa:
  6311                           	callstack 0
  6312                           
  6313 ;; *************** function _pad *****************
  6314 ;; Defined at:
  6315 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6316 ;; Parameters:    Size  Location     Type
  6317 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6318 ;;		 -> sprintf@f(12), 
  6319 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6320 ;;		 -> dbuf(80), 
  6321 ;;  p               2   17[COMRAM] int 
  6322 ;; Auto vars:     Size  Location     Type
  6323 ;;  i               2   20[COMRAM] int 
  6324 ;; Return value:  Size  Location     Type
  6325 ;;                  1    wreg      void 
  6326 ;; Registers used:
  6327 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6328 ;; Tracked objects:
  6329 ;;		On entry : 0/0
  6330 ;;		On exit  : 0/0
  6331 ;;		Unchanged: 0/0
  6332 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6333 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6336 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6337 ;;Total ram usage:        8 bytes
  6338 ;; Hardware stack levels used: 1
  6339 ;; Hardware stack levels required when called: 3
  6340 ;; This function calls:
  6341 ;;		_fputc
  6342 ;;		_fputs
  6343 ;; This function is called by:
  6344 ;;		_dtoa
  6345 ;;		_efgtoa
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text20
  6350   00737E                     __ptext20:
  6351                           	callstack 0
  6352   00737E                     _pad:
  6353                           	callstack 21
  6354   00737E                     
  6355                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6356   00737E  BE13               	btfsc	(pad@p+1)^0,7,c
  6357   007380  EFC6  F039         	goto	u8000
  6358   007384  EFC4  F039         	goto	u8001
  6359   007388                     u8001:
  6360   007388  EFCA  F039         	goto	l1403
  6361   00738C                     u8000:
  6362   00738C                     
  6363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6364   00738C  0E00               	movlw	0
  6365   00738E  6E13               	movwf	(pad@p+1)^0,c
  6366   007390  0E00               	movlw	0
  6367   007392  6E12               	movwf	pad@p^0,c
  6368   007394                     l1403:
  6369                           
  6370                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6371   007394  0E00               	movlw	0
  6372   007396  6E16               	movwf	(pad@i+1)^0,c
  6373   007398  0E00               	movlw	0
  6374   00739A  6E15               	movwf	pad@i^0,c
  6375                           
  6376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6377   00739C  EFDA  F039         	goto	l8100
  6378   0073A0                     l8096:
  6379                           
  6380                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6381   0073A0  0E00               	movlw	0
  6382   0073A2  6E02               	movwf	(fputc@c+1)^0,c
  6383   0073A4  0E20               	movlw	32
  6384   0073A6  6E01               	movwf	fputc@c^0,c
  6385   0073A8  C00F  F003         	movff	pad@fp,fputc@fp
  6386   0073AC  EC8E  F036         	call	_fputc	;wreg free
  6387   0073B0                     
  6388                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6389   0073B0  4A15               	infsnz	pad@i^0,f,c
  6390   0073B2  2A16               	incf	(pad@i+1)^0,f,c
  6391   0073B4                     l8100:
  6392                           
  6393                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6394   0073B4  5012               	movf	pad@p^0,w,c
  6395   0073B6  5C15               	subwf	pad@i^0,w,c
  6396   0073B8  5016               	movf	(pad@i+1)^0,w,c
  6397   0073BA  0A80               	xorlw	128
  6398   0073BC  6E14               	movwf	??_pad^0,c
  6399   0073BE  5013               	movf	(pad@p+1)^0,w,c
  6400   0073C0  0A80               	xorlw	128
  6401   0073C2  5814               	subwfb	??_pad^0,w,c
  6402   0073C4  A0D8               	btfss	status,0,c
  6403   0073C6  EFE7  F039         	goto	u8011
  6404   0073CA  EFE9  F039         	goto	u8010
  6405   0073CE                     u8011:
  6406   0073CE  EFD0  F039         	goto	l8096
  6407   0073D2                     u8010:
  6408   0073D2                     
  6409                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6410   0073D2  C010  F009         	movff	pad@buf,fputs@s
  6411   0073D6  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6412   0073DA  C00F  F00B         	movff	pad@fp,fputs@fp
  6413   0073DE  EC2E  F03B         	call	_fputs	;wreg free
  6414   0073E2  0012               	return		;funcret
  6415   0073E4                     __end_of_pad:
  6416                           	callstack 0
  6417                           
  6418 ;; *************** function _fputs *****************
  6419 ;; Defined at:
  6420 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6421 ;; Parameters:    Size  Location     Type
  6422 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6423 ;;		 -> dbuf(80), 
  6424 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6425 ;;		 -> sprintf@f(12), 
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;  i               2   12[COMRAM] int 
  6428 ;;  c               1   11[COMRAM] unsigned char 
  6429 ;; Return value:  Size  Location     Type
  6430 ;;                  2    8[COMRAM] int 
  6431 ;; Registers used:
  6432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6433 ;; Tracked objects:
  6434 ;;		On entry : 0/0
  6435 ;;		On exit  : 0/0
  6436 ;;		Unchanged: 0/0
  6437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6438 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6441 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6442 ;;Total ram usage:        6 bytes
  6443 ;; Hardware stack levels used: 1
  6444 ;; Hardware stack levels required when called: 2
  6445 ;; This function calls:
  6446 ;;		_fputc
  6447 ;; This function is called by:
  6448 ;;		_pad
  6449 ;; This function uses a non-reentrant model
  6450 ;;
  6451                           
  6452                           	psect	text21
  6453   00765C                     __ptext21:
  6454                           	callstack 0
  6455   00765C                     _fputs:
  6456                           	callstack 21
  6457   00765C  0E00               	movlw	0
  6458   00765E  6E0E               	movwf	(fputs@i+1)^0,c
  6459   007660  0E00               	movlw	0
  6460   007662  6E0D               	movwf	fputs@i^0,c
  6461   007664  EF3D  F03B         	goto	l8090
  6462   007668                     l8086:
  6463   007668  C00C  F001         	movff	fputs@c,fputc@c
  6464   00766C  6A02               	clrf	(fputc@c+1)^0,c
  6465   00766E  C00B  F003         	movff	fputs@fp,fputc@fp
  6466   007672  EC8E  F036         	call	_fputc	;wreg free
  6467   007676  4A0D               	infsnz	fputs@i^0,f,c
  6468   007678  2A0E               	incf	(fputs@i+1)^0,f,c
  6469   00767A                     l8090:
  6470   00767A  500D               	movf	fputs@i^0,w,c
  6471   00767C  2409               	addwf	fputs@s^0,w,c
  6472   00767E  6ED9               	movwf	fsr2l,c
  6473   007680  500E               	movf	(fputs@i+1)^0,w,c
  6474   007682  200A               	addwfc	(fputs@s+1)^0,w,c
  6475   007684  6EDA               	movwf	fsr2h,c
  6476   007686  50DF               	movf	indf2,w,c
  6477   007688  6E0C               	movwf	fputs@c^0,c
  6478   00768A  500C               	movf	fputs@c^0,w,c
  6479   00768C  A4D8               	btfss	status,2,c
  6480   00768E  EF4B  F03B         	goto	u7991
  6481   007692  EF4D  F03B         	goto	u7990
  6482   007696                     u7991:
  6483   007696  EF34  F03B         	goto	l8086
  6484   00769A                     u7990:
  6485   00769A  0012               	return		;funcret
  6486   00769C                     __end_of_fputs:
  6487                           	callstack 0
  6488                           
  6489 ;; *************** function _fputc *****************
  6490 ;; Defined at:
  6491 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6492 ;; Parameters:    Size  Location     Type
  6493 ;;  c               2    0[COMRAM] int 
  6494 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6495 ;;		 -> sprintf@f(12), 
  6496 ;; Auto vars:     Size  Location     Type
  6497 ;;		None
  6498 ;; Return value:  Size  Location     Type
  6499 ;;                  2    0[COMRAM] int 
  6500 ;; Registers used:
  6501 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6502 ;; Tracked objects:
  6503 ;;		On entry : 0/0
  6504 ;;		On exit  : 0/0
  6505 ;;		Unchanged: 0/0
  6506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6507 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6510 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6511 ;;Total ram usage:        8 bytes
  6512 ;; Hardware stack levels used: 1
  6513 ;; Hardware stack levels required when called: 1
  6514 ;; This function calls:
  6515 ;;		_putch
  6516 ;; This function is called by:
  6517 ;;		_pad
  6518 ;;		_vfpfcnvrt
  6519 ;;		_fputs
  6520 ;; This function uses a non-reentrant model
  6521 ;;
  6522                           
  6523                           	psect	text22
  6524   006D1C                     __ptext22:
  6525                           	callstack 0
  6526   006D1C                     _fputc:
  6527                           	callstack 24
  6528   006D1C  5003               	movf	fputc@fp^0,w,c
  6529   006D1E  B4D8               	btfsc	status,2,c
  6530   006D20  EF94  F036         	goto	u4001
  6531   006D24  EF96  F036         	goto	u4000
  6532   006D28                     u4001:
  6533   006D28  EF9E  F036         	goto	l4876
  6534   006D2C                     u4000:
  6535   006D2C  5003               	movf	fputc@fp^0,w,c
  6536   006D2E  A4D8               	btfss	status,2,c
  6537   006D30  EF9C  F036         	goto	u4011
  6538   006D34  EF9E  F036         	goto	u4010
  6539   006D38                     u4011:
  6540   006D38  EFA3  F036         	goto	l4878
  6541   006D3C                     u4010:
  6542   006D3C                     l4876:
  6543   006D3C  5001               	movf	fputc@c^0,w,c
  6544   006D3E  ECCF  F03C         	call	_putch
  6545   006D42  EFEA  F036         	goto	l1571
  6546   006D46                     l4878:
  6547   006D46  5003               	movf	fputc@fp^0,w,c
  6548   006D48  6ED9               	movwf	fsr2l,c
  6549   006D4A  6ADA               	clrf	fsr2h,c
  6550   006D4C  0E0A               	movlw	10
  6551   006D4E  26D9               	addwf	fsr2l,f,c
  6552   006D50  50DE               	movf	postinc2,w,c
  6553   006D52  10DE               	iorwf	postinc2,w,c
  6554   006D54  B4D8               	btfsc	status,2,c
  6555   006D56  EFAF  F036         	goto	u4021
  6556   006D5A  EFB1  F036         	goto	u4020
  6557   006D5E                     u4021:
  6558   006D5E  EFCA  F036         	goto	l4882
  6559   006D62                     u4020:
  6560   006D62  5003               	movf	fputc@fp^0,w,c
  6561   006D64  6ED9               	movwf	fsr2l,c
  6562   006D66  6ADA               	clrf	fsr2h,c
  6563   006D68  0E0A               	movlw	10
  6564   006D6A  26D9               	addwf	fsr2l,f,c
  6565   006D6C  5003               	movf	fputc@fp^0,w,c
  6566   006D6E  6EE1               	movwf	fsr1l,c
  6567   006D70  6AE2               	clrf	fsr1h,c
  6568   006D72  0E03               	movlw	3
  6569   006D74  26E1               	addwf	fsr1l,f,c
  6570   006D76  50DE               	movf	postinc2,w,c
  6571   006D78  5CE6               	subwf	postinc1,w,c
  6572   006D7A  50E6               	movf	postinc1,w,c
  6573   006D7C  0A80               	xorlw	128
  6574   006D7E  6E08               	movwf	(??_fputc+4)^0,c
  6575   006D80  50DE               	movf	postinc2,w,c
  6576   006D82  0A80               	xorlw	128
  6577   006D84  5808               	subwfb	(??_fputc+4)^0,w,c
  6578   006D86  B0D8               	btfsc	status,0,c
  6579   006D88  EFC8  F036         	goto	u4031
  6580   006D8C  EFCA  F036         	goto	u4030
  6581   006D90                     u4031:
  6582   006D90  EFEA  F036         	goto	l1571
  6583   006D94                     u4030:
  6584   006D94                     l4882:
  6585   006D94  5003               	movf	fputc@fp^0,w,c
  6586   006D96  6ED9               	movwf	fsr2l,c
  6587   006D98  6ADA               	clrf	fsr2h,c
  6588   006D9A  0E03               	movlw	3
  6589   006D9C  26D9               	addwf	fsr2l,f,c
  6590   006D9E  CFDE F004          	movff	postinc2,??_fputc
  6591   006DA2  CFDD F005          	movff	postdec2,??_fputc+1
  6592   006DA6  5003               	movf	fputc@fp^0,w,c
  6593   006DA8  6ED9               	movwf	fsr2l,c
  6594   006DAA  6ADA               	clrf	fsr2h,c
  6595   006DAC  CFDE F006          	movff	postinc2,??_fputc+2
  6596   006DB0  CFDD F007          	movff	postdec2,??_fputc+3
  6597   006DB4  5004               	movf	??_fputc^0,w,c
  6598   006DB6  2406               	addwf	(??_fputc+2)^0,w,c
  6599   006DB8  6ED9               	movwf	fsr2l,c
  6600   006DBA  5005               	movf	(??_fputc+1)^0,w,c
  6601   006DBC  2007               	addwfc	(??_fputc+3)^0,w,c
  6602   006DBE  6EDA               	movwf	fsr2h,c
  6603   006DC0  C001  FFDF         	movff	fputc@c,indf2
  6604   006DC4  5003               	movf	fputc@fp^0,w,c
  6605   006DC6  6ED9               	movwf	fsr2l,c
  6606   006DC8  6ADA               	clrf	fsr2h,c
  6607   006DCA  0E03               	movlw	3
  6608   006DCC  26D9               	addwf	fsr2l,f,c
  6609   006DCE  2ADE               	incf	postinc2,f,c
  6610   006DD0  0E00               	movlw	0
  6611   006DD2  22DD               	addwfc	postdec2,f,c
  6612   006DD4                     l1571:
  6613   006DD4  0012               	return		;funcret
  6614   006DD6                     __end_of_fputc:
  6615                           	callstack 0
  6616                           
  6617 ;; *************** function _putch *****************
  6618 ;; Defined at:
  6619 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6620 ;; Parameters:    Size  Location     Type
  6621 ;;  c               1    wreg     unsigned char 
  6622 ;; Auto vars:     Size  Location     Type
  6623 ;;  c               1    0[COMRAM] unsigned char 
  6624 ;; Return value:  Size  Location     Type
  6625 ;;                  1    wreg      void 
  6626 ;; Registers used:
  6627 ;;		wreg
  6628 ;; Tracked objects:
  6629 ;;		On entry : 0/0
  6630 ;;		On exit  : 0/0
  6631 ;;		Unchanged: 0/0
  6632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6633 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6636 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6637 ;;Total ram usage:        0 bytes
  6638 ;; Hardware stack levels used: 1
  6639 ;; This function calls:
  6640 ;;		Nothing
  6641 ;; This function is called by:
  6642 ;;		_fputc
  6643 ;; This function uses a non-reentrant model
  6644 ;;
  6645                           
  6646                           	psect	text23
  6647   00799E                     __ptext23:
  6648                           	callstack 0
  6649   00799E                     _putch:
  6650                           	callstack 24
  6651   00799E  0012               	return		;funcret
  6652   0079A0                     __end_of_putch:
  6653                           	callstack 0
  6654                           
  6655 ;; *************** function _abs *****************
  6656 ;; Defined at:
  6657 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6658 ;; Parameters:    Size  Location     Type
  6659 ;;  a               2    6[COMRAM] int 
  6660 ;; Auto vars:     Size  Location     Type
  6661 ;;		None
  6662 ;; Return value:  Size  Location     Type
  6663 ;;                  2    6[COMRAM] int 
  6664 ;; Registers used:
  6665 ;;		wreg, status,2, status,0
  6666 ;; Tracked objects:
  6667 ;;		On entry : 0/0
  6668 ;;		On exit  : 0/0
  6669 ;;		Unchanged: 0/0
  6670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6671 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6674 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6675 ;;Total ram usage:        4 bytes
  6676 ;; Hardware stack levels used: 1
  6677 ;; This function calls:
  6678 ;;		Nothing
  6679 ;; This function is called by:
  6680 ;;		_dtoa
  6681 ;; This function uses a non-reentrant model
  6682 ;;
  6683                           
  6684                           	psect	text24
  6685   0078EA                     __ptext24:
  6686                           	callstack 0
  6687   0078EA                     _abs:
  6688                           	callstack 24
  6689   0078EA  BE08               	btfsc	(abs@a+1)^0,7,c
  6690   0078EC  EF7A  F03C         	goto	u5161
  6691   0078F0  EF7C  F03C         	goto	u5160
  6692   0078F4                     u5161:
  6693   0078F4  EF82  F03C         	goto	l1530
  6694   0078F8                     u5160:
  6695   0078F8  C007  F007         	movff	abs@a,?_abs
  6696   0078FC  C008  F008         	movff	abs@a+1,?_abs+1
  6697   007900  EF8E  F03C         	goto	l1533
  6698   007904                     l1530:
  6699   007904  C007  F009         	movff	abs@a,??_abs
  6700   007908  C008  F00A         	movff	abs@a+1,??_abs+1
  6701   00790C  1E09               	comf	??_abs^0,f,c
  6702   00790E  1E0A               	comf	(??_abs+1)^0,f,c
  6703   007910  4A09               	infsnz	??_abs^0,f,c
  6704   007912  2A0A               	incf	(??_abs+1)^0,f,c
  6705   007914  C009  F007         	movff	??_abs,?_abs
  6706   007918  C00A  F008         	movff	??_abs+1,?_abs+1
  6707   00791C                     l1533:
  6708   00791C  0012               	return		;funcret
  6709   00791E                     __end_of_abs:
  6710                           	callstack 0
  6711                           
  6712 ;; *************** function ___awmod *****************
  6713 ;; Defined at:
  6714 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6715 ;; Parameters:    Size  Location     Type
  6716 ;;  dividend        2    0[COMRAM] int 
  6717 ;;  divisor         2    2[COMRAM] int 
  6718 ;; Auto vars:     Size  Location     Type
  6719 ;;  sign            1    5[COMRAM] unsigned char 
  6720 ;;  counter         1    4[COMRAM] unsigned char 
  6721 ;; Return value:  Size  Location     Type
  6722 ;;                  2    0[COMRAM] int 
  6723 ;; Registers used:
  6724 ;;		wreg, status,2, status,0
  6725 ;; Tracked objects:
  6726 ;;		On entry : 0/0
  6727 ;;		On exit  : 0/0
  6728 ;;		Unchanged: 0/0
  6729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6730 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6733 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6734 ;;Total ram usage:        6 bytes
  6735 ;; Hardware stack levels used: 1
  6736 ;; This function calls:
  6737 ;;		Nothing
  6738 ;; This function is called by:
  6739 ;;		_dtoa
  6740 ;; This function uses a non-reentrant model
  6741 ;;
  6742                           
  6743                           	psect	text25
  6744   006DD6                     __ptext25:
  6745                           	callstack 0
  6746   006DD6                     ___awmod:
  6747                           	callstack 24
  6748   006DD6  0E00               	movlw	0
  6749   006DD8  6E06               	movwf	___awmod@sign^0,c
  6750   006DDA  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6751   006DDC  EFF4  F036         	goto	u4920
  6752   006DE0  EFF2  F036         	goto	u4921
  6753   006DE4                     u4921:
  6754   006DE4  EFFA  F036         	goto	l5428
  6755   006DE8                     u4920:
  6756   006DE8  6C01               	negf	___awmod@dividend^0,c
  6757   006DEA  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6758   006DEC  B0D8               	btfsc	status,0,c
  6759   006DEE  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6760   006DF0  0E01               	movlw	1
  6761   006DF2  6E06               	movwf	___awmod@sign^0,c
  6762   006DF4                     l5428:
  6763   006DF4  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6764   006DF6  EF01  F037         	goto	u4930
  6765   006DFA  EFFF  F036         	goto	u4931
  6766   006DFE                     u4931:
  6767   006DFE  EF05  F037         	goto	l5432
  6768   006E02                     u4930:
  6769   006E02  6C03               	negf	___awmod@divisor^0,c
  6770   006E04  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6771   006E06  B0D8               	btfsc	status,0,c
  6772   006E08  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6773   006E0A                     l5432:
  6774   006E0A  5003               	movf	___awmod@divisor^0,w,c
  6775   006E0C  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6776   006E0E  B4D8               	btfsc	status,2,c
  6777   006E10  EF0C  F037         	goto	u4941
  6778   006E14  EF0E  F037         	goto	u4940
  6779   006E18                     u4941:
  6780   006E18  EF32  F037         	goto	l5448
  6781   006E1C                     u4940:
  6782   006E1C  0E01               	movlw	1
  6783   006E1E  6E05               	movwf	___awmod@counter^0,c
  6784   006E20  EF16  F037         	goto	l5438
  6785   006E24                     l5436:
  6786   006E24  90D8               	bcf	status,0,c
  6787   006E26  3603               	rlcf	___awmod@divisor^0,f,c
  6788   006E28  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6789   006E2A  2A05               	incf	___awmod@counter^0,f,c
  6790   006E2C                     l5438:
  6791   006E2C  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6792   006E2E  EF1B  F037         	goto	u4951
  6793   006E32  EF1D  F037         	goto	u4950
  6794   006E36                     u4951:
  6795   006E36  EF12  F037         	goto	l5436
  6796   006E3A                     u4950:
  6797   006E3A                     l5440:
  6798   006E3A  5003               	movf	___awmod@divisor^0,w,c
  6799   006E3C  5C01               	subwf	___awmod@dividend^0,w,c
  6800   006E3E  5004               	movf	(___awmod@divisor+1)^0,w,c
  6801   006E40  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6802   006E42  A0D8               	btfss	status,0,c
  6803   006E44  EF26  F037         	goto	u4961
  6804   006E48  EF28  F037         	goto	u4960
  6805   006E4C                     u4961:
  6806   006E4C  EF2C  F037         	goto	l5444
  6807   006E50                     u4960:
  6808   006E50  5003               	movf	___awmod@divisor^0,w,c
  6809   006E52  5E01               	subwf	___awmod@dividend^0,f,c
  6810   006E54  5004               	movf	(___awmod@divisor+1)^0,w,c
  6811   006E56  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6812   006E58                     l5444:
  6813   006E58  90D8               	bcf	status,0,c
  6814   006E5A  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6815   006E5C  3203               	rrcf	___awmod@divisor^0,f,c
  6816   006E5E  2E05               	decfsz	___awmod@counter^0,f,c
  6817   006E60  EF1D  F037         	goto	l5440
  6818   006E64                     l5448:
  6819   006E64  5006               	movf	___awmod@sign^0,w,c
  6820   006E66  B4D8               	btfsc	status,2,c
  6821   006E68  EF38  F037         	goto	u4971
  6822   006E6C  EF3A  F037         	goto	u4970
  6823   006E70                     u4971:
  6824   006E70  EF3E  F037         	goto	l5452
  6825   006E74                     u4970:
  6826   006E74  6C01               	negf	___awmod@dividend^0,c
  6827   006E76  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6828   006E78  B0D8               	btfsc	status,0,c
  6829   006E7A  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6830   006E7C                     l5452:
  6831   006E7C  C001  F001         	movff	___awmod@dividend,?___awmod
  6832   006E80  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6833   006E84  0012               	return		;funcret
  6834   006E86                     __end_of___awmod:
  6835                           	callstack 0
  6836                           
  6837 ;; *************** function ___awdiv *****************
  6838 ;; Defined at:
  6839 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6840 ;; Parameters:    Size  Location     Type
  6841 ;;  dividend        2    0[COMRAM] int 
  6842 ;;  divisor         2    2[COMRAM] int 
  6843 ;; Auto vars:     Size  Location     Type
  6844 ;;  quotient        2    6[COMRAM] int 
  6845 ;;  sign            1    5[COMRAM] unsigned char 
  6846 ;;  counter         1    4[COMRAM] unsigned char 
  6847 ;; Return value:  Size  Location     Type
  6848 ;;                  2    0[COMRAM] int 
  6849 ;; Registers used:
  6850 ;;		wreg, status,2, status,0
  6851 ;; Tracked objects:
  6852 ;;		On entry : 0/0
  6853 ;;		On exit  : 0/0
  6854 ;;		Unchanged: 0/0
  6855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6856 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6859 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6860 ;;Total ram usage:        8 bytes
  6861 ;; Hardware stack levels used: 1
  6862 ;; This function calls:
  6863 ;;		Nothing
  6864 ;; This function is called by:
  6865 ;;		_dtoa
  6866 ;; This function uses a non-reentrant model
  6867 ;;
  6868                           
  6869                           	psect	text26
  6870   006C58                     __ptext26:
  6871                           	callstack 0
  6872   006C58                     ___awdiv:
  6873                           	callstack 24
  6874   006C58  0E00               	movlw	0
  6875   006C5A  6E06               	movwf	___awdiv@sign^0,c
  6876   006C5C  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6877   006C5E  EF35  F036         	goto	u4860
  6878   006C62  EF33  F036         	goto	u4861
  6879   006C66                     u4861:
  6880   006C66  EF3B  F036         	goto	l5384
  6881   006C6A                     u4860:
  6882   006C6A  6C03               	negf	___awdiv@divisor^0,c
  6883   006C6C  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6884   006C6E  B0D8               	btfsc	status,0,c
  6885   006C70  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6886   006C72  0E01               	movlw	1
  6887   006C74  6E06               	movwf	___awdiv@sign^0,c
  6888   006C76                     l5384:
  6889   006C76  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6890   006C78  EF42  F036         	goto	u4870
  6891   006C7C  EF40  F036         	goto	u4871
  6892   006C80                     u4871:
  6893   006C80  EF48  F036         	goto	l5390
  6894   006C84                     u4870:
  6895   006C84  6C01               	negf	___awdiv@dividend^0,c
  6896   006C86  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6897   006C88  B0D8               	btfsc	status,0,c
  6898   006C8A  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6899   006C8C  0E01               	movlw	1
  6900   006C8E  1A06               	xorwf	___awdiv@sign^0,f,c
  6901   006C90                     l5390:
  6902   006C90  0E00               	movlw	0
  6903   006C92  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6904   006C94  0E00               	movlw	0
  6905   006C96  6E07               	movwf	___awdiv@quotient^0,c
  6906   006C98  5003               	movf	___awdiv@divisor^0,w,c
  6907   006C9A  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6908   006C9C  B4D8               	btfsc	status,2,c
  6909   006C9E  EF53  F036         	goto	u4881
  6910   006CA2  EF55  F036         	goto	u4880
  6911   006CA6                     u4881:
  6912   006CA6  EF7D  F036         	goto	l5412
  6913   006CAA                     u4880:
  6914   006CAA  0E01               	movlw	1
  6915   006CAC  6E05               	movwf	___awdiv@counter^0,c
  6916   006CAE  EF5D  F036         	goto	l5398
  6917   006CB2                     l5396:
  6918   006CB2  90D8               	bcf	status,0,c
  6919   006CB4  3603               	rlcf	___awdiv@divisor^0,f,c
  6920   006CB6  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6921   006CB8  2A05               	incf	___awdiv@counter^0,f,c
  6922   006CBA                     l5398:
  6923   006CBA  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6924   006CBC  EF62  F036         	goto	u4891
  6925   006CC0  EF64  F036         	goto	u4890
  6926   006CC4                     u4891:
  6927   006CC4  EF59  F036         	goto	l5396
  6928   006CC8                     u4890:
  6929   006CC8                     l5400:
  6930   006CC8  90D8               	bcf	status,0,c
  6931   006CCA  3607               	rlcf	___awdiv@quotient^0,f,c
  6932   006CCC  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6933   006CCE  5003               	movf	___awdiv@divisor^0,w,c
  6934   006CD0  5C01               	subwf	___awdiv@dividend^0,w,c
  6935   006CD2  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6936   006CD4  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6937   006CD6  A0D8               	btfss	status,0,c
  6938   006CD8  EF70  F036         	goto	u4901
  6939   006CDC  EF72  F036         	goto	u4900
  6940   006CE0                     u4901:
  6941   006CE0  EF77  F036         	goto	l5408
  6942   006CE4                     u4900:
  6943   006CE4  5003               	movf	___awdiv@divisor^0,w,c
  6944   006CE6  5E01               	subwf	___awdiv@dividend^0,f,c
  6945   006CE8  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6946   006CEA  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6947   006CEC  8007               	bsf	___awdiv@quotient^0,0,c
  6948   006CEE                     l5408:
  6949   006CEE  90D8               	bcf	status,0,c
  6950   006CF0  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6951   006CF2  3203               	rrcf	___awdiv@divisor^0,f,c
  6952   006CF4  2E05               	decfsz	___awdiv@counter^0,f,c
  6953   006CF6  EF64  F036         	goto	l5400
  6954   006CFA                     l5412:
  6955   006CFA  5006               	movf	___awdiv@sign^0,w,c
  6956   006CFC  B4D8               	btfsc	status,2,c
  6957   006CFE  EF83  F036         	goto	u4911
  6958   006D02  EF85  F036         	goto	u4910
  6959   006D06                     u4911:
  6960   006D06  EF89  F036         	goto	l5416
  6961   006D0A                     u4910:
  6962   006D0A  6C07               	negf	___awdiv@quotient^0,c
  6963   006D0C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6964   006D0E  B0D8               	btfsc	status,0,c
  6965   006D10  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6966   006D12                     l5416:
  6967   006D12  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6968   006D16  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6969   006D1A  0012               	return		;funcret
  6970   006D1C                     __end_of___awdiv:
  6971                           	callstack 0
  6972                           
  6973 ;; *************** function _memset *****************
  6974 ;; Defined at:
  6975 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  6976 ;; Parameters:    Size  Location     Type
  6977 ;;  dest            2    0[COMRAM] PTR void 
  6978 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  6979 ;;  c               2    2[COMRAM] int 
  6980 ;;  n               2    4[COMRAM] unsigned int 
  6981 ;; Auto vars:     Size  Location     Type
  6982 ;;  p               2    6[COMRAM] PTR unsigned char 
  6983 ;;		 -> RAM(4095), send_the_result_to_LCD@result_str(80), 
  6984 ;; Return value:  Size  Location     Type
  6985 ;;                  2    0[COMRAM] PTR void 
  6986 ;; Registers used:
  6987 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6988 ;; Tracked objects:
  6989 ;;		On entry : 0/0
  6990 ;;		On exit  : 0/0
  6991 ;;		Unchanged: 0/0
  6992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6993 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6996 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6997 ;;Total ram usage:        8 bytes
  6998 ;; Hardware stack levels used: 1
  6999 ;; This function calls:
  7000 ;;		Nothing
  7001 ;; This function is called by:
  7002 ;;		_convert_float_to_string
  7003 ;;		_convert_int_to_string
  7004 ;;		_convert_byte_to_string
  7005 ;;		_convert_short_to_string
  7006 ;; This function uses a non-reentrant model
  7007 ;;
  7008                           
  7009                           	psect	text27
  7010   00787A                     __ptext27:
  7011                           	callstack 0
  7012   00787A                     _memset:
  7013                           	callstack 28
  7014   00787A  C001  F007         	movff	memset@dest,memset@p
  7015   00787E  C002  F008         	movff	memset@dest+1,memset@p+1
  7016   007882  EF4B  F03C         	goto	l6118
  7017   007886                     l6114:
  7018   007886  C007  FFD9         	movff	memset@p,fsr2l
  7019   00788A  C008  FFDA         	movff	memset@p+1,fsr2h
  7020   00788E  C003  FFDF         	movff	memset@c,indf2
  7021   007892  4A07               	infsnz	memset@p^0,f,c
  7022   007894  2A08               	incf	(memset@p+1)^0,f,c
  7023   007896                     l6118:
  7024   007896  0605               	decf	memset@n^0,f,c
  7025   007898  A0D8               	btfss	status,0,c
  7026   00789A  0606               	decf	(memset@n+1)^0,f,c
  7027   00789C  2805               	incf	memset@n^0,w,c
  7028   00789E  E106               	bnz	u5991
  7029   0078A0  2806               	incf	(memset@n+1)^0,w,c
  7030   0078A2  A4D8               	btfss	status,2,c
  7031   0078A4  EF56  F03C         	goto	u5991
  7032   0078A8  EF58  F03C         	goto	u5990
  7033   0078AC                     u5991:
  7034   0078AC  EF43  F03C         	goto	l6114
  7035   0078B0                     u5990:
  7036   0078B0  0012               	return		;funcret
  7037   0078B2                     __end_of_memset:
  7038                           	callstack 0
  7039                           
  7040 ;; *************** function _multiplication_operation *****************
  7041 ;; Defined at:
  7042 ;;		line 164 in file "calculator_function/calculator_functions.c"
  7043 ;; Parameters:    Size  Location     Type
  7044 ;;  num1_val        4   49[COMRAM] float 
  7045 ;;  num2_val        4   53[COMRAM] float 
  7046 ;;  result          1   57[COMRAM] PTR float 
  7047 ;;		 -> total_result(4), result(4), 
  7048 ;; Auto vars:     Size  Location     Type
  7049 ;;		None
  7050 ;; Return value:  Size  Location     Type
  7051 ;;                  1    wreg      void 
  7052 ;; Registers used:
  7053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7054 ;; Tracked objects:
  7055 ;;		On entry : 0/0
  7056 ;;		On exit  : 0/0
  7057 ;;		Unchanged: 0/0
  7058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7059 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7062 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7063 ;;Total ram usage:        9 bytes
  7064 ;; Hardware stack levels used: 1
  7065 ;; Hardware stack levels required when called: 1
  7066 ;; This function calls:
  7067 ;;		___flmul
  7068 ;; This function is called by:
  7069 ;;		_main
  7070 ;; This function uses a non-reentrant model
  7071 ;;
  7072                           
  7073                           	psect	text28
  7074   007752                     __ptext28:
  7075                           	callstack 0
  7076   007752                     _multiplication_operation:
  7077                           	callstack 29
  7078   007752                     
  7079                           ;calculator_function/calculator_functions.c: 165: *result = num1_val*num2_val;
  7080   007752  C032  F019         	movff	multiplication_operation@num1_val,___flmul@b
  7081   007756  C033  F01A         	movff	multiplication_operation@num1_val+1,___flmul@b+1
  7082   00775A  C034  F01B         	movff	multiplication_operation@num1_val+2,___flmul@b+2
  7083   00775E  C035  F01C         	movff	multiplication_operation@num1_val+3,___flmul@b+3
  7084   007762  C036  F01D         	movff	multiplication_operation@num2_val,___flmul@a
  7085   007766  C037  F01E         	movff	multiplication_operation@num2_val+1,___flmul@a+1
  7086   00776A  C038  F01F         	movff	multiplication_operation@num2_val+2,___flmul@a+2
  7087   00776E  C039  F020         	movff	multiplication_operation@num2_val+3,___flmul@a+3
  7088   007772  EC20  F024         	call	___flmul	;wreg free
  7089   007776  503A               	movf	multiplication_operation@result^0,w,c
  7090   007778  6ED9               	movwf	fsr2l,c
  7091   00777A  6ADA               	clrf	fsr2h,c
  7092   00777C  C019  FFDE         	movff	?___flmul,postinc2
  7093   007780  C01A  FFDE         	movff	?___flmul+1,postinc2
  7094   007784  C01B  FFDE         	movff	?___flmul+2,postinc2
  7095   007788  C01C  FFDE         	movff	?___flmul+3,postinc2
  7096   00778C  0012               	return		;funcret
  7097   00778E                     __end_of_multiplication_operation:
  7098                           	callstack 0
  7099                           
  7100 ;; *************** function _initialize_var *****************
  7101 ;; Defined at:
  7102 ;;		line 200 in file "calculator_function/calculator_functions.c"
  7103 ;; Parameters:    Size  Location     Type
  7104 ;;		None
  7105 ;; Auto vars:     Size  Location     Type
  7106 ;;  count           2    0[COMRAM] int 
  7107 ;; Return value:  Size  Location     Type
  7108 ;;                  1    wreg      void 
  7109 ;; Registers used:
  7110 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7111 ;; Tracked objects:
  7112 ;;		On entry : 0/0
  7113 ;;		On exit  : 0/0
  7114 ;;		Unchanged: 0/0
  7115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7119 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7120 ;;Total ram usage:        2 bytes
  7121 ;; Hardware stack levels used: 1
  7122 ;; This function calls:
  7123 ;;		Nothing
  7124 ;; This function is called by:
  7125 ;;		_main
  7126 ;; This function uses a non-reentrant model
  7127 ;;
  7128                           
  7129                           	psect	text29
  7130   006B90                     __ptext29:
  7131                           	callstack 0
  7132   006B90                     _initialize_var:
  7133                           	callstack 30
  7134   006B90                     
  7135                           ;calculator_function/calculator_functions.c: 201:      keypad_value = 0;
  7136   006B90  0E00               	movlw	0
  7137   006B92  0100               	movlb	0	; () banked
  7138   006B94  6FDE               	movwf	_keypad_value& (0+255),b
  7139                           
  7140                           ;calculator_function/calculator_functions.c: 203:      lcd_counter = 1;
  7141   006B96  0E01               	movlw	1
  7142   006B98  6FFF               	movwf	_lcd_counter& (0+255),b
  7143                           
  7144                           ;calculator_function/calculator_functions.c: 204:      counter_num1 = 0;
  7145   006B9A  0E00               	movlw	0
  7146   006B9C  6FF8               	movwf	_counter_num1& (0+255),b
  7147                           
  7148                           ;calculator_function/calculator_functions.c: 205:      counter_num2 = 0;
  7149   006B9E  0E00               	movlw	0
  7150   006BA0  6FF7               	movwf	_counter_num2& (0+255),b
  7151                           
  7152                           ;calculator_function/calculator_functions.c: 206:      counter_num3 = 0;
  7153   006BA2  0E00               	movlw	0
  7154   006BA4  6FF6               	movwf	_counter_num3& (0+255),b
  7155                           
  7156                           ;calculator_function/calculator_functions.c: 207:      operation = 0;
  7157   006BA6  0E00               	movlw	0
  7158   006BA8  6FF5               	movwf	_operation& (0+255),b
  7159                           
  7160                           ;calculator_function/calculator_functions.c: 208:      operation2 = 0;
  7161   006BAA  0E00               	movlw	0
  7162   006BAC  6FF4               	movwf	_operation2& (0+255),b
  7163                           
  7164                           ;calculator_function/calculator_functions.c: 209:      operation3 = 0;
  7165   006BAE  0E00               	movlw	0
  7166   006BB0  6FF3               	movwf	_operation3& (0+255),b
  7167                           
  7168                           ;calculator_function/calculator_functions.c: 211:      for(int count = 0;count< 3;count+
      +                          +){
  7169   006BB2  0E00               	movlw	0
  7170   006BB4  6E02               	movwf	(initialize_var@count+1)^0,c
  7171   006BB6  0E00               	movlw	0
  7172   006BB8  6E01               	movwf	initialize_var@count^0,c
  7173   006BBA                     l7104:
  7174                           
  7175                           ;calculator_function/calculator_functions.c: 212:      num1[count] = 0;
  7176   006BBA  0EF6               	movlw	low _num1
  7177   006BBC  2401               	addwf	initialize_var@count^0,w,c
  7178   006BBE  6ED9               	movwf	fsr2l,c
  7179   006BC0  0E01               	movlw	high _num1
  7180   006BC2  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7181   006BC4  6EDA               	movwf	fsr2h,c
  7182   006BC6  6ADF               	clrf	indf2,c
  7183                           
  7184                           ;calculator_function/calculator_functions.c: 213:      num2[count] = 0;
  7185   006BC8  0EF2               	movlw	low _num2
  7186   006BCA  2401               	addwf	initialize_var@count^0,w,c
  7187   006BCC  6ED9               	movwf	fsr2l,c
  7188   006BCE  0E01               	movlw	high _num2
  7189   006BD0  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7190   006BD2  6EDA               	movwf	fsr2h,c
  7191   006BD4  6ADF               	clrf	indf2,c
  7192                           
  7193                           ;calculator_function/calculator_functions.c: 214:      num3[count] = 0;
  7194   006BD6  0EEE               	movlw	low _num3
  7195   006BD8  2401               	addwf	initialize_var@count^0,w,c
  7196   006BDA  6ED9               	movwf	fsr2l,c
  7197   006BDC  0E01               	movlw	high _num3
  7198   006BDE  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7199   006BE0  6EDA               	movwf	fsr2h,c
  7200   006BE2  6ADF               	clrf	indf2,c
  7201   006BE4                     
  7202                           ;calculator_function/calculator_functions.c: 215:      }
  7203   006BE4  4A01               	infsnz	initialize_var@count^0,f,c
  7204   006BE6  2A02               	incf	(initialize_var@count+1)^0,f,c
  7205   006BE8  BE02               	btfsc	(initialize_var@count+1)^0,7,c
  7206   006BEA  EF00  F036         	goto	u7331
  7207   006BEE  5002               	movf	(initialize_var@count+1)^0,w,c
  7208   006BF0  E109               	bnz	u7330
  7209   006BF2  0E03               	movlw	3
  7210   006BF4  5C01               	subwf	initialize_var@count^0,w,c
  7211   006BF6  A0D8               	btfss	status,0,c
  7212   006BF8  EF00  F036         	goto	u7331
  7213   006BFC  EF02  F036         	goto	u7330
  7214   006C00                     u7331:
  7215   006C00  EFDD  F035         	goto	l7104
  7216   006C04                     u7330:
  7217   006C04                     
  7218                           ;calculator_function/calculator_functions.c: 217:      num1_val = 0;
  7219   006C04  0E00               	movlw	0
  7220   006C06  0100               	movlb	0	; () banked
  7221   006C08  6FEF               	movwf	_num1_val& (0+255),b
  7222   006C0A  0E00               	movlw	0
  7223   006C0C  6FF0               	movwf	(_num1_val+1)& (0+255),b
  7224   006C0E  0E00               	movlw	0
  7225   006C10  6FF1               	movwf	(_num1_val+2)& (0+255),b
  7226   006C12  0E00               	movlw	0
  7227   006C14  6FF2               	movwf	(_num1_val+3)& (0+255),b
  7228                           
  7229                           ;calculator_function/calculator_functions.c: 218:      num2_val = 0;
  7230   006C16  0E00               	movlw	0
  7231   006C18  6FEB               	movwf	_num2_val& (0+255),b
  7232   006C1A  0E00               	movlw	0
  7233   006C1C  6FEC               	movwf	(_num2_val+1)& (0+255),b
  7234   006C1E  0E00               	movlw	0
  7235   006C20  6FED               	movwf	(_num2_val+2)& (0+255),b
  7236   006C22  0E00               	movlw	0
  7237   006C24  6FEE               	movwf	(_num2_val+3)& (0+255),b
  7238                           
  7239                           ;calculator_function/calculator_functions.c: 219:      num3_val = 0;
  7240   006C26  0E00               	movlw	0
  7241   006C28  6FE7               	movwf	_num3_val& (0+255),b
  7242   006C2A  0E00               	movlw	0
  7243   006C2C  6FE8               	movwf	(_num3_val+1)& (0+255),b
  7244   006C2E  0E00               	movlw	0
  7245   006C30  6FE9               	movwf	(_num3_val+2)& (0+255),b
  7246   006C32  0E00               	movlw	0
  7247   006C34  6FEA               	movwf	(_num3_val+3)& (0+255),b
  7248                           
  7249                           ;calculator_function/calculator_functions.c: 221:      result = 0;
  7250   006C36  0E00               	movlw	0
  7251   006C38  6FE3               	movwf	_result& (0+255),b
  7252   006C3A  0E00               	movlw	0
  7253   006C3C  6FE4               	movwf	(_result+1)& (0+255),b
  7254   006C3E  0E00               	movlw	0
  7255   006C40  6FE5               	movwf	(_result+2)& (0+255),b
  7256   006C42  0E00               	movlw	0
  7257   006C44  6FE6               	movwf	(_result+3)& (0+255),b
  7258                           
  7259                           ;calculator_function/calculator_functions.c: 222:      total_result = 0;
  7260   006C46  0E00               	movlw	0
  7261   006C48  6FDF               	movwf	_total_result& (0+255),b
  7262   006C4A  0E00               	movlw	0
  7263   006C4C  6FE0               	movwf	(_total_result+1)& (0+255),b
  7264   006C4E  0E00               	movlw	0
  7265   006C50  6FE1               	movwf	(_total_result+2)& (0+255),b
  7266   006C52  0E00               	movlw	0
  7267   006C54  6FE2               	movwf	(_total_result+3)& (0+255),b
  7268   006C56                     
  7269                           ; BSR set to: 0
  7270   006C56  0012               	return		;funcret
  7271   006C58                     __end_of_initialize_var:
  7272                           	callstack 0
  7273                           
  7274 ;; *************** function _get_third_number_and_third_operartion *****************
  7275 ;; Defined at:
  7276 ;;		line 60 in file "calculator_function/calculator_functions.c"
  7277 ;; Parameters:    Size  Location     Type
  7278 ;;  num             2   28[COMRAM] PTR unsigned char 
  7279 ;;		 -> num3(4), 
  7280 ;;  counter_num     1   30[COMRAM] PTR unsigned char 
  7281 ;;		 -> counter_num3(1), 
  7282 ;;  lcd_counter     1   31[COMRAM] PTR unsigned char 
  7283 ;;		 -> lcd_counter(1), 
  7284 ;;  operation       1   32[COMRAM] PTR unsigned char 
  7285 ;;		 -> operation3(1), 
  7286 ;; Auto vars:     Size  Location     Type
  7287 ;;  keypad_value    1   35[COMRAM] unsigned char 
  7288 ;; Return value:  Size  Location     Type
  7289 ;;                  1    wreg      void 
  7290 ;; Registers used:
  7291 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7292 ;; Tracked objects:
  7293 ;;		On entry : 0/0
  7294 ;;		On exit  : 0/0
  7295 ;;		Unchanged: 0/0
  7296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7297 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7301 ;;Total ram usage:        8 bytes
  7302 ;; Hardware stack levels used: 1
  7303 ;; Hardware stack levels required when called: 5
  7304 ;; This function calls:
  7305 ;;		_ecu_keypad_get_value
  7306 ;;		_lcd_4bit_send_char_data_pos
  7307 ;;		_lcd_4bit_send_string_pos
  7308 ;; This function is called by:
  7309 ;;		_main
  7310 ;; This function uses a non-reentrant model
  7311 ;;
  7312                           
  7313                           	psect	text30
  7314   005668                     __ptext30:
  7315                           	callstack 0
  7316   005668                     _get_third_number_and_third_operartion:
  7317                           	callstack 25
  7318   005668                     
  7319                           ;calculator_function/calculator_functions.c: 60: void get_third_number_and_third_operart
      +                          ion(uint8 *num,uint8 *counter_num,uint8 *lcd_counter,;calculator_function/calculator_fun
      +                          ctions.c: 61:                                            uint8 *operation);calculator_fu
      +                          nction/calculator_functions.c: 62: {;calculator_function/calculator_functions.c: 63: uin
      +                          t8 keypad_value = 0;
  7320   005668  0E00               	movlw	0
  7321   00566A  6E24               	movwf	get_third_number_and_third_operartion@keypad_value^0,c
  7322   00566C                     l8694:
  7323                           
  7324                           ;calculator_function/calculator_functions.c: 66:         ecu_keypad_get_value(&keypad,&k
      +                          eypad_value);
  7325   00566C  0ED6               	movlw	low _keypad
  7326   00566E  6E0B               	movwf	ecu_keypad_get_value@keypad^0,c
  7327   005670  0E01               	movlw	high _keypad
  7328   005672  6E0C               	movwf	(ecu_keypad_get_value@keypad+1)^0,c
  7329   005674  0E24               	movlw	low get_third_number_and_third_operartion@keypad_value
  7330   005676  6E0D               	movwf	ecu_keypad_get_value@value^0,c
  7331   005678  ECD4  F032         	call	_ecu_keypad_get_value	;wreg free
  7332   00567C                     
  7333                           ;calculator_function/calculator_functions.c: 67:         _delay((unsigned long)((150)*(8
      +                          000000ul/4000.0)));
  7334   00567C  0E02               	movlw	2
  7335   00567E  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7336   005680  0E86               	movlw	134
  7337   005682  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7338   005684  0E99               	movlw	153
  7339   005686                     u13437:
  7340   005686  2EE8               	decfsz	wreg,f,c
  7341   005688  D7FE               	bra	u13437
  7342   00568A  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7343   00568C  D7FC               	bra	u13437
  7344   00568E  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7345   005690  D7FA               	bra	u13437
  7346   005692  0000               	nop	
  7347   005694                     
  7348                           ;calculator_function/calculator_functions.c: 68:         }while((keypad_value == 0) );
  7349   005694  5024               	movf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7350   005696  B4D8               	btfsc	status,2,c
  7351   005698  EF50  F02B         	goto	u8691
  7352   00569C  EF52  F02B         	goto	u8690
  7353   0056A0                     u8691:
  7354   0056A0  EF36  F02B         	goto	l8694
  7355   0056A4                     u8690:
  7356   0056A4                     
  7357                           ;calculator_function/calculator_functions.c: 70:         if(keypad_value == '#'){
  7358   0056A4  0E23               	movlw	35
  7359   0056A6  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7360   0056A8  A4D8               	btfss	status,2,c
  7361   0056AA  EF59  F02B         	goto	u8701
  7362   0056AE  EF5B  F02B         	goto	u8700
  7363   0056B2                     u8701:
  7364   0056B2  EF7E  F02B         	goto	l8706
  7365   0056B6                     u8700:
  7366   0056B6                     
  7367                           ;calculator_function/calculator_functions.c: 71:            (*counter_num)--;
  7368   0056B6  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7369   0056B8  6ED9               	movwf	fsr2l,c
  7370   0056BA  6ADA               	clrf	fsr2h,c
  7371   0056BC  06DF               	decf	indf2,f,c
  7372                           
  7373                           ;calculator_function/calculator_functions.c: 72:            num[*counter_num] = '\0';
  7374   0056BE  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7375   0056C0  6ED9               	movwf	fsr2l,c
  7376   0056C2  6ADA               	clrf	fsr2h,c
  7377   0056C4  50DF               	movf	indf2,w,c
  7378   0056C6  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7379   0056C8  5022               	movf	??_get_third_number_and_third_operartion^0,w,c
  7380   0056CA  241D               	addwf	get_third_number_and_third_operartion@num^0,w,c
  7381   0056CC  6ED9               	movwf	fsr2l,c
  7382   0056CE  0E00               	movlw	0
  7383   0056D0  201E               	addwfc	(get_third_number_and_third_operartion@num+1)^0,w,c
  7384   0056D2  6EDA               	movwf	fsr2h,c
  7385   0056D4  6ADF               	clrf	indf2,c
  7386                           
  7387                           ;calculator_function/calculator_functions.c: 73:            (*lcd_counter)--;
  7388   0056D6  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7389   0056D8  6ED9               	movwf	fsr2l,c
  7390   0056DA  6ADA               	clrf	fsr2h,c
  7391   0056DC  06DF               	decf	indf2,f,c
  7392   0056DE                     
  7393                           ;calculator_function/calculator_functions.c: 74:            lcd_4bit_send_char_data_pos(
      +                          &lcd1,1,*lcd_counter,' ');
  7394   0056DE  0EF9               	movlw	low _lcd1
  7395   0056E0  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7396   0056E2  0E01               	movlw	1
  7397   0056E4  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7398   0056E6  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7399   0056E8  6ED9               	movwf	fsr2l,c
  7400   0056EA  6ADA               	clrf	fsr2h,c
  7401   0056EC  50DF               	movf	indf2,w,c
  7402   0056EE  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7403   0056F0  0E20               	movlw	32
  7404   0056F2  6E1B               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  7405   0056F4  ECC7  F03B         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7406                           
  7407                           ;calculator_function/calculator_functions.c: 76:         }
  7408   0056F8  EF36  F02B         	goto	l8694
  7409   0056FC                     l8706:
  7410                           
  7411                           ;calculator_function/calculator_functions.c: 78:             if(keypad_value == '+'||key
      +                          pad_value == '-'||keypad_value == '*'||keypad_value == '/'){
  7412   0056FC  0E2B               	movlw	43
  7413   0056FE  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7414   005700  B4D8               	btfsc	status,2,c
  7415   005702  EF85  F02B         	goto	u8711
  7416   005706  EF87  F02B         	goto	u8710
  7417   00570A                     u8711:
  7418   00570A  EFA2  F02B         	goto	l8714
  7419   00570E                     u8710:
  7420   00570E  0E2D               	movlw	45
  7421   005710  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7422   005712  B4D8               	btfsc	status,2,c
  7423   005714  EF8E  F02B         	goto	u8721
  7424   005718  EF90  F02B         	goto	u8720
  7425   00571C                     u8721:
  7426   00571C  EFA2  F02B         	goto	l8714
  7427   005720                     u8720:
  7428   005720  0E2A               	movlw	42
  7429   005722  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7430   005724  B4D8               	btfsc	status,2,c
  7431   005726  EF97  F02B         	goto	u8731
  7432   00572A  EF99  F02B         	goto	u8730
  7433   00572E                     u8731:
  7434   00572E  EFA2  F02B         	goto	l8714
  7435   005732                     u8730:
  7436   005732  0E2F               	movlw	47
  7437   005734  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7438   005736  A4D8               	btfss	status,2,c
  7439   005738  EFA0  F02B         	goto	u8741
  7440   00573C  EFA2  F02B         	goto	u8740
  7441   005740                     u8741:
  7442   005740  EFD6  F02B         	goto	l8720
  7443   005744                     u8740:
  7444   005744                     l8714:
  7445                           
  7446                           ;calculator_function/calculator_functions.c: 79:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"hint:max 2 operation!!");
  7447   005744  0EF9               	movlw	low _lcd1
  7448   005746  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7449   005748  0E04               	movlw	4
  7450   00574A  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7451   00574C  0E01               	movlw	1
  7452   00574E  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7453   005750  0E8D               	movlw	low STR_3
  7454   005752  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7455   005754  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7456   005756  A4D8               	btfss	status,2,c
  7457   005758  0E10               	movlw	high __smallconst
  7458   00575A  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7459   00575C  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  7460   005760                     
  7461                           ;calculator_function/calculator_functions.c: 80:                  _delay((unsigned long)
      +                          ((500)*(8000000ul/4000.0)));
  7462   005760  0E06               	movlw	6
  7463   005762  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7464   005764  0E13               	movlw	19
  7465   005766  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7466   005768  0EAE               	movlw	174
  7467   00576A                     u13447:
  7468   00576A  2EE8               	decfsz	wreg,f,c
  7469   00576C  D7FE               	bra	u13447
  7470   00576E  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7471   005770  D7FC               	bra	u13447
  7472   005772  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7473   005774  D7FA               	bra	u13447
  7474   005776                     
  7475                           ;calculator_function/calculator_functions.c: 81:                  lcd_4bit_send_string_p
      +                          os(&lcd1,4,1,"                           ");
  7476   005776  0EF9               	movlw	low _lcd1
  7477   005778  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7478   00577A  0E04               	movlw	4
  7479   00577C  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7480   00577E  0E01               	movlw	1
  7481   005780  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7482   005782  0E71               	movlw	low STR_4
  7483   005784  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7484   005786  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7485   005788  A4D8               	btfss	status,2,c
  7486   00578A  0E10               	movlw	high __smallconst
  7487   00578C  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7488   00578E  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  7489                           
  7490                           ;calculator_function/calculator_functions.c: 82:                  _delay((unsigned long)
      +                          ((500)*(8000000ul/4000.0)));
  7491   005792  0E06               	movlw	6
  7492   005794  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7493   005796  0E13               	movlw	19
  7494   005798  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7495   00579A  0EAE               	movlw	174
  7496   00579C                     u13457:
  7497   00579C  2EE8               	decfsz	wreg,f,c
  7498   00579E  D7FE               	bra	u13457
  7499   0057A0  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7500   0057A2  D7FC               	bra	u13457
  7501   0057A4  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7502   0057A6  D7FA               	bra	u13457
  7503                           
  7504                           ;calculator_function/calculator_functions.c: 83:             }
  7505   0057A8  EF36  F02B         	goto	l8694
  7506   0057AC                     l8720:
  7507   0057AC  0E3D               	movlw	61
  7508   0057AE  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7509   0057B0  A4D8               	btfss	status,2,c
  7510   0057B2  EFDD  F02B         	goto	u8751
  7511   0057B6  EFDF  F02B         	goto	u8750
  7512   0057BA                     u8751:
  7513   0057BA  EFF7  F02B         	goto	l8730
  7514   0057BE                     u8750:
  7515   0057BE                     
  7516                           ;calculator_function/calculator_functions.c: 85:                 *operation = keypad_val
      +                          ue;
  7517   0057BE  5021               	movf	get_third_number_and_third_operartion@operation^0,w,c
  7518   0057C0  6ED9               	movwf	fsr2l,c
  7519   0057C2  6ADA               	clrf	fsr2h,c
  7520   0057C4  C024  FFDF         	movff	get_third_number_and_third_operartion@keypad_value,indf2
  7521   0057C8                     
  7522                           ;calculator_function/calculator_functions.c: 86:                 lcd_4bit_send_char_data
      +                          _pos(&lcd1,1,*lcd_counter,keypad_value);
  7523   0057C8  0EF9               	movlw	low _lcd1
  7524   0057CA  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7525   0057CC  0E01               	movlw	1
  7526   0057CE  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7527   0057D0  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7528   0057D2  6ED9               	movwf	fsr2l,c
  7529   0057D4  6ADA               	clrf	fsr2h,c
  7530   0057D6  50DF               	movf	indf2,w,c
  7531   0057D8  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7532   0057DA  C024  F01B         	movff	get_third_number_and_third_operartion@keypad_value,lcd_4bit_send_char_data_pos@da
      +                          ta
  7533   0057DE  ECC7  F03B         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7534   0057E2                     
  7535                           ;calculator_function/calculator_functions.c: 87:                 (*lcd_counter)++;
  7536   0057E2  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7537   0057E4  6ED9               	movwf	fsr2l,c
  7538   0057E6  6ADA               	clrf	fsr2h,c
  7539   0057E8  2ADF               	incf	indf2,f,c
  7540                           
  7541                           ;calculator_function/calculator_functions.c: 88:                 break;
  7542   0057EA  EF5A  F02C         	goto	l87
  7543   0057EE                     l8730:
  7544                           
  7545                           ;calculator_function/calculator_functions.c: 91:                 if((*counter_num) < 4){
  7546   0057EE  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7547   0057F0  6ED9               	movwf	fsr2l,c
  7548   0057F2  6ADA               	clrf	fsr2h,c
  7549   0057F4  0E04               	movlw	4
  7550   0057F6  60DF               	cpfslt	indf2,c
  7551   0057F8  EF00  F02C         	goto	u8761
  7552   0057FC  EF02  F02C         	goto	u8760
  7553   005800                     u8761:
  7554   005800  EF26  F02C         	goto	l8740
  7555   005804                     u8760:
  7556   005804                     
  7557                           ;calculator_function/calculator_functions.c: 92:                     num[*counter_num] =
      +                           keypad_value;
  7558   005804  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7559   005806  6ED9               	movwf	fsr2l,c
  7560   005808  6ADA               	clrf	fsr2h,c
  7561   00580A  50DF               	movf	indf2,w,c
  7562   00580C  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7563   00580E  5022               	movf	??_get_third_number_and_third_operartion^0,w,c
  7564   005810  241D               	addwf	get_third_number_and_third_operartion@num^0,w,c
  7565   005812  6ED9               	movwf	fsr2l,c
  7566   005814  0E00               	movlw	0
  7567   005816  201E               	addwfc	(get_third_number_and_third_operartion@num+1)^0,w,c
  7568   005818  6EDA               	movwf	fsr2h,c
  7569   00581A  C024  FFDF         	movff	get_third_number_and_third_operartion@keypad_value,indf2
  7570   00581E                     
  7571                           ;calculator_function/calculator_functions.c: 93:                     lcd_4bit_send_char_
      +                          data_pos(&lcd1,1,*lcd_counter,keypad_value);
  7572   00581E  0EF9               	movlw	low _lcd1
  7573   005820  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7574   005822  0E01               	movlw	1
  7575   005824  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7576   005826  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7577   005828  6ED9               	movwf	fsr2l,c
  7578   00582A  6ADA               	clrf	fsr2h,c
  7579   00582C  50DF               	movf	indf2,w,c
  7580   00582E  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7581   005830  C024  F01B         	movff	get_third_number_and_third_operartion@keypad_value,lcd_4bit_send_char_data_pos@da
      +                          ta
  7582   005834  ECC7  F03B         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7583   005838                     
  7584                           ;calculator_function/calculator_functions.c: 94:                     (*lcd_counter)++;
  7585   005838  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7586   00583A  6ED9               	movwf	fsr2l,c
  7587   00583C  6ADA               	clrf	fsr2h,c
  7588   00583E  2ADF               	incf	indf2,f,c
  7589   005840                     
  7590                           ;calculator_function/calculator_functions.c: 95:                     (*counter_num)++;
  7591   005840  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7592   005842  6ED9               	movwf	fsr2l,c
  7593   005844  6ADA               	clrf	fsr2h,c
  7594   005846  2ADF               	incf	indf2,f,c
  7595                           
  7596                           ;calculator_function/calculator_functions.c: 96:                 }
  7597   005848  EF36  F02B         	goto	l8694
  7598   00584C                     l8740:
  7599                           
  7600                           ;calculator_function/calculator_functions.c: 98:                     lcd_4bit_send_strin
      +                          g_pos(&lcd1,4,1,"hint:max 4 digits");
  7601   00584C  0EF9               	movlw	low _lcd1
  7602   00584E  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7603   005850  0E04               	movlw	4
  7604   005852  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7605   005854  0E01               	movlw	1
  7606   005856  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7607   005858  0EA4               	movlw	low STR_1
  7608   00585A  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7609   00585C  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7610   00585E  A4D8               	btfss	status,2,c
  7611   005860  0E10               	movlw	high __smallconst
  7612   005862  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7613   005864  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  7614   005868                     
  7615                           ;calculator_function/calculator_functions.c: 99:                      _delay((unsigned l
      +                          ong)((500)*(8000000ul/4000.0)));
  7616   005868  0E06               	movlw	6
  7617   00586A  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7618   00586C  0E13               	movlw	19
  7619   00586E  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7620   005870  0EAE               	movlw	174
  7621   005872                     u13467:
  7622   005872  2EE8               	decfsz	wreg,f,c
  7623   005874  D7FE               	bra	u13467
  7624   005876  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7625   005878  D7FC               	bra	u13467
  7626   00587A  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7627   00587C  D7FA               	bra	u13467
  7628   00587E                     
  7629                           ;calculator_function/calculator_functions.c: 100:                      lcd_4bit_send_str
      +                          ing_pos(&lcd1,4,1,"                  ");
  7630   00587E  0EF9               	movlw	low _lcd1
  7631   005880  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7632   005882  0E04               	movlw	4
  7633   005884  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7634   005886  0E01               	movlw	1
  7635   005888  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7636   00588A  0E7A               	movlw	low (STR_4+9)
  7637   00588C  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7638   00588E  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7639   005890  A4D8               	btfss	status,2,c
  7640   005892  0E10               	movlw	high __smallconst
  7641   005894  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7642   005896  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  7643                           
  7644                           ;calculator_function/calculator_functions.c: 101:                      _delay((unsigned 
      +                          long)((500)*(8000000ul/4000.0)));
  7645   00589A  0E06               	movlw	6
  7646   00589C  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7647   00589E  0E13               	movlw	19
  7648   0058A0  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7649   0058A2  0EAE               	movlw	174
  7650   0058A4                     u13477:
  7651   0058A4  2EE8               	decfsz	wreg,f,c
  7652   0058A6  D7FE               	bra	u13477
  7653   0058A8  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7654   0058AA  D7FC               	bra	u13477
  7655   0058AC  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7656   0058AE  D7FA               	bra	u13477
  7657   0058B0  EF36  F02B         	goto	l8694
  7658   0058B4                     l87:
  7659   0058B4  0012               	return		;funcret
  7660   0058B6                     __end_of_get_third_number_and_third_operartion:
  7661                           	callstack 0
  7662                           
  7663 ;; *************** function _get_number_and_operartion *****************
  7664 ;; Defined at:
  7665 ;;		line 17 in file "calculator_function/calculator_functions.c"
  7666 ;; Parameters:    Size  Location     Type
  7667 ;;  num             2   28[COMRAM] PTR unsigned char 
  7668 ;;		 -> num2(4), num1(4), 
  7669 ;;  counter_num     1   30[COMRAM] PTR unsigned char 
  7670 ;;		 -> counter_num2(1), counter_num1(1), 
  7671 ;;  lcd_counter     1   31[COMRAM] PTR unsigned char 
  7672 ;;		 -> lcd_counter(1), 
  7673 ;;  operation       1   32[COMRAM] PTR unsigned char 
  7674 ;;		 -> operation2(1), operation(1), 
  7675 ;; Auto vars:     Size  Location     Type
  7676 ;;  keypad_value    1   35[COMRAM] unsigned char 
  7677 ;; Return value:  Size  Location     Type
  7678 ;;                  1    wreg      void 
  7679 ;; Registers used:
  7680 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7681 ;; Tracked objects:
  7682 ;;		On entry : 0/0
  7683 ;;		On exit  : 0/0
  7684 ;;		Unchanged: 0/0
  7685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7686 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7687 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7688 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7689 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7690 ;;Total ram usage:        8 bytes
  7691 ;; Hardware stack levels used: 1
  7692 ;; Hardware stack levels required when called: 5
  7693 ;; This function calls:
  7694 ;;		_ecu_keypad_get_value
  7695 ;;		_lcd_4bit_send_char_data_pos
  7696 ;;		_lcd_4bit_send_string_pos
  7697 ;; This function is called by:
  7698 ;;		_main
  7699 ;; This function uses a non-reentrant model
  7700 ;;
  7701                           
  7702                           	psect	text31
  7703   005CFC                     __ptext31:
  7704                           	callstack 0
  7705   005CFC                     _get_number_and_operartion:
  7706                           	callstack 25
  7707   005CFC                     
  7708                           ;calculator_function/calculator_functions.c: 17: void get_number_and_operartion(uint8 *n
      +                          um,uint8 *counter_num,;calculator_function/calculator_functions.c: 18:                  
      +                                        uint8 *lcd_counter,uint8 *operation);calculator_function/calculator_functi
      +                          ons.c: 19: {;calculator_function/calculator_functions.c: 20: uint8 keypad_value = 0;
  7709   005CFC  0E00               	movlw	0
  7710   005CFE  6E24               	movwf	get_number_and_operartion@keypad_value^0,c
  7711   005D00                     l8648:
  7712                           
  7713                           ;calculator_function/calculator_functions.c: 23:         ecu_keypad_get_value(&keypad,&k
      +                          eypad_value);
  7714   005D00  0ED6               	movlw	low _keypad
  7715   005D02  6E0B               	movwf	ecu_keypad_get_value@keypad^0,c
  7716   005D04  0E01               	movlw	high _keypad
  7717   005D06  6E0C               	movwf	(ecu_keypad_get_value@keypad+1)^0,c
  7718   005D08  0E24               	movlw	low get_number_and_operartion@keypad_value
  7719   005D0A  6E0D               	movwf	ecu_keypad_get_value@value^0,c
  7720   005D0C  ECD4  F032         	call	_ecu_keypad_get_value	;wreg free
  7721   005D10                     
  7722                           ;calculator_function/calculator_functions.c: 24:         _delay((unsigned long)((150)*(8
      +                          000000ul/4000.0)));
  7723   005D10  0E02               	movlw	2
  7724   005D12  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7725   005D14  0E86               	movlw	134
  7726   005D16  6E22               	movwf	??_get_number_and_operartion^0,c
  7727   005D18  0E99               	movlw	153
  7728   005D1A                     u13487:
  7729   005D1A  2EE8               	decfsz	wreg,f,c
  7730   005D1C  D7FE               	bra	u13487
  7731   005D1E  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7732   005D20  D7FC               	bra	u13487
  7733   005D22  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7734   005D24  D7FA               	bra	u13487
  7735   005D26  0000               	nop	
  7736   005D28                     
  7737                           ;calculator_function/calculator_functions.c: 25:         }while((keypad_value == 0) );
  7738   005D28  5024               	movf	get_number_and_operartion@keypad_value^0,w,c
  7739   005D2A  B4D8               	btfsc	status,2,c
  7740   005D2C  EF9A  F02E         	goto	u8611
  7741   005D30  EF9C  F02E         	goto	u8610
  7742   005D34                     u8611:
  7743   005D34  EF80  F02E         	goto	l8648
  7744   005D38                     u8610:
  7745   005D38                     
  7746                           ;calculator_function/calculator_functions.c: 27:         if(keypad_value == '#'){
  7747   005D38  0E23               	movlw	35
  7748   005D3A  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7749   005D3C  A4D8               	btfss	status,2,c
  7750   005D3E  EFA3  F02E         	goto	u8621
  7751   005D42  EFA5  F02E         	goto	u8620
  7752   005D46                     u8621:
  7753   005D46  EFC8  F02E         	goto	l8660
  7754   005D4A                     u8620:
  7755   005D4A                     
  7756                           ;calculator_function/calculator_functions.c: 28:            (*counter_num)--;
  7757   005D4A  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7758   005D4C  6ED9               	movwf	fsr2l,c
  7759   005D4E  6ADA               	clrf	fsr2h,c
  7760   005D50  06DF               	decf	indf2,f,c
  7761                           
  7762                           ;calculator_function/calculator_functions.c: 29:            num[*counter_num] = '\0';
  7763   005D52  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7764   005D54  6ED9               	movwf	fsr2l,c
  7765   005D56  6ADA               	clrf	fsr2h,c
  7766   005D58  50DF               	movf	indf2,w,c
  7767   005D5A  6E22               	movwf	??_get_number_and_operartion^0,c
  7768   005D5C  5022               	movf	??_get_number_and_operartion^0,w,c
  7769   005D5E  241D               	addwf	get_number_and_operartion@num^0,w,c
  7770   005D60  6ED9               	movwf	fsr2l,c
  7771   005D62  0E00               	movlw	0
  7772   005D64  201E               	addwfc	(get_number_and_operartion@num+1)^0,w,c
  7773   005D66  6EDA               	movwf	fsr2h,c
  7774   005D68  6ADF               	clrf	indf2,c
  7775                           
  7776                           ;calculator_function/calculator_functions.c: 30:            (*lcd_counter)--;
  7777   005D6A  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7778   005D6C  6ED9               	movwf	fsr2l,c
  7779   005D6E  6ADA               	clrf	fsr2h,c
  7780   005D70  06DF               	decf	indf2,f,c
  7781   005D72                     
  7782                           ;calculator_function/calculator_functions.c: 31:            lcd_4bit_send_char_data_pos(
      +                          &lcd1,1,*lcd_counter,' ');
  7783   005D72  0EF9               	movlw	low _lcd1
  7784   005D74  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7785   005D76  0E01               	movlw	1
  7786   005D78  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7787   005D7A  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7788   005D7C  6ED9               	movwf	fsr2l,c
  7789   005D7E  6ADA               	clrf	fsr2h,c
  7790   005D80  50DF               	movf	indf2,w,c
  7791   005D82  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7792   005D84  0E20               	movlw	32
  7793   005D86  6E1B               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  7794   005D88  ECC7  F03B         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7795                           
  7796                           ;calculator_function/calculator_functions.c: 33:         }
  7797   005D8C  EF80  F02E         	goto	l8648
  7798   005D90                     l8660:
  7799                           
  7800                           ;calculator_function/calculator_functions.c: 35:             if(keypad_value == '+'||key
      +                          pad_value == '-'||keypad_value == '*'||keypad_value == '/'||keypad_value == '='){
  7801   005D90  0E2B               	movlw	43
  7802   005D92  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7803   005D94  B4D8               	btfsc	status,2,c
  7804   005D96  EFCF  F02E         	goto	u8631
  7805   005D9A  EFD1  F02E         	goto	u8630
  7806   005D9E                     u8631:
  7807   005D9E  EFF5  F02E         	goto	l8670
  7808   005DA2                     u8630:
  7809   005DA2  0E2D               	movlw	45
  7810   005DA4  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7811   005DA6  B4D8               	btfsc	status,2,c
  7812   005DA8  EFD8  F02E         	goto	u8641
  7813   005DAC  EFDA  F02E         	goto	u8640
  7814   005DB0                     u8641:
  7815   005DB0  EFF5  F02E         	goto	l8670
  7816   005DB4                     u8640:
  7817   005DB4  0E2A               	movlw	42
  7818   005DB6  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7819   005DB8  B4D8               	btfsc	status,2,c
  7820   005DBA  EFE1  F02E         	goto	u8651
  7821   005DBE  EFE3  F02E         	goto	u8650
  7822   005DC2                     u8651:
  7823   005DC2  EFF5  F02E         	goto	l8670
  7824   005DC6                     u8650:
  7825   005DC6  0E2F               	movlw	47
  7826   005DC8  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7827   005DCA  B4D8               	btfsc	status,2,c
  7828   005DCC  EFEA  F02E         	goto	u8661
  7829   005DD0  EFEC  F02E         	goto	u8660
  7830   005DD4                     u8661:
  7831   005DD4  EFF5  F02E         	goto	l8670
  7832   005DD8                     u8660:
  7833   005DD8  0E3D               	movlw	61
  7834   005DDA  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7835   005DDC  A4D8               	btfss	status,2,c
  7836   005DDE  EFF3  F02E         	goto	u8671
  7837   005DE2  EFF5  F02E         	goto	u8670
  7838   005DE6                     u8671:
  7839   005DE6  EF0D  F02F         	goto	l8676
  7840   005DEA                     u8670:
  7841   005DEA                     l8670:
  7842                           
  7843                           ;calculator_function/calculator_functions.c: 36:                 *operation = keypad_val
      +                          ue;
  7844   005DEA  5021               	movf	get_number_and_operartion@operation^0,w,c
  7845   005DEC  6ED9               	movwf	fsr2l,c
  7846   005DEE  6ADA               	clrf	fsr2h,c
  7847   005DF0  C024  FFDF         	movff	get_number_and_operartion@keypad_value,indf2
  7848   005DF4                     
  7849                           ;calculator_function/calculator_functions.c: 37:                 lcd_4bit_send_char_data
      +                          _pos(&lcd1,1,*lcd_counter,keypad_value);
  7850   005DF4  0EF9               	movlw	low _lcd1
  7851   005DF6  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7852   005DF8  0E01               	movlw	1
  7853   005DFA  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7854   005DFC  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7855   005DFE  6ED9               	movwf	fsr2l,c
  7856   005E00  6ADA               	clrf	fsr2h,c
  7857   005E02  50DF               	movf	indf2,w,c
  7858   005E04  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7859   005E06  C024  F01B         	movff	get_number_and_operartion@keypad_value,lcd_4bit_send_char_data_pos@data
  7860   005E0A  ECC7  F03B         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7861   005E0E                     
  7862                           ;calculator_function/calculator_functions.c: 38:                 (*lcd_counter)++;
  7863   005E0E  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7864   005E10  6ED9               	movwf	fsr2l,c
  7865   005E12  6ADA               	clrf	fsr2h,c
  7866   005E14  2ADF               	incf	indf2,f,c
  7867                           
  7868                           ;calculator_function/calculator_functions.c: 39:                 break;
  7869   005E16  EF70  F02F         	goto	l69
  7870   005E1A                     l8676:
  7871                           
  7872                           ;calculator_function/calculator_functions.c: 41:             if((*counter_num) < 4){
  7873   005E1A  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7874   005E1C  6ED9               	movwf	fsr2l,c
  7875   005E1E  6ADA               	clrf	fsr2h,c
  7876   005E20  0E04               	movlw	4
  7877   005E22  60DF               	cpfslt	indf2,c
  7878   005E24  EF16  F02F         	goto	u8681
  7879   005E28  EF18  F02F         	goto	u8680
  7880   005E2C                     u8681:
  7881   005E2C  EF3C  F02F         	goto	l8686
  7882   005E30                     u8680:
  7883   005E30                     
  7884                           ;calculator_function/calculator_functions.c: 42:                     num[*counter_num] =
      +                           keypad_value;
  7885   005E30  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7886   005E32  6ED9               	movwf	fsr2l,c
  7887   005E34  6ADA               	clrf	fsr2h,c
  7888   005E36  50DF               	movf	indf2,w,c
  7889   005E38  6E22               	movwf	??_get_number_and_operartion^0,c
  7890   005E3A  5022               	movf	??_get_number_and_operartion^0,w,c
  7891   005E3C  241D               	addwf	get_number_and_operartion@num^0,w,c
  7892   005E3E  6ED9               	movwf	fsr2l,c
  7893   005E40  0E00               	movlw	0
  7894   005E42  201E               	addwfc	(get_number_and_operartion@num+1)^0,w,c
  7895   005E44  6EDA               	movwf	fsr2h,c
  7896   005E46  C024  FFDF         	movff	get_number_and_operartion@keypad_value,indf2
  7897   005E4A                     
  7898                           ;calculator_function/calculator_functions.c: 43:                     lcd_4bit_send_char_
      +                          data_pos(&lcd1,1,*lcd_counter,keypad_value);
  7899   005E4A  0EF9               	movlw	low _lcd1
  7900   005E4C  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7901   005E4E  0E01               	movlw	1
  7902   005E50  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7903   005E52  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7904   005E54  6ED9               	movwf	fsr2l,c
  7905   005E56  6ADA               	clrf	fsr2h,c
  7906   005E58  50DF               	movf	indf2,w,c
  7907   005E5A  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7908   005E5C  C024  F01B         	movff	get_number_and_operartion@keypad_value,lcd_4bit_send_char_data_pos@data
  7909   005E60  ECC7  F03B         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7910   005E64                     
  7911                           ;calculator_function/calculator_functions.c: 44:                     (*lcd_counter)++;
  7912   005E64  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7913   005E66  6ED9               	movwf	fsr2l,c
  7914   005E68  6ADA               	clrf	fsr2h,c
  7915   005E6A  2ADF               	incf	indf2,f,c
  7916   005E6C                     
  7917                           ;calculator_function/calculator_functions.c: 45:                     (*counter_num)++;
  7918   005E6C  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7919   005E6E  6ED9               	movwf	fsr2l,c
  7920   005E70  6ADA               	clrf	fsr2h,c
  7921   005E72  2ADF               	incf	indf2,f,c
  7922                           
  7923                           ;calculator_function/calculator_functions.c: 46:                 }
  7924   005E74  EF80  F02E         	goto	l8648
  7925   005E78                     l8686:
  7926                           
  7927                           ;calculator_function/calculator_functions.c: 48:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"hint:max 4 digits");
  7928   005E78  0EF9               	movlw	low _lcd1
  7929   005E7A  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7930   005E7C  0E04               	movlw	4
  7931   005E7E  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7932   005E80  0E01               	movlw	1
  7933   005E82  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7934   005E84  0EA4               	movlw	low STR_1
  7935   005E86  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7936   005E88  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7937   005E8A  A4D8               	btfss	status,2,c
  7938   005E8C  0E10               	movlw	high __smallconst
  7939   005E8E  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7940   005E90  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  7941   005E94                     
  7942                           ;calculator_function/calculator_functions.c: 49:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7943   005E94  0E06               	movlw	6
  7944   005E96  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7945   005E98  0E13               	movlw	19
  7946   005E9A  6E22               	movwf	??_get_number_and_operartion^0,c
  7947   005E9C  0EAE               	movlw	174
  7948   005E9E                     u13497:
  7949   005E9E  2EE8               	decfsz	wreg,f,c
  7950   005EA0  D7FE               	bra	u13497
  7951   005EA2  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7952   005EA4  D7FC               	bra	u13497
  7953   005EA6  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7954   005EA8  D7FA               	bra	u13497
  7955   005EAA                     
  7956                           ;calculator_function/calculator_functions.c: 50:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"                  ");
  7957   005EAA  0EF9               	movlw	low _lcd1
  7958   005EAC  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7959   005EAE  0E04               	movlw	4
  7960   005EB0  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7961   005EB2  0E01               	movlw	1
  7962   005EB4  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7963   005EB6  0E7A               	movlw	low (STR_4+9)
  7964   005EB8  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7965   005EBA  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7966   005EBC  A4D8               	btfss	status,2,c
  7967   005EBE  0E10               	movlw	high __smallconst
  7968   005EC0  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7969   005EC2  ECD3  F038         	call	_lcd_4bit_send_string_pos	;wreg free
  7970                           
  7971                           ;calculator_function/calculator_functions.c: 51:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7972   005EC6  0E06               	movlw	6
  7973   005EC8  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7974   005ECA  0E13               	movlw	19
  7975   005ECC  6E22               	movwf	??_get_number_and_operartion^0,c
  7976   005ECE  0EAE               	movlw	174
  7977   005ED0                     u13507:
  7978   005ED0  2EE8               	decfsz	wreg,f,c
  7979   005ED2  D7FE               	bra	u13507
  7980   005ED4  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7981   005ED6  D7FC               	bra	u13507
  7982   005ED8  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7983   005EDA  D7FA               	bra	u13507
  7984   005EDC  EF80  F02E         	goto	l8648
  7985   005EE0                     l69:
  7986   005EE0  0012               	return		;funcret
  7987   005EE2                     __end_of_get_number_and_operartion:
  7988                           	callstack 0
  7989                           
  7990 ;; *************** function _lcd_4bit_send_string_pos *****************
  7991 ;; Defined at:
  7992 ;;		line 172 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  7993 ;; Parameters:    Size  Location     Type
  7994 ;;  lcd             1   23[COMRAM] PTR const struct .
  7995 ;;		 -> lcd1(6), 
  7996 ;;  row             1   24[COMRAM] unsigned char 
  7997 ;;  column          1   25[COMRAM] unsigned char 
  7998 ;;  str             2   26[COMRAM] PTR unsigned char 
  7999 ;;		 -> STR_11(14), send_the_result_to_LCD@result_str(80), STR_6(19), STR_5(18), 
  8000 ;;		 -> STR_4(28), STR_3(23), STR_2(19), STR_1(18), 
  8001 ;; Auto vars:     Size  Location     Type
  8002 ;;  ret             1    0        unsigned char 
  8003 ;; Return value:  Size  Location     Type
  8004 ;;                  1    wreg      unsigned char 
  8005 ;; Registers used:
  8006 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8007 ;; Tracked objects:
  8008 ;;		On entry : 0/0
  8009 ;;		On exit  : 0/0
  8010 ;;		Unchanged: 0/0
  8011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8012 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8013 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8014 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8015 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8016 ;;Total ram usage:        5 bytes
  8017 ;; Hardware stack levels used: 1
  8018 ;; Hardware stack levels required when called: 4
  8019 ;; This function calls:
  8020 ;;		_lcd_4bit_send_char_data
  8021 ;;		_lcd_4bit_set_curser
  8022 ;; This function is called by:
  8023 ;;		_get_number_and_operartion
  8024 ;;		_get_third_number_and_third_operartion
  8025 ;;		_send_the_result_to_LCD
  8026 ;;		_main
  8027 ;; This function uses a non-reentrant model
  8028 ;;
  8029                           
  8030                           	psect	text32
  8031   0071A6                     __ptext32:
  8032                           	callstack 0
  8033   0071A6                     _lcd_4bit_send_string_pos:
  8034                           	callstack 25
  8035   0071A6                     
  8036                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 174:     if(((void*)0) == lcd)
  8037   0071A6  5018               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  8038   0071A8  A4D8               	btfss	status,2,c
  8039   0071AA  EFD9  F038         	goto	u8561
  8040   0071AE  EFDB  F038         	goto	u8560
  8041   0071B2                     u8561:
  8042   0071B2  EFDD  F038         	goto	l8620
  8043   0071B6                     u8560:
  8044   0071B6                     
  8045                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 177:     }
  8046   0071B6  EF18  F039         	goto	l218
  8047   0071BA                     l8620:
  8048   0071BA  C018  F012         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_curser@lcd
  8049   0071BE  C019  F013         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_curser@row
  8050   0071C2  C01A  F014         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_curser@column
  8051   0071C6  EC40  F038         	call	_lcd_4bit_set_curser	;wreg free
  8052                           
  8053                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 181:         while(*str)
  8054   0071CA  EFFF  F038         	goto	l8626
  8055   0071CE                     l8622:
  8056   0071CE  C018  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  8057   0071D2  C01B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8058   0071D6  C01C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8059   0071DA  0E00               	movlw	low (__smallconst shr (0+16))
  8060   0071DC  6EF8               	movwf	tblptru,c
  8061   0071DE  0E0F               	movlw	(high __ramtop+-1)
  8062   0071E0  64F7               	cpfsgt	tblptrh,c
  8063   0071E2  D003               	bra	u8577
  8064   0071E4  0008               	tblrd		*
  8065   0071E6  50F5               	movf	tablat,w,c
  8066   0071E8  D005               	bra	u8570
  8067   0071EA                     u8577:
  8068   0071EA  CFF6 FFE9          	movff	tblptrl,fsr0l
  8069   0071EE  CFF7 FFEA          	movff	tblptrh,fsr0h
  8070   0071F2  50EF               	movf	indf0,w,c
  8071   0071F4                     u8570:
  8072   0071F4  6E10               	movwf	lcd_4bit_send_char_data@data^0,c
  8073   0071F6  ECF2  F039         	call	_lcd_4bit_send_char_data	;wreg free
  8074   0071FA  4A1B               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  8075   0071FC  2A1C               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  8076   0071FE                     l8626:
  8077                           
  8078                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 181:         while(*str)
  8079   0071FE  C01B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8080   007202  C01C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8081   007206  0E00               	movlw	low (__smallconst shr (0+16))
  8082   007208  6EF8               	movwf	tblptru,c
  8083   00720A  0E0F               	movlw	(high __ramtop+-1)
  8084   00720C  64F7               	cpfsgt	tblptrh,c
  8085   00720E  D003               	bra	u8587
  8086   007210  0008               	tblrd		*
  8087   007212  50F5               	movf	tablat,w,c
  8088   007214  D005               	bra	u8580
  8089   007216                     u8587:
  8090   007216  CFF6 FFE9          	movff	tblptrl,fsr0l
  8091   00721A  CFF7 FFEA          	movff	tblptrh,fsr0h
  8092   00721E  50EF               	movf	indf0,w,c
  8093   007220                     u8580:
  8094   007220  0900               	iorlw	0
  8095   007222  A4D8               	btfss	status,2,c
  8096   007224  EF16  F039         	goto	u8591
  8097   007228  EF18  F039         	goto	u8590
  8098   00722C                     u8591:
  8099   00722C  EFE7  F038         	goto	l8622
  8100   007230                     u8590:
  8101   007230                     l218:
  8102   007230  0012               	return		;funcret
  8103   007232                     __end_of_lcd_4bit_send_string_pos:
  8104                           	callstack 0
  8105                           
  8106 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  8107 ;; Defined at:
  8108 ;;		line 125 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8109 ;; Parameters:    Size  Location     Type
  8110 ;;  lcd             1   23[COMRAM] PTR const struct .
  8111 ;;		 -> lcd1(6), 
  8112 ;;  row             1   24[COMRAM] unsigned char 
  8113 ;;  column          1   25[COMRAM] unsigned char 
  8114 ;;  data            1   26[COMRAM] unsigned char 
  8115 ;; Auto vars:     Size  Location     Type
  8116 ;;  ret             1   27[COMRAM] unsigned char 
  8117 ;; Return value:  Size  Location     Type
  8118 ;;                  1    wreg      unsigned char 
  8119 ;; Registers used:
  8120 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8121 ;; Tracked objects:
  8122 ;;		On entry : 0/0
  8123 ;;		On exit  : 0/0
  8124 ;;		Unchanged: 0/0
  8125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8126 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8127 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8128 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8129 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8130 ;;Total ram usage:        5 bytes
  8131 ;; Hardware stack levels used: 1
  8132 ;; Hardware stack levels required when called: 4
  8133 ;; This function calls:
  8134 ;;		_lcd_4bit_send_char_data
  8135 ;;		_lcd_4bit_set_curser
  8136 ;; This function is called by:
  8137 ;;		_get_number_and_operartion
  8138 ;;		_get_third_number_and_third_operartion
  8139 ;;		_lcd_4bit_send_custome_char
  8140 ;; This function uses a non-reentrant model
  8141 ;;
  8142                           
  8143                           	psect	text33
  8144   00778E                     __ptext33:
  8145                           	callstack 0
  8146   00778E                     _lcd_4bit_send_char_data_pos:
  8147                           	callstack 25
  8148   00778E                     
  8149                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 127:     if(((void*)0) == lcd)
  8150   00778E  5018               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  8151   007790  A4D8               	btfss	status,2,c
  8152   007792  EFCD  F03B         	goto	u8551
  8153   007796  EFCF  F03B         	goto	u8550
  8154   00779A                     u8551:
  8155   00779A  EFD3  F03B         	goto	l8610
  8156   00779E                     u8550:
  8157   00779E                     
  8158                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 128:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 129:      
      +                             ret = (STD_ReturnType)0x00;
  8159   00779E  0E00               	movlw	0
  8160   0077A0  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8161                           
  8162                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 130:     }
  8163   0077A2  EFE3  F03B         	goto	l8612
  8164   0077A6                     l8610:
  8165                           
  8166                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 132:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 133:      
      +                             ret = lcd_4bit_set_curser(lcd,row,column);
  8167   0077A6  C018  F012         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_curser@lcd
  8168   0077AA  C019  F013         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_curser@row
  8169   0077AE  C01A  F014         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_curser@column
  8170   0077B2  EC40  F038         	call	_lcd_4bit_set_curser	;wreg free
  8171   0077B6  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8172                           
  8173                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 134:         ret = lcd_4bit_send_char_data(lcd,data);
  8174   0077B8  C018  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  8175   0077BC  C01B  F010         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  8176   0077C0  ECF2  F039         	call	_lcd_4bit_send_char_data	;wreg free
  8177   0077C4  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8178   0077C6                     l8612:
  8179                           
  8180                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 136:      return ret;
  8181   0077C6  501C               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  8182   0077C8  0012               	return		;funcret
  8183   0077CA                     __end_of_lcd_4bit_send_char_data_pos:
  8184                           	callstack 0
  8185                           
  8186 ;; *************** function _lcd_4bit_set_curser *****************
  8187 ;; Defined at:
  8188 ;;		line 568 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8189 ;; Parameters:    Size  Location     Type
  8190 ;;  lcd             1   17[COMRAM] PTR const struct .
  8191 ;;		 -> lcd1(6), 
  8192 ;;  row             1   18[COMRAM] unsigned char 
  8193 ;;  column          1   19[COMRAM] unsigned char 
  8194 ;; Auto vars:     Size  Location     Type
  8195 ;;  ret             1   22[COMRAM] unsigned char 
  8196 ;; Return value:  Size  Location     Type
  8197 ;;                  1    wreg      unsigned char 
  8198 ;; Registers used:
  8199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8200 ;; Tracked objects:
  8201 ;;		On entry : 0/0
  8202 ;;		On exit  : 0/0
  8203 ;;		Unchanged: 0/0
  8204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8205 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8207 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8209 ;;Total ram usage:        6 bytes
  8210 ;; Hardware stack levels used: 1
  8211 ;; Hardware stack levels required when called: 3
  8212 ;; This function calls:
  8213 ;;		_lcd_4bit_send_command
  8214 ;; This function is called by:
  8215 ;;		_lcd_4bit_send_char_data_pos
  8216 ;;		_lcd_4bit_send_string_pos
  8217 ;; This function uses a non-reentrant model
  8218 ;;
  8219                           
  8220                           	psect	text34
  8221   007080                     __ptext34:
  8222                           	callstack 0
  8223   007080                     _lcd_4bit_set_curser:
  8224                           	callstack 25
  8225   007080                     
  8226                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 569: STD_ReturnType ret = (STD_ReturnType)0x01;
  8227   007080  0E01               	movlw	1
  8228   007082  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8229   007084                     
  8230                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 570: column--;
  8231   007084  0614               	decf	lcd_4bit_set_curser@column^0,f,c
  8232                           
  8233                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 571: switch(row){
  8234   007086  EF6D  F038         	goto	l8596
  8235   00708A                     l8588:
  8236   00708A  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8237   00708E  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8238   007090  0F80               	addlw	128
  8239   007092  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8240   007094  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  8241   007098  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8242   00709A  EF8A  F038         	goto	l8598
  8243   00709E                     l8590:
  8244   00709E  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8245   0070A2  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8246   0070A4  0FC0               	addlw	192
  8247   0070A6  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8248   0070A8  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  8249   0070AC  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8250   0070AE  EF8A  F038         	goto	l8598
  8251   0070B2                     l8592:
  8252   0070B2  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8253   0070B6  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8254   0070B8  0F94               	addlw	148
  8255   0070BA  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8256   0070BC  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  8257   0070C0  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8258   0070C2  EF8A  F038         	goto	l8598
  8259   0070C6                     l8594:
  8260   0070C6  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8261   0070CA  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8262   0070CC  0FD4               	addlw	212
  8263   0070CE  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8264   0070D0  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
  8265   0070D4  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8266   0070D6  EF8A  F038         	goto	l8598
  8267   0070DA                     l8596:
  8268   0070DA  5013               	movf	lcd_4bit_set_curser@row^0,w,c
  8269   0070DC  6E15               	movwf	??_lcd_4bit_set_curser^0,c
  8270   0070DE  6A16               	clrf	(??_lcd_4bit_set_curser+1)^0,c
  8271                           
  8272                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8273                           ; Switch size 1, requested type "simple"
  8274                           ; Number of cases is 1, Range of values is 0 to 0
  8275                           ; switch strategies available:
  8276                           ; Name         Instructions Cycles
  8277                           ; simple_byte            4     3 (average)
  8278                           ;	Chosen strategy is simple_byte
  8279   0070E0  5016               	movf	(??_lcd_4bit_set_curser+1)^0,w,c
  8280   0070E2  0A00               	xorlw	0	; case 0
  8281   0070E4  B4D8               	btfsc	status,2,c
  8282   0070E6  EF77  F038         	goto	l13254
  8283   0070EA  EF8A  F038         	goto	l8598
  8284   0070EE                     l13254:
  8285                           
  8286                           ; Switch size 1, requested type "simple"
  8287                           ; Number of cases is 4, Range of values is 1 to 4
  8288                           ; switch strategies available:
  8289                           ; Name         Instructions Cycles
  8290                           ; simple_byte           13     7 (average)
  8291                           ;	Chosen strategy is simple_byte
  8292   0070EE  5015               	movf	??_lcd_4bit_set_curser^0,w,c
  8293   0070F0  0A01               	xorlw	1	; case 1
  8294   0070F2  B4D8               	btfsc	status,2,c
  8295   0070F4  EF45  F038         	goto	l8588
  8296   0070F8  0A03               	xorlw	3	; case 2
  8297   0070FA  B4D8               	btfsc	status,2,c
  8298   0070FC  EF4F  F038         	goto	l8590
  8299   007100  0A01               	xorlw	1	; case 3
  8300   007102  B4D8               	btfsc	status,2,c
  8301   007104  EF59  F038         	goto	l8592
  8302   007108  0A07               	xorlw	7	; case 4
  8303   00710A  B4D8               	btfsc	status,2,c
  8304   00710C  EF63  F038         	goto	l8594
  8305   007110  EF8A  F038         	goto	l8598
  8306   007114                     l8598:
  8307                           
  8308                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 583: return ret;
  8309   007114  5017               	movf	lcd_4bit_set_curser@ret^0,w,c
  8310   007116  0012               	return		;funcret
  8311   007118                     __end_of_lcd_4bit_set_curser:
  8312                           	callstack 0
  8313                           
  8314 ;; *************** function _lcd_4bit_send_char_data *****************
  8315 ;; Defined at:
  8316 ;;		line 94 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8317 ;; Parameters:    Size  Location     Type
  8318 ;;  lcd             1   14[COMRAM] PTR const struct .
  8319 ;;		 -> lcd1(6), 
  8320 ;;  data            1   15[COMRAM] unsigned char 
  8321 ;; Auto vars:     Size  Location     Type
  8322 ;;  ret             1   16[COMRAM] unsigned char 
  8323 ;; Return value:  Size  Location     Type
  8324 ;;                  1    wreg      unsigned char 
  8325 ;; Registers used:
  8326 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8327 ;; Tracked objects:
  8328 ;;		On entry : 0/0
  8329 ;;		On exit  : 0/0
  8330 ;;		Unchanged: 0/0
  8331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8332 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8333 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8334 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8335 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8336 ;;Total ram usage:        3 bytes
  8337 ;; Hardware stack levels used: 1
  8338 ;; Hardware stack levels required when called: 2
  8339 ;; This function calls:
  8340 ;;		_gpio_pin_write_logic
  8341 ;;		_lcd_4bit_send_enable_enable
  8342 ;;		_lcd_send_4bit
  8343 ;; This function is called by:
  8344 ;;		_lcd_4bit_send_char_data_pos
  8345 ;;		_lcd_4bit_send_string_pos
  8346 ;;		_lcd_4bit_send_string
  8347 ;;		_lcd_4bit_send_custome_char
  8348 ;; This function uses a non-reentrant model
  8349 ;;
  8350                           
  8351                           	psect	text35
  8352   0073E4                     __ptext35:
  8353                           	callstack 0
  8354   0073E4                     _lcd_4bit_send_char_data:
  8355                           	callstack 26
  8356   0073E4                     
  8357                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 97:     if(((void*)0) == lcd)
  8358   0073E4  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  8359   0073E6  A4D8               	btfss	status,2,c
  8360   0073E8  EFF8  F039         	goto	u8541
  8361   0073EC  EFFA  F039         	goto	u8540
  8362   0073F0                     u8541:
  8363   0073F0  EFFE  F039         	goto	l8578
  8364   0073F4                     u8540:
  8365   0073F4                     
  8366                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 98:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 99:        
      +                           ret = (STD_ReturnType)0x00;
  8367   0073F4  0E00               	movlw	0
  8368   0073F6  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8369                           
  8370                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 100:     }
  8371   0073F8  EF1F  F03A         	goto	l8580
  8372   0073FC                     l8578:
  8373                           
  8374                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 102:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 104:      
      +                             ret = gpio_pin_write_logic(&(lcd->rs),HIGH);
  8375   0073FC  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  8376   007400  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8377   007402  0E01               	movlw	1
  8378   007404  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8379   007406  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
  8380   00740A  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8381                           
  8382                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 105:         ret = lcd_send_4bit(lcd,data >>4);
  8383   00740C  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8384   007410  3810               	swapf	lcd_4bit_send_char_data@data^0,w,c
  8385   007412  0B0F               	andlw	15
  8386   007414  6E0C               	movwf	lcd_send_4bit@command_data^0,c
  8387   007416  EC19  F039         	call	_lcd_send_4bit	;wreg free
  8388   00741A  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8389                           
  8390                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 106:         ret = lcd_4bit_send_enable_enable(lcd);
  8391   00741C  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_enable@lcd
  8392   007420  EC20  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
  8393   007424  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8394                           
  8395                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 107:         ret = lcd_send_4bit(lcd,data);
  8396   007426  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8397   00742A  C010  F00C         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@command_data
  8398   00742E  EC19  F039         	call	_lcd_send_4bit	;wreg free
  8399   007432  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8400                           
  8401                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 108:         ret = lcd_4bit_send_enable_enable(lcd);
  8402   007434  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_enable@lcd
  8403   007438  EC20  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
  8404   00743C  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8405   00743E                     l8580:
  8406                           
  8407                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 113:      return ret;
  8408   00743E  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  8409   007440  0012               	return		;funcret
  8410   007442                     __end_of_lcd_4bit_send_char_data:
  8411                           	callstack 0
  8412                           
  8413 ;; *************** function _ecu_keypad_get_value *****************
  8414 ;; Defined at:
  8415 ;;		line 56 in file "ECU_layer/Keypad/ecu_keypad.c"
  8416 ;; Parameters:    Size  Location     Type
  8417 ;;  keypad          2   10[COMRAM] PTR const struct .
  8418 ;;		 -> keypad(8), 
  8419 ;;  value           1   12[COMRAM] PTR unsigned char 
  8420 ;;		 -> get_third_number_and_third_operartion@keypad_value(1), get_number_and_operartion@keypad_value(1), 
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  columns         1   18[COMRAM] unsigned char 
  8423 ;;  rows            1   17[COMRAM] unsigned char 
  8424 ;;  clear_rows_c    1   16[COMRAM] unsigned char 
  8425 ;;  column_val      1   15[COMRAM] unsigned char 
  8426 ;;  ret             1    0        unsigned char 
  8427 ;; Return value:  Size  Location     Type
  8428 ;;                  1    wreg      unsigned char 
  8429 ;; Registers used:
  8430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8431 ;; Tracked objects:
  8432 ;;		On entry : 0/0
  8433 ;;		On exit  : 0/0
  8434 ;;		Unchanged: 0/0
  8435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8436 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8437 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8438 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8439 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8440 ;;Total ram usage:        9 bytes
  8441 ;; Hardware stack levels used: 1
  8442 ;; Hardware stack levels required when called: 1
  8443 ;; This function calls:
  8444 ;;		_gpio_pin_read_logic
  8445 ;;		_gpio_pin_write_logic
  8446 ;; This function is called by:
  8447 ;;		_get_number_and_operartion
  8448 ;;		_get_third_number_and_third_operartion
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text36
  8453   0065A8                     __ptext36:
  8454                           	callstack 0
  8455   0065A8                     _ecu_keypad_get_value:
  8456                           	callstack 28
  8457   0065A8                     
  8458                           ;ECU_layer/Keypad/ecu_keypad.c: 58: uint8 rows = 0,columns = 0,clear_rows_counter = 0;
  8459   0065A8  0E00               	movlw	0
  8460   0065AA  6E12               	movwf	ecu_keypad_get_value@rows^0,c
  8461   0065AC  0E00               	movlw	0
  8462   0065AE  6E13               	movwf	ecu_keypad_get_value@columns^0,c
  8463   0065B0  0E00               	movlw	0
  8464   0065B2  6E11               	movwf	ecu_keypad_get_value@clear_rows_counter^0,c
  8465                           
  8466                           ;ECU_layer/Keypad/ecu_keypad.c: 59: uint8 column_val = 0;
  8467   0065B4  0E00               	movlw	0
  8468   0065B6  6E10               	movwf	ecu_keypad_get_value@column_val^0,c
  8469   0065B8                     
  8470                           ;ECU_layer/Keypad/ecu_keypad.c: 60: *value = 0;
  8471   0065B8  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8472   0065BA  6ED9               	movwf	fsr2l,c
  8473   0065BC  6ADA               	clrf	fsr2h,c
  8474   0065BE  6ADF               	clrf	indf2,c
  8475   0065C0                     
  8476                           ;ECU_layer/Keypad/ecu_keypad.c: 61:     if(((void*)0) == keypad || ((void*)0) == value)
  8477   0065C0  500B               	movf	ecu_keypad_get_value@keypad^0,w,c
  8478   0065C2  100C               	iorwf	(ecu_keypad_get_value@keypad+1)^0,w,c
  8479   0065C4  B4D8               	btfsc	status,2,c
  8480   0065C6  EFE7  F032         	goto	u6411
  8481   0065CA  EFE9  F032         	goto	u6410
  8482   0065CE                     u6411:
  8483   0065CE  EFF1  F032         	goto	l6412
  8484   0065D2                     u6410:
  8485   0065D2  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8486   0065D4  A4D8               	btfss	status,2,c
  8487   0065D6  EFEF  F032         	goto	u6421
  8488   0065DA  EFF1  F032         	goto	u6420
  8489   0065DE                     u6421:
  8490   0065DE  EFF3  F032         	goto	l6414
  8491   0065E2                     u6420:
  8492   0065E2                     l6412:
  8493                           
  8494                           ;ECU_layer/Keypad/ecu_keypad.c: 64:     }
  8495   0065E2  EF5B  F033         	goto	l377
  8496   0065E6                     l6414:
  8497                           
  8498                           ;ECU_layer/Keypad/ecu_keypad.c: 66:     {;ECU_layer/Keypad/ecu_keypad.c: 67:         for
      +                          (rows = 0;rows < 4 ;rows++)
  8499   0065E6  0E00               	movlw	0
  8500   0065E8  6E12               	movwf	ecu_keypad_get_value@rows^0,c
  8501   0065EA                     l6420:
  8502                           
  8503                           ;ECU_layer/Keypad/ecu_keypad.c: 68:         {;ECU_layer/Keypad/ecu_keypad.c: 69:        
      +                               for(clear_rows_counter = 0;clear_rows_counter < 4 ;clear_rows_counter++)
  8504   0065EA  0E00               	movlw	0
  8505   0065EC  6E11               	movwf	ecu_keypad_get_value@clear_rows_counter^0,c
  8506   0065EE                     l6426:
  8507                           
  8508                           ;ECU_layer/Keypad/ecu_keypad.c: 70:             {;ECU_layer/Keypad/ecu_keypad.c: 71:    
      +                                       gpio_pin_write_logic(&(keypad->keypad_rows_pins[clear_rows_counter]),LOW);
  8509   0065EE  5011               	movf	ecu_keypad_get_value@clear_rows_counter^0,w,c
  8510   0065F0  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8511   0065F2  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8512   0065F4  0E00               	movlw	0
  8513   0065F6  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8514   0065F8  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8515   0065FA  0E00               	movlw	0
  8516   0065FC  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8517   0065FE  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
  8518   006602                     
  8519                           ;ECU_layer/Keypad/ecu_keypad.c: 72:             }
  8520   006602  2A11               	incf	ecu_keypad_get_value@clear_rows_counter^0,f,c
  8521   006604  0E03               	movlw	3
  8522   006606  6411               	cpfsgt	ecu_keypad_get_value@clear_rows_counter^0,c
  8523   006608  EF08  F033         	goto	u6431
  8524   00660C  EF0A  F033         	goto	u6430
  8525   006610                     u6431:
  8526   006610  EFF7  F032         	goto	l6426
  8527   006614                     u6430:
  8528   006614                     
  8529                           ;ECU_layer/Keypad/ecu_keypad.c: 73:             gpio_pin_write_logic(&(keypad->keypad_ro
      +                          ws_pins[rows]),HIGH);
  8530   006614  5012               	movf	ecu_keypad_get_value@rows^0,w,c
  8531   006616  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8532   006618  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8533   00661A  0E00               	movlw	0
  8534   00661C  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8535   00661E  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8536   006620  0E01               	movlw	1
  8537   006622  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8538   006624  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
  8539   006628                     
  8540                           ;ECU_layer/Keypad/ecu_keypad.c: 74:             _delay((unsigned long)((10)*(8000000ul/4
      +                          000.0)));
  8541   006628  0E1A               	movlw	26
  8542   00662A  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8543   00662C  0EF8               	movlw	248
  8544   00662E                     u13517:
  8545   00662E  2EE8               	decfsz	wreg,f,c
  8546   006630  D7FE               	bra	u13517
  8547   006632  2E0E               	decfsz	??_ecu_keypad_get_value^0,f,c
  8548   006634  D7FC               	bra	u13517
  8549   006636  D000               	nop2	
  8550   006638                     
  8551                           ;ECU_layer/Keypad/ecu_keypad.c: 75:             for(columns = 0;columns < 4 ;columns++)
  8552   006638  0E00               	movlw	0
  8553   00663A  6E13               	movwf	ecu_keypad_get_value@columns^0,c
  8554   00663C                     l6442:
  8555                           
  8556                           ;ECU_layer/Keypad/ecu_keypad.c: 76:             {;ECU_layer/Keypad/ecu_keypad.c: 77:    
      +                                       gpio_pin_read_logic(&(keypad->keypad_columns_pins[columns]),&column_val);
  8557   00663C  5013               	movf	ecu_keypad_get_value@columns^0,w,c
  8558   00663E  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8559   006640  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8560   006642  0E00               	movlw	0
  8561   006644  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8562   006646  6E0F               	movwf	(??_ecu_keypad_get_value+1)^0,c
  8563   006648  0E04               	movlw	4
  8564   00664A  240E               	addwf	??_ecu_keypad_get_value^0,w,c
  8565   00664C  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  8566   00664E  0E00               	movlw	0
  8567   006650  200F               	addwfc	(??_ecu_keypad_get_value+1)^0,w,c
  8568   006652  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  8569   006654  0E10               	movlw	low ecu_keypad_get_value@column_val
  8570   006656  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  8571   006658  EC98  F037         	call	_gpio_pin_read_logic	;wreg free
  8572   00665C                     
  8573                           ;ECU_layer/Keypad/ecu_keypad.c: 78:                 if(HIGH == column_val)
  8574   00665C  0410               	decf	ecu_keypad_get_value@column_val^0,w,c
  8575   00665E  A4D8               	btfss	status,2,c
  8576   006660  EF34  F033         	goto	u6441
  8577   006664  EF36  F033         	goto	u6440
  8578   006668                     u6441:
  8579   006668  EF49  F033         	goto	l6448
  8580   00666C                     u6440:
  8581   00666C                     
  8582                           ;ECU_layer/Keypad/ecu_keypad.c: 79:                 {;ECU_layer/Keypad/ecu_keypad.c: 80:
      +                                           *value = keypad_values[rows][columns];
  8583   00666C  5012               	movf	ecu_keypad_get_value@rows^0,w,c
  8584   00666E  0D04               	mullw	4
  8585   006670  0E50               	movlw	low _keypad_values
  8586   006672  24F3               	addwf	243,w,c
  8587   006674  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8588   006676  0E02               	movlw	high _keypad_values
  8589   006678  20F4               	addwfc	prodh,w,c
  8590   00667A  6E0F               	movwf	(??_ecu_keypad_get_value+1)^0,c
  8591   00667C  5013               	movf	ecu_keypad_get_value@columns^0,w,c
  8592   00667E  240E               	addwf	??_ecu_keypad_get_value^0,w,c
  8593   006680  6ED9               	movwf	fsr2l,c
  8594   006682  0E00               	movlw	0
  8595   006684  200F               	addwfc	(??_ecu_keypad_get_value+1)^0,w,c
  8596   006686  6EDA               	movwf	fsr2h,c
  8597   006688  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8598   00668A  6EE1               	movwf	fsr1l,c
  8599   00668C  6AE2               	clrf	fsr1h,c
  8600   00668E  CFDF FFE7          	movff	indf2,indf1
  8601   006692                     l6448:
  8602                           
  8603                           ;ECU_layer/Keypad/ecu_keypad.c: 84:             }
  8604   006692  2A13               	incf	ecu_keypad_get_value@columns^0,f,c
  8605   006694  0E03               	movlw	3
  8606   006696  6413               	cpfsgt	ecu_keypad_get_value@columns^0,c
  8607   006698  EF50  F033         	goto	u6451
  8608   00669C  EF52  F033         	goto	u6450
  8609   0066A0                     u6451:
  8610   0066A0  EF1E  F033         	goto	l6442
  8611   0066A4                     u6450:
  8612   0066A4                     
  8613                           ;ECU_layer/Keypad/ecu_keypad.c: 86:         }
  8614   0066A4  2A12               	incf	ecu_keypad_get_value@rows^0,f,c
  8615   0066A6  0E03               	movlw	3
  8616   0066A8  6412               	cpfsgt	ecu_keypad_get_value@rows^0,c
  8617   0066AA  EF59  F033         	goto	u6461
  8618   0066AE  EF5B  F033         	goto	u6460
  8619   0066B2                     u6461:
  8620   0066B2  EFF5  F032         	goto	l6420
  8621   0066B6                     u6460:
  8622   0066B6                     l377:
  8623   0066B6  0012               	return		;funcret
  8624   0066B8                     __end_of_ecu_keypad_get_value:
  8625                           	callstack 0
  8626                           
  8627 ;; *************** function _gpio_pin_read_logic *****************
  8628 ;; Defined at:
  8629 ;;		line 117 in file "MCAL_layer/GPIO/hal_gpio.c"
  8630 ;; Parameters:    Size  Location     Type
  8631 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  8632 ;;		 -> keypad$keypad_columns_pins(4), keypad(8), 
  8633 ;;  logic           1    2[COMRAM] PTR enum E3403
  8634 ;;		 -> ecu_keypad_get_value@column_val(1), ecu_button_read_state@btn_logic(1), 
  8635 ;; Auto vars:     Size  Location     Type
  8636 ;;  ret             1    0        unsigned char 
  8637 ;; Return value:  Size  Location     Type
  8638 ;;                  1    wreg      unsigned char 
  8639 ;; Registers used:
  8640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8641 ;; Tracked objects:
  8642 ;;		On entry : 0/0
  8643 ;;		On exit  : 0/0
  8644 ;;		Unchanged: 0/0
  8645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8646 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8647 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8648 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8649 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8650 ;;Total ram usage:        8 bytes
  8651 ;; Hardware stack levels used: 1
  8652 ;; This function calls:
  8653 ;;		Nothing
  8654 ;; This function is called by:
  8655 ;;		_ecu_keypad_get_value
  8656 ;;		_ecu_button_read_state
  8657 ;; This function uses a non-reentrant model
  8658 ;;
  8659                           
  8660                           	psect	text37
  8661   006F30                     __ptext37:
  8662                           	callstack 0
  8663   006F30                     _gpio_pin_read_logic:
  8664                           	callstack 28
  8665   006F30                     
  8666                           ;MCAL_layer/GPIO/hal_gpio.c: 120:     if(((void*)0) == _pin_config || ((void*)0) == logi
      +                          c || _pin_config->pin > 8 -1)
  8667   006F30  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  8668   006F32  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  8669   006F34  B4D8               	btfsc	status,2,c
  8670   006F36  EF9F  F037         	goto	u6001
  8671   006F3A  EFA1  F037         	goto	u6000
  8672   006F3E                     u6001:
  8673   006F3E  EFBA  F037         	goto	l6140
  8674   006F42                     u6000:
  8675   006F42  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  8676   006F44  B4D8               	btfsc	status,2,c
  8677   006F46  EFA7  F037         	goto	u6011
  8678   006F4A  EFA9  F037         	goto	u6010
  8679   006F4E                     u6011:
  8680   006F4E  EFBA  F037         	goto	l6140
  8681   006F52                     u6010:
  8682   006F52  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  8683   006F56  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  8684   006F5A  30DF               	rrcf	223,w,c
  8685   006F5C  32E8               	rrcf	wreg,f,c
  8686   006F5E  32E8               	rrcf	wreg,f,c
  8687   006F60  0B07               	andlw	7
  8688   006F62  6E04               	movwf	??_gpio_pin_read_logic^0,c
  8689   006F64  0E07               	movlw	7
  8690   006F66  6404               	cpfsgt	??_gpio_pin_read_logic^0,c
  8691   006F68  EFB8  F037         	goto	u6021
  8692   006F6C  EFBA  F037         	goto	u6020
  8693   006F70                     u6021:
  8694   006F70  EFBC  F037         	goto	l6142
  8695   006F74                     u6020:
  8696   006F74                     l6140:
  8697                           
  8698                           ;MCAL_layer/GPIO/hal_gpio.c: 123:     }
  8699   006F74  EFEC  F037         	goto	l521
  8700   006F78                     l6142:
  8701                           
  8702                           ;MCAL_layer/GPIO/hal_gpio.c: 125:     {;MCAL_layer/GPIO/hal_gpio.c: 126:          *logic
      +                           = ((*port_registers[_pin_config->port]>>_pin_config->pin) & (uint8)1);
  8703   006F78  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  8704   006F7A  6ED9               	movwf	fsr2l,c
  8705   006F7C  6ADA               	clrf	fsr2h,c
  8706   006F7E  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  8707   006F82  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  8708   006F86  30E7               	rrcf	231,w,c
  8709   006F88  32E8               	rrcf	wreg,f,c
  8710   006F8A  32E8               	rrcf	wreg,f,c
  8711   006F8C  0B07               	andlw	7
  8712   006F8E  6E04               	movwf	??_gpio_pin_read_logic^0,c
  8713   006F90  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  8714   006F94  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  8715   006F98  50E7               	movf	231,w,c
  8716   006F9A  0B07               	andlw	7
  8717   006F9C  6E05               	movwf	(??_gpio_pin_read_logic+1)^0,c
  8718   006F9E  5005               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  8719   006FA0  0D02               	mullw	2
  8720   006FA2  0EB8               	movlw	low _port_registers
  8721   006FA4  24F3               	addwf	243,w,c
  8722   006FA6  6EE1               	movwf	fsr1l,c
  8723   006FA8  0E01               	movlw	high _port_registers
  8724   006FAA  20F4               	addwfc	prodh,w,c
  8725   006FAC  6EE2               	movwf	fsr1h,c
  8726   006FAE  CFE6 F006          	movff	postinc1,??_gpio_pin_read_logic+2
  8727   006FB2  CFE5 F007          	movff	postdec1,??_gpio_pin_read_logic+3
  8728   006FB6  C006  FFE1         	movff	??_gpio_pin_read_logic+2,fsr1l
  8729   006FBA  C007  FFE2         	movff	??_gpio_pin_read_logic+3,fsr1h
  8730   006FBE  50E7               	movf	indf1,w,c
  8731   006FC0  6E08               	movwf	(??_gpio_pin_read_logic+4)^0,c
  8732   006FC2  2A04               	incf	??_gpio_pin_read_logic^0,f,c
  8733   006FC4  EFE6  F037         	goto	u6034
  8734   006FC8                     u6035:
  8735   006FC8  90D8               	bcf	status,0,c
  8736   006FCA  3208               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  8737   006FCC                     u6034:
  8738   006FCC  2E04               	decfsz	??_gpio_pin_read_logic^0,f,c
  8739   006FCE  EFE4  F037         	goto	u6035
  8740   006FD2  5008               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  8741   006FD4  0B01               	andlw	1
  8742   006FD6  6EDF               	movwf	indf2,c
  8743   006FD8                     l521:
  8744   006FD8  0012               	return		;funcret
  8745   006FDA                     __end_of_gpio_pin_read_logic:
  8746                           	callstack 0
  8747                           
  8748 ;; *************** function _convert_arr_to_float *****************
  8749 ;; Defined at:
  8750 ;;		line 120 in file "calculator_function/calculator_functions.c"
  8751 ;; Parameters:    Size  Location     Type
  8752 ;;  arr             2    0[BANK0 ] PTR const unsigned char 
  8753 ;;		 -> num3(4), num2(4), num1(4), 
  8754 ;;  counter_num     1    2[BANK0 ] const unsigned char 
  8755 ;;  num_value       1    3[BANK0 ] PTR float 
  8756 ;;		 -> num3_val(4), num2_val(4), num1_val(4), 
  8757 ;; Auto vars:     Size  Location     Type
  8758 ;;  count           1   16[BANK0 ] unsigned char 
  8759 ;;  count_power     1   15[BANK0 ] unsigned char 
  8760 ;; Return value:  Size  Location     Type
  8761 ;;                  1    wreg      void 
  8762 ;; Registers used:
  8763 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8764 ;; Tracked objects:
  8765 ;;		On entry : 0/0
  8766 ;;		On exit  : 0/0
  8767 ;;		Unchanged: 0/0
  8768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8769 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8770 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8771 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8772 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8773 ;;Total ram usage:       17 bytes
  8774 ;; Hardware stack levels used: 1
  8775 ;; Hardware stack levels required when called: 3
  8776 ;; This function calls:
  8777 ;;		___fladd
  8778 ;;		___flmul
  8779 ;;		___xxtofl
  8780 ;;		_powf
  8781 ;; This function is called by:
  8782 ;;		_main
  8783 ;; This function uses a non-reentrant model
  8784 ;;
  8785                           
  8786                           	psect	text38
  8787   006480                     __ptext38:
  8788                           	callstack 0
  8789   006480                     _convert_arr_to_float:
  8790                           	callstack 27
  8791   006480                     
  8792                           ;calculator_function/calculator_functions.c: 121: uint8 count = 0;
  8793   006480  0E00               	movlw	0
  8794   006482  0100               	movlb	0	; () banked
  8795   006484  6F90               	movwf	convert_arr_to_float@count& (0+255),b
  8796   006486                     
  8797                           ; BSR set to: 0
  8798                           ;calculator_function/calculator_functions.c: 122: uint8 count_power = counter_num-1;
  8799   006486  0582               	decf	convert_arr_to_float@counter_num& (0+255),w,b
  8800   006488  6F8F               	movwf	convert_arr_to_float@count_power& (0+255),b
  8801   00648A                     
  8802                           ; BSR set to: 0
  8803   00648A  5182               	movf	convert_arr_to_float@counter_num& (0+255),w,b
  8804   00648C  A4D8               	btfss	status,2,c
  8805   00648E  EF4B  F032         	goto	u13311
  8806   006492  EF4D  F032         	goto	u13310
  8807   006496                     u13311:
  8808   006496  EF4F  F032         	goto	l12712
  8809   00649A                     u13310:
  8810   00649A  EFD3  F032         	goto	l92
  8811   00649E                     l12712:
  8812                           
  8813                           ; BSR set to: 0
  8814                           ;calculator_function/calculator_functions.c: 124: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8815   00649E  518F               	movf	convert_arr_to_float@count_power& (0+255),w,b
  8816   0064A0  6E0B               	movwf	___xxtofl@val^0,c
  8817   0064A2  6A0C               	clrf	(___xxtofl@val+1)^0,c
  8818   0064A4  6A0D               	clrf	(___xxtofl@val+2)^0,c
  8819   0064A6  6A0E               	clrf	(___xxtofl@val+3)^0,c
  8820   0064A8  0E00               	movlw	0
  8821   0064AA  EC71  F02F         	call	___xxtofl
  8822   0064AE  C00B  F087         	movff	?___xxtofl,_convert_arr_to_float$2091
  8823   0064B2  C00C  F088         	movff	?___xxtofl+1,_convert_arr_to_float$2091+1
  8824   0064B6  C00D  F089         	movff	?___xxtofl+2,_convert_arr_to_float$2091+2
  8825   0064BA  C00E  F08A         	movff	?___xxtofl+3,_convert_arr_to_float$2091+3
  8826   0064BE                     
  8827                           ;calculator_function/calculator_functions.c: 124: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8828   0064BE  C087  F073         	movff	_convert_arr_to_float$2091,powf@y
  8829   0064C2  C088  F074         	movff	_convert_arr_to_float$2091+1,powf@y+1
  8830   0064C6  C089  F075         	movff	_convert_arr_to_float$2091+2,powf@y+2
  8831   0064CA  C08A  F076         	movff	_convert_arr_to_float$2091+3,powf@y+3
  8832   0064CE  0E00               	movlw	0
  8833   0064D0  6E6F               	movwf	powf@x^0,c
  8834   0064D2  0E00               	movlw	0
  8835   0064D4  6E70               	movwf	(powf@x+1)^0,c
  8836   0064D6  0E20               	movlw	32
  8837   0064D8  6E71               	movwf	(powf@x+2)^0,c
  8838   0064DA  0E41               	movlw	65
  8839   0064DC  6E72               	movwf	(powf@x+3)^0,c
  8840   0064DE  EC6B  F008         	call	_powf	;wreg free
  8841   0064E2  C06F  F08B         	movff	?_powf,_convert_arr_to_float$2092
  8842   0064E6  C070  F08C         	movff	?_powf+1,_convert_arr_to_float$2092+1
  8843   0064EA  C071  F08D         	movff	?_powf+2,_convert_arr_to_float$2092+2
  8844   0064EE  C072  F08E         	movff	?_powf+3,_convert_arr_to_float$2092+3
  8845   0064F2                     
  8846                           ;calculator_function/calculator_functions.c: 124: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8847   0064F2  C08B  F01D         	movff	_convert_arr_to_float$2092,___flmul@a
  8848   0064F6  C08C  F01E         	movff	_convert_arr_to_float$2092+1,___flmul@a+1
  8849   0064FA  C08D  F01F         	movff	_convert_arr_to_float$2092+2,___flmul@a+2
  8850   0064FE  C08E  F020         	movff	_convert_arr_to_float$2092+3,___flmul@a+3
  8851   006502  0100               	movlb	0	; () banked
  8852   006504  5190               	movf	convert_arr_to_float@count& (0+255),w,b
  8853   006506  2580               	addwf	convert_arr_to_float@arr& (0+255),w,b
  8854   006508  6ED9               	movwf	fsr2l,c
  8855   00650A  0E00               	movlw	0
  8856   00650C  2181               	addwfc	(convert_arr_to_float@arr+1)& (0+255),w,b
  8857   00650E  6EDA               	movwf	fsr2h,c
  8858   006510  50DF               	movf	indf2,w,c
  8859   006512  6F84               	movwf	??_convert_arr_to_float& (0+255),b
  8860   006514  0ED0               	movlw	208
  8861   006516  2584               	addwf	??_convert_arr_to_float& (0+255),w,b
  8862   006518  6F85               	movwf	(??_convert_arr_to_float+1)& (0+255),b
  8863   00651A  6B86               	clrf	(??_convert_arr_to_float+2)& (0+255),b
  8864   00651C  0EFF               	movlw	255
  8865   00651E  2386               	addwfc	(??_convert_arr_to_float+2)& (0+255),f,b
  8866   006520  C085  F00B         	movff	??_convert_arr_to_float+1,___xxtofl@val
  8867   006524  C086  F00C         	movff	??_convert_arr_to_float+2,___xxtofl@val+1
  8868   006528  0E00               	movlw	0
  8869   00652A  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  8870   00652C  0EFF               	movlw	-1
  8871   00652E  6E0D               	movwf	(___xxtofl@val+2)^0,c
  8872   006530  6E0E               	movwf	(___xxtofl@val+3)^0,c
  8873   006532  0E01               	movlw	1
  8874   006534  EC71  F02F         	call	___xxtofl
  8875   006538  C00B  F019         	movff	?___xxtofl,___flmul@b
  8876   00653C  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  8877   006540  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  8878   006544  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  8879   006548  EC20  F024         	call	___flmul	;wreg free
  8880   00654C  C019  F032         	movff	?___flmul,___fladd@b
  8881   006550  C01A  F033         	movff	?___flmul+1,___fladd@b+1
  8882   006554  C01B  F034         	movff	?___flmul+2,___fladd@b+2
  8883   006558  C01C  F035         	movff	?___flmul+3,___fladd@b+3
  8884   00655C  0100               	movlb	0	; () banked
  8885   00655E  5183               	movf	convert_arr_to_float@num_value& (0+255),w,b
  8886   006560  6ED9               	movwf	fsr2l,c
  8887   006562  6ADA               	clrf	fsr2h,c
  8888   006564  CFDE F036          	movff	postinc2,___fladd@a
  8889   006568  CFDE F037          	movff	postinc2,___fladd@a+1
  8890   00656C  CFDE F038          	movff	postinc2,___fladd@a+2
  8891   006570  CFDE F039          	movff	postinc2,___fladd@a+3
  8892   006574  ECC0  F021         	call	___fladd	;wreg free
  8893   006578  0100               	movlb	0	; () banked
  8894   00657A  5183               	movf	convert_arr_to_float@num_value& (0+255),w,b
  8895   00657C  6ED9               	movwf	fsr2l,c
  8896   00657E  6ADA               	clrf	fsr2h,c
  8897   006580  C032  FFDE         	movff	?___fladd,postinc2
  8898   006584  C033  FFDE         	movff	?___fladd+1,postinc2
  8899   006588  C034  FFDE         	movff	?___fladd+2,postinc2
  8900   00658C  C035  FFDE         	movff	?___fladd+3,postinc2
  8901   006590                     
  8902                           ; BSR set to: 0
  8903                           ;calculator_function/calculator_functions.c: 125: count_power--;
  8904   006590  078F               	decf	convert_arr_to_float@count_power& (0+255),f,b
  8905   006592                     
  8906                           ; BSR set to: 0
  8907                           ;calculator_function/calculator_functions.c: 126: }
  8908   006592  2B90               	incf	convert_arr_to_float@count& (0+255),f,b
  8909   006594                     
  8910                           ; BSR set to: 0
  8911   006594  5182               	movf	convert_arr_to_float@counter_num& (0+255),w,b
  8912   006596  5D90               	subwf	convert_arr_to_float@count& (0+255),w,b
  8913   006598  A0D8               	btfss	status,0,c
  8914   00659A  EFD1  F032         	goto	u13321
  8915   00659E  EFD3  F032         	goto	u13320
  8916   0065A2                     u13321:
  8917   0065A2  EF4F  F032         	goto	l12712
  8918   0065A6                     u13320:
  8919   0065A6                     l92:
  8920                           
  8921                           ; BSR set to: 0
  8922   0065A6  0012               	return		;funcret
  8923   0065A8                     __end_of_convert_arr_to_float:
  8924                           	callstack 0
  8925                           
  8926 ;; *************** function _powf *****************
  8927 ;; Defined at:
  8928 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  x               4  110[COMRAM] float 
  8931 ;;  y               4  114[COMRAM] float 
  8932 ;; Auto vars:     Size  Location     Type
  8933 ;;  s2              4  144[BANK1 ] float 
  8934 ;;  s_h             4  116[BANK1 ] struct fui
  8935 ;;  t_h             4  112[BANK1 ] struct fui
  8936 ;;  t_l             4   52[BANK1 ] float 
  8937 ;;  s_l             4   48[BANK1 ] float 
  8938 ;;  z               4  180[BANK1 ] struct fui
  8939 ;;  t               4  176[BANK1 ] struct fui
  8940 ;;  ix              4  172[BANK1 ] struct fui
  8941 ;;  j               4  168[BANK1 ] long 
  8942 ;;  k               4  164[BANK1 ] long 
  8943 ;;  p_h             4  160[BANK1 ] struct fui
  8944 ;;  is              4  152[BANK1 ] struct fui
  8945 ;;  iy              4  148[BANK1 ] long 
  8946 ;;  t1              4  140[BANK1 ] struct fui
  8947 ;;  n               4  136[BANK1 ] long 
  8948 ;;  hy              4  132[BANK1 ] struct fui
  8949 ;;  v               4  128[BANK1 ] float 
  8950 ;;  u               4  124[BANK1 ] float 
  8951 ;;  ax              4  120[BANK1 ] struct fui
  8952 ;;  p_l             4  108[BANK1 ] float 
  8953 ;;  hx              4  104[BANK1 ] struct fui
  8954 ;;  sn              4  100[BANK1 ] unsigned long 
  8955 ;;  s               4   88[BANK1 ] float 
  8956 ;;  yisint          4   84[BANK1 ] long 
  8957 ;;  r               4   80[BANK1 ] float 
  8958 ;;  w               4   68[BANK1 ] float 
  8959 ;;  y1              4   44[BANK1 ] struct fui
  8960 ;;  i               4   40[BANK1 ] long 
  8961 ;;  z_l             4   36[BANK1 ] float 
  8962 ;;  z_h             4   32[BANK1 ] float 
  8963 ;;  t2              4   28[BANK1 ] float 
  8964 ;; Return value:  Size  Location     Type
  8965 ;;                  4  110[COMRAM] float 
  8966 ;; Registers used:
  8967 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8968 ;; Tracked objects:
  8969 ;;		On entry : 0/0
  8970 ;;		On exit  : 0/0
  8971 ;;		Unchanged: 0/0
  8972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8973 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8974 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8975 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8976 ;;      Totals:        17       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8977 ;;Total ram usage:      201 bytes
  8978 ;; Hardware stack levels used: 1
  8979 ;; Hardware stack levels required when called: 2
  8980 ;; This function calls:
  8981 ;;		___fladd
  8982 ;;		___fldiv
  8983 ;;		___flge
  8984 ;;		___flmul
  8985 ;;		___flneg
  8986 ;;		___flsub
  8987 ;;		___xxtofl
  8988 ;;		_scalbnf
  8989 ;;		_sqrtf
  8990 ;; This function is called by:
  8991 ;;		_convert_arr_to_float
  8992 ;; This function uses a non-reentrant model
  8993 ;;
  8994                           
  8995                           	psect	text39
  8996   0010D6                     __ptext39:
  8997                           	callstack 0
  8998   0010D6                     _powf:
  8999                           	callstack 27
  9000   0010D6  C06F  F168         	movff	powf@x,powf@hx
  9001   0010DA  C070  F169         	movff	powf@x+1,powf@hx+1
  9002   0010DE  C071  F16A         	movff	powf@x+2,powf@hx+2
  9003   0010E2  C072  F16B         	movff	powf@x+3,powf@hx+3
  9004   0010E6  C073  F184         	movff	powf@y,powf@hy
  9005   0010EA  C074  F185         	movff	powf@y+1,powf@hy+1
  9006   0010EE  C075  F186         	movff	powf@y+2,powf@hy+2
  9007   0010F2  C076  F187         	movff	powf@y+3,powf@hy+3
  9008   0010F6  0EFF               	movlw	255
  9009   0010F8  0101               	movlb	1	; () banked
  9010   0010FA  1568               	andwf	powf@hx& (0+255),w,b
  9011   0010FC  6FAC               	movwf	powf@ix& (0+255),b
  9012   0010FE  0EFF               	movlw	255
  9013   001100  1569               	andwf	(powf@hx+1)& (0+255),w,b
  9014   001102  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9015   001104  0EFF               	movlw	255
  9016   001106  156A               	andwf	(powf@hx+2)& (0+255),w,b
  9017   001108  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9018   00110A  0E7F               	movlw	127
  9019   00110C  156B               	andwf	(powf@hx+3)& (0+255),w,b
  9020   00110E  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9021   001110  0EFF               	movlw	255
  9022   001112  1584               	andwf	powf@hy& (0+255),w,b
  9023   001114  6F94               	movwf	powf@iy& (0+255),b
  9024   001116  0EFF               	movlw	255
  9025   001118  1585               	andwf	(powf@hy+1)& (0+255),w,b
  9026   00111A  6F95               	movwf	(powf@iy+1)& (0+255),b
  9027   00111C  0EFF               	movlw	255
  9028   00111E  1586               	andwf	(powf@hy+2)& (0+255),w,b
  9029   001120  6F96               	movwf	(powf@iy+2)& (0+255),b
  9030   001122  0E7F               	movlw	127
  9031   001124  1587               	andwf	(powf@hy+3)& (0+255),w,b
  9032   001126  6F97               	movwf	(powf@iy+3)& (0+255),b
  9033   001128  5194               	movf	powf@iy& (0+255),w,b
  9034   00112A  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9035   00112C  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  9036   00112E  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  9037   001130  A4D8               	btfss	status,2,c
  9038   001132  EF9D  F008         	goto	u12721
  9039   001136  EF9F  F008         	goto	u12720
  9040   00113A                     u12721:
  9041   00113A  EFA9  F008         	goto	l12274
  9042   00113E                     u12720:
  9043   00113E                     
  9044                           ; BSR set to: 1
  9045   00113E  0E00               	movlw	0
  9046   001140  6E6F               	movwf	?_powf^0,c
  9047   001142  0E00               	movlw	0
  9048   001144  6E70               	movwf	(?_powf+1)^0,c
  9049   001146  0E80               	movlw	128
  9050   001148  6E71               	movwf	(?_powf+2)^0,c
  9051   00114A  0E3F               	movlw	63
  9052   00114C  6E72               	movwf	(?_powf+3)^0,c
  9053   00114E  EFFF  F019         	goto	l1639
  9054   001152                     l12274:
  9055                           
  9056                           ; BSR set to: 1
  9057   001152  0E80               	movlw	128
  9058   001154  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  9059   001156  E109               	bnz	u12731
  9060   001158  0E3F               	movlw	63
  9061   00115A  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  9062   00115C  1168               	iorwf	powf@hx& (0+255),w,b
  9063   00115E  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  9064   001160  A4D8               	btfss	status,2,c
  9065   001162  EFB5  F008         	goto	u12731
  9066   001166  EFB7  F008         	goto	u12730
  9067   00116A                     u12731:
  9068   00116A  EFC1  F008         	goto	l12280
  9069   00116E                     u12730:
  9070   00116E                     
  9071                           ; BSR set to: 1
  9072   00116E  0E00               	movlw	0
  9073   001170  6E6F               	movwf	?_powf^0,c
  9074   001172  0E00               	movlw	0
  9075   001174  6E70               	movwf	(?_powf+1)^0,c
  9076   001176  0E80               	movlw	128
  9077   001178  6E71               	movwf	(?_powf+2)^0,c
  9078   00117A  0E3F               	movlw	63
  9079   00117C  6E72               	movwf	(?_powf+3)^0,c
  9080   00117E  EFFF  F019         	goto	l1639
  9081   001182                     l12280:
  9082                           
  9083                           ; BSR set to: 1
  9084   001182  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9085   001184  EFD2  F008         	goto	u12740
  9086   001188  05AC               	decf	powf@ix& (0+255),w,b
  9087   00118A  0E00               	movlw	0
  9088   00118C  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9089   00118E  0E80               	movlw	128
  9090   001190  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9091   001192  0E7F               	movlw	127
  9092   001194  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9093   001196  B0D8               	btfsc	status,0,c
  9094   001198  EFD0  F008         	goto	u12741
  9095   00119C  EFD2  F008         	goto	u12740
  9096   0011A0                     u12741:
  9097   0011A0  EFE3  F008         	goto	l12284
  9098   0011A4                     u12740:
  9099   0011A4                     
  9100                           ; BSR set to: 1
  9101   0011A4  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9102   0011A6  EFE1  F008         	goto	u12751
  9103   0011AA  0594               	decf	powf@iy& (0+255),w,b
  9104   0011AC  0E00               	movlw	0
  9105   0011AE  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  9106   0011B0  0E80               	movlw	128
  9107   0011B2  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  9108   0011B4  0E7F               	movlw	127
  9109   0011B6  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9110   0011B8  A0D8               	btfss	status,0,c
  9111   0011BA  EFE1  F008         	goto	u12751
  9112   0011BE  EFE3  F008         	goto	u12750
  9113   0011C2                     u12751:
  9114   0011C2  EFFF  F008         	goto	l12288
  9115   0011C6                     u12750:
  9116   0011C6                     l12284:
  9117                           
  9118                           ; BSR set to: 1
  9119   0011C6  C06F  F032         	movff	powf@x,___fladd@b
  9120   0011CA  C070  F033         	movff	powf@x+1,___fladd@b+1
  9121   0011CE  C071  F034         	movff	powf@x+2,___fladd@b+2
  9122   0011D2  C072  F035         	movff	powf@x+3,___fladd@b+3
  9123   0011D6  C073  F036         	movff	powf@y,___fladd@a
  9124   0011DA  C074  F037         	movff	powf@y+1,___fladd@a+1
  9125   0011DE  C075  F038         	movff	powf@y+2,___fladd@a+2
  9126   0011E2  C076  F039         	movff	powf@y+3,___fladd@a+3
  9127   0011E6  ECC0  F021         	call	___fladd	;wreg free
  9128   0011EA  C032  F06F         	movff	?___fladd,?_powf
  9129   0011EE  C033  F070         	movff	?___fladd+1,?_powf+1
  9130   0011F2  C034  F071         	movff	?___fladd+2,?_powf+2
  9131   0011F6  C035  F072         	movff	?___fladd+3,?_powf+3
  9132   0011FA  EFFF  F019         	goto	l1639
  9133   0011FE                     l12288:
  9134                           
  9135                           ; BSR set to: 1
  9136   0011FE  0E00               	movlw	0
  9137   001200  6F54               	movwf	powf@yisint& (0+255),b
  9138   001202  0E00               	movlw	0
  9139   001204  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9140   001206  0E00               	movlw	0
  9141   001208  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9142   00120A  0E00               	movlw	0
  9143   00120C  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9144   00120E                     
  9145                           ; BSR set to: 1
  9146   00120E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9147   001210  EF0E  F009         	goto	u12760
  9148   001214  EF0C  F009         	goto	u12761
  9149   001218                     u12761:
  9150   001218  EFB9  F009         	goto	l1644
  9151   00121C                     u12760:
  9152   00121C                     
  9153                           ; BSR set to: 1
  9154   00121C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9155   00121E  EF1A  F009         	goto	u12771
  9156   001222  0E80               	movlw	128
  9157   001224  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9158   001226  0E4B               	movlw	75
  9159   001228  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9160   00122A  A0D8               	btfss	status,0,c
  9161   00122C  EF1A  F009         	goto	u12771
  9162   001230  EF1C  F009         	goto	u12770
  9163   001234                     u12771:
  9164   001234  EF26  F009         	goto	l12296
  9165   001238                     u12770:
  9166   001238                     
  9167                           ; BSR set to: 1
  9168   001238  0E02               	movlw	2
  9169   00123A  6F54               	movwf	powf@yisint& (0+255),b
  9170   00123C  0E00               	movlw	0
  9171   00123E  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9172   001240  0E00               	movlw	0
  9173   001242  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9174   001244  0E00               	movlw	0
  9175   001246  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9176   001248  EFB9  F009         	goto	l1644
  9177   00124C                     l12296:
  9178                           
  9179                           ; BSR set to: 1
  9180   00124C  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9181   00124E  EF32  F009         	goto	u12781
  9182   001252  0E80               	movlw	128
  9183   001254  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9184   001256  0E3F               	movlw	63
  9185   001258  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9186   00125A  A0D8               	btfss	status,0,c
  9187   00125C  EF32  F009         	goto	u12781
  9188   001260  EF34  F009         	goto	u12780
  9189   001264                     u12781:
  9190   001264  EFB9  F009         	goto	l1644
  9191   001268                     u12780:
  9192   001268                     
  9193                           ; BSR set to: 1
  9194   001268  0E17               	movlw	23
  9195   00126A  6E77               	movwf	??_powf^0,c
  9196   00126C  C194  F078         	movff	powf@iy,??_powf+1
  9197   001270  C195  F079         	movff	powf@iy+1,??_powf+2
  9198   001274  C196  F07A         	movff	powf@iy+2,??_powf+3
  9199   001278  C197  F07B         	movff	powf@iy+3,??_powf+4
  9200   00127C                     u12795:
  9201   00127C  6677               	tstfsz	??_powf^0,c
  9202   00127E  EF43  F009         	goto	u12796
  9203   001282  EF4B  F009         	goto	u12797
  9204   001286                     u12796:
  9205   001286  347B               	rlcf	(??_powf+4)^0,w,c
  9206   001288  327B               	rrcf	(??_powf+4)^0,f,c
  9207   00128A  327A               	rrcf	(??_powf+3)^0,f,c
  9208   00128C  3279               	rrcf	(??_powf+2)^0,f,c
  9209   00128E  3278               	rrcf	(??_powf+1)^0,f,c
  9210   001290  2E77               	decfsz	??_powf^0,f,c
  9211   001292  EF3E  F009         	goto	u12795
  9212   001296                     u12797:
  9213   001296  0E81               	movlw	129
  9214   001298  2478               	addwf	(??_powf+1)^0,w,c
  9215   00129A  0101               	movlb	1	; () banked
  9216   00129C  6FA4               	movwf	powf@k& (0+255),b
  9217   00129E  0EFF               	movlw	255
  9218   0012A0  2079               	addwfc	(??_powf+2)^0,w,c
  9219   0012A2  6FA5               	movwf	(powf@k+1)& (0+255),b
  9220   0012A4  0EFF               	movlw	255
  9221   0012A6  207A               	addwfc	(??_powf+3)^0,w,c
  9222   0012A8  6FA6               	movwf	(powf@k+2)& (0+255),b
  9223   0012AA  0EFF               	movlw	255
  9224   0012AC  207B               	addwfc	(??_powf+4)^0,w,c
  9225   0012AE  6FA7               	movwf	(powf@k+3)& (0+255),b
  9226   0012B0  51A4               	movf	powf@k& (0+255),w,b
  9227   0012B2  0817               	sublw	23
  9228   0012B4  6E77               	movwf	??_powf^0,c
  9229   0012B6  C194  F078         	movff	powf@iy,??_powf+1
  9230   0012BA  C195  F079         	movff	powf@iy+1,??_powf+2
  9231   0012BE  C196  F07A         	movff	powf@iy+2,??_powf+3
  9232   0012C2  C197  F07B         	movff	powf@iy+3,??_powf+4
  9233   0012C6                     u12805:
  9234   0012C6  6677               	tstfsz	??_powf^0,c
  9235   0012C8  EF68  F009         	goto	u12806
  9236   0012CC  EF70  F009         	goto	u12807
  9237   0012D0                     u12806:
  9238   0012D0  347B               	rlcf	(??_powf+4)^0,w,c
  9239   0012D2  327B               	rrcf	(??_powf+4)^0,f,c
  9240   0012D4  327A               	rrcf	(??_powf+3)^0,f,c
  9241   0012D6  3279               	rrcf	(??_powf+2)^0,f,c
  9242   0012D8  3278               	rrcf	(??_powf+1)^0,f,c
  9243   0012DA  2E77               	decfsz	??_powf^0,f,c
  9244   0012DC  EF63  F009         	goto	u12805
  9245   0012E0                     u12807:
  9246   0012E0  C078  F1A8         	movff	??_powf+1,powf@j
  9247   0012E4  C079  F1A9         	movff	??_powf+2,powf@j+1
  9248   0012E8  C07A  F1AA         	movff	??_powf+3,powf@j+2
  9249   0012EC  C07B  F1AB         	movff	??_powf+4,powf@j+3
  9250   0012F0  0101               	movlb	1	; () banked
  9251   0012F2  51A4               	movf	powf@k& (0+255),w,b
  9252   0012F4  0817               	sublw	23
  9253   0012F6  6E77               	movwf	??_powf^0,c
  9254   0012F8  C1A8  F078         	movff	powf@j,??_powf+1
  9255   0012FC  C1A9  F079         	movff	powf@j+1,??_powf+2
  9256   001300  C1AA  F07A         	movff	powf@j+2,??_powf+3
  9257   001304  C1AB  F07B         	movff	powf@j+3,??_powf+4
  9258   001308  2A77               	incf	??_powf^0,f,c
  9259   00130A  EF8C  F009         	goto	u12810
  9260   00130E                     u12815:
  9261   00130E  90D8               	bcf	status,0,c
  9262   001310  3678               	rlcf	(??_powf+1)^0,f,c
  9263   001312  3679               	rlcf	(??_powf+2)^0,f,c
  9264   001314  367A               	rlcf	(??_powf+3)^0,f,c
  9265   001316  367B               	rlcf	(??_powf+4)^0,f,c
  9266   001318                     u12810:
  9267   001318  2E77               	decfsz	??_powf^0,f,c
  9268   00131A  EF87  F009         	goto	u12815
  9269   00131E  5194               	movf	powf@iy& (0+255),w,b
  9270   001320  1878               	xorwf	(??_powf+1)^0,w,c
  9271   001322  E10D               	bnz	u12821
  9272   001324  5195               	movf	(powf@iy+1)& (0+255),w,b
  9273   001326  1879               	xorwf	(??_powf+2)^0,w,c
  9274   001328  E10A               	bnz	u12821
  9275   00132A  5196               	movf	(powf@iy+2)& (0+255),w,b
  9276   00132C  187A               	xorwf	(??_powf+3)^0,w,c
  9277   00132E  E107               	bnz	u12821
  9278   001330  5197               	movf	(powf@iy+3)& (0+255),w,b
  9279   001332  187B               	xorwf	(??_powf+4)^0,w,c
  9280   001334  A4D8               	btfss	status,2,c
  9281   001336  EF9F  F009         	goto	u12821
  9282   00133A  EFA1  F009         	goto	u12820
  9283   00133E                     u12821:
  9284   00133E  EFB9  F009         	goto	l1644
  9285   001342                     u12820:
  9286   001342                     
  9287                           ; BSR set to: 1
  9288   001342  0E01               	movlw	1
  9289   001344  15A8               	andwf	powf@j& (0+255),w,b
  9290   001346  6E77               	movwf	??_powf^0,c
  9291   001348  0E00               	movlw	0
  9292   00134A  15A9               	andwf	(powf@j+1)& (0+255),w,b
  9293   00134C  6E78               	movwf	(??_powf+1)^0,c
  9294   00134E  0E00               	movlw	0
  9295   001350  15AA               	andwf	(powf@j+2)& (0+255),w,b
  9296   001352  6E79               	movwf	(??_powf+2)^0,c
  9297   001354  0E00               	movlw	0
  9298   001356  15AB               	andwf	(powf@j+3)& (0+255),w,b
  9299   001358  6E7A               	movwf	(??_powf+3)^0,c
  9300   00135A  5077               	movf	??_powf^0,w,c
  9301   00135C  0802               	sublw	2
  9302   00135E  6F54               	movwf	powf@yisint& (0+255),b
  9303   001360  0E00               	movlw	0
  9304   001362  5478               	subfwb	(??_powf+1)^0,w,c
  9305   001364  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9306   001366  0E00               	movlw	0
  9307   001368  5479               	subfwb	(??_powf+2)^0,w,c
  9308   00136A  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9309   00136C  0E00               	movlw	0
  9310   00136E  547A               	subfwb	(??_powf+3)^0,w,c
  9311   001370  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9312   001372                     l1644:
  9313                           
  9314                           ; BSR set to: 1
  9315   001372  0E80               	movlw	128
  9316   001374  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  9317   001376  E109               	bnz	u12831
  9318   001378  0E7F               	movlw	127
  9319   00137A  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  9320   00137C  1194               	iorwf	powf@iy& (0+255),w,b
  9321   00137E  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9322   001380  A4D8               	btfss	status,2,c
  9323   001382  EFC5  F009         	goto	u12831
  9324   001386  EFC7  F009         	goto	u12830
  9325   00138A                     u12831:
  9326   00138A  EF30  F00A         	goto	l12326
  9327   00138E                     u12830:
  9328   00138E                     
  9329                           ; BSR set to: 1
  9330   00138E  0E80               	movlw	128
  9331   001390  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9332   001392  E109               	bnz	u12841
  9333   001394  0E3F               	movlw	63
  9334   001396  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9335   001398  11AC               	iorwf	powf@ix& (0+255),w,b
  9336   00139A  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9337   00139C  A4D8               	btfss	status,2,c
  9338   00139E  EFD3  F009         	goto	u12841
  9339   0013A2  EFD5  F009         	goto	u12840
  9340   0013A6                     u12841:
  9341   0013A6  EFDF  F009         	goto	l12310
  9342   0013AA                     u12840:
  9343   0013AA                     
  9344                           ; BSR set to: 1
  9345   0013AA  0E00               	movlw	0
  9346   0013AC  6E6F               	movwf	?_powf^0,c
  9347   0013AE  0E00               	movlw	0
  9348   0013B0  6E70               	movwf	(?_powf+1)^0,c
  9349   0013B2  0E80               	movlw	128
  9350   0013B4  6E71               	movwf	(?_powf+2)^0,c
  9351   0013B6  0E3F               	movlw	63
  9352   0013B8  6E72               	movwf	(?_powf+3)^0,c
  9353   0013BA  EFFF  F019         	goto	l1639
  9354   0013BE                     l12310:
  9355                           
  9356                           ; BSR set to: 1
  9357   0013BE  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9358   0013C0  EFEE  F009         	goto	u12851
  9359   0013C4  05AC               	decf	powf@ix& (0+255),w,b
  9360   0013C6  0E00               	movlw	0
  9361   0013C8  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9362   0013CA  0E80               	movlw	128
  9363   0013CC  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9364   0013CE  0E3F               	movlw	63
  9365   0013D0  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9366   0013D2  A0D8               	btfss	status,0,c
  9367   0013D4  EFEE  F009         	goto	u12851
  9368   0013D8  EFF0  F009         	goto	u12850
  9369   0013DC                     u12851:
  9370   0013DC  EF0B  F00A         	goto	l12318
  9371   0013E0                     u12850:
  9372   0013E0                     
  9373                           ; BSR set to: 1
  9374   0013E0  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9375   0013E2  EFF7  F009         	goto	u12860
  9376   0013E6  EFF5  F009         	goto	u12861
  9377   0013EA                     u12861:
  9378   0013EA  EF01  F00A         	goto	l1654
  9379   0013EE                     u12860:
  9380   0013EE                     
  9381                           ; BSR set to: 1
  9382   0013EE  0E00               	movlw	0
  9383   0013F0  6E6F               	movwf	?_powf^0,c
  9384   0013F2  0E00               	movlw	0
  9385   0013F4  6E70               	movwf	(?_powf+1)^0,c
  9386   0013F6  0E00               	movlw	0
  9387   0013F8  6E71               	movwf	(?_powf+2)^0,c
  9388   0013FA  0E00               	movlw	0
  9389   0013FC  6E72               	movwf	(?_powf+3)^0,c
  9390   0013FE  EFFF  F019         	goto	l1639
  9391   001402                     l1654:
  9392                           
  9393                           ; BSR set to: 1
  9394   001402  C073  F06F         	movff	powf@y,?_powf
  9395   001406  C074  F070         	movff	powf@y+1,?_powf+1
  9396   00140A  C075  F071         	movff	powf@y+2,?_powf+2
  9397   00140E  C076  F072         	movff	powf@y+3,?_powf+3
  9398   001412  EFFF  F019         	goto	l1639
  9399   001416                     l12318:
  9400                           
  9401                           ; BSR set to: 1
  9402   001416  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9403   001418  EF12  F00A         	goto	u12870
  9404   00141C  EF10  F00A         	goto	u12871
  9405   001420                     u12871:
  9406   001420  EF26  F00A         	goto	l12322
  9407   001424                     u12870:
  9408   001424                     
  9409                           ; BSR set to: 1
  9410   001424  C073  F001         	movff	powf@y,___flneg@f1
  9411   001428  C074  F002         	movff	powf@y+1,___flneg@f1+1
  9412   00142C  C075  F003         	movff	powf@y+2,___flneg@f1+2
  9413   001430  C076  F004         	movff	powf@y+3,___flneg@f1+3
  9414   001434  EC59  F03C         	call	___flneg	;wreg free
  9415   001438  C001  F06F         	movff	?___flneg,?_powf
  9416   00143C  C002  F070         	movff	?___flneg+1,?_powf+1
  9417   001440  C003  F071         	movff	?___flneg+2,?_powf+2
  9418   001444  C004  F072         	movff	?___flneg+3,?_powf+3
  9419   001448  EFFF  F019         	goto	l1639
  9420   00144C                     l12322:
  9421                           
  9422                           ; BSR set to: 1
  9423   00144C  0E00               	movlw	0
  9424   00144E  6E6F               	movwf	?_powf^0,c
  9425   001450  0E00               	movlw	0
  9426   001452  6E70               	movwf	(?_powf+1)^0,c
  9427   001454  0E00               	movlw	0
  9428   001456  6E71               	movwf	(?_powf+2)^0,c
  9429   001458  0E00               	movlw	0
  9430   00145A  6E72               	movwf	(?_powf+3)^0,c
  9431   00145C  EFFF  F019         	goto	l1639
  9432   001460                     l12326:
  9433                           
  9434                           ; BSR set to: 1
  9435   001460  0E80               	movlw	128
  9436   001462  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  9437   001464  E109               	bnz	u12881
  9438   001466  0E3F               	movlw	63
  9439   001468  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  9440   00146A  1194               	iorwf	powf@iy& (0+255),w,b
  9441   00146C  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9442   00146E  A4D8               	btfss	status,2,c
  9443   001470  EF3C  F00A         	goto	u12881
  9444   001474  EF3E  F00A         	goto	u12880
  9445   001478                     u12881:
  9446   001478  EF6B  F00A         	goto	l12332
  9447   00147C                     u12880:
  9448   00147C                     
  9449                           ; BSR set to: 1
  9450   00147C  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9451   00147E  EF45  F00A         	goto	u12890
  9452   001482  EF43  F00A         	goto	u12891
  9453   001486                     u12891:
  9454   001486  EF61  F00A         	goto	l1664
  9455   00148A                     u12890:
  9456   00148A                     
  9457                           ; BSR set to: 1
  9458   00148A  0E00               	movlw	0
  9459   00148C  6E42               	movwf	___fldiv@b^0,c
  9460   00148E  0E00               	movlw	0
  9461   001490  6E43               	movwf	(___fldiv@b+1)^0,c
  9462   001492  0E80               	movlw	128
  9463   001494  6E44               	movwf	(___fldiv@b+2)^0,c
  9464   001496  0E3F               	movlw	63
  9465   001498  6E45               	movwf	(___fldiv@b+3)^0,c
  9466   00149A  C06F  F046         	movff	powf@x,___fldiv@a
  9467   00149E  C070  F047         	movff	powf@x+1,___fldiv@a+1
  9468   0014A2  C071  F048         	movff	powf@x+2,___fldiv@a+2
  9469   0014A6  C072  F049         	movff	powf@x+3,___fldiv@a+3
  9470   0014AA  EC24  F028         	call	___fldiv	;wreg free
  9471   0014AE  C042  F06F         	movff	?___fldiv,?_powf
  9472   0014B2  C043  F070         	movff	?___fldiv+1,?_powf+1
  9473   0014B6  C044  F071         	movff	?___fldiv+2,?_powf+2
  9474   0014BA  C045  F072         	movff	?___fldiv+3,?_powf+3
  9475   0014BE  EFFF  F019         	goto	l1639
  9476   0014C2                     l1664:
  9477                           
  9478                           ; BSR set to: 1
  9479   0014C2  C06F  F06F         	movff	powf@x,?_powf
  9480   0014C6  C070  F070         	movff	powf@x+1,?_powf+1
  9481   0014CA  C071  F071         	movff	powf@x+2,?_powf+2
  9482   0014CE  C072  F072         	movff	powf@x+3,?_powf+3
  9483   0014D2  EFFF  F019         	goto	l1639
  9484   0014D6                     l12332:
  9485                           
  9486                           ; BSR set to: 1
  9487   0014D6  0E40               	movlw	64
  9488   0014D8  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  9489   0014DA  1184               	iorwf	powf@hy& (0+255),w,b
  9490   0014DC  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9491   0014DE  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9492   0014E0  A4D8               	btfss	status,2,c
  9493   0014E2  EF75  F00A         	goto	u12901
  9494   0014E6  EF77  F00A         	goto	u12900
  9495   0014EA                     u12901:
  9496   0014EA  EF93  F00A         	goto	l12338
  9497   0014EE                     u12900:
  9498   0014EE                     
  9499                           ; BSR set to: 1
  9500   0014EE  C06F  F019         	movff	powf@x,___flmul@b
  9501   0014F2  C070  F01A         	movff	powf@x+1,___flmul@b+1
  9502   0014F6  C071  F01B         	movff	powf@x+2,___flmul@b+2
  9503   0014FA  C072  F01C         	movff	powf@x+3,___flmul@b+3
  9504   0014FE  C06F  F01D         	movff	powf@x,___flmul@a
  9505   001502  C070  F01E         	movff	powf@x+1,___flmul@a+1
  9506   001506  C071  F01F         	movff	powf@x+2,___flmul@a+2
  9507   00150A  C072  F020         	movff	powf@x+3,___flmul@a+3
  9508   00150E  EC20  F024         	call	___flmul	;wreg free
  9509   001512  C019  F06F         	movff	?___flmul,?_powf
  9510   001516  C01A  F070         	movff	?___flmul+1,?_powf+1
  9511   00151A  C01B  F071         	movff	?___flmul+2,?_powf+2
  9512   00151E  C01C  F072         	movff	?___flmul+3,?_powf+3
  9513   001522  EFFF  F019         	goto	l1639
  9514   001526                     l12338:
  9515                           
  9516                           ; BSR set to: 1
  9517   001526  0E3F               	movlw	63
  9518   001528  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  9519   00152A  1184               	iorwf	powf@hy& (0+255),w,b
  9520   00152C  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9521   00152E  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9522   001530  A4D8               	btfss	status,2,c
  9523   001532  EF9D  F00A         	goto	u12911
  9524   001536  EF9F  F00A         	goto	u12910
  9525   00153A                     u12911:
  9526   00153A  EFBA  F00A         	goto	l1668
  9527   00153E                     u12910:
  9528   00153E                     
  9529                           ; BSR set to: 1
  9530   00153E  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9531   001540  EFA4  F00A         	goto	u12921
  9532   001544  EFA6  F00A         	goto	u12920
  9533   001548                     u12921:
  9534   001548  EFBA  F00A         	goto	l1668
  9535   00154C                     u12920:
  9536   00154C                     
  9537                           ; BSR set to: 1
  9538   00154C  C06F  F001         	movff	powf@x,sqrtf@x
  9539   001550  C070  F002         	movff	powf@x+1,sqrtf@x+1
  9540   001554  C071  F003         	movff	powf@x+2,sqrtf@x+2
  9541   001558  C072  F004         	movff	powf@x+3,sqrtf@x+3
  9542   00155C  EC35  F026         	call	_sqrtf	;wreg free
  9543   001560  C001  F06F         	movff	?_sqrtf,?_powf
  9544   001564  C002  F070         	movff	?_sqrtf+1,?_powf+1
  9545   001568  C003  F071         	movff	?_sqrtf+2,?_powf+2
  9546   00156C  C004  F072         	movff	?_sqrtf+3,?_powf+3
  9547   001570  EFFF  F019         	goto	l1639
  9548   001574                     l1668:
  9549                           
  9550                           ; BSR set to: 1
  9551   001574  C1AC  F178         	movff	powf@ix,powf@ax
  9552   001578  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  9553   00157C  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  9554   001580  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  9555   001584                     
  9556                           ; BSR set to: 1
  9557   001584  0E80               	movlw	128
  9558   001586  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9559   001588  E10B               	bnz	u12930
  9560   00158A  0E7F               	movlw	127
  9561   00158C  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9562   00158E  11AC               	iorwf	powf@ix& (0+255),w,b
  9563   001590  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9564   001592  B4D8               	btfsc	status,2,c
  9565   001594  EFCE  F00A         	goto	u12931
  9566   001598  EFD0  F00A         	goto	u12930
  9567   00159C                     u12931:
  9568   00159C  EFE9  F00A         	goto	l1672
  9569   0015A0                     u12930:
  9570   0015A0                     
  9571                           ; BSR set to: 1
  9572   0015A0  51AC               	movf	powf@ix& (0+255),w,b
  9573   0015A2  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9574   0015A4  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  9575   0015A6  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  9576   0015A8  B4D8               	btfsc	status,2,c
  9577   0015AA  EFD9  F00A         	goto	u12941
  9578   0015AE  EFDB  F00A         	goto	u12940
  9579   0015B2                     u12941:
  9580   0015B2  EFE9  F00A         	goto	l1672
  9581   0015B6                     u12940:
  9582   0015B6                     
  9583                           ; BSR set to: 1
  9584   0015B6  0E80               	movlw	128
  9585   0015B8  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9586   0015BA  E109               	bnz	u12951
  9587   0015BC  0E3F               	movlw	63
  9588   0015BE  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9589   0015C0  11AC               	iorwf	powf@ix& (0+255),w,b
  9590   0015C2  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9591   0015C4  A4D8               	btfss	status,2,c
  9592   0015C6  EFE7  F00A         	goto	u12951
  9593   0015CA  EFE9  F00A         	goto	u12950
  9594   0015CE                     u12951:
  9595   0015CE  EF72  F00B         	goto	l12370
  9596   0015D2                     u12950:
  9597   0015D2                     l1672:
  9598                           
  9599                           ; BSR set to: 1
  9600   0015D2  C178  F1B4         	movff	powf@ax,powf@z
  9601   0015D6  C179  F1B5         	movff	powf@ax+1,powf@z+1
  9602   0015DA  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  9603   0015DE  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  9604   0015E2                     
  9605                           ; BSR set to: 1
  9606   0015E2  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9607   0015E4  EFF8  F00A         	goto	u12960
  9608   0015E8  EFF6  F00A         	goto	u12961
  9609   0015EC                     u12961:
  9610   0015EC  EF12  F00B         	goto	l12356
  9611   0015F0                     u12960:
  9612   0015F0                     
  9613                           ; BSR set to: 1
  9614   0015F0  0E00               	movlw	0
  9615   0015F2  6E42               	movwf	___fldiv@b^0,c
  9616   0015F4  0E00               	movlw	0
  9617   0015F6  6E43               	movwf	(___fldiv@b+1)^0,c
  9618   0015F8  0E80               	movlw	128
  9619   0015FA  6E44               	movwf	(___fldiv@b+2)^0,c
  9620   0015FC  0E3F               	movlw	63
  9621   0015FE  6E45               	movwf	(___fldiv@b+3)^0,c
  9622   001600  C1B4  F046         	movff	powf@z,___fldiv@a
  9623   001604  C1B5  F047         	movff	powf@z+1,___fldiv@a+1
  9624   001608  C1B6  F048         	movff	powf@z+2,___fldiv@a+2
  9625   00160C  C1B7  F049         	movff	powf@z+3,___fldiv@a+3
  9626   001610  EC24  F028         	call	___fldiv	;wreg free
  9627   001614  C042  F1B4         	movff	?___fldiv,powf@z
  9628   001618  C043  F1B5         	movff	?___fldiv+1,powf@z+1
  9629   00161C  C044  F1B6         	movff	?___fldiv+2,powf@z+2
  9630   001620  C045  F1B7         	movff	?___fldiv+3,powf@z+3
  9631   001624                     l12356:
  9632   001624  0101               	movlb	1	; () banked
  9633   001626  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9634   001628  EF1A  F00B         	goto	u12970
  9635   00162C  EF18  F00B         	goto	u12971
  9636   001630                     u12971:
  9637   001630  EF68  F00B         	goto	l12366
  9638   001634                     u12970:
  9639   001634                     
  9640                           ; BSR set to: 1
  9641   001634  0E00               	movlw	0
  9642   001636  25AC               	addwf	powf@ix& (0+255),w,b
  9643   001638  6E77               	movwf	??_powf^0,c
  9644   00163A  0E00               	movlw	0
  9645   00163C  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  9646   00163E  6E78               	movwf	(??_powf+1)^0,c
  9647   001640  0E80               	movlw	128
  9648   001642  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  9649   001644  6E79               	movwf	(??_powf+2)^0,c
  9650   001646  0EC0               	movlw	192
  9651   001648  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  9652   00164A  6E7A               	movwf	(??_powf+3)^0,c
  9653   00164C  5154               	movf	powf@yisint& (0+255),w,b
  9654   00164E  1077               	iorwf	??_powf^0,w,c
  9655   001650  6E7B               	movwf	(??_powf+4)^0,c
  9656   001652  5155               	movf	(powf@yisint+1)& (0+255),w,b
  9657   001654  1078               	iorwf	(??_powf+1)^0,w,c
  9658   001656  6E7C               	movwf	(??_powf+5)^0,c
  9659   001658  5156               	movf	(powf@yisint+2)& (0+255),w,b
  9660   00165A  1079               	iorwf	(??_powf+2)^0,w,c
  9661   00165C  6E7D               	movwf	(??_powf+6)^0,c
  9662   00165E  5157               	movf	(powf@yisint+3)& (0+255),w,b
  9663   001660  107A               	iorwf	(??_powf+3)^0,w,c
  9664   001662  6E7E               	movwf	(??_powf+7)^0,c
  9665   001664  507B               	movf	(??_powf+4)^0,w,c
  9666   001666  107C               	iorwf	(??_powf+5)^0,w,c
  9667   001668  107D               	iorwf	(??_powf+6)^0,w,c
  9668   00166A  107E               	iorwf	(??_powf+7)^0,w,c
  9669   00166C  A4D8               	btfss	status,2,c
  9670   00166E  EF3B  F00B         	goto	u12981
  9671   001672  EF3D  F00B         	goto	u12980
  9672   001676                     u12981:
  9673   001676  EF4B  F00B         	goto	l12362
  9674   00167A                     u12980:
  9675   00167A                     l12360:
  9676                           
  9677                           ; BSR set to: 1
  9678   00167A  0E00               	movlw	0
  9679   00167C  6FE7               	movwf	(_errno+1)& (0+255),b
  9680   00167E  0E21               	movlw	33
  9681   001680  6FE6               	movwf	_errno& (0+255),b
  9682   001682  0EFF               	movlw	255
  9683   001684  6FB4               	movwf	powf@z& (0+255),b
  9684   001686  0EFF               	movlw	255
  9685   001688  6FB5               	movwf	(powf@z+1)& (0+255),b
  9686   00168A  0EFF               	movlw	255
  9687   00168C  6FB6               	movwf	(powf@z+2)& (0+255),b
  9688   00168E  0E7F               	movlw	127
  9689   001690  6FB7               	movwf	(powf@z+3)& (0+255),b
  9690   001692  EF68  F00B         	goto	l12366
  9691   001696                     l12362:
  9692                           
  9693                           ; BSR set to: 1
  9694   001696  0554               	decf	powf@yisint& (0+255),w,b
  9695   001698  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9696   00169A  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9697   00169C  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9698   00169E  A4D8               	btfss	status,2,c
  9699   0016A0  EF54  F00B         	goto	u12991
  9700   0016A4  EF56  F00B         	goto	u12990
  9701   0016A8                     u12991:
  9702   0016A8  EF68  F00B         	goto	l12366
  9703   0016AC                     u12990:
  9704   0016AC                     
  9705                           ; BSR set to: 1
  9706   0016AC  C1B4  F001         	movff	powf@z,___flneg@f1
  9707   0016B0  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  9708   0016B4  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  9709   0016B8  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  9710   0016BC  EC59  F03C         	call	___flneg	;wreg free
  9711   0016C0  C001  F1B4         	movff	?___flneg,powf@z
  9712   0016C4  C002  F1B5         	movff	?___flneg+1,powf@z+1
  9713   0016C8  C003  F1B6         	movff	?___flneg+2,powf@z+2
  9714   0016CC  C004  F1B7         	movff	?___flneg+3,powf@z+3
  9715   0016D0                     l12366:
  9716   0016D0  C1B4  F06F         	movff	powf@z,?_powf
  9717   0016D4  C1B5  F070         	movff	powf@z+1,?_powf+1
  9718   0016D8  C1B6  F071         	movff	powf@z+2,?_powf+2
  9719   0016DC  C1B7  F072         	movff	powf@z+3,?_powf+3
  9720   0016E0  EFFF  F019         	goto	l1639
  9721   0016E4                     l12370:
  9722                           
  9723                           ; BSR set to: 1
  9724   0016E4  0E00               	movlw	0
  9725   0016E6  6F64               	movwf	powf@sn& (0+255),b
  9726   0016E8  0E00               	movlw	0
  9727   0016EA  6F65               	movwf	(powf@sn+1)& (0+255),b
  9728   0016EC  0E00               	movlw	0
  9729   0016EE  6F66               	movwf	(powf@sn+2)& (0+255),b
  9730   0016F0  0E00               	movlw	0
  9731   0016F2  6F67               	movwf	(powf@sn+3)& (0+255),b
  9732   0016F4                     
  9733                           ; BSR set to: 1
  9734   0016F4  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9735   0016F6  EF81  F00B         	goto	u13000
  9736   0016FA  EF7F  F00B         	goto	u13001
  9737   0016FE                     u13001:
  9738   0016FE  EFA1  F00B         	goto	l12386
  9739   001702                     u13000:
  9740   001702                     
  9741                           ; BSR set to: 1
  9742   001702  5154               	movf	powf@yisint& (0+255),w,b
  9743   001704  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9744   001706  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9745   001708  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9746   00170A  A4D8               	btfss	status,2,c
  9747   00170C  EF8A  F00B         	goto	u13011
  9748   001710  EF8C  F00B         	goto	u13010
  9749   001714                     u13011:
  9750   001714  EF8E  F00B         	goto	l12382
  9751   001718                     u13010:
  9752   001718  EF3D  F00B         	goto	l12360
  9753   00171C                     l12382:
  9754                           
  9755                           ; BSR set to: 1
  9756   00171C  0554               	decf	powf@yisint& (0+255),w,b
  9757   00171E  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9758   001720  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9759   001722  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9760   001724  A4D8               	btfss	status,2,c
  9761   001726  EF97  F00B         	goto	u13021
  9762   00172A  EF99  F00B         	goto	u13020
  9763   00172E                     u13021:
  9764   00172E  EFA1  F00B         	goto	l12386
  9765   001732                     u13020:
  9766   001732                     
  9767                           ; BSR set to: 1
  9768   001732  0E00               	movlw	0
  9769   001734  6F64               	movwf	powf@sn& (0+255),b
  9770   001736  0E00               	movlw	0
  9771   001738  6F65               	movwf	(powf@sn+1)& (0+255),b
  9772   00173A  0E00               	movlw	0
  9773   00173C  6F66               	movwf	(powf@sn+2)& (0+255),b
  9774   00173E  0E80               	movlw	128
  9775   001740  6F67               	movwf	(powf@sn+3)& (0+255),b
  9776   001742                     l12386:
  9777                           
  9778                           ; BSR set to: 1
  9779   001742  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9780   001744  EFB0  F00B         	goto	u13031
  9781   001748  0594               	decf	powf@iy& (0+255),w,b
  9782   00174A  0E00               	movlw	0
  9783   00174C  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  9784   00174E  0E00               	movlw	0
  9785   001750  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  9786   001752  0E4D               	movlw	77
  9787   001754  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9788   001756  A0D8               	btfss	status,0,c
  9789   001758  EFB0  F00B         	goto	u13031
  9790   00175C  EFB2  F00B         	goto	u13030
  9791   001760                     u13031:
  9792   001760  EF74  F00D         	goto	l12442
  9793   001764                     u13030:
  9794   001764                     
  9795                           ; BSR set to: 1
  9796   001764  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9797   001766  EFC4  F00B         	goto	u13040
  9798   00176A  0EF8               	movlw	248
  9799   00176C  5DAC               	subwf	powf@ix& (0+255),w,b
  9800   00176E  0EFF               	movlw	255
  9801   001770  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9802   001772  0E7F               	movlw	127
  9803   001774  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9804   001776  0E3F               	movlw	63
  9805   001778  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9806   00177A  B0D8               	btfsc	status,0,c
  9807   00177C  EFC2  F00B         	goto	u13041
  9808   001780  EFC4  F00B         	goto	u13040
  9809   001784                     u13041:
  9810   001784  EFE4  F00B         	goto	l12404
  9811   001788                     u13040:
  9812   001788                     
  9813                           ; BSR set to: 1
  9814   001788  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9815   00178A  EFCB  F00B         	goto	u13050
  9816   00178E  EFC9  F00B         	goto	u13051
  9817   001792                     u13051:
  9818   001792  EFDA  F00B         	goto	l12400
  9819   001796                     u13050:
  9820   001796                     l12392:
  9821   001796  0E00               	movlw	0
  9822   001798  0101               	movlb	1	; () banked
  9823   00179A  1164               	iorwf	powf@sn& (0+255),w,b
  9824   00179C  6FB4               	movwf	powf@z& (0+255),b
  9825   00179E  0E00               	movlw	0
  9826   0017A0  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  9827   0017A2  6FB5               	movwf	(powf@z+1)& (0+255),b
  9828   0017A4  0E80               	movlw	128
  9829   0017A6  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  9830   0017A8  6FB6               	movwf	(powf@z+2)& (0+255),b
  9831   0017AA  0E7F               	movlw	127
  9832   0017AC  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  9833   0017AE  6FB7               	movwf	(powf@z+3)& (0+255),b
  9834   0017B0  EF68  F00B         	goto	l12366
  9835   0017B4                     l12400:
  9836                           
  9837                           ; BSR set to: 1
  9838   0017B4  0E00               	movlw	0
  9839   0017B6  6E6F               	movwf	?_powf^0,c
  9840   0017B8  0E00               	movlw	0
  9841   0017BA  6E70               	movwf	(?_powf+1)^0,c
  9842   0017BC  0E00               	movlw	0
  9843   0017BE  6E71               	movwf	(?_powf+2)^0,c
  9844   0017C0  0E00               	movlw	0
  9845   0017C2  6E72               	movwf	(?_powf+3)^0,c
  9846   0017C4  EFFF  F019         	goto	l1639
  9847   0017C8                     l12404:
  9848                           
  9849                           ; BSR set to: 1
  9850   0017C8  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9851   0017CA  EFF4  F00B         	goto	u13061
  9852   0017CE  0E08               	movlw	8
  9853   0017D0  5DAC               	subwf	powf@ix& (0+255),w,b
  9854   0017D2  0E00               	movlw	0
  9855   0017D4  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9856   0017D6  0E80               	movlw	128
  9857   0017D8  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9858   0017DA  0E3F               	movlw	63
  9859   0017DC  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9860   0017DE  A0D8               	btfss	status,0,c
  9861   0017E0  EFF4  F00B         	goto	u13061
  9862   0017E4  EFF6  F00B         	goto	u13060
  9863   0017E8                     u13061:
  9864   0017E8  EF11  F00C         	goto	l12420
  9865   0017EC                     u13060:
  9866   0017EC                     
  9867                           ; BSR set to: 1
  9868   0017EC  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9869   0017EE  EF03  F00C         	goto	u13071
  9870   0017F2  5187               	movf	(powf@hy+3)& (0+255),w,b
  9871   0017F4  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9872   0017F6  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9873   0017F8  E108               	bnz	u13070
  9874   0017FA  0584               	decf	powf@hy& (0+255),w,b
  9875   0017FC  A0D8               	btfss	status,0,c
  9876   0017FE  EF03  F00C         	goto	u13071
  9877   001802  EF05  F00C         	goto	u13070
  9878   001806                     u13071:
  9879   001806  EF07  F00C         	goto	l12416
  9880   00180A                     u13070:
  9881   00180A  EFCB  F00B         	goto	l12392
  9882   00180E                     l12416:
  9883                           
  9884                           ; BSR set to: 1
  9885   00180E  0E00               	movlw	0
  9886   001810  6E6F               	movwf	?_powf^0,c
  9887   001812  0E00               	movlw	0
  9888   001814  6E70               	movwf	(?_powf+1)^0,c
  9889   001816  0E00               	movlw	0
  9890   001818  6E71               	movwf	(?_powf+2)^0,c
  9891   00181A  0E00               	movlw	0
  9892   00181C  6E72               	movwf	(?_powf+3)^0,c
  9893   00181E  EFFF  F019         	goto	l1639
  9894   001822                     l12420:
  9895                           
  9896                           ; BSR set to: 1
  9897   001822  C178  F032         	movff	powf@ax,___fladd@b
  9898   001826  C179  F033         	movff	powf@ax+1,___fladd@b+1
  9899   00182A  C17A  F034         	movff	powf@ax+2,___fladd@b+2
  9900   00182E  C17B  F035         	movff	powf@ax+3,___fladd@b+3
  9901   001832  0E00               	movlw	0
  9902   001834  6E36               	movwf	___fladd@a^0,c
  9903   001836  0E00               	movlw	0
  9904   001838  6E37               	movwf	(___fladd@a+1)^0,c
  9905   00183A  0E80               	movlw	128
  9906   00183C  6E38               	movwf	(___fladd@a+2)^0,c
  9907   00183E  0EBF               	movlw	191
  9908   001840  6E39               	movwf	(___fladd@a+3)^0,c
  9909   001842  ECC0  F021         	call	___fladd	;wreg free
  9910   001846  C032  F1B0         	movff	?___fladd,powf@t
  9911   00184A  C033  F1B1         	movff	?___fladd+1,powf@t+1
  9912   00184E  C034  F1B2         	movff	?___fladd+2,powf@t+2
  9913   001852  C035  F1B3         	movff	?___fladd+3,powf@t+3
  9914   001856  0E00               	movlw	0
  9915   001858  6E1D               	movwf	___flmul@a^0,c
  9916   00185A  0E00               	movlw	0
  9917   00185C  6E1E               	movwf	(___flmul@a+1)^0,c
  9918   00185E  0E80               	movlw	128
  9919   001860  6E1F               	movwf	(___flmul@a+2)^0,c
  9920   001862  0E3E               	movlw	62
  9921   001864  6E20               	movwf	(___flmul@a+3)^0,c
  9922   001866  C1B0  F019         	movff	powf@t,___flmul@b
  9923   00186A  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  9924   00186E  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  9925   001872  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  9926   001876  EC20  F024         	call	___flmul	;wreg free
  9927   00187A  C019  F05F         	movff	?___flmul,___flsub@a
  9928   00187E  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  9929   001882  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  9930   001886  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  9931   00188A  0EAB               	movlw	171
  9932   00188C  6E5B               	movwf	___flsub@b^0,c
  9933   00188E  0EAA               	movlw	170
  9934   001890  6E5C               	movwf	(___flsub@b+1)^0,c
  9935   001892  0EAA               	movlw	170
  9936   001894  6E5D               	movwf	(___flsub@b+2)^0,c
  9937   001896  0E3E               	movlw	62
  9938   001898  6E5E               	movwf	(___flsub@b+3)^0,c
  9939   00189A  ECCB  F03A         	call	___flsub	;wreg free
  9940   00189E  C05B  F148         	movff	?___flsub,_powf$2094
  9941   0018A2  C05C  F149         	movff	?___flsub+1,_powf$2094+1
  9942   0018A6  C05D  F14A         	movff	?___flsub+2,_powf$2094+2
  9943   0018AA  C05E  F14B         	movff	?___flsub+3,_powf$2094+3
  9944   0018AE  C1B0  F01D         	movff	powf@t,___flmul@a
  9945   0018B2  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  9946   0018B6  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  9947   0018BA  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  9948   0018BE  C1B0  F019         	movff	powf@t,___flmul@b
  9949   0018C2  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  9950   0018C6  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  9951   0018CA  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
  9952   0018CE  EC20  F024         	call	___flmul	;wreg free
  9953   0018D2  C019  F15C         	movff	?___flmul,_powf$2095
  9954   0018D6  C01A  F15D         	movff	?___flmul+1,_powf$2095+1
  9955   0018DA  C01B  F15E         	movff	?___flmul+2,_powf$2095+2
  9956   0018DE  C01C  F15F         	movff	?___flmul+3,_powf$2095+3
  9957   0018E2  C1B0  F01D         	movff	powf@t,___flmul@a
  9958   0018E6  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
  9959   0018EA  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
  9960   0018EE  C1B3  F020         	movff	powf@t+3,___flmul@a+3
  9961   0018F2  C148  F019         	movff	_powf$2094,___flmul@b
  9962   0018F6  C149  F01A         	movff	_powf$2094+1,___flmul@b+1
  9963   0018FA  C14A  F01B         	movff	_powf$2094+2,___flmul@b+2
  9964   0018FE  C14B  F01C         	movff	_powf$2094+3,___flmul@b+3
  9965   001902  EC20  F024         	call	___flmul	;wreg free
  9966   001906  C019  F05F         	movff	?___flmul,___flsub@a
  9967   00190A  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  9968   00190E  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  9969   001912  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  9970   001916  0E00               	movlw	0
  9971   001918  6E5B               	movwf	___flsub@b^0,c
  9972   00191A  0E00               	movlw	0
  9973   00191C  6E5C               	movwf	(___flsub@b+1)^0,c
  9974   00191E  0E00               	movlw	0
  9975   001920  6E5D               	movwf	(___flsub@b+2)^0,c
  9976   001922  0E3F               	movlw	63
  9977   001924  6E5E               	movwf	(___flsub@b+3)^0,c
  9978   001926  ECCB  F03A         	call	___flsub	;wreg free
  9979   00192A  C05B  F14C         	movff	?___flsub,_powf$2096
  9980   00192E  C05C  F14D         	movff	?___flsub+1,_powf$2096+1
  9981   001932  C05D  F14E         	movff	?___flsub+2,_powf$2096+2
  9982   001936  C05E  F14F         	movff	?___flsub+3,_powf$2096+3
  9983   00193A  C15C  F019         	movff	_powf$2095,___flmul@b
  9984   00193E  C15D  F01A         	movff	_powf$2095+1,___flmul@b+1
  9985   001942  C15E  F01B         	movff	_powf$2095+2,___flmul@b+2
  9986   001946  C15F  F01C         	movff	_powf$2095+3,___flmul@b+3
  9987   00194A  C14C  F01D         	movff	_powf$2096,___flmul@a
  9988   00194E  C14D  F01E         	movff	_powf$2096+1,___flmul@a+1
  9989   001952  C14E  F01F         	movff	_powf$2096+2,___flmul@a+2
  9990   001956  C14F  F020         	movff	_powf$2096+3,___flmul@a+3
  9991   00195A  EC20  F024         	call	___flmul	;wreg free
  9992   00195E  C019  F144         	movff	?___flmul,powf@w
  9993   001962  C01A  F145         	movff	?___flmul+1,powf@w+1
  9994   001966  C01B  F146         	movff	?___flmul+2,powf@w+2
  9995   00196A  C01C  F147         	movff	?___flmul+3,powf@w+3
  9996   00196E  C1B0  F019         	movff	powf@t,___flmul@b
  9997   001972  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
  9998   001976  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
  9999   00197A  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10000   00197E  0E00               	movlw	0
 10001   001980  6E1D               	movwf	___flmul@a^0,c
 10002   001982  0EAA               	movlw	170
 10003   001984  6E1E               	movwf	(___flmul@a+1)^0,c
 10004   001986  0EB8               	movlw	184
 10005   001988  6E1F               	movwf	(___flmul@a+2)^0,c
 10006   00198A  0E3F               	movlw	63
 10007   00198C  6E20               	movwf	(___flmul@a+3)^0,c
 10008   00198E  EC20  F024         	call	___flmul	;wreg free
 10009   001992  C019  F17C         	movff	?___flmul,powf@u
 10010   001996  C01A  F17D         	movff	?___flmul+1,powf@u+1
 10011   00199A  C01B  F17E         	movff	?___flmul+2,powf@u+2
 10012   00199E  C01C  F17F         	movff	?___flmul+3,powf@u+3
 10013   0019A2  0E70               	movlw	112
 10014   0019A4  6E1D               	movwf	___flmul@a^0,c
 10015   0019A6  0EA5               	movlw	165
 10016   0019A8  6E1E               	movwf	(___flmul@a+1)^0,c
 10017   0019AA  0EEC               	movlw	236
 10018   0019AC  6E1F               	movwf	(___flmul@a+2)^0,c
 10019   0019AE  0E36               	movlw	54
 10020   0019B0  6E20               	movwf	(___flmul@a+3)^0,c
 10021   0019B2  C1B0  F019         	movff	powf@t,___flmul@b
 10022   0019B6  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10023   0019BA  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10024   0019BE  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10025   0019C2  EC20  F024         	call	___flmul	;wreg free
 10026   0019C6  C019  F05B         	movff	?___flmul,___flsub@b
 10027   0019CA  C01A  F05C         	movff	?___flmul+1,___flsub@b+1
 10028   0019CE  C01B  F05D         	movff	?___flmul+2,___flsub@b+2
 10029   0019D2  C01C  F05E         	movff	?___flmul+3,___flsub@b+3
 10030   0019D6  0E3B               	movlw	59
 10031   0019D8  6E1D               	movwf	___flmul@a^0,c
 10032   0019DA  0EAA               	movlw	170
 10033   0019DC  6E1E               	movwf	(___flmul@a+1)^0,c
 10034   0019DE  0EB8               	movlw	184
 10035   0019E0  6E1F               	movwf	(___flmul@a+2)^0,c
 10036   0019E2  0E3F               	movlw	63
 10037   0019E4  6E20               	movwf	(___flmul@a+3)^0,c
 10038   0019E6  C144  F019         	movff	powf@w,___flmul@b
 10039   0019EA  C145  F01A         	movff	powf@w+1,___flmul@b+1
 10040   0019EE  C146  F01B         	movff	powf@w+2,___flmul@b+2
 10041   0019F2  C147  F01C         	movff	powf@w+3,___flmul@b+3
 10042   0019F6  EC20  F024         	call	___flmul	;wreg free
 10043   0019FA  C019  F05F         	movff	?___flmul,___flsub@a
 10044   0019FE  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10045   001A02  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10046   001A06  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10047   001A0A  ECCB  F03A         	call	___flsub	;wreg free
 10048   001A0E  C05B  F180         	movff	?___flsub,powf@v
 10049   001A12  C05C  F181         	movff	?___flsub+1,powf@v+1
 10050   001A16  C05D  F182         	movff	?___flsub+2,powf@v+2
 10051   001A1A  C05E  F183         	movff	?___flsub+3,powf@v+3
 10052   001A1E  C17C  F032         	movff	powf@u,___fladd@b
 10053   001A22  C17D  F033         	movff	powf@u+1,___fladd@b+1
 10054   001A26  C17E  F034         	movff	powf@u+2,___fladd@b+2
 10055   001A2A  C17F  F035         	movff	powf@u+3,___fladd@b+3
 10056   001A2E  C180  F036         	movff	powf@v,___fladd@a
 10057   001A32  C181  F037         	movff	powf@v+1,___fladd@a+1
 10058   001A36  C182  F038         	movff	powf@v+2,___fladd@a+2
 10059   001A3A  C183  F039         	movff	powf@v+3,___fladd@a+3
 10060   001A3E  ECC0  F021         	call	___fladd	;wreg free
 10061   001A42  C032  F18C         	movff	?___fladd,powf@t1
 10062   001A46  C033  F18D         	movff	?___fladd+1,powf@t1+1
 10063   001A4A  C034  F18E         	movff	?___fladd+2,powf@t1+2
 10064   001A4E  C035  F18F         	movff	?___fladd+3,powf@t1+3
 10065   001A52  C18C  F198         	movff	powf@t1,powf@is
 10066   001A56  C18D  F199         	movff	powf@t1+1,powf@is+1
 10067   001A5A  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10068   001A5E  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10069   001A62  0E00               	movlw	0
 10070   001A64  0101               	movlb	1	; () banked
 10071   001A66  1598               	andwf	powf@is& (0+255),w,b
 10072   001A68  6F8C               	movwf	powf@t1& (0+255),b
 10073   001A6A  0EF0               	movlw	240
 10074   001A6C  1599               	andwf	(powf@is+1)& (0+255),w,b
 10075   001A6E  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10076   001A70  0EFF               	movlw	255
 10077   001A72  159A               	andwf	(powf@is+2)& (0+255),w,b
 10078   001A74  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10079   001A76  0EFF               	movlw	255
 10080   001A78  159B               	andwf	(powf@is+3)& (0+255),w,b
 10081   001A7A  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10082   001A7C                     
 10083                           ; BSR set to: 1
 10084   001A7C  C17C  F05F         	movff	powf@u,___flsub@a
 10085   001A80  C17D  F060         	movff	powf@u+1,___flsub@a+1
 10086   001A84  C17E  F061         	movff	powf@u+2,___flsub@a+2
 10087   001A88  C17F  F062         	movff	powf@u+3,___flsub@a+3
 10088   001A8C  C18C  F05B         	movff	powf@t1,___flsub@b
 10089   001A90  C18D  F05C         	movff	powf@t1+1,___flsub@b+1
 10090   001A94  C18E  F05D         	movff	powf@t1+2,___flsub@b+2
 10091   001A98  C18F  F05E         	movff	powf@t1+3,___flsub@b+3
 10092   001A9C  ECCB  F03A         	call	___flsub	;wreg free
 10093   001AA0  C05B  F19C         	movff	?___flsub,_powf$2097
 10094   001AA4  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 10095   001AA8  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 10096   001AAC  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 10097   001AB0  C180  F05B         	movff	powf@v,___flsub@b
 10098   001AB4  C181  F05C         	movff	powf@v+1,___flsub@b+1
 10099   001AB8  C182  F05D         	movff	powf@v+2,___flsub@b+2
 10100   001ABC  C183  F05E         	movff	powf@v+3,___flsub@b+3
 10101   001AC0  C19C  F05F         	movff	_powf$2097,___flsub@a
 10102   001AC4  C19D  F060         	movff	_powf$2097+1,___flsub@a+1
 10103   001AC8  C19E  F061         	movff	_powf$2097+2,___flsub@a+2
 10104   001ACC  C19F  F062         	movff	_powf$2097+3,___flsub@a+3
 10105   001AD0  ECCB  F03A         	call	___flsub	;wreg free
 10106   001AD4  C05B  F11C         	movff	?___flsub,powf@t2
 10107   001AD8  C05C  F11D         	movff	?___flsub+1,powf@t2+1
 10108   001ADC  C05D  F11E         	movff	?___flsub+2,powf@t2+2
 10109   001AE0  C05E  F11F         	movff	?___flsub+3,powf@t2+3
 10110   001AE4  EF36  F014         	goto	l12570
 10111   001AE8                     l12442:
 10112                           
 10113                           ; BSR set to: 1
 10114   001AE8  0E00               	movlw	0
 10115   001AEA  6F88               	movwf	powf@n& (0+255),b
 10116   001AEC  0E00               	movlw	0
 10117   001AEE  6F89               	movwf	(powf@n+1)& (0+255),b
 10118   001AF0  0E00               	movlw	0
 10119   001AF2  6F8A               	movwf	(powf@n+2)& (0+255),b
 10120   001AF4  0E00               	movlw	0
 10121   001AF6  6F8B               	movwf	(powf@n+3)& (0+255),b
 10122   001AF8                     
 10123                           ; BSR set to: 1
 10124   001AF8  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10125   001AFA  EF8A  F00D         	goto	u13080
 10126   001AFE  51AF               	movf	(powf@ix+3)& (0+255),w,b
 10127   001B00  E107               	bnz	u13081
 10128   001B02  0E80               	movlw	128
 10129   001B04  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
 10130   001B06  B0D8               	btfsc	status,0,c
 10131   001B08  EF88  F00D         	goto	u13081
 10132   001B0C  EF8A  F00D         	goto	u13080
 10133   001B10                     u13081:
 10134   001B10  EFB5  F00D         	goto	l12452
 10135   001B14                     u13080:
 10136   001B14                     
 10137                           ; BSR set to: 1
 10138   001B14  C178  F019         	movff	powf@ax,___flmul@b
 10139   001B18  C179  F01A         	movff	powf@ax+1,___flmul@b+1
 10140   001B1C  C17A  F01B         	movff	powf@ax+2,___flmul@b+2
 10141   001B20  C17B  F01C         	movff	powf@ax+3,___flmul@b+3
 10142   001B24  0E00               	movlw	0
 10143   001B26  6E1D               	movwf	___flmul@a^0,c
 10144   001B28  0E00               	movlw	0
 10145   001B2A  6E1E               	movwf	(___flmul@a+1)^0,c
 10146   001B2C  0E80               	movlw	128
 10147   001B2E  6E1F               	movwf	(___flmul@a+2)^0,c
 10148   001B30  0E4B               	movlw	75
 10149   001B32  6E20               	movwf	(___flmul@a+3)^0,c
 10150   001B34  EC20  F024         	call	___flmul	;wreg free
 10151   001B38  C019  F178         	movff	?___flmul,powf@ax
 10152   001B3C  C01A  F179         	movff	?___flmul+1,powf@ax+1
 10153   001B40  C01B  F17A         	movff	?___flmul+2,powf@ax+2
 10154   001B44  C01C  F17B         	movff	?___flmul+3,powf@ax+3
 10155   001B48  0EE8               	movlw	232
 10156   001B4A  0101               	movlb	1	; () banked
 10157   001B4C  2788               	addwf	powf@n& (0+255),f,b
 10158   001B4E  0EFF               	movlw	255
 10159   001B50  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10160   001B52  0EFF               	movlw	255
 10161   001B54  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10162   001B56  0EFF               	movlw	255
 10163   001B58  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10164   001B5A                     
 10165                           ; BSR set to: 1
 10166   001B5A  C178  F1AC         	movff	powf@ax,powf@ix
 10167   001B5E  C179  F1AD         	movff	powf@ax+1,powf@ix+1
 10168   001B62  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
 10169   001B66  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
 10170   001B6A                     l12452:
 10171                           
 10172                           ; BSR set to: 1
 10173   001B6A  0E17               	movlw	23
 10174   001B6C  6E77               	movwf	??_powf^0,c
 10175   001B6E  C1AC  F078         	movff	powf@ix,??_powf+1
 10176   001B72  C1AD  F079         	movff	powf@ix+1,??_powf+2
 10177   001B76  C1AE  F07A         	movff	powf@ix+2,??_powf+3
 10178   001B7A  C1AF  F07B         	movff	powf@ix+3,??_powf+4
 10179   001B7E                     u13095:
 10180   001B7E  6677               	tstfsz	??_powf^0,c
 10181   001B80  EFC4  F00D         	goto	u13096
 10182   001B84  EFCC  F00D         	goto	u13097
 10183   001B88                     u13096:
 10184   001B88  347B               	rlcf	(??_powf+4)^0,w,c
 10185   001B8A  327B               	rrcf	(??_powf+4)^0,f,c
 10186   001B8C  327A               	rrcf	(??_powf+3)^0,f,c
 10187   001B8E  3279               	rrcf	(??_powf+2)^0,f,c
 10188   001B90  3278               	rrcf	(??_powf+1)^0,f,c
 10189   001B92  2E77               	decfsz	??_powf^0,f,c
 10190   001B94  EFBF  F00D         	goto	u13095
 10191   001B98                     u13097:
 10192   001B98  0E81               	movlw	129
 10193   001B9A  2478               	addwf	(??_powf+1)^0,w,c
 10194   001B9C  6E7C               	movwf	(??_powf+5)^0,c
 10195   001B9E  0EFF               	movlw	255
 10196   001BA0  2079               	addwfc	(??_powf+2)^0,w,c
 10197   001BA2  6E7D               	movwf	(??_powf+6)^0,c
 10198   001BA4  0EFF               	movlw	255
 10199   001BA6  207A               	addwfc	(??_powf+3)^0,w,c
 10200   001BA8  6E7E               	movwf	(??_powf+7)^0,c
 10201   001BAA  0EFF               	movlw	255
 10202   001BAC  207B               	addwfc	(??_powf+4)^0,w,c
 10203   001BAE  6E7F               	movwf	(??_powf+8)^0,c
 10204   001BB0  507C               	movf	(??_powf+5)^0,w,c
 10205   001BB2  0101               	movlb	1	; () banked
 10206   001BB4  2788               	addwf	powf@n& (0+255),f,b
 10207   001BB6  507D               	movf	(??_powf+6)^0,w,c
 10208   001BB8  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10209   001BBA  507E               	movf	(??_powf+7)^0,w,c
 10210   001BBC  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10211   001BBE  507F               	movf	(??_powf+8)^0,w,c
 10212   001BC0  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10213   001BC2                     
 10214                           ; BSR set to: 1
 10215   001BC2  0EFF               	movlw	255
 10216   001BC4  15AC               	andwf	powf@ix& (0+255),w,b
 10217   001BC6  6FA8               	movwf	powf@j& (0+255),b
 10218   001BC8  0EFF               	movlw	255
 10219   001BCA  15AD               	andwf	(powf@ix+1)& (0+255),w,b
 10220   001BCC  6FA9               	movwf	(powf@j+1)& (0+255),b
 10221   001BCE  0E7F               	movlw	127
 10222   001BD0  15AE               	andwf	(powf@ix+2)& (0+255),w,b
 10223   001BD2  6FAA               	movwf	(powf@j+2)& (0+255),b
 10224   001BD4  0E00               	movlw	0
 10225   001BD6  15AF               	andwf	(powf@ix+3)& (0+255),w,b
 10226   001BD8  6FAB               	movwf	(powf@j+3)& (0+255),b
 10227   001BDA                     
 10228                           ; BSR set to: 1
 10229   001BDA  0E00               	movlw	0
 10230   001BDC  6FA4               	movwf	powf@k& (0+255),b
 10231   001BDE  0E00               	movlw	0
 10232   001BE0  6FA5               	movwf	(powf@k+1)& (0+255),b
 10233   001BE2  0E00               	movlw	0
 10234   001BE4  6FA6               	movwf	(powf@k+2)& (0+255),b
 10235   001BE6  0E00               	movlw	0
 10236   001BE8  6FA7               	movwf	(powf@k+3)& (0+255),b
 10237   001BEA                     
 10238                           ; BSR set to: 1
 10239   001BEA  0E00               	movlw	0
 10240   001BEC  11A8               	iorwf	powf@j& (0+255),w,b
 10241   001BEE  6FAC               	movwf	powf@ix& (0+255),b
 10242   001BF0  0E00               	movlw	0
 10243   001BF2  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10244   001BF4  6FAD               	movwf	(powf@ix+1)& (0+255),b
 10245   001BF6  0E80               	movlw	128
 10246   001BF8  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 10247   001BFA  6FAE               	movwf	(powf@ix+2)& (0+255),b
 10248   001BFC  0E3F               	movlw	63
 10249   001BFE  11AB               	iorwf	(powf@j+3)& (0+255),w,b
 10250   001C00  6FAF               	movwf	(powf@ix+3)& (0+255),b
 10251   001C02                     
 10252                           ; BSR set to: 1
 10253   001C02  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10254   001C04  EF13  F00E         	goto	u13100
 10255   001C08  51AB               	movf	(powf@j+3)& (0+255),w,b
 10256   001C0A  E10B               	bnz	u13101
 10257   001C0C  0E72               	movlw	114
 10258   001C0E  5DA8               	subwf	powf@j& (0+255),w,b
 10259   001C10  0EC4               	movlw	196
 10260   001C12  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10261   001C14  0E1C               	movlw	28
 10262   001C16  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10263   001C18  B0D8               	btfsc	status,0,c
 10264   001C1A  EF11  F00E         	goto	u13101
 10265   001C1E  EF13  F00E         	goto	u13100
 10266   001C22                     u13101:
 10267   001C22  EF15  F00E         	goto	l12464
 10268   001C26                     u13100:
 10269   001C26  EF3F  F00E         	goto	l12470
 10270   001C2A                     l12464:
 10271                           
 10272                           ; BSR set to: 1
 10273   001C2A  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10274   001C2C  EF27  F00E         	goto	u13110
 10275   001C30  51AB               	movf	(powf@j+3)& (0+255),w,b
 10276   001C32  E10B               	bnz	u13111
 10277   001C34  0ED7               	movlw	215
 10278   001C36  5DA8               	subwf	powf@j& (0+255),w,b
 10279   001C38  0EB3               	movlw	179
 10280   001C3A  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10281   001C3C  0E5D               	movlw	93
 10282   001C3E  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10283   001C40  B0D8               	btfsc	status,0,c
 10284   001C42  EF25  F00E         	goto	u13111
 10285   001C46  EF27  F00E         	goto	u13110
 10286   001C4A                     u13111:
 10287   001C4A  EF31  F00E         	goto	l12468
 10288   001C4E                     u13110:
 10289   001C4E                     
 10290                           ; BSR set to: 1
 10291   001C4E  0E01               	movlw	1
 10292   001C50  6FA4               	movwf	powf@k& (0+255),b
 10293   001C52  0E00               	movlw	0
 10294   001C54  6FA5               	movwf	(powf@k+1)& (0+255),b
 10295   001C56  0E00               	movlw	0
 10296   001C58  6FA6               	movwf	(powf@k+2)& (0+255),b
 10297   001C5A  0E00               	movlw	0
 10298   001C5C  6FA7               	movwf	(powf@k+3)& (0+255),b
 10299   001C5E  EF3F  F00E         	goto	l12470
 10300   001C62                     l12468:
 10301                           
 10302                           ; BSR set to: 1
 10303   001C62  0E01               	movlw	1
 10304   001C64  2788               	addwf	powf@n& (0+255),f,b
 10305   001C66  0E00               	movlw	0
 10306   001C68  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10307   001C6A  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10308   001C6C  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10309   001C6E  0E00               	movlw	0
 10310   001C70  27AC               	addwf	powf@ix& (0+255),f,b
 10311   001C72  0E00               	movlw	0
 10312   001C74  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
 10313   001C76  0E80               	movlw	128
 10314   001C78  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
 10315   001C7A  0EFF               	movlw	255
 10316   001C7C  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
 10317   001C7E                     l12470:
 10318                           
 10319                           ; BSR set to: 1
 10320   001C7E  C1AC  F178         	movff	powf@ix,powf@ax
 10321   001C82  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 10322   001C86  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 10323   001C8A  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 10324   001C8E                     
 10325                           ; BSR set to: 1
 10326   001C8E  C178  F05B         	movff	powf@ax,___flsub@b
 10327   001C92  C179  F05C         	movff	powf@ax+1,___flsub@b+1
 10328   001C96  C17A  F05D         	movff	powf@ax+2,___flsub@b+2
 10329   001C9A  C17B  F05E         	movff	powf@ax+3,___flsub@b+3
 10330   001C9E  51A4               	movf	powf@k& (0+255),w,b
 10331   001CA0  0D04               	mullw	4
 10332   001CA2  50F3               	movf	243,w,c
 10333   001CA4  0F11               	addlw	low _bp
 10334   001CA6  6E77               	movwf	??_powf^0,c
 10335   001CA8  C077  FFF6         	movff	??_powf,tblptrl
 10336   001CAC                     	if	1	;There is more than 1 active tblptr byte
 10337   001CAC  0E10               	movlw	high __smallconst
 10338   001CAE  6EF7               	movwf	tblptrh,c
 10339   001CB0                     	endif
 10340   001CB0                     	if	0	;tblptru may be non-zero
 10341   001CB0                     	endif
 10342   001CB0                     	if	0	;tblptru may be non-zero
 10343   001CB0                     	endif
 10344   001CB0  0009               	tblrd		*+
 10345   001CB2  CFF5 F05F          	movff	tablat,___flsub@a
 10346   001CB6  0009               	tblrd		*+
 10347   001CB8  CFF5 F060          	movff	tablat,___flsub@a+1
 10348   001CBC  0009               	tblrd		*+
 10349   001CBE  CFF5 F061          	movff	tablat,___flsub@a+2
 10350   001CC2  000A               	tblrd		*-
 10351   001CC4  CFF5 F062          	movff	tablat,___flsub@a+3
 10352   001CC8  ECCB  F03A         	call	___flsub	;wreg free
 10353   001CCC  C05B  F17C         	movff	?___flsub,powf@u
 10354   001CD0  C05C  F17D         	movff	?___flsub+1,powf@u+1
 10355   001CD4  C05D  F17E         	movff	?___flsub+2,powf@u+2
 10356   001CD8  C05E  F17F         	movff	?___flsub+3,powf@u+3
 10357   001CDC  0E00               	movlw	0
 10358   001CDE  6E42               	movwf	___fldiv@b^0,c
 10359   001CE0  0E00               	movlw	0
 10360   001CE2  6E43               	movwf	(___fldiv@b+1)^0,c
 10361   001CE4  0E80               	movlw	128
 10362   001CE6  6E44               	movwf	(___fldiv@b+2)^0,c
 10363   001CE8  0E3F               	movlw	63
 10364   001CEA  6E45               	movwf	(___fldiv@b+3)^0,c
 10365   001CEC  C178  F036         	movff	powf@ax,___fladd@a
 10366   001CF0  C179  F037         	movff	powf@ax+1,___fladd@a+1
 10367   001CF4  C17A  F038         	movff	powf@ax+2,___fladd@a+2
 10368   001CF8  C17B  F039         	movff	powf@ax+3,___fladd@a+3
 10369   001CFC  0101               	movlb	1	; () banked
 10370   001CFE  51A4               	movf	powf@k& (0+255),w,b
 10371   001D00  0D04               	mullw	4
 10372   001D02  50F3               	movf	243,w,c
 10373   001D04  0F11               	addlw	low _bp
 10374   001D06  6E77               	movwf	??_powf^0,c
 10375   001D08  C077  FFF6         	movff	??_powf,tblptrl
 10376   001D0C                     	if	1	;There is more than 1 active tblptr byte
 10377   001D0C  0E10               	movlw	high __smallconst
 10378   001D0E  6EF7               	movwf	tblptrh,c
 10379   001D10                     	endif
 10380   001D10                     	if	0	;tblptru may be non-zero
 10381   001D10                     	endif
 10382   001D10                     	if	0	;tblptru may be non-zero
 10383   001D10                     	endif
 10384   001D10  0009               	tblrd		*+
 10385   001D12  CFF5 F032          	movff	tablat,___fladd@b
 10386   001D16  0009               	tblrd		*+
 10387   001D18  CFF5 F033          	movff	tablat,___fladd@b+1
 10388   001D1C  0009               	tblrd		*+
 10389   001D1E  CFF5 F034          	movff	tablat,___fladd@b+2
 10390   001D22  000A               	tblrd		*-
 10391   001D24  CFF5 F035          	movff	tablat,___fladd@b+3
 10392   001D28  ECC0  F021         	call	___fladd	;wreg free
 10393   001D2C  C032  F046         	movff	?___fladd,___fldiv@a
 10394   001D30  C033  F047         	movff	?___fladd+1,___fldiv@a+1
 10395   001D34  C034  F048         	movff	?___fladd+2,___fldiv@a+2
 10396   001D38  C035  F049         	movff	?___fladd+3,___fldiv@a+3
 10397   001D3C  EC24  F028         	call	___fldiv	;wreg free
 10398   001D40  C042  F180         	movff	?___fldiv,powf@v
 10399   001D44  C043  F181         	movff	?___fldiv+1,powf@v+1
 10400   001D48  C044  F182         	movff	?___fldiv+2,powf@v+2
 10401   001D4C  C045  F183         	movff	?___fldiv+3,powf@v+3
 10402   001D50  C17C  F019         	movff	powf@u,___flmul@b
 10403   001D54  C17D  F01A         	movff	powf@u+1,___flmul@b+1
 10404   001D58  C17E  F01B         	movff	powf@u+2,___flmul@b+2
 10405   001D5C  C17F  F01C         	movff	powf@u+3,___flmul@b+3
 10406   001D60  C180  F01D         	movff	powf@v,___flmul@a
 10407   001D64  C181  F01E         	movff	powf@v+1,___flmul@a+1
 10408   001D68  C182  F01F         	movff	powf@v+2,___flmul@a+2
 10409   001D6C  C183  F020         	movff	powf@v+3,___flmul@a+3
 10410   001D70  EC20  F024         	call	___flmul	;wreg free
 10411   001D74  C019  F158         	movff	?___flmul,powf@s
 10412   001D78  C01A  F159         	movff	?___flmul+1,powf@s+1
 10413   001D7C  C01B  F15A         	movff	?___flmul+2,powf@s+2
 10414   001D80  C01C  F15B         	movff	?___flmul+3,powf@s+3
 10415   001D84  C158  F174         	movff	powf@s,powf@s_h
 10416   001D88  C159  F175         	movff	powf@s+1,powf@s_h+1
 10417   001D8C  C15A  F176         	movff	powf@s+2,powf@s_h+2
 10418   001D90  C15B  F177         	movff	powf@s+3,powf@s_h+3
 10419   001D94  C174  F198         	movff	powf@s_h,powf@is
 10420   001D98  C175  F199         	movff	powf@s_h+1,powf@is+1
 10421   001D9C  C176  F19A         	movff	powf@s_h+2,powf@is+2
 10422   001DA0  C177  F19B         	movff	powf@s_h+3,powf@is+3
 10423   001DA4  0E00               	movlw	0
 10424   001DA6  0101               	movlb	1	; () banked
 10425   001DA8  1598               	andwf	powf@is& (0+255),w,b
 10426   001DAA  6F74               	movwf	powf@s_h& (0+255),b
 10427   001DAC  0EF0               	movlw	240
 10428   001DAE  1599               	andwf	(powf@is+1)& (0+255),w,b
 10429   001DB0  6F75               	movwf	(powf@s_h+1)& (0+255),b
 10430   001DB2  0EFF               	movlw	255
 10431   001DB4  159A               	andwf	(powf@is+2)& (0+255),w,b
 10432   001DB6  6F76               	movwf	(powf@s_h+2)& (0+255),b
 10433   001DB8  0EFF               	movlw	255
 10434   001DBA  159B               	andwf	(powf@is+3)& (0+255),w,b
 10435   001DBC  6F77               	movwf	(powf@s_h+3)& (0+255),b
 10436   001DBE                     
 10437                           ; BSR set to: 1
 10438   001DBE  C1AC  F077         	movff	powf@ix,??_powf
 10439   001DC2  C1AD  F078         	movff	powf@ix+1,??_powf+1
 10440   001DC6  C1AE  F079         	movff	powf@ix+2,??_powf+2
 10441   001DCA  C1AF  F07A         	movff	powf@ix+3,??_powf+3
 10442   001DCE  347A               	rlcf	(??_powf+3)^0,w,c
 10443   001DD0  327A               	rrcf	(??_powf+3)^0,f,c
 10444   001DD2  3279               	rrcf	(??_powf+2)^0,f,c
 10445   001DD4  3278               	rrcf	(??_powf+1)^0,f,c
 10446   001DD6  3277               	rrcf	??_powf^0,f,c
 10447   001DD8  0E00               	movlw	0
 10448   001DDA  1477               	andwf	??_powf^0,w,c
 10449   001DDC  6E7B               	movwf	(??_powf+4)^0,c
 10450   001DDE  0EF0               	movlw	240
 10451   001DE0  1478               	andwf	(??_powf+1)^0,w,c
 10452   001DE2  6E7C               	movwf	(??_powf+5)^0,c
 10453   001DE4  0EFF               	movlw	255
 10454   001DE6  1479               	andwf	(??_powf+2)^0,w,c
 10455   001DE8  6E7D               	movwf	(??_powf+6)^0,c
 10456   001DEA  0EFF               	movlw	255
 10457   001DEC  147A               	andwf	(??_powf+3)^0,w,c
 10458   001DEE  6E7E               	movwf	(??_powf+7)^0,c
 10459   001DF0  0E00               	movlw	0
 10460   001DF2  107B               	iorwf	(??_powf+4)^0,w,c
 10461   001DF4  6F98               	movwf	powf@is& (0+255),b
 10462   001DF6  0E00               	movlw	0
 10463   001DF8  107C               	iorwf	(??_powf+5)^0,w,c
 10464   001DFA  6F99               	movwf	(powf@is+1)& (0+255),b
 10465   001DFC  0E00               	movlw	0
 10466   001DFE  107D               	iorwf	(??_powf+6)^0,w,c
 10467   001E00  6F9A               	movwf	(powf@is+2)& (0+255),b
 10468   001E02  0E20               	movlw	32
 10469   001E04  107E               	iorwf	(??_powf+7)^0,w,c
 10470   001E06  6F9B               	movwf	(powf@is+3)& (0+255),b
 10471   001E08                     
 10472                           ; BSR set to: 1
 10473   001E08  C1A4  F077         	movff	powf@k,??_powf
 10474   001E0C  C1A5  F078         	movff	powf@k+1,??_powf+1
 10475   001E10  C1A6  F079         	movff	powf@k+2,??_powf+2
 10476   001E14  C1A7  F07A         	movff	powf@k+3,??_powf+3
 10477   001E18  0E15               	movlw	21
 10478   001E1A                     u13125:
 10479   001E1A  90D8               	bcf	status,0,c
 10480   001E1C  3677               	rlcf	??_powf^0,f,c
 10481   001E1E  3678               	rlcf	(??_powf+1)^0,f,c
 10482   001E20  3679               	rlcf	(??_powf+2)^0,f,c
 10483   001E22  367A               	rlcf	(??_powf+3)^0,f,c
 10484   001E24  2EE8               	decfsz	wreg,f,c
 10485   001E26  EF0D  F00F         	goto	u13125
 10486   001E2A  5198               	movf	powf@is& (0+255),w,b
 10487   001E2C  2477               	addwf	??_powf^0,w,c
 10488   001E2E  6E7B               	movwf	(??_powf+4)^0,c
 10489   001E30  5199               	movf	(powf@is+1)& (0+255),w,b
 10490   001E32  2078               	addwfc	(??_powf+1)^0,w,c
 10491   001E34  6E7C               	movwf	(??_powf+5)^0,c
 10492   001E36  519A               	movf	(powf@is+2)& (0+255),w,b
 10493   001E38  2079               	addwfc	(??_powf+2)^0,w,c
 10494   001E3A  6E7D               	movwf	(??_powf+6)^0,c
 10495   001E3C  519B               	movf	(powf@is+3)& (0+255),w,b
 10496   001E3E  207A               	addwfc	(??_powf+3)^0,w,c
 10497   001E40  6E7E               	movwf	(??_powf+7)^0,c
 10498   001E42  0E00               	movlw	0
 10499   001E44  247B               	addwf	(??_powf+4)^0,w,c
 10500   001E46  6F70               	movwf	powf@t_h& (0+255),b
 10501   001E48  0E00               	movlw	0
 10502   001E4A  207C               	addwfc	(??_powf+5)^0,w,c
 10503   001E4C  6F71               	movwf	(powf@t_h+1)& (0+255),b
 10504   001E4E  0E40               	movlw	64
 10505   001E50  207D               	addwfc	(??_powf+6)^0,w,c
 10506   001E52  6F72               	movwf	(powf@t_h+2)& (0+255),b
 10507   001E54  0E00               	movlw	0
 10508   001E56  207E               	addwfc	(??_powf+7)^0,w,c
 10509   001E58  6F73               	movwf	(powf@t_h+3)& (0+255),b
 10510   001E5A                     
 10511                           ; BSR set to: 1
 10512   001E5A  51A4               	movf	powf@k& (0+255),w,b
 10513   001E5C  0D04               	mullw	4
 10514   001E5E  50F3               	movf	243,w,c
 10515   001E60  0F11               	addlw	low _bp
 10516   001E62  6E77               	movwf	??_powf^0,c
 10517   001E64  C077  FFF6         	movff	??_powf,tblptrl
 10518   001E68                     	if	1	;There is more than 1 active tblptr byte
 10519   001E68  0E10               	movlw	high __smallconst
 10520   001E6A  6EF7               	movwf	tblptrh,c
 10521   001E6C                     	endif
 10522   001E6C                     	if	0	;tblptru may be non-zero
 10523   001E6C                     	endif
 10524   001E6C                     	if	0	;tblptru may be non-zero
 10525   001E6C                     	endif
 10526   001E6C  0009               	tblrd		*+
 10527   001E6E  CFF5 F05F          	movff	tablat,___flsub@a
 10528   001E72  0009               	tblrd		*+
 10529   001E74  CFF5 F060          	movff	tablat,___flsub@a+1
 10530   001E78  0009               	tblrd		*+
 10531   001E7A  CFF5 F061          	movff	tablat,___flsub@a+2
 10532   001E7E  000A               	tblrd		*-
 10533   001E80  CFF5 F062          	movff	tablat,___flsub@a+3
 10534   001E84  C170  F05B         	movff	powf@t_h,___flsub@b
 10535   001E88  C171  F05C         	movff	powf@t_h+1,___flsub@b+1
 10536   001E8C  C172  F05D         	movff	powf@t_h+2,___flsub@b+2
 10537   001E90  C173  F05E         	movff	powf@t_h+3,___flsub@b+3
 10538   001E94  ECCB  F03A         	call	___flsub	;wreg free
 10539   001E98  C05B  F19C         	movff	?___flsub,_powf$2097
 10540   001E9C  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 10541   001EA0  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 10542   001EA4  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 10543   001EA8  C178  F05B         	movff	powf@ax,___flsub@b
 10544   001EAC  C179  F05C         	movff	powf@ax+1,___flsub@b+1
 10545   001EB0  C17A  F05D         	movff	powf@ax+2,___flsub@b+2
 10546   001EB4  C17B  F05E         	movff	powf@ax+3,___flsub@b+3
 10547   001EB8  C19C  F05F         	movff	_powf$2097,___flsub@a
 10548   001EBC  C19D  F060         	movff	_powf$2097+1,___flsub@a+1
 10549   001EC0  C19E  F061         	movff	_powf$2097+2,___flsub@a+2
 10550   001EC4  C19F  F062         	movff	_powf$2097+3,___flsub@a+3
 10551   001EC8  ECCB  F03A         	call	___flsub	;wreg free
 10552   001ECC  C05B  F134         	movff	?___flsub,powf@t_l
 10553   001ED0  C05C  F135         	movff	?___flsub+1,powf@t_l+1
 10554   001ED4  C05D  F136         	movff	?___flsub+2,powf@t_l+2
 10555   001ED8  C05E  F137         	movff	?___flsub+3,powf@t_l+3
 10556   001EDC  C170  F01D         	movff	powf@t_h,___flmul@a
 10557   001EE0  C171  F01E         	movff	powf@t_h+1,___flmul@a+1
 10558   001EE4  C172  F01F         	movff	powf@t_h+2,___flmul@a+2
 10559   001EE8  C173  F020         	movff	powf@t_h+3,___flmul@a+3
 10560   001EEC  C174  F019         	movff	powf@s_h,___flmul@b
 10561   001EF0  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10562   001EF4  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10563   001EF8  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10564   001EFC  EC20  F024         	call	___flmul	;wreg free
 10565   001F00  C019  F05F         	movff	?___flmul,___flsub@a
 10566   001F04  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10567   001F08  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10568   001F0C  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10569   001F10  C17C  F05B         	movff	powf@u,___flsub@b
 10570   001F14  C17D  F05C         	movff	powf@u+1,___flsub@b+1
 10571   001F18  C17E  F05D         	movff	powf@u+2,___flsub@b+2
 10572   001F1C  C17F  F05E         	movff	powf@u+3,___flsub@b+3
 10573   001F20  ECCB  F03A         	call	___flsub	;wreg free
 10574   001F24  C05B  F19C         	movff	?___flsub,_powf$2097
 10575   001F28  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 10576   001F2C  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 10577   001F30  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 10578   001F34  C134  F01D         	movff	powf@t_l,___flmul@a
 10579   001F38  C135  F01E         	movff	powf@t_l+1,___flmul@a+1
 10580   001F3C  C136  F01F         	movff	powf@t_l+2,___flmul@a+2
 10581   001F40  C137  F020         	movff	powf@t_l+3,___flmul@a+3
 10582   001F44  C174  F019         	movff	powf@s_h,___flmul@b
 10583   001F48  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10584   001F4C  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10585   001F50  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10586   001F54  EC20  F024         	call	___flmul	;wreg free
 10587   001F58  C019  F05F         	movff	?___flmul,___flsub@a
 10588   001F5C  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10589   001F60  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10590   001F64  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10591   001F68  C19C  F05B         	movff	_powf$2097,___flsub@b
 10592   001F6C  C19D  F05C         	movff	_powf$2097+1,___flsub@b+1
 10593   001F70  C19E  F05D         	movff	_powf$2097+2,___flsub@b+2
 10594   001F74  C19F  F05E         	movff	_powf$2097+3,___flsub@b+3
 10595   001F78  ECCB  F03A         	call	___flsub	;wreg free
 10596   001F7C  C05B  F15C         	movff	?___flsub,_powf$2095
 10597   001F80  C05C  F15D         	movff	?___flsub+1,_powf$2095+1
 10598   001F84  C05D  F15E         	movff	?___flsub+2,_powf$2095+2
 10599   001F88  C05E  F15F         	movff	?___flsub+3,_powf$2095+3
 10600   001F8C  C15C  F019         	movff	_powf$2095,___flmul@b
 10601   001F90  C15D  F01A         	movff	_powf$2095+1,___flmul@b+1
 10602   001F94  C15E  F01B         	movff	_powf$2095+2,___flmul@b+2
 10603   001F98  C15F  F01C         	movff	_powf$2095+3,___flmul@b+3
 10604   001F9C  C180  F01D         	movff	powf@v,___flmul@a
 10605   001FA0  C181  F01E         	movff	powf@v+1,___flmul@a+1
 10606   001FA4  C182  F01F         	movff	powf@v+2,___flmul@a+2
 10607   001FA8  C183  F020         	movff	powf@v+3,___flmul@a+3
 10608   001FAC  EC20  F024         	call	___flmul	;wreg free
 10609   001FB0  C019  F130         	movff	?___flmul,powf@s_l
 10610   001FB4  C01A  F131         	movff	?___flmul+1,powf@s_l+1
 10611   001FB8  C01B  F132         	movff	?___flmul+2,powf@s_l+2
 10612   001FBC  C01C  F133         	movff	?___flmul+3,powf@s_l+3
 10613   001FC0  C158  F019         	movff	powf@s,___flmul@b
 10614   001FC4  C159  F01A         	movff	powf@s+1,___flmul@b+1
 10615   001FC8  C15A  F01B         	movff	powf@s+2,___flmul@b+2
 10616   001FCC  C15B  F01C         	movff	powf@s+3,___flmul@b+3
 10617   001FD0  C158  F01D         	movff	powf@s,___flmul@a
 10618   001FD4  C159  F01E         	movff	powf@s+1,___flmul@a+1
 10619   001FD8  C15A  F01F         	movff	powf@s+2,___flmul@a+2
 10620   001FDC  C15B  F020         	movff	powf@s+3,___flmul@a+3
 10621   001FE0  EC20  F024         	call	___flmul	;wreg free
 10622   001FE4  C019  F190         	movff	?___flmul,powf@s2
 10623   001FE8  C01A  F191         	movff	?___flmul+1,powf@s2+1
 10624   001FEC  C01B  F192         	movff	?___flmul+2,powf@s2+2
 10625   001FF0  C01C  F193         	movff	?___flmul+3,powf@s2+3
 10626   001FF4  0E55               	movlw	85
 10627   001FF6  6E36               	movwf	___fladd@a^0,c
 10628   001FF8  0E32               	movlw	50
 10629   001FFA  6E37               	movwf	(___fladd@a+1)^0,c
 10630   001FFC  0E6C               	movlw	108
 10631   001FFE  6E38               	movwf	(___fladd@a+2)^0,c
 10632   002000  0E3E               	movlw	62
 10633   002002  6E39               	movwf	(___fladd@a+3)^0,c
 10634   002004  0E42               	movlw	66
 10635   002006  6E1D               	movwf	___flmul@a^0,c
 10636   002008  0EF1               	movlw	241
 10637   00200A  6E1E               	movwf	(___flmul@a+1)^0,c
 10638   00200C  0E53               	movlw	83
 10639   00200E  6E1F               	movwf	(___flmul@a+2)^0,c
 10640   002010  0E3E               	movlw	62
 10641   002012  6E20               	movwf	(___flmul@a+3)^0,c
 10642   002014  C190  F019         	movff	powf@s2,___flmul@b
 10643   002018  C191  F01A         	movff	powf@s2+1,___flmul@b+1
 10644   00201C  C192  F01B         	movff	powf@s2+2,___flmul@b+2
 10645   002020  C193  F01C         	movff	powf@s2+3,___flmul@b+3
 10646   002024  EC20  F024         	call	___flmul	;wreg free
 10647   002028  C019  F032         	movff	?___flmul,___fladd@b
 10648   00202C  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10649   002030  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10650   002034  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10651   002038  ECC0  F021         	call	___fladd	;wreg free
 10652   00203C  C032  F148         	movff	?___fladd,_powf$2094
 10653   002040  C033  F149         	movff	?___fladd+1,_powf$2094+1
 10654   002044  C034  F14A         	movff	?___fladd+2,_powf$2094+2
 10655   002048  C035  F14B         	movff	?___fladd+3,_powf$2094+3
 10656   00204C  0E05               	movlw	5
 10657   00204E  6E36               	movwf	___fladd@a^0,c
 10658   002050  0EA3               	movlw	163
 10659   002052  6E37               	movwf	(___fladd@a+1)^0,c
 10660   002054  0E8B               	movlw	139
 10661   002056  6E38               	movwf	(___fladd@a+2)^0,c
 10662   002058  0E3E               	movlw	62
 10663   00205A  6E39               	movwf	(___fladd@a+3)^0,c
 10664   00205C  C190  F01D         	movff	powf@s2,___flmul@a
 10665   002060  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10666   002064  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10667   002068  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10668   00206C  C148  F019         	movff	_powf$2094,___flmul@b
 10669   002070  C149  F01A         	movff	_powf$2094+1,___flmul@b+1
 10670   002074  C14A  F01B         	movff	_powf$2094+2,___flmul@b+2
 10671   002078  C14B  F01C         	movff	_powf$2094+3,___flmul@b+3
 10672   00207C  EC20  F024         	call	___flmul	;wreg free
 10673   002080  C019  F032         	movff	?___flmul,___fladd@b
 10674   002084  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10675   002088  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10676   00208C  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10677   002090  ECC0  F021         	call	___fladd	;wreg free
 10678   002094  C032  F15C         	movff	?___fladd,_powf$2095
 10679   002098  C033  F15D         	movff	?___fladd+1,_powf$2095+1
 10680   00209C  C034  F15E         	movff	?___fladd+2,_powf$2095+2
 10681   0020A0  C035  F15F         	movff	?___fladd+3,_powf$2095+3
 10682   0020A4  0EAB               	movlw	171
 10683   0020A6  6E36               	movwf	___fladd@a^0,c
 10684   0020A8  0EAA               	movlw	170
 10685   0020AA  6E37               	movwf	(___fladd@a+1)^0,c
 10686   0020AC  0EAA               	movlw	170
 10687   0020AE  6E38               	movwf	(___fladd@a+2)^0,c
 10688   0020B0  0E3E               	movlw	62
 10689   0020B2  6E39               	movwf	(___fladd@a+3)^0,c
 10690   0020B4  C190  F01D         	movff	powf@s2,___flmul@a
 10691   0020B8  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10692   0020BC  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10693   0020C0  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10694   0020C4  C15C  F019         	movff	_powf$2095,___flmul@b
 10695   0020C8  C15D  F01A         	movff	_powf$2095+1,___flmul@b+1
 10696   0020CC  C15E  F01B         	movff	_powf$2095+2,___flmul@b+2
 10697   0020D0  C15F  F01C         	movff	_powf$2095+3,___flmul@b+3
 10698   0020D4  EC20  F024         	call	___flmul	;wreg free
 10699   0020D8  C019  F032         	movff	?___flmul,___fladd@b
 10700   0020DC  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10701   0020E0  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10702   0020E4  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10703   0020E8  ECC0  F021         	call	___fladd	;wreg free
 10704   0020EC  C032  F14C         	movff	?___fladd,_powf$2096
 10705   0020F0  C033  F14D         	movff	?___fladd+1,_powf$2096+1
 10706   0020F4  C034  F14E         	movff	?___fladd+2,_powf$2096+2
 10707   0020F8  C035  F14F         	movff	?___fladd+3,_powf$2096+3
 10708   0020FC  0EB7               	movlw	183
 10709   0020FE  6E36               	movwf	___fladd@a^0,c
 10710   002100  0E6D               	movlw	109
 10711   002102  6E37               	movwf	(___fladd@a+1)^0,c
 10712   002104  0EDB               	movlw	219
 10713   002106  6E38               	movwf	(___fladd@a+2)^0,c
 10714   002108  0E3E               	movlw	62
 10715   00210A  6E39               	movwf	(___fladd@a+3)^0,c
 10716   00210C  C190  F01D         	movff	powf@s2,___flmul@a
 10717   002110  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10718   002114  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10719   002118  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10720   00211C  C14C  F019         	movff	_powf$2096,___flmul@b
 10721   002120  C14D  F01A         	movff	_powf$2096+1,___flmul@b+1
 10722   002124  C14E  F01B         	movff	_powf$2096+2,___flmul@b+2
 10723   002128  C14F  F01C         	movff	_powf$2096+3,___flmul@b+3
 10724   00212C  EC20  F024         	call	___flmul	;wreg free
 10725   002130  C019  F032         	movff	?___flmul,___fladd@b
 10726   002134  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10727   002138  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10728   00213C  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10729   002140  ECC0  F021         	call	___fladd	;wreg free
 10730   002144  C032  F138         	movff	?___fladd,_powf$2098
 10731   002148  C033  F139         	movff	?___fladd+1,_powf$2098+1
 10732   00214C  C034  F13A         	movff	?___fladd+2,_powf$2098+2
 10733   002150  C035  F13B         	movff	?___fladd+3,_powf$2098+3
 10734   002154  0E9A               	movlw	154
 10735   002156  6E36               	movwf	___fladd@a^0,c
 10736   002158  0E99               	movlw	153
 10737   00215A  6E37               	movwf	(___fladd@a+1)^0,c
 10738   00215C  0E19               	movlw	25
 10739   00215E  6E38               	movwf	(___fladd@a+2)^0,c
 10740   002160  0E3F               	movlw	63
 10741   002162  6E39               	movwf	(___fladd@a+3)^0,c
 10742   002164  C190  F01D         	movff	powf@s2,___flmul@a
 10743   002168  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10744   00216C  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10745   002170  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10746   002174  C138  F019         	movff	_powf$2098,___flmul@b
 10747   002178  C139  F01A         	movff	_powf$2098+1,___flmul@b+1
 10748   00217C  C13A  F01B         	movff	_powf$2098+2,___flmul@b+2
 10749   002180  C13B  F01C         	movff	_powf$2098+3,___flmul@b+3
 10750   002184  EC20  F024         	call	___flmul	;wreg free
 10751   002188  C019  F032         	movff	?___flmul,___fladd@b
 10752   00218C  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10753   002190  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10754   002194  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10755   002198  ECC0  F021         	call	___fladd	;wreg free
 10756   00219C  C032  F100         	movff	?___fladd,_powf$2099
 10757   0021A0  C033  F101         	movff	?___fladd+1,_powf$2099+1
 10758   0021A4  C034  F102         	movff	?___fladd+2,_powf$2099+2
 10759   0021A8  C035  F103         	movff	?___fladd+3,_powf$2099+3
 10760   0021AC  C190  F01D         	movff	powf@s2,___flmul@a
 10761   0021B0  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10762   0021B4  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10763   0021B8  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10764   0021BC  C190  F019         	movff	powf@s2,___flmul@b
 10765   0021C0  C191  F01A         	movff	powf@s2+1,___flmul@b+1
 10766   0021C4  C192  F01B         	movff	powf@s2+2,___flmul@b+2
 10767   0021C8  C193  F01C         	movff	powf@s2+3,___flmul@b+3
 10768   0021CC  EC20  F024         	call	___flmul	;wreg free
 10769   0021D0  C019  F104         	movff	?___flmul,_powf$2100
 10770   0021D4  C01A  F105         	movff	?___flmul+1,_powf$2100+1
 10771   0021D8  C01B  F106         	movff	?___flmul+2,_powf$2100+2
 10772   0021DC  C01C  F107         	movff	?___flmul+3,_powf$2100+3
 10773   0021E0  C100  F019         	movff	_powf$2099,___flmul@b
 10774   0021E4  C101  F01A         	movff	_powf$2099+1,___flmul@b+1
 10775   0021E8  C102  F01B         	movff	_powf$2099+2,___flmul@b+2
 10776   0021EC  C103  F01C         	movff	_powf$2099+3,___flmul@b+3
 10777   0021F0  C104  F01D         	movff	_powf$2100,___flmul@a
 10778   0021F4  C105  F01E         	movff	_powf$2100+1,___flmul@a+1
 10779   0021F8  C106  F01F         	movff	_powf$2100+2,___flmul@a+2
 10780   0021FC  C107  F020         	movff	_powf$2100+3,___flmul@a+3
 10781   002200  EC20  F024         	call	___flmul	;wreg free
 10782   002204  C019  F150         	movff	?___flmul,powf@r
 10783   002208  C01A  F151         	movff	?___flmul+1,powf@r+1
 10784   00220C  C01B  F152         	movff	?___flmul+2,powf@r+2
 10785   002210  C01C  F153         	movff	?___flmul+3,powf@r+3
 10786   002214  C130  F01D         	movff	powf@s_l,___flmul@a
 10787   002218  C131  F01E         	movff	powf@s_l+1,___flmul@a+1
 10788   00221C  C132  F01F         	movff	powf@s_l+2,___flmul@a+2
 10789   002220  C133  F020         	movff	powf@s_l+3,___flmul@a+3
 10790   002224  C158  F036         	movff	powf@s,___fladd@a
 10791   002228  C159  F037         	movff	powf@s+1,___fladd@a+1
 10792   00222C  C15A  F038         	movff	powf@s+2,___fladd@a+2
 10793   002230  C15B  F039         	movff	powf@s+3,___fladd@a+3
 10794   002234  C174  F032         	movff	powf@s_h,___fladd@b
 10795   002238  C175  F033         	movff	powf@s_h+1,___fladd@b+1
 10796   00223C  C176  F034         	movff	powf@s_h+2,___fladd@b+2
 10797   002240  C177  F035         	movff	powf@s_h+3,___fladd@b+3
 10798   002244  ECC0  F021         	call	___fladd	;wreg free
 10799   002248  C032  F019         	movff	?___fladd,___flmul@b
 10800   00224C  C033  F01A         	movff	?___fladd+1,___flmul@b+1
 10801   002250  C034  F01B         	movff	?___fladd+2,___flmul@b+2
 10802   002254  C035  F01C         	movff	?___fladd+3,___flmul@b+3
 10803   002258  EC20  F024         	call	___flmul	;wreg free
 10804   00225C  C019  F160         	movff	?___flmul,_powf$2101
 10805   002260  C01A  F161         	movff	?___flmul+1,_powf$2101+1
 10806   002264  C01B  F162         	movff	?___flmul+2,_powf$2101+2
 10807   002268  C01C  F163         	movff	?___flmul+3,_powf$2101+3
 10808   00226C  C150  F032         	movff	powf@r,___fladd@b
 10809   002270  C151  F033         	movff	powf@r+1,___fladd@b+1
 10810   002274  C152  F034         	movff	powf@r+2,___fladd@b+2
 10811   002278  C153  F035         	movff	powf@r+3,___fladd@b+3
 10812   00227C  C160  F036         	movff	_powf$2101,___fladd@a
 10813   002280  C161  F037         	movff	_powf$2101+1,___fladd@a+1
 10814   002284  C162  F038         	movff	_powf$2101+2,___fladd@a+2
 10815   002288  C163  F039         	movff	_powf$2101+3,___fladd@a+3
 10816   00228C  ECC0  F021         	call	___fladd	;wreg free
 10817   002290  C032  F150         	movff	?___fladd,powf@r
 10818   002294  C033  F151         	movff	?___fladd+1,powf@r+1
 10819   002298  C034  F152         	movff	?___fladd+2,powf@r+2
 10820   00229C  C035  F153         	movff	?___fladd+3,powf@r+3
 10821   0022A0  C174  F019         	movff	powf@s_h,___flmul@b
 10822   0022A4  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10823   0022A8  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10824   0022AC  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10825   0022B0  C174  F01D         	movff	powf@s_h,___flmul@a
 10826   0022B4  C175  F01E         	movff	powf@s_h+1,___flmul@a+1
 10827   0022B8  C176  F01F         	movff	powf@s_h+2,___flmul@a+2
 10828   0022BC  C177  F020         	movff	powf@s_h+3,___flmul@a+3
 10829   0022C0  EC20  F024         	call	___flmul	;wreg free
 10830   0022C4  C019  F190         	movff	?___flmul,powf@s2
 10831   0022C8  C01A  F191         	movff	?___flmul+1,powf@s2+1
 10832   0022CC  C01B  F192         	movff	?___flmul+2,powf@s2+2
 10833   0022D0  C01C  F193         	movff	?___flmul+3,powf@s2+3
 10834   0022D4  0E00               	movlw	0
 10835   0022D6  6E36               	movwf	___fladd@a^0,c
 10836   0022D8  0E00               	movlw	0
 10837   0022DA  6E37               	movwf	(___fladd@a+1)^0,c
 10838   0022DC  0E40               	movlw	64
 10839   0022DE  6E38               	movwf	(___fladd@a+2)^0,c
 10840   0022E0  0E40               	movlw	64
 10841   0022E2  6E39               	movwf	(___fladd@a+3)^0,c
 10842   0022E4  C190  F032         	movff	powf@s2,___fladd@b
 10843   0022E8  C191  F033         	movff	powf@s2+1,___fladd@b+1
 10844   0022EC  C192  F034         	movff	powf@s2+2,___fladd@b+2
 10845   0022F0  C193  F035         	movff	powf@s2+3,___fladd@b+3
 10846   0022F4  ECC0  F021         	call	___fladd	;wreg free
 10847   0022F8  C032  F160         	movff	?___fladd,_powf$2101
 10848   0022FC  C033  F161         	movff	?___fladd+1,_powf$2101+1
 10849   002300  C034  F162         	movff	?___fladd+2,_powf$2101+2
 10850   002304  C035  F163         	movff	?___fladd+3,_powf$2101+3
 10851   002308  C160  F032         	movff	_powf$2101,___fladd@b
 10852   00230C  C161  F033         	movff	_powf$2101+1,___fladd@b+1
 10853   002310  C162  F034         	movff	_powf$2101+2,___fladd@b+2
 10854   002314  C163  F035         	movff	_powf$2101+3,___fladd@b+3
 10855   002318  C150  F036         	movff	powf@r,___fladd@a
 10856   00231C  C151  F037         	movff	powf@r+1,___fladd@a+1
 10857   002320  C152  F038         	movff	powf@r+2,___fladd@a+2
 10858   002324  C153  F039         	movff	powf@r+3,___fladd@a+3
 10859   002328  ECC0  F021         	call	___fladd	;wreg free
 10860   00232C  C032  F170         	movff	?___fladd,powf@t_h
 10861   002330  C033  F171         	movff	?___fladd+1,powf@t_h+1
 10862   002334  C034  F172         	movff	?___fladd+2,powf@t_h+2
 10863   002338  C035  F173         	movff	?___fladd+3,powf@t_h+3
 10864   00233C  C170  F198         	movff	powf@t_h,powf@is
 10865   002340  C171  F199         	movff	powf@t_h+1,powf@is+1
 10866   002344  C172  F19A         	movff	powf@t_h+2,powf@is+2
 10867   002348  C173  F19B         	movff	powf@t_h+3,powf@is+3
 10868   00234C  0E00               	movlw	0
 10869   00234E  0101               	movlb	1	; () banked
 10870   002350  1598               	andwf	powf@is& (0+255),w,b
 10871   002352  6F70               	movwf	powf@t_h& (0+255),b
 10872   002354  0EF0               	movlw	240
 10873   002356  1599               	andwf	(powf@is+1)& (0+255),w,b
 10874   002358  6F71               	movwf	(powf@t_h+1)& (0+255),b
 10875   00235A  0EFF               	movlw	255
 10876   00235C  159A               	andwf	(powf@is+2)& (0+255),w,b
 10877   00235E  6F72               	movwf	(powf@t_h+2)& (0+255),b
 10878   002360  0EFF               	movlw	255
 10879   002362  159B               	andwf	(powf@is+3)& (0+255),w,b
 10880   002364  6F73               	movwf	(powf@t_h+3)& (0+255),b
 10881   002366                     
 10882                           ; BSR set to: 1
 10883   002366  0E00               	movlw	0
 10884   002368  6E36               	movwf	___fladd@a^0,c
 10885   00236A  0E00               	movlw	0
 10886   00236C  6E37               	movwf	(___fladd@a+1)^0,c
 10887   00236E  0E40               	movlw	64
 10888   002370  6E38               	movwf	(___fladd@a+2)^0,c
 10889   002372  0EC0               	movlw	192
 10890   002374  6E39               	movwf	(___fladd@a+3)^0,c
 10891   002376  C170  F032         	movff	powf@t_h,___fladd@b
 10892   00237A  C171  F033         	movff	powf@t_h+1,___fladd@b+1
 10893   00237E  C172  F034         	movff	powf@t_h+2,___fladd@b+2
 10894   002382  C173  F035         	movff	powf@t_h+3,___fladd@b+3
 10895   002386  ECC0  F021         	call	___fladd	;wreg free
 10896   00238A  C032  F13C         	movff	?___fladd,_powf$2102
 10897   00238E  C033  F13D         	movff	?___fladd+1,_powf$2102+1
 10898   002392  C034  F13E         	movff	?___fladd+2,_powf$2102+2
 10899   002396  C035  F13F         	movff	?___fladd+3,_powf$2102+3
 10900   00239A  C190  F05F         	movff	powf@s2,___flsub@a
 10901   00239E  C191  F060         	movff	powf@s2+1,___flsub@a+1
 10902   0023A2  C192  F061         	movff	powf@s2+2,___flsub@a+2
 10903   0023A6  C193  F062         	movff	powf@s2+3,___flsub@a+3
 10904   0023AA  C13C  F05B         	movff	_powf$2102,___flsub@b
 10905   0023AE  C13D  F05C         	movff	_powf$2102+1,___flsub@b+1
 10906   0023B2  C13E  F05D         	movff	_powf$2102+2,___flsub@b+2
 10907   0023B6  C13F  F05E         	movff	_powf$2102+3,___flsub@b+3
 10908   0023BA  ECCB  F03A         	call	___flsub	;wreg free
 10909   0023BE  C05B  F140         	movff	?___flsub,_powf$2103
 10910   0023C2  C05C  F141         	movff	?___flsub+1,_powf$2103+1
 10911   0023C6  C05D  F142         	movff	?___flsub+2,_powf$2103+2
 10912   0023CA  C05E  F143         	movff	?___flsub+3,_powf$2103+3
 10913   0023CE  C150  F05B         	movff	powf@r,___flsub@b
 10914   0023D2  C151  F05C         	movff	powf@r+1,___flsub@b+1
 10915   0023D6  C152  F05D         	movff	powf@r+2,___flsub@b+2
 10916   0023DA  C153  F05E         	movff	powf@r+3,___flsub@b+3
 10917   0023DE  C140  F05F         	movff	_powf$2103,___flsub@a
 10918   0023E2  C141  F060         	movff	_powf$2103+1,___flsub@a+1
 10919   0023E6  C142  F061         	movff	_powf$2103+2,___flsub@a+2
 10920   0023EA  C143  F062         	movff	_powf$2103+3,___flsub@a+3
 10921   0023EE  ECCB  F03A         	call	___flsub	;wreg free
 10922   0023F2  C05B  F134         	movff	?___flsub,powf@t_l
 10923   0023F6  C05C  F135         	movff	?___flsub+1,powf@t_l+1
 10924   0023FA  C05D  F136         	movff	?___flsub+2,powf@t_l+2
 10925   0023FE  C05E  F137         	movff	?___flsub+3,powf@t_l+3
 10926   002402  C174  F019         	movff	powf@s_h,___flmul@b
 10927   002406  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10928   00240A  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10929   00240E  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10930   002412  C170  F01D         	movff	powf@t_h,___flmul@a
 10931   002416  C171  F01E         	movff	powf@t_h+1,___flmul@a+1
 10932   00241A  C172  F01F         	movff	powf@t_h+2,___flmul@a+2
 10933   00241E  C173  F020         	movff	powf@t_h+3,___flmul@a+3
 10934   002422  EC20  F024         	call	___flmul	;wreg free
 10935   002426  C019  F17C         	movff	?___flmul,powf@u
 10936   00242A  C01A  F17D         	movff	?___flmul+1,powf@u+1
 10937   00242E  C01B  F17E         	movff	?___flmul+2,powf@u+2
 10938   002432  C01C  F17F         	movff	?___flmul+3,powf@u+3
 10939   002436  C130  F01D         	movff	powf@s_l,___flmul@a
 10940   00243A  C131  F01E         	movff	powf@s_l+1,___flmul@a+1
 10941   00243E  C132  F01F         	movff	powf@s_l+2,___flmul@a+2
 10942   002442  C133  F020         	movff	powf@s_l+3,___flmul@a+3
 10943   002446  C170  F019         	movff	powf@t_h,___flmul@b
 10944   00244A  C171  F01A         	movff	powf@t_h+1,___flmul@b+1
 10945   00244E  C172  F01B         	movff	powf@t_h+2,___flmul@b+2
 10946   002452  C173  F01C         	movff	powf@t_h+3,___flmul@b+3
 10947   002456  EC20  F024         	call	___flmul	;wreg free
 10948   00245A  C019  F032         	movff	?___flmul,___fladd@b
 10949   00245E  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10950   002462  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10951   002466  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10952   00246A  C158  F01D         	movff	powf@s,___flmul@a
 10953   00246E  C159  F01E         	movff	powf@s+1,___flmul@a+1
 10954   002472  C15A  F01F         	movff	powf@s+2,___flmul@a+2
 10955   002476  C15B  F020         	movff	powf@s+3,___flmul@a+3
 10956   00247A  C134  F019         	movff	powf@t_l,___flmul@b
 10957   00247E  C135  F01A         	movff	powf@t_l+1,___flmul@b+1
 10958   002482  C136  F01B         	movff	powf@t_l+2,___flmul@b+2
 10959   002486  C137  F01C         	movff	powf@t_l+3,___flmul@b+3
 10960   00248A  EC20  F024         	call	___flmul	;wreg free
 10961   00248E  C019  F036         	movff	?___flmul,___fladd@a
 10962   002492  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 10963   002496  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 10964   00249A  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 10965   00249E  ECC0  F021         	call	___fladd	;wreg free
 10966   0024A2  C032  F180         	movff	?___fladd,powf@v
 10967   0024A6  C033  F181         	movff	?___fladd+1,powf@v+1
 10968   0024AA  C034  F182         	movff	?___fladd+2,powf@v+2
 10969   0024AE  C035  F183         	movff	?___fladd+3,powf@v+3
 10970   0024B2  C17C  F032         	movff	powf@u,___fladd@b
 10971   0024B6  C17D  F033         	movff	powf@u+1,___fladd@b+1
 10972   0024BA  C17E  F034         	movff	powf@u+2,___fladd@b+2
 10973   0024BE  C17F  F035         	movff	powf@u+3,___fladd@b+3
 10974   0024C2  C180  F036         	movff	powf@v,___fladd@a
 10975   0024C6  C181  F037         	movff	powf@v+1,___fladd@a+1
 10976   0024CA  C182  F038         	movff	powf@v+2,___fladd@a+2
 10977   0024CE  C183  F039         	movff	powf@v+3,___fladd@a+3
 10978   0024D2  ECC0  F021         	call	___fladd	;wreg free
 10979   0024D6  C032  F1A0         	movff	?___fladd,powf@p_h
 10980   0024DA  C033  F1A1         	movff	?___fladd+1,powf@p_h+1
 10981   0024DE  C034  F1A2         	movff	?___fladd+2,powf@p_h+2
 10982   0024E2  C035  F1A3         	movff	?___fladd+3,powf@p_h+3
 10983   0024E6  C1A0  F198         	movff	powf@p_h,powf@is
 10984   0024EA  C1A1  F199         	movff	powf@p_h+1,powf@is+1
 10985   0024EE  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
 10986   0024F2  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
 10987   0024F6  0E00               	movlw	0
 10988   0024F8  0101               	movlb	1	; () banked
 10989   0024FA  1598               	andwf	powf@is& (0+255),w,b
 10990   0024FC  6FA0               	movwf	powf@p_h& (0+255),b
 10991   0024FE  0EF0               	movlw	240
 10992   002500  1599               	andwf	(powf@is+1)& (0+255),w,b
 10993   002502  6FA1               	movwf	(powf@p_h+1)& (0+255),b
 10994   002504  0EFF               	movlw	255
 10995   002506  159A               	andwf	(powf@is+2)& (0+255),w,b
 10996   002508  6FA2               	movwf	(powf@p_h+2)& (0+255),b
 10997   00250A  0EFF               	movlw	255
 10998   00250C  159B               	andwf	(powf@is+3)& (0+255),w,b
 10999   00250E  6FA3               	movwf	(powf@p_h+3)& (0+255),b
 11000   002510                     
 11001                           ; BSR set to: 1
 11002   002510  C17C  F05F         	movff	powf@u,___flsub@a
 11003   002514  C17D  F060         	movff	powf@u+1,___flsub@a+1
 11004   002518  C17E  F061         	movff	powf@u+2,___flsub@a+2
 11005   00251C  C17F  F062         	movff	powf@u+3,___flsub@a+3
 11006   002520  C1A0  F05B         	movff	powf@p_h,___flsub@b
 11007   002524  C1A1  F05C         	movff	powf@p_h+1,___flsub@b+1
 11008   002528  C1A2  F05D         	movff	powf@p_h+2,___flsub@b+2
 11009   00252C  C1A3  F05E         	movff	powf@p_h+3,___flsub@b+3
 11010   002530  ECCB  F03A         	call	___flsub	;wreg free
 11011   002534  C05B  F19C         	movff	?___flsub,_powf$2097
 11012   002538  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 11013   00253C  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 11014   002540  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 11015   002544  C180  F05B         	movff	powf@v,___flsub@b
 11016   002548  C181  F05C         	movff	powf@v+1,___flsub@b+1
 11017   00254C  C182  F05D         	movff	powf@v+2,___flsub@b+2
 11018   002550  C183  F05E         	movff	powf@v+3,___flsub@b+3
 11019   002554  C19C  F05F         	movff	_powf$2097,___flsub@a
 11020   002558  C19D  F060         	movff	_powf$2097+1,___flsub@a+1
 11021   00255C  C19E  F061         	movff	_powf$2097+2,___flsub@a+2
 11022   002560  C19F  F062         	movff	_powf$2097+3,___flsub@a+3
 11023   002564  ECCB  F03A         	call	___flsub	;wreg free
 11024   002568  C05B  F16C         	movff	?___flsub,powf@p_l
 11025   00256C  C05C  F16D         	movff	?___flsub+1,powf@p_l+1
 11026   002570  C05D  F16E         	movff	?___flsub+2,powf@p_l+2
 11027   002574  C05E  F16F         	movff	?___flsub+3,powf@p_l+3
 11028   002578  C1A0  F019         	movff	powf@p_h,___flmul@b
 11029   00257C  C1A1  F01A         	movff	powf@p_h+1,___flmul@b+1
 11030   002580  C1A2  F01B         	movff	powf@p_h+2,___flmul@b+2
 11031   002584  C1A3  F01C         	movff	powf@p_h+3,___flmul@b+3
 11032   002588  0E00               	movlw	0
 11033   00258A  6E1D               	movwf	___flmul@a^0,c
 11034   00258C  0E40               	movlw	64
 11035   00258E  6E1E               	movwf	(___flmul@a+1)^0,c
 11036   002590  0E76               	movlw	118
 11037   002592  6E1F               	movwf	(___flmul@a+2)^0,c
 11038   002594  0E3F               	movlw	63
 11039   002596  6E20               	movwf	(___flmul@a+3)^0,c
 11040   002598  EC20  F024         	call	___flmul	;wreg free
 11041   00259C  C019  F120         	movff	?___flmul,powf@z_h
 11042   0025A0  C01A  F121         	movff	?___flmul+1,powf@z_h+1
 11043   0025A4  C01B  F122         	movff	?___flmul+2,powf@z_h+2
 11044   0025A8  C01C  F123         	movff	?___flmul+3,powf@z_h+3
 11045   0025AC  0E4F               	movlw	79
 11046   0025AE  6E1D               	movwf	___flmul@a^0,c
 11047   0025B0  0E38               	movlw	56
 11048   0025B2  6E1E               	movwf	(___flmul@a+1)^0,c
 11049   0025B4  0E76               	movlw	118
 11050   0025B6  6E1F               	movwf	(___flmul@a+2)^0,c
 11051   0025B8  0E3F               	movlw	63
 11052   0025BA  6E20               	movwf	(___flmul@a+3)^0,c
 11053   0025BC  C16C  F019         	movff	powf@p_l,___flmul@b
 11054   0025C0  C16D  F01A         	movff	powf@p_l+1,___flmul@b+1
 11055   0025C4  C16E  F01B         	movff	powf@p_l+2,___flmul@b+2
 11056   0025C8  C16F  F01C         	movff	powf@p_l+3,___flmul@b+3
 11057   0025CC  EC20  F024         	call	___flmul	;wreg free
 11058   0025D0  C019  F036         	movff	?___flmul,___fladd@a
 11059   0025D4  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11060   0025D8  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11061   0025DC  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11062   0025E0  0EC6               	movlw	198
 11063   0025E2  6E1D               	movwf	___flmul@a^0,c
 11064   0025E4  0E23               	movlw	35
 11065   0025E6  6E1E               	movwf	(___flmul@a+1)^0,c
 11066   0025E8  0EF6               	movlw	246
 11067   0025EA  6E1F               	movwf	(___flmul@a+2)^0,c
 11068   0025EC  0EB8               	movlw	184
 11069   0025EE  6E20               	movwf	(___flmul@a+3)^0,c
 11070   0025F0  C1A0  F019         	movff	powf@p_h,___flmul@b
 11071   0025F4  C1A1  F01A         	movff	powf@p_h+1,___flmul@b+1
 11072   0025F8  C1A2  F01B         	movff	powf@p_h+2,___flmul@b+2
 11073   0025FC  C1A3  F01C         	movff	powf@p_h+3,___flmul@b+3
 11074   002600  EC20  F024         	call	___flmul	;wreg free
 11075   002604  C019  F032         	movff	?___flmul,___fladd@b
 11076   002608  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 11077   00260C  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 11078   002610  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 11079   002614  ECC0  F021         	call	___fladd	;wreg free
 11080   002618  C032  F160         	movff	?___fladd,_powf$2101
 11081   00261C  C033  F161         	movff	?___fladd+1,_powf$2101+1
 11082   002620  C034  F162         	movff	?___fladd+2,_powf$2101+2
 11083   002624  C035  F163         	movff	?___fladd+3,_powf$2101+3
 11084   002628  C160  F032         	movff	_powf$2101,___fladd@b
 11085   00262C  C161  F033         	movff	_powf$2101+1,___fladd@b+1
 11086   002630  C162  F034         	movff	_powf$2101+2,___fladd@b+2
 11087   002634  C163  F035         	movff	_powf$2101+3,___fladd@b+3
 11088   002638  0101               	movlb	1	; () banked
 11089   00263A  51A4               	movf	powf@k& (0+255),w,b
 11090   00263C  0D04               	mullw	4
 11091   00263E  50F3               	movf	243,w,c
 11092   002640  0F01               	addlw	low _dp_l
 11093   002642  6E77               	movwf	??_powf^0,c
 11094   002644  C077  FFF6         	movff	??_powf,tblptrl
 11095   002648                     	if	1	;There is more than 1 active tblptr byte
 11096   002648  0E10               	movlw	high __smallconst
 11097   00264A  6EF7               	movwf	tblptrh,c
 11098   00264C                     	endif
 11099   00264C                     	if	0	;tblptru may be non-zero
 11100   00264C                     	endif
 11101   00264C                     	if	0	;tblptru may be non-zero
 11102   00264C                     	endif
 11103   00264C  0009               	tblrd		*+
 11104   00264E  CFF5 F036          	movff	tablat,___fladd@a
 11105   002652  0009               	tblrd		*+
 11106   002654  CFF5 F037          	movff	tablat,___fladd@a+1
 11107   002658  0009               	tblrd		*+
 11108   00265A  CFF5 F038          	movff	tablat,___fladd@a+2
 11109   00265E  000A               	tblrd		*-
 11110   002660  CFF5 F039          	movff	tablat,___fladd@a+3
 11111   002664  ECC0  F021         	call	___fladd	;wreg free
 11112   002668  C032  F124         	movff	?___fladd,powf@z_l
 11113   00266C  C033  F125         	movff	?___fladd+1,powf@z_l+1
 11114   002670  C034  F126         	movff	?___fladd+2,powf@z_l+2
 11115   002674  C035  F127         	movff	?___fladd+3,powf@z_l+3
 11116   002678  C188  F00B         	movff	powf@n,___xxtofl@val
 11117   00267C  C189  F00C         	movff	powf@n+1,___xxtofl@val+1
 11118   002680  C18A  F00D         	movff	powf@n+2,___xxtofl@val+2
 11119   002684  C18B  F00E         	movff	powf@n+3,___xxtofl@val+3
 11120   002688  0E01               	movlw	1
 11121   00268A  EC71  F02F         	call	___xxtofl
 11122   00268E  C00B  F1B0         	movff	?___xxtofl,powf@t
 11123   002692  C00C  F1B1         	movff	?___xxtofl+1,powf@t+1
 11124   002696  C00D  F1B2         	movff	?___xxtofl+2,powf@t+2
 11125   00269A  C00E  F1B3         	movff	?___xxtofl+3,powf@t+3
 11126   00269E  C124  F036         	movff	powf@z_l,___fladd@a
 11127   0026A2  C125  F037         	movff	powf@z_l+1,___fladd@a+1
 11128   0026A6  C126  F038         	movff	powf@z_l+2,___fladd@a+2
 11129   0026AA  C127  F039         	movff	powf@z_l+3,___fladd@a+3
 11130   0026AE  C120  F032         	movff	powf@z_h,___fladd@b
 11131   0026B2  C121  F033         	movff	powf@z_h+1,___fladd@b+1
 11132   0026B6  C122  F034         	movff	powf@z_h+2,___fladd@b+2
 11133   0026BA  C123  F035         	movff	powf@z_h+3,___fladd@b+3
 11134   0026BE  ECC0  F021         	call	___fladd	;wreg free
 11135   0026C2  C032  F160         	movff	?___fladd,_powf$2101
 11136   0026C6  C033  F161         	movff	?___fladd+1,_powf$2101+1
 11137   0026CA  C034  F162         	movff	?___fladd+2,_powf$2101+2
 11138   0026CE  C035  F163         	movff	?___fladd+3,_powf$2101+3
 11139   0026D2  0101               	movlb	1	; () banked
 11140   0026D4  51A4               	movf	powf@k& (0+255),w,b
 11141   0026D6  0D04               	mullw	4
 11142   0026D8  50F3               	movf	243,w,c
 11143   0026DA  0F09               	addlw	low _dp_h
 11144   0026DC  6E77               	movwf	??_powf^0,c
 11145   0026DE  C077  FFF6         	movff	??_powf,tblptrl
 11146   0026E2                     	if	1	;There is more than 1 active tblptr byte
 11147   0026E2  0E10               	movlw	high __smallconst
 11148   0026E4  6EF7               	movwf	tblptrh,c
 11149   0026E6                     	endif
 11150   0026E6                     	if	0	;tblptru may be non-zero
 11151   0026E6                     	endif
 11152   0026E6                     	if	0	;tblptru may be non-zero
 11153   0026E6                     	endif
 11154   0026E6  0009               	tblrd		*+
 11155   0026E8  CFF5 F036          	movff	tablat,___fladd@a
 11156   0026EC  0009               	tblrd		*+
 11157   0026EE  CFF5 F037          	movff	tablat,___fladd@a+1
 11158   0026F2  0009               	tblrd		*+
 11159   0026F4  CFF5 F038          	movff	tablat,___fladd@a+2
 11160   0026F8  000A               	tblrd		*-
 11161   0026FA  CFF5 F039          	movff	tablat,___fladd@a+3
 11162   0026FE  C160  F032         	movff	_powf$2101,___fladd@b
 11163   002702  C161  F033         	movff	_powf$2101+1,___fladd@b+1
 11164   002706  C162  F034         	movff	_powf$2101+2,___fladd@b+2
 11165   00270A  C163  F035         	movff	_powf$2101+3,___fladd@b+3
 11166   00270E  ECC0  F021         	call	___fladd	;wreg free
 11167   002712  C032  F108         	movff	?___fladd,_powf$2104
 11168   002716  C033  F109         	movff	?___fladd+1,_powf$2104+1
 11169   00271A  C034  F10A         	movff	?___fladd+2,_powf$2104+2
 11170   00271E  C035  F10B         	movff	?___fladd+3,_powf$2104+3
 11171   002722  C108  F032         	movff	_powf$2104,___fladd@b
 11172   002726  C109  F033         	movff	_powf$2104+1,___fladd@b+1
 11173   00272A  C10A  F034         	movff	_powf$2104+2,___fladd@b+2
 11174   00272E  C10B  F035         	movff	_powf$2104+3,___fladd@b+3
 11175   002732  C1B0  F036         	movff	powf@t,___fladd@a
 11176   002736  C1B1  F037         	movff	powf@t+1,___fladd@a+1
 11177   00273A  C1B2  F038         	movff	powf@t+2,___fladd@a+2
 11178   00273E  C1B3  F039         	movff	powf@t+3,___fladd@a+3
 11179   002742  ECC0  F021         	call	___fladd	;wreg free
 11180   002746  C032  F18C         	movff	?___fladd,powf@t1
 11181   00274A  C033  F18D         	movff	?___fladd+1,powf@t1+1
 11182   00274E  C034  F18E         	movff	?___fladd+2,powf@t1+2
 11183   002752  C035  F18F         	movff	?___fladd+3,powf@t1+3
 11184   002756  C18C  F198         	movff	powf@t1,powf@is
 11185   00275A  C18D  F199         	movff	powf@t1+1,powf@is+1
 11186   00275E  C18E  F19A         	movff	powf@t1+2,powf@is+2
 11187   002762  C18F  F19B         	movff	powf@t1+3,powf@is+3
 11188   002766  0E00               	movlw	0
 11189   002768  0101               	movlb	1	; () banked
 11190   00276A  1598               	andwf	powf@is& (0+255),w,b
 11191   00276C  6F8C               	movwf	powf@t1& (0+255),b
 11192   00276E  0EF0               	movlw	240
 11193   002770  1599               	andwf	(powf@is+1)& (0+255),w,b
 11194   002772  6F8D               	movwf	(powf@t1+1)& (0+255),b
 11195   002774  0EFF               	movlw	255
 11196   002776  159A               	andwf	(powf@is+2)& (0+255),w,b
 11197   002778  6F8E               	movwf	(powf@t1+2)& (0+255),b
 11198   00277A  0EFF               	movlw	255
 11199   00277C  159B               	andwf	(powf@is+3)& (0+255),w,b
 11200   00277E  6F8F               	movwf	(powf@t1+3)& (0+255),b
 11201   002780                     
 11202                           ; BSR set to: 1
 11203   002780  C1B0  F05F         	movff	powf@t,___flsub@a
 11204   002784  C1B1  F060         	movff	powf@t+1,___flsub@a+1
 11205   002788  C1B2  F061         	movff	powf@t+2,___flsub@a+2
 11206   00278C  C1B3  F062         	movff	powf@t+3,___flsub@a+3
 11207   002790  C18C  F05B         	movff	powf@t1,___flsub@b
 11208   002794  C18D  F05C         	movff	powf@t1+1,___flsub@b+1
 11209   002798  C18E  F05D         	movff	powf@t1+2,___flsub@b+2
 11210   00279C  C18F  F05E         	movff	powf@t1+3,___flsub@b+3
 11211   0027A0  ECCB  F03A         	call	___flsub	;wreg free
 11212   0027A4  C05B  F19C         	movff	?___flsub,_powf$2097
 11213   0027A8  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 11214   0027AC  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 11215   0027B0  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 11216   0027B4  0101               	movlb	1	; () banked
 11217   0027B6  51A4               	movf	powf@k& (0+255),w,b
 11218   0027B8  0D04               	mullw	4
 11219   0027BA  50F3               	movf	243,w,c
 11220   0027BC  0F09               	addlw	low _dp_h
 11221   0027BE  6E77               	movwf	??_powf^0,c
 11222   0027C0  C077  FFF6         	movff	??_powf,tblptrl
 11223   0027C4                     	if	1	;There is more than 1 active tblptr byte
 11224   0027C4  0E10               	movlw	high __smallconst
 11225   0027C6  6EF7               	movwf	tblptrh,c
 11226   0027C8                     	endif
 11227   0027C8                     	if	0	;tblptru may be non-zero
 11228   0027C8                     	endif
 11229   0027C8                     	if	0	;tblptru may be non-zero
 11230   0027C8                     	endif
 11231   0027C8  0009               	tblrd		*+
 11232   0027CA  CFF5 F05F          	movff	tablat,___flsub@a
 11233   0027CE  0009               	tblrd		*+
 11234   0027D0  CFF5 F060          	movff	tablat,___flsub@a+1
 11235   0027D4  0009               	tblrd		*+
 11236   0027D6  CFF5 F061          	movff	tablat,___flsub@a+2
 11237   0027DA  000A               	tblrd		*-
 11238   0027DC  CFF5 F062          	movff	tablat,___flsub@a+3
 11239   0027E0  C19C  F05B         	movff	_powf$2097,___flsub@b
 11240   0027E4  C19D  F05C         	movff	_powf$2097+1,___flsub@b+1
 11241   0027E8  C19E  F05D         	movff	_powf$2097+2,___flsub@b+2
 11242   0027EC  C19F  F05E         	movff	_powf$2097+3,___flsub@b+3
 11243   0027F0  ECCB  F03A         	call	___flsub	;wreg free
 11244   0027F4  C05B  F140         	movff	?___flsub,_powf$2103
 11245   0027F8  C05C  F141         	movff	?___flsub+1,_powf$2103+1
 11246   0027FC  C05D  F142         	movff	?___flsub+2,_powf$2103+2
 11247   002800  C05E  F143         	movff	?___flsub+3,_powf$2103+3
 11248   002804  C120  F05F         	movff	powf@z_h,___flsub@a
 11249   002808  C121  F060         	movff	powf@z_h+1,___flsub@a+1
 11250   00280C  C122  F061         	movff	powf@z_h+2,___flsub@a+2
 11251   002810  C123  F062         	movff	powf@z_h+3,___flsub@a+3
 11252   002814  C140  F05B         	movff	_powf$2103,___flsub@b
 11253   002818  C141  F05C         	movff	_powf$2103+1,___flsub@b+1
 11254   00281C  C142  F05D         	movff	_powf$2103+2,___flsub@b+2
 11255   002820  C143  F05E         	movff	_powf$2103+3,___flsub@b+3
 11256   002824  ECCB  F03A         	call	___flsub	;wreg free
 11257   002828  C05B  F10C         	movff	?___flsub,_powf$2105
 11258   00282C  C05C  F10D         	movff	?___flsub+1,_powf$2105+1
 11259   002830  C05D  F10E         	movff	?___flsub+2,_powf$2105+2
 11260   002834  C05E  F10F         	movff	?___flsub+3,_powf$2105+3
 11261   002838  C124  F05B         	movff	powf@z_l,___flsub@b
 11262   00283C  C125  F05C         	movff	powf@z_l+1,___flsub@b+1
 11263   002840  C126  F05D         	movff	powf@z_l+2,___flsub@b+2
 11264   002844  C127  F05E         	movff	powf@z_l+3,___flsub@b+3
 11265   002848  C10C  F05F         	movff	_powf$2105,___flsub@a
 11266   00284C  C10D  F060         	movff	_powf$2105+1,___flsub@a+1
 11267   002850  C10E  F061         	movff	_powf$2105+2,___flsub@a+2
 11268   002854  C10F  F062         	movff	_powf$2105+3,___flsub@a+3
 11269   002858  ECCB  F03A         	call	___flsub	;wreg free
 11270   00285C  C05B  F11C         	movff	?___flsub,powf@t2
 11271   002860  C05C  F11D         	movff	?___flsub+1,powf@t2+1
 11272   002864  C05D  F11E         	movff	?___flsub+2,powf@t2+2
 11273   002868  C05E  F11F         	movff	?___flsub+3,powf@t2+3
 11274   00286C                     l12570:
 11275   00286C  C073  F198         	movff	powf@y,powf@is
 11276   002870  C074  F199         	movff	powf@y+1,powf@is+1
 11277   002874  C075  F19A         	movff	powf@y+2,powf@is+2
 11278   002878  C076  F19B         	movff	powf@y+3,powf@is+3
 11279   00287C  0E00               	movlw	0
 11280   00287E  0101               	movlb	1	; () banked
 11281   002880  1598               	andwf	powf@is& (0+255),w,b
 11282   002882  6F2C               	movwf	powf@y1& (0+255),b
 11283   002884  0EF0               	movlw	240
 11284   002886  1599               	andwf	(powf@is+1)& (0+255),w,b
 11285   002888  6F2D               	movwf	(powf@y1+1)& (0+255),b
 11286   00288A  0EFF               	movlw	255
 11287   00288C  159A               	andwf	(powf@is+2)& (0+255),w,b
 11288   00288E  6F2E               	movwf	(powf@y1+2)& (0+255),b
 11289   002890  0EFF               	movlw	255
 11290   002892  159B               	andwf	(powf@is+3)& (0+255),w,b
 11291   002894  6F2F               	movwf	(powf@y1+3)& (0+255),b
 11292   002896                     
 11293                           ; BSR set to: 1
 11294   002896  C18C  F01D         	movff	powf@t1,___flmul@a
 11295   00289A  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 11296   00289E  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 11297   0028A2  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 11298   0028A6  C12C  F05F         	movff	powf@y1,___flsub@a
 11299   0028AA  C12D  F060         	movff	powf@y1+1,___flsub@a+1
 11300   0028AE  C12E  F061         	movff	powf@y1+2,___flsub@a+2
 11301   0028B2  C12F  F062         	movff	powf@y1+3,___flsub@a+3
 11302   0028B6  C073  F05B         	movff	powf@y,___flsub@b
 11303   0028BA  C074  F05C         	movff	powf@y+1,___flsub@b+1
 11304   0028BE  C075  F05D         	movff	powf@y+2,___flsub@b+2
 11305   0028C2  C076  F05E         	movff	powf@y+3,___flsub@b+3
 11306   0028C6  ECCB  F03A         	call	___flsub	;wreg free
 11307   0028CA  C05B  F019         	movff	?___flsub,___flmul@b
 11308   0028CE  C05C  F01A         	movff	?___flsub+1,___flmul@b+1
 11309   0028D2  C05D  F01B         	movff	?___flsub+2,___flmul@b+2
 11310   0028D6  C05E  F01C         	movff	?___flsub+3,___flmul@b+3
 11311   0028DA  EC20  F024         	call	___flmul	;wreg free
 11312   0028DE  C019  F110         	movff	?___flmul,_powf$2106
 11313   0028E2  C01A  F111         	movff	?___flmul+1,_powf$2106+1
 11314   0028E6  C01B  F112         	movff	?___flmul+2,_powf$2106+2
 11315   0028EA  C01C  F113         	movff	?___flmul+3,_powf$2106+3
 11316   0028EE  C110  F032         	movff	_powf$2106,___fladd@b
 11317   0028F2  C111  F033         	movff	_powf$2106+1,___fladd@b+1
 11318   0028F6  C112  F034         	movff	_powf$2106+2,___fladd@b+2
 11319   0028FA  C113  F035         	movff	_powf$2106+3,___fladd@b+3
 11320   0028FE  C11C  F01D         	movff	powf@t2,___flmul@a
 11321   002902  C11D  F01E         	movff	powf@t2+1,___flmul@a+1
 11322   002906  C11E  F01F         	movff	powf@t2+2,___flmul@a+2
 11323   00290A  C11F  F020         	movff	powf@t2+3,___flmul@a+3
 11324   00290E  C073  F019         	movff	powf@y,___flmul@b
 11325   002912  C074  F01A         	movff	powf@y+1,___flmul@b+1
 11326   002916  C075  F01B         	movff	powf@y+2,___flmul@b+2
 11327   00291A  C076  F01C         	movff	powf@y+3,___flmul@b+3
 11328   00291E  EC20  F024         	call	___flmul	;wreg free
 11329   002922  C019  F036         	movff	?___flmul,___fladd@a
 11330   002926  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11331   00292A  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11332   00292E  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11333   002932  ECC0  F021         	call	___fladd	;wreg free
 11334   002936  C032  F16C         	movff	?___fladd,powf@p_l
 11335   00293A  C033  F16D         	movff	?___fladd+1,powf@p_l+1
 11336   00293E  C034  F16E         	movff	?___fladd+2,powf@p_l+2
 11337   002942  C035  F16F         	movff	?___fladd+3,powf@p_l+3
 11338   002946  C12C  F019         	movff	powf@y1,___flmul@b
 11339   00294A  C12D  F01A         	movff	powf@y1+1,___flmul@b+1
 11340   00294E  C12E  F01B         	movff	powf@y1+2,___flmul@b+2
 11341   002952  C12F  F01C         	movff	powf@y1+3,___flmul@b+3
 11342   002956  C18C  F01D         	movff	powf@t1,___flmul@a
 11343   00295A  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 11344   00295E  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 11345   002962  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 11346   002966  EC20  F024         	call	___flmul	;wreg free
 11347   00296A  C019  F1A0         	movff	?___flmul,powf@p_h
 11348   00296E  C01A  F1A1         	movff	?___flmul+1,powf@p_h+1
 11349   002972  C01B  F1A2         	movff	?___flmul+2,powf@p_h+2
 11350   002976  C01C  F1A3         	movff	?___flmul+3,powf@p_h+3
 11351   00297A  C1A0  F032         	movff	powf@p_h,___fladd@b
 11352   00297E  C1A1  F033         	movff	powf@p_h+1,___fladd@b+1
 11353   002982  C1A2  F034         	movff	powf@p_h+2,___fladd@b+2
 11354   002986  C1A3  F035         	movff	powf@p_h+3,___fladd@b+3
 11355   00298A  C16C  F036         	movff	powf@p_l,___fladd@a
 11356   00298E  C16D  F037         	movff	powf@p_l+1,___fladd@a+1
 11357   002992  C16E  F038         	movff	powf@p_l+2,___fladd@a+2
 11358   002996  C16F  F039         	movff	powf@p_l+3,___fladd@a+3
 11359   00299A  ECC0  F021         	call	___fladd	;wreg free
 11360   00299E  C032  F1B4         	movff	?___fladd,powf@z
 11361   0029A2  C033  F1B5         	movff	?___fladd+1,powf@z+1
 11362   0029A6  C034  F1B6         	movff	?___fladd+2,powf@z+2
 11363   0029AA  C035  F1B7         	movff	?___fladd+3,powf@z+3
 11364   0029AE  C1B4  F1A8         	movff	powf@z,powf@j
 11365   0029B2  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 11366   0029B6  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 11367   0029BA  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 11368   0029BE  0101               	movlb	1	; () banked
 11369   0029C0  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11370   0029C2  EFEF  F014         	goto	u13131
 11371   0029C6  05A8               	decf	powf@j& (0+255),w,b
 11372   0029C8  0E00               	movlw	0
 11373   0029CA  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11374   0029CC  0E00               	movlw	0
 11375   0029CE  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11376   0029D0  0E43               	movlw	67
 11377   0029D2  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 11378   0029D4  A0D8               	btfss	status,0,c
 11379   0029D6  EFEF  F014         	goto	u13131
 11380   0029DA  EFF1  F014         	goto	u13130
 11381   0029DE                     u13131:
 11382   0029DE  EFF3  F014         	goto	l12592
 11383   0029E2                     u13130:
 11384   0029E2  EFCB  F00B         	goto	l12392
 11385   0029E6                     l12592:
 11386                           
 11387                           ; BSR set to: 1
 11388   0029E6  0E43               	movlw	67
 11389   0029E8  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 11390   0029EA  11A8               	iorwf	powf@j& (0+255),w,b
 11391   0029EC  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11392   0029EE  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 11393   0029F0  A4D8               	btfss	status,2,c
 11394   0029F2  EFFD  F014         	goto	u13141
 11395   0029F6  EFFF  F014         	goto	u13140
 11396   0029FA                     u13141:
 11397   0029FA  EF3E  F015         	goto	l12602
 11398   0029FE                     u13140:
 11399   0029FE                     
 11400                           ; BSR set to: 1
 11401   0029FE  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11402   002A02  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11403   002A06  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 11404   002A0A  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 11405   002A0E  C1B4  F05B         	movff	powf@z,___flsub@b
 11406   002A12  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 11407   002A16  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 11408   002A1A  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 11409   002A1E  ECCB  F03A         	call	___flsub	;wreg free
 11410   002A22  C05B  F063         	movff	?___flsub,___flge@ff1
 11411   002A26  C05C  F064         	movff	?___flsub+1,___flge@ff1+1
 11412   002A2A  C05D  F065         	movff	?___flsub+2,___flge@ff1+2
 11413   002A2E  C05E  F066         	movff	?___flsub+3,___flge@ff1+3
 11414   002A32  0E3C               	movlw	60
 11415   002A34  6E36               	movwf	___fladd@a^0,c
 11416   002A36  0EAA               	movlw	170
 11417   002A38  6E37               	movwf	(___fladd@a+1)^0,c
 11418   002A3A  0E38               	movlw	56
 11419   002A3C  6E38               	movwf	(___fladd@a+2)^0,c
 11420   002A3E  0E33               	movlw	51
 11421   002A40  6E39               	movwf	(___fladd@a+3)^0,c
 11422   002A42  C16C  F032         	movff	powf@p_l,___fladd@b
 11423   002A46  C16D  F033         	movff	powf@p_l+1,___fladd@b+1
 11424   002A4A  C16E  F034         	movff	powf@p_l+2,___fladd@b+2
 11425   002A4E  C16F  F035         	movff	powf@p_l+3,___fladd@b+3
 11426   002A52  ECC0  F021         	call	___fladd	;wreg free
 11427   002A56  C032  F067         	movff	?___fladd,___flge@ff2
 11428   002A5A  C033  F068         	movff	?___fladd+1,___flge@ff2+1
 11429   002A5E  C034  F069         	movff	?___fladd+2,___flge@ff2+2
 11430   002A62  C035  F06A         	movff	?___fladd+3,___flge@ff2+3
 11431   002A66  ECDF  F033         	call	___flge	;wreg free
 11432   002A6A  B0D8               	btfsc	status,0,c
 11433   002A6C  EF3A  F015         	goto	u13151
 11434   002A70  EF3C  F015         	goto	u13150
 11435   002A74                     u13151:
 11436   002A74  EFA8  F015         	goto	l12618
 11437   002A78                     u13150:
 11438   002A78  EFCB  F00B         	goto	l12392
 11439   002A7C                     l12602:
 11440                           
 11441                           ; BSR set to: 1
 11442   002A7C  0EFF               	movlw	255
 11443   002A7E  15A8               	andwf	powf@j& (0+255),w,b
 11444   002A80  6E77               	movwf	??_powf^0,c
 11445   002A82  0EFF               	movlw	255
 11446   002A84  15A9               	andwf	(powf@j+1)& (0+255),w,b
 11447   002A86  6E78               	movwf	(??_powf+1)^0,c
 11448   002A88  0EFF               	movlw	255
 11449   002A8A  15AA               	andwf	(powf@j+2)& (0+255),w,b
 11450   002A8C  6E79               	movwf	(??_powf+2)^0,c
 11451   002A8E  0E7F               	movlw	127
 11452   002A90  15AB               	andwf	(powf@j+3)& (0+255),w,b
 11453   002A92  6E7A               	movwf	(??_powf+3)^0,c
 11454   002A94  BE7A               	btfsc	(??_powf+3)^0,7,c
 11455   002A96  EF59  F015         	goto	u13161
 11456   002A9A  0477               	decf	??_powf^0,w,c
 11457   002A9C  0E00               	movlw	0
 11458   002A9E  5878               	subwfb	(??_powf+1)^0,w,c
 11459   002AA0  0E16               	movlw	22
 11460   002AA2  5879               	subwfb	(??_powf+2)^0,w,c
 11461   002AA4  0E43               	movlw	67
 11462   002AA6  587A               	subwfb	(??_powf+3)^0,w,c
 11463   002AA8  A0D8               	btfss	status,0,c
 11464   002AAA  EF59  F015         	goto	u13161
 11465   002AAE  EF5B  F015         	goto	u13160
 11466   002AB2                     u13161:
 11467   002AB2  EF65  F015         	goto	l12610
 11468   002AB6                     u13160:
 11469   002AB6                     
 11470                           ; BSR set to: 1
 11471   002AB6  0E00               	movlw	0
 11472   002AB8  6E6F               	movwf	?_powf^0,c
 11473   002ABA  0E00               	movlw	0
 11474   002ABC  6E70               	movwf	(?_powf+1)^0,c
 11475   002ABE  0E00               	movlw	0
 11476   002AC0  6E71               	movwf	(?_powf+2)^0,c
 11477   002AC2  0E00               	movlw	0
 11478   002AC4  6E72               	movwf	(?_powf+3)^0,c
 11479   002AC6  EFFF  F019         	goto	l1639
 11480   002ACA                     l12610:
 11481                           
 11482                           ; BSR set to: 1
 11483   002ACA  0E16               	movlw	22
 11484   002ACC  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 11485   002ACE  E109               	bnz	u13171
 11486   002AD0  0EC3               	movlw	195
 11487   002AD2  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 11488   002AD4  11A8               	iorwf	powf@j& (0+255),w,b
 11489   002AD6  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11490   002AD8  A4D8               	btfss	status,2,c
 11491   002ADA  EF71  F015         	goto	u13171
 11492   002ADE  EF73  F015         	goto	u13170
 11493   002AE2                     u13171:
 11494   002AE2  EFA8  F015         	goto	l12618
 11495   002AE6                     u13170:
 11496   002AE6                     
 11497                           ; BSR set to: 1
 11498   002AE6  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11499   002AEA  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11500   002AEE  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 11501   002AF2  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 11502   002AF6  C1B4  F05B         	movff	powf@z,___flsub@b
 11503   002AFA  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 11504   002AFE  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 11505   002B02  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 11506   002B06  ECCB  F03A         	call	___flsub	;wreg free
 11507   002B0A  C05B  F063         	movff	?___flsub,___flge@ff1
 11508   002B0E  C05C  F064         	movff	?___flsub+1,___flge@ff1+1
 11509   002B12  C05D  F065         	movff	?___flsub+2,___flge@ff1+2
 11510   002B16  C05E  F066         	movff	?___flsub+3,___flge@ff1+3
 11511   002B1A  C16C  F067         	movff	powf@p_l,___flge@ff2
 11512   002B1E  C16D  F068         	movff	powf@p_l+1,___flge@ff2+1
 11513   002B22  C16E  F069         	movff	powf@p_l+2,___flge@ff2+2
 11514   002B26  C16F  F06A         	movff	powf@p_l+3,___flge@ff2+3
 11515   002B2A  ECDF  F033         	call	___flge	;wreg free
 11516   002B2E  A0D8               	btfss	status,0,c
 11517   002B30  EF9C  F015         	goto	u13181
 11518   002B34  EF9E  F015         	goto	u13180
 11519   002B38                     u13181:
 11520   002B38  EFA8  F015         	goto	l12618
 11521   002B3C                     u13180:
 11522   002B3C  0E00               	movlw	0
 11523   002B3E  6E6F               	movwf	?_powf^0,c
 11524   002B40  0E00               	movlw	0
 11525   002B42  6E70               	movwf	(?_powf+1)^0,c
 11526   002B44  0E00               	movlw	0
 11527   002B46  6E71               	movwf	(?_powf+2)^0,c
 11528   002B48  0E00               	movlw	0
 11529   002B4A  6E72               	movwf	(?_powf+3)^0,c
 11530   002B4C  EFFF  F019         	goto	l1639
 11531   002B50                     l12618:
 11532   002B50  0EFF               	movlw	255
 11533   002B52  0101               	movlb	1	; () banked
 11534   002B54  15A8               	andwf	powf@j& (0+255),w,b
 11535   002B56  6F28               	movwf	powf@i& (0+255),b
 11536   002B58  0EFF               	movlw	255
 11537   002B5A  15A9               	andwf	(powf@j+1)& (0+255),w,b
 11538   002B5C  6F29               	movwf	(powf@i+1)& (0+255),b
 11539   002B5E  0EFF               	movlw	255
 11540   002B60  15AA               	andwf	(powf@j+2)& (0+255),w,b
 11541   002B62  6F2A               	movwf	(powf@i+2)& (0+255),b
 11542   002B64  0E7F               	movlw	127
 11543   002B66  15AB               	andwf	(powf@j+3)& (0+255),w,b
 11544   002B68  6F2B               	movwf	(powf@i+3)& (0+255),b
 11545   002B6A  0E17               	movlw	23
 11546   002B6C  6E77               	movwf	??_powf^0,c
 11547   002B6E  C128  F078         	movff	powf@i,??_powf+1
 11548   002B72  C129  F079         	movff	powf@i+1,??_powf+2
 11549   002B76  C12A  F07A         	movff	powf@i+2,??_powf+3
 11550   002B7A  C12B  F07B         	movff	powf@i+3,??_powf+4
 11551   002B7E                     u13195:
 11552   002B7E  6677               	tstfsz	??_powf^0,c
 11553   002B80  EFC4  F015         	goto	u13196
 11554   002B84  EFCC  F015         	goto	u13197
 11555   002B88                     u13196:
 11556   002B88  347B               	rlcf	(??_powf+4)^0,w,c
 11557   002B8A  327B               	rrcf	(??_powf+4)^0,f,c
 11558   002B8C  327A               	rrcf	(??_powf+3)^0,f,c
 11559   002B8E  3279               	rrcf	(??_powf+2)^0,f,c
 11560   002B90  3278               	rrcf	(??_powf+1)^0,f,c
 11561   002B92  2E77               	decfsz	??_powf^0,f,c
 11562   002B94  EFBF  F015         	goto	u13195
 11563   002B98                     u13197:
 11564   002B98  0E81               	movlw	129
 11565   002B9A  2478               	addwf	(??_powf+1)^0,w,c
 11566   002B9C  0101               	movlb	1	; () banked
 11567   002B9E  6FA4               	movwf	powf@k& (0+255),b
 11568   002BA0  0EFF               	movlw	255
 11569   002BA2  2079               	addwfc	(??_powf+2)^0,w,c
 11570   002BA4  6FA5               	movwf	(powf@k+1)& (0+255),b
 11571   002BA6  0EFF               	movlw	255
 11572   002BA8  207A               	addwfc	(??_powf+3)^0,w,c
 11573   002BAA  6FA6               	movwf	(powf@k+2)& (0+255),b
 11574   002BAC  0EFF               	movlw	255
 11575   002BAE  207B               	addwfc	(??_powf+4)^0,w,c
 11576   002BB0  6FA7               	movwf	(powf@k+3)& (0+255),b
 11577   002BB2                     
 11578                           ; BSR set to: 1
 11579   002BB2  0E00               	movlw	0
 11580   002BB4  6F88               	movwf	powf@n& (0+255),b
 11581   002BB6  0E00               	movlw	0
 11582   002BB8  6F89               	movwf	(powf@n+1)& (0+255),b
 11583   002BBA  0E00               	movlw	0
 11584   002BBC  6F8A               	movwf	(powf@n+2)& (0+255),b
 11585   002BBE  0E00               	movlw	0
 11586   002BC0  6F8B               	movwf	(powf@n+3)& (0+255),b
 11587   002BC2                     
 11588                           ; BSR set to: 1
 11589   002BC2  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 11590   002BC4  EFF0  F015         	goto	u13201
 11591   002BC8  0528               	decf	powf@i& (0+255),w,b
 11592   002BCA  0E00               	movlw	0
 11593   002BCC  5929               	subwfb	(powf@i+1)& (0+255),w,b
 11594   002BCE  0E00               	movlw	0
 11595   002BD0  592A               	subwfb	(powf@i+2)& (0+255),w,b
 11596   002BD2  0E3F               	movlw	63
 11597   002BD4  592B               	subwfb	(powf@i+3)& (0+255),w,b
 11598   002BD6  A0D8               	btfss	status,0,c
 11599   002BD8  EFF0  F015         	goto	u13201
 11600   002BDC  EFF2  F015         	goto	u13200
 11601   002BE0                     u13201:
 11602   002BE0  EFCA  F016         	goto	l12630
 11603   002BE4                     u13200:
 11604   002BE4                     
 11605                           ; BSR set to: 1
 11606   002BE4  C1A4  F077         	movff	powf@k,??_powf
 11607   002BE8  0E01               	movlw	1
 11608   002BEA  2677               	addwf	??_powf^0,f,c
 11609   002BEC  0E00               	movlw	0
 11610   002BEE  6E78               	movwf	(??_powf+1)^0,c
 11611   002BF0  0E00               	movlw	0
 11612   002BF2  6E79               	movwf	(??_powf+2)^0,c
 11613   002BF4  0E80               	movlw	128
 11614   002BF6  6E7A               	movwf	(??_powf+3)^0,c
 11615   002BF8  0E00               	movlw	0
 11616   002BFA  6E7B               	movwf	(??_powf+4)^0,c
 11617   002BFC                     u13215:
 11618   002BFC  6677               	tstfsz	??_powf^0,c
 11619   002BFE  EF03  F016         	goto	u13216
 11620   002C02  EF0B  F016         	goto	u13217
 11621   002C06                     u13216:
 11622   002C06  347B               	rlcf	(??_powf+4)^0,w,c
 11623   002C08  327B               	rrcf	(??_powf+4)^0,f,c
 11624   002C0A  327A               	rrcf	(??_powf+3)^0,f,c
 11625   002C0C  3279               	rrcf	(??_powf+2)^0,f,c
 11626   002C0E  3278               	rrcf	(??_powf+1)^0,f,c
 11627   002C10  2E77               	decfsz	??_powf^0,f,c
 11628   002C12  EFFE  F015         	goto	u13215
 11629   002C16                     u13217:
 11630   002C16  0101               	movlb	1	; () banked
 11631   002C18  51A8               	movf	powf@j& (0+255),w,b
 11632   002C1A  2478               	addwf	(??_powf+1)^0,w,c
 11633   002C1C  6F88               	movwf	powf@n& (0+255),b
 11634   002C1E  51A9               	movf	(powf@j+1)& (0+255),w,b
 11635   002C20  2079               	addwfc	(??_powf+2)^0,w,c
 11636   002C22  6F89               	movwf	(powf@n+1)& (0+255),b
 11637   002C24  51AA               	movf	(powf@j+2)& (0+255),w,b
 11638   002C26  207A               	addwfc	(??_powf+3)^0,w,c
 11639   002C28  6F8A               	movwf	(powf@n+2)& (0+255),b
 11640   002C2A  51AB               	movf	(powf@j+3)& (0+255),w,b
 11641   002C2C  207B               	addwfc	(??_powf+4)^0,w,c
 11642   002C2E  6F8B               	movwf	(powf@n+3)& (0+255),b
 11643   002C30  0E81               	movlw	129
 11644   002C32  6E77               	movwf	??_powf^0,c
 11645   002C34  0EFF               	movlw	255
 11646   002C36  6E78               	movwf	(??_powf+1)^0,c
 11647   002C38  0EFF               	movlw	255
 11648   002C3A  6E79               	movwf	(??_powf+2)^0,c
 11649   002C3C  0EFF               	movlw	255
 11650   002C3E  6E7A               	movwf	(??_powf+3)^0,c
 11651   002C40  0E17               	movlw	23
 11652   002C42  6E7B               	movwf	(??_powf+4)^0,c
 11653   002C44  C188  F07C         	movff	powf@n,??_powf+5
 11654   002C48  C189  F07D         	movff	powf@n+1,??_powf+6
 11655   002C4C  C18A  F07E         	movff	powf@n+2,??_powf+7
 11656   002C50  C18B  F07F         	movff	powf@n+3,??_powf+8
 11657   002C54                     u13225:
 11658   002C54  667B               	tstfsz	(??_powf+4)^0,c
 11659   002C56  EF2F  F016         	goto	u13226
 11660   002C5A  EF37  F016         	goto	u13227
 11661   002C5E                     u13226:
 11662   002C5E  347F               	rlcf	(??_powf+8)^0,w,c
 11663   002C60  327F               	rrcf	(??_powf+8)^0,f,c
 11664   002C62  327E               	rrcf	(??_powf+7)^0,f,c
 11665   002C64  327D               	rrcf	(??_powf+6)^0,f,c
 11666   002C66  327C               	rrcf	(??_powf+5)^0,f,c
 11667   002C68  2E7B               	decfsz	(??_powf+4)^0,f,c
 11668   002C6A  EF2A  F016         	goto	u13225
 11669   002C6E                     u13227:
 11670   002C6E  507C               	movf	(??_powf+5)^0,w,c
 11671   002C70  2477               	addwf	??_powf^0,w,c
 11672   002C72  0101               	movlb	1	; () banked
 11673   002C74  6FA4               	movwf	powf@k& (0+255),b
 11674   002C76  0E00               	movlw	0
 11675   002C78  2078               	addwfc	(??_powf+1)^0,w,c
 11676   002C7A  6FA5               	movwf	(powf@k+1)& (0+255),b
 11677   002C7C  0E00               	movlw	0
 11678   002C7E  2079               	addwfc	(??_powf+2)^0,w,c
 11679   002C80  6FA6               	movwf	(powf@k+2)& (0+255),b
 11680   002C82  0E00               	movlw	0
 11681   002C84  207A               	addwfc	(??_powf+3)^0,w,c
 11682   002C86  6FA7               	movwf	(powf@k+3)& (0+255),b
 11683   002C88  C1A4  F077         	movff	powf@k,??_powf
 11684   002C8C  0EFF               	movlw	255
 11685   002C8E  6E78               	movwf	(??_powf+1)^0,c
 11686   002C90  0EFF               	movlw	255
 11687   002C92  6E79               	movwf	(??_powf+2)^0,c
 11688   002C94  0E7F               	movlw	127
 11689   002C96  6E7A               	movwf	(??_powf+3)^0,c
 11690   002C98  0E00               	movlw	0
 11691   002C9A  6E7B               	movwf	(??_powf+4)^0,c
 11692   002C9C                     u13235:
 11693   002C9C  6677               	tstfsz	??_powf^0,c
 11694   002C9E  EF53  F016         	goto	u13236
 11695   002CA2  EF5B  F016         	goto	u13237
 11696   002CA6                     u13236:
 11697   002CA6  347B               	rlcf	(??_powf+4)^0,w,c
 11698   002CA8  327B               	rrcf	(??_powf+4)^0,f,c
 11699   002CAA  327A               	rrcf	(??_powf+3)^0,f,c
 11700   002CAC  3279               	rrcf	(??_powf+2)^0,f,c
 11701   002CAE  3278               	rrcf	(??_powf+1)^0,f,c
 11702   002CB0  2E77               	decfsz	??_powf^0,f,c
 11703   002CB2  EF4E  F016         	goto	u13235
 11704   002CB6                     u13237:
 11705   002CB6  1C78               	comf	(??_powf+1)^0,w,c
 11706   002CB8  6E7C               	movwf	(??_powf+5)^0,c
 11707   002CBA  1C79               	comf	(??_powf+2)^0,w,c
 11708   002CBC  6E7D               	movwf	(??_powf+6)^0,c
 11709   002CBE  1C7A               	comf	(??_powf+3)^0,w,c
 11710   002CC0  6E7E               	movwf	(??_powf+7)^0,c
 11711   002CC2  1C7B               	comf	(??_powf+4)^0,w,c
 11712   002CC4  6E7F               	movwf	(??_powf+8)^0,c
 11713   002CC6  0101               	movlb	1	; () banked
 11714   002CC8  5188               	movf	powf@n& (0+255),w,b
 11715   002CCA  147C               	andwf	(??_powf+5)^0,w,c
 11716   002CCC  6FB0               	movwf	powf@t& (0+255),b
 11717   002CCE  5189               	movf	(powf@n+1)& (0+255),w,b
 11718   002CD0  147D               	andwf	(??_powf+6)^0,w,c
 11719   002CD2  6FB1               	movwf	(powf@t+1)& (0+255),b
 11720   002CD4  518A               	movf	(powf@n+2)& (0+255),w,b
 11721   002CD6  147E               	andwf	(??_powf+7)^0,w,c
 11722   002CD8  6FB2               	movwf	(powf@t+2)& (0+255),b
 11723   002CDA  518B               	movf	(powf@n+3)& (0+255),w,b
 11724   002CDC  147F               	andwf	(??_powf+8)^0,w,c
 11725   002CDE  6FB3               	movwf	(powf@t+3)& (0+255),b
 11726   002CE0  51A4               	movf	powf@k& (0+255),w,b
 11727   002CE2  0817               	sublw	23
 11728   002CE4  6E77               	movwf	??_powf^0,c
 11729   002CE6  0EFF               	movlw	255
 11730   002CE8  1588               	andwf	powf@n& (0+255),w,b
 11731   002CEA  6E78               	movwf	(??_powf+1)^0,c
 11732   002CEC  0EFF               	movlw	255
 11733   002CEE  1589               	andwf	(powf@n+1)& (0+255),w,b
 11734   002CF0  6E79               	movwf	(??_powf+2)^0,c
 11735   002CF2  0E7F               	movlw	127
 11736   002CF4  158A               	andwf	(powf@n+2)& (0+255),w,b
 11737   002CF6  6E7A               	movwf	(??_powf+3)^0,c
 11738   002CF8  0E00               	movlw	0
 11739   002CFA  158B               	andwf	(powf@n+3)& (0+255),w,b
 11740   002CFC  6E7B               	movwf	(??_powf+4)^0,c
 11741   002CFE  0E00               	movlw	0
 11742   002D00  1078               	iorwf	(??_powf+1)^0,w,c
 11743   002D02  6E7C               	movwf	(??_powf+5)^0,c
 11744   002D04  0E00               	movlw	0
 11745   002D06  1079               	iorwf	(??_powf+2)^0,w,c
 11746   002D08  6E7D               	movwf	(??_powf+6)^0,c
 11747   002D0A  0E80               	movlw	128
 11748   002D0C  107A               	iorwf	(??_powf+3)^0,w,c
 11749   002D0E  6E7E               	movwf	(??_powf+7)^0,c
 11750   002D10  0E00               	movlw	0
 11751   002D12  107B               	iorwf	(??_powf+4)^0,w,c
 11752   002D14  6E7F               	movwf	(??_powf+8)^0,c
 11753   002D16                     u13245:
 11754   002D16  6677               	tstfsz	??_powf^0,c
 11755   002D18  EF90  F016         	goto	u13246
 11756   002D1C  EF98  F016         	goto	u13247
 11757   002D20                     u13246:
 11758   002D20  347F               	rlcf	(??_powf+8)^0,w,c
 11759   002D22  327F               	rrcf	(??_powf+8)^0,f,c
 11760   002D24  327E               	rrcf	(??_powf+7)^0,f,c
 11761   002D26  327D               	rrcf	(??_powf+6)^0,f,c
 11762   002D28  327C               	rrcf	(??_powf+5)^0,f,c
 11763   002D2A  2E77               	decfsz	??_powf^0,f,c
 11764   002D2C  EF8B  F016         	goto	u13245
 11765   002D30                     u13247:
 11766   002D30  C07C  F188         	movff	??_powf+5,powf@n
 11767   002D34  C07D  F189         	movff	??_powf+6,powf@n+1
 11768   002D38  C07E  F18A         	movff	??_powf+7,powf@n+2
 11769   002D3C  C07F  F18B         	movff	??_powf+8,powf@n+3
 11770   002D40  0101               	movlb	1	; () banked
 11771   002D42  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11772   002D44  EFA8  F016         	goto	u13250
 11773   002D48  EFA6  F016         	goto	u13251
 11774   002D4C                     u13251:
 11775   002D4C  EFB0  F016         	goto	l12628
 11776   002D50                     u13250:
 11777   002D50                     
 11778                           ; BSR set to: 1
 11779   002D50  1F8B               	comf	(powf@n+3)& (0+255),f,b
 11780   002D52  1F8A               	comf	(powf@n+2)& (0+255),f,b
 11781   002D54  1F89               	comf	(powf@n+1)& (0+255),f,b
 11782   002D56  6D88               	negf	powf@n& (0+255),b
 11783   002D58  0E00               	movlw	0
 11784   002D5A  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11785   002D5C  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11786   002D5E  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11787   002D60                     l12628:
 11788                           
 11789                           ; BSR set to: 1
 11790   002D60  C1A0  F05B         	movff	powf@p_h,___flsub@b
 11791   002D64  C1A1  F05C         	movff	powf@p_h+1,___flsub@b+1
 11792   002D68  C1A2  F05D         	movff	powf@p_h+2,___flsub@b+2
 11793   002D6C  C1A3  F05E         	movff	powf@p_h+3,___flsub@b+3
 11794   002D70  C1B0  F05F         	movff	powf@t,___flsub@a
 11795   002D74  C1B1  F060         	movff	powf@t+1,___flsub@a+1
 11796   002D78  C1B2  F061         	movff	powf@t+2,___flsub@a+2
 11797   002D7C  C1B3  F062         	movff	powf@t+3,___flsub@a+3
 11798   002D80  ECCB  F03A         	call	___flsub	;wreg free
 11799   002D84  C05B  F1A0         	movff	?___flsub,powf@p_h
 11800   002D88  C05C  F1A1         	movff	?___flsub+1,powf@p_h+1
 11801   002D8C  C05D  F1A2         	movff	?___flsub+2,powf@p_h+2
 11802   002D90  C05E  F1A3         	movff	?___flsub+3,powf@p_h+3
 11803   002D94                     l12630:
 11804   002D94  C1A0  F032         	movff	powf@p_h,___fladd@b
 11805   002D98  C1A1  F033         	movff	powf@p_h+1,___fladd@b+1
 11806   002D9C  C1A2  F034         	movff	powf@p_h+2,___fladd@b+2
 11807   002DA0  C1A3  F035         	movff	powf@p_h+3,___fladd@b+3
 11808   002DA4  C16C  F036         	movff	powf@p_l,___fladd@a
 11809   002DA8  C16D  F037         	movff	powf@p_l+1,___fladd@a+1
 11810   002DAC  C16E  F038         	movff	powf@p_l+2,___fladd@a+2
 11811   002DB0  C16F  F039         	movff	powf@p_l+3,___fladd@a+3
 11812   002DB4  ECC0  F021         	call	___fladd	;wreg free
 11813   002DB8  C032  F1B0         	movff	?___fladd,powf@t
 11814   002DBC  C033  F1B1         	movff	?___fladd+1,powf@t+1
 11815   002DC0  C034  F1B2         	movff	?___fladd+2,powf@t+2
 11816   002DC4  C035  F1B3         	movff	?___fladd+3,powf@t+3
 11817   002DC8  C1B0  F198         	movff	powf@t,powf@is
 11818   002DCC  C1B1  F199         	movff	powf@t+1,powf@is+1
 11819   002DD0  C1B2  F19A         	movff	powf@t+2,powf@is+2
 11820   002DD4  C1B3  F19B         	movff	powf@t+3,powf@is+3
 11821   002DD8  0E00               	movlw	0
 11822   002DDA  0101               	movlb	1	; () banked
 11823   002DDC  1598               	andwf	powf@is& (0+255),w,b
 11824   002DDE  6FB0               	movwf	powf@t& (0+255),b
 11825   002DE0  0E80               	movlw	128
 11826   002DE2  1599               	andwf	(powf@is+1)& (0+255),w,b
 11827   002DE4  6FB1               	movwf	(powf@t+1)& (0+255),b
 11828   002DE6  0EFF               	movlw	255
 11829   002DE8  159A               	andwf	(powf@is+2)& (0+255),w,b
 11830   002DEA  6FB2               	movwf	(powf@t+2)& (0+255),b
 11831   002DEC  0EFF               	movlw	255
 11832   002DEE  159B               	andwf	(powf@is+3)& (0+255),w,b
 11833   002DF0  6FB3               	movwf	(powf@t+3)& (0+255),b
 11834   002DF2                     
 11835                           ; BSR set to: 1
 11836   002DF2  C1B0  F019         	movff	powf@t,___flmul@b
 11837   002DF6  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 11838   002DFA  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 11839   002DFE  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 11840   002E02  0E00               	movlw	0
 11841   002E04  6E1D               	movwf	___flmul@a^0,c
 11842   002E06  0E72               	movlw	114
 11843   002E08  6E1E               	movwf	(___flmul@a+1)^0,c
 11844   002E0A  0E31               	movlw	49
 11845   002E0C  6E1F               	movwf	(___flmul@a+2)^0,c
 11846   002E0E  0E3F               	movlw	63
 11847   002E10  6E20               	movwf	(___flmul@a+3)^0,c
 11848   002E12  EC20  F024         	call	___flmul	;wreg free
 11849   002E16  C019  F17C         	movff	?___flmul,powf@u
 11850   002E1A  C01A  F17D         	movff	?___flmul+1,powf@u+1
 11851   002E1E  C01B  F17E         	movff	?___flmul+2,powf@u+2
 11852   002E22  C01C  F17F         	movff	?___flmul+3,powf@u+3
 11853   002E26  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11854   002E2A  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11855   002E2E  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 11856   002E32  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 11857   002E36  C1B0  F05B         	movff	powf@t,___flsub@b
 11858   002E3A  C1B1  F05C         	movff	powf@t+1,___flsub@b+1
 11859   002E3E  C1B2  F05D         	movff	powf@t+2,___flsub@b+2
 11860   002E42  C1B3  F05E         	movff	powf@t+3,___flsub@b+3
 11861   002E46  ECCB  F03A         	call	___flsub	;wreg free
 11862   002E4A  C05B  F19C         	movff	?___flsub,_powf$2097
 11863   002E4E  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 11864   002E52  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 11865   002E56  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 11866   002E5A  0E18               	movlw	24
 11867   002E5C  6E1D               	movwf	___flmul@a^0,c
 11868   002E5E  0E72               	movlw	114
 11869   002E60  6E1E               	movwf	(___flmul@a+1)^0,c
 11870   002E62  0E31               	movlw	49
 11871   002E64  6E1F               	movwf	(___flmul@a+2)^0,c
 11872   002E66  0E3F               	movlw	63
 11873   002E68  6E20               	movwf	(___flmul@a+3)^0,c
 11874   002E6A  C19C  F05F         	movff	_powf$2097,___flsub@a
 11875   002E6E  C19D  F060         	movff	_powf$2097+1,___flsub@a+1
 11876   002E72  C19E  F061         	movff	_powf$2097+2,___flsub@a+2
 11877   002E76  C19F  F062         	movff	_powf$2097+3,___flsub@a+3
 11878   002E7A  C16C  F05B         	movff	powf@p_l,___flsub@b
 11879   002E7E  C16D  F05C         	movff	powf@p_l+1,___flsub@b+1
 11880   002E82  C16E  F05D         	movff	powf@p_l+2,___flsub@b+2
 11881   002E86  C16F  F05E         	movff	powf@p_l+3,___flsub@b+3
 11882   002E8A  ECCB  F03A         	call	___flsub	;wreg free
 11883   002E8E  C05B  F019         	movff	?___flsub,___flmul@b
 11884   002E92  C05C  F01A         	movff	?___flsub+1,___flmul@b+1
 11885   002E96  C05D  F01B         	movff	?___flsub+2,___flmul@b+2
 11886   002E9A  C05E  F01C         	movff	?___flsub+3,___flmul@b+3
 11887   002E9E  EC20  F024         	call	___flmul	;wreg free
 11888   002EA2  C019  F114         	movff	?___flmul,_powf$2107
 11889   002EA6  C01A  F115         	movff	?___flmul+1,_powf$2107+1
 11890   002EAA  C01B  F116         	movff	?___flmul+2,_powf$2107+2
 11891   002EAE  C01C  F117         	movff	?___flmul+3,_powf$2107+3
 11892   002EB2  C114  F032         	movff	_powf$2107,___fladd@b
 11893   002EB6  C115  F033         	movff	_powf$2107+1,___fladd@b+1
 11894   002EBA  C116  F034         	movff	_powf$2107+2,___fladd@b+2
 11895   002EBE  C117  F035         	movff	_powf$2107+3,___fladd@b+3
 11896   002EC2  0E8C               	movlw	140
 11897   002EC4  6E1D               	movwf	___flmul@a^0,c
 11898   002EC6  0EBE               	movlw	190
 11899   002EC8  6E1E               	movwf	(___flmul@a+1)^0,c
 11900   002ECA  0EBF               	movlw	191
 11901   002ECC  6E1F               	movwf	(___flmul@a+2)^0,c
 11902   002ECE  0E35               	movlw	53
 11903   002ED0  6E20               	movwf	(___flmul@a+3)^0,c
 11904   002ED2  C1B0  F019         	movff	powf@t,___flmul@b
 11905   002ED6  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 11906   002EDA  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 11907   002EDE  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 11908   002EE2  EC20  F024         	call	___flmul	;wreg free
 11909   002EE6  C019  F036         	movff	?___flmul,___fladd@a
 11910   002EEA  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11911   002EEE  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11912   002EF2  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11913   002EF6  ECC0  F021         	call	___fladd	;wreg free
 11914   002EFA  C032  F180         	movff	?___fladd,powf@v
 11915   002EFE  C033  F181         	movff	?___fladd+1,powf@v+1
 11916   002F02  C034  F182         	movff	?___fladd+2,powf@v+2
 11917   002F06  C035  F183         	movff	?___fladd+3,powf@v+3
 11918   002F0A  C17C  F032         	movff	powf@u,___fladd@b
 11919   002F0E  C17D  F033         	movff	powf@u+1,___fladd@b+1
 11920   002F12  C17E  F034         	movff	powf@u+2,___fladd@b+2
 11921   002F16  C17F  F035         	movff	powf@u+3,___fladd@b+3
 11922   002F1A  C180  F036         	movff	powf@v,___fladd@a
 11923   002F1E  C181  F037         	movff	powf@v+1,___fladd@a+1
 11924   002F22  C182  F038         	movff	powf@v+2,___fladd@a+2
 11925   002F26  C183  F039         	movff	powf@v+3,___fladd@a+3
 11926   002F2A  ECC0  F021         	call	___fladd	;wreg free
 11927   002F2E  C032  F1B4         	movff	?___fladd,powf@z
 11928   002F32  C033  F1B5         	movff	?___fladd+1,powf@z+1
 11929   002F36  C034  F1B6         	movff	?___fladd+2,powf@z+2
 11930   002F3A  C035  F1B7         	movff	?___fladd+3,powf@z+3
 11931   002F3E  C17C  F05F         	movff	powf@u,___flsub@a
 11932   002F42  C17D  F060         	movff	powf@u+1,___flsub@a+1
 11933   002F46  C17E  F061         	movff	powf@u+2,___flsub@a+2
 11934   002F4A  C17F  F062         	movff	powf@u+3,___flsub@a+3
 11935   002F4E  C1B4  F05B         	movff	powf@z,___flsub@b
 11936   002F52  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 11937   002F56  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 11938   002F5A  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 11939   002F5E  ECCB  F03A         	call	___flsub	;wreg free
 11940   002F62  C05B  F19C         	movff	?___flsub,_powf$2097
 11941   002F66  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 11942   002F6A  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 11943   002F6E  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 11944   002F72  C180  F05B         	movff	powf@v,___flsub@b
 11945   002F76  C181  F05C         	movff	powf@v+1,___flsub@b+1
 11946   002F7A  C182  F05D         	movff	powf@v+2,___flsub@b+2
 11947   002F7E  C183  F05E         	movff	powf@v+3,___flsub@b+3
 11948   002F82  C19C  F05F         	movff	_powf$2097,___flsub@a
 11949   002F86  C19D  F060         	movff	_powf$2097+1,___flsub@a+1
 11950   002F8A  C19E  F061         	movff	_powf$2097+2,___flsub@a+2
 11951   002F8E  C19F  F062         	movff	_powf$2097+3,___flsub@a+3
 11952   002F92  ECCB  F03A         	call	___flsub	;wreg free
 11953   002F96  C05B  F144         	movff	?___flsub,powf@w
 11954   002F9A  C05C  F145         	movff	?___flsub+1,powf@w+1
 11955   002F9E  C05D  F146         	movff	?___flsub+2,powf@w+2
 11956   002FA2  C05E  F147         	movff	?___flsub+3,powf@w+3
 11957   002FA6  C1B4  F019         	movff	powf@z,___flmul@b
 11958   002FAA  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 11959   002FAE  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 11960   002FB2  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 11961   002FB6  C1B4  F01D         	movff	powf@z,___flmul@a
 11962   002FBA  C1B5  F01E         	movff	powf@z+1,___flmul@a+1
 11963   002FBE  C1B6  F01F         	movff	powf@z+2,___flmul@a+2
 11964   002FC2  C1B7  F020         	movff	powf@z+3,___flmul@a+3
 11965   002FC6  EC20  F024         	call	___flmul	;wreg free
 11966   002FCA  C019  F1B0         	movff	?___flmul,powf@t
 11967   002FCE  C01A  F1B1         	movff	?___flmul+1,powf@t+1
 11968   002FD2  C01B  F1B2         	movff	?___flmul+2,powf@t+2
 11969   002FD6  C01C  F1B3         	movff	?___flmul+3,powf@t+3
 11970   002FDA  0E0E               	movlw	14
 11971   002FDC  6E36               	movwf	___fladd@a^0,c
 11972   002FDE  0EEA               	movlw	234
 11973   002FE0  6E37               	movwf	(___fladd@a+1)^0,c
 11974   002FE2  0EDD               	movlw	221
 11975   002FE4  6E38               	movwf	(___fladd@a+2)^0,c
 11976   002FE6  0EB5               	movlw	181
 11977   002FE8  6E39               	movwf	(___fladd@a+3)^0,c
 11978   002FEA  0E4C               	movlw	76
 11979   002FEC  6E1D               	movwf	___flmul@a^0,c
 11980   002FEE  0EBB               	movlw	187
 11981   002FF0  6E1E               	movwf	(___flmul@a+1)^0,c
 11982   002FF2  0E31               	movlw	49
 11983   002FF4  6E1F               	movwf	(___flmul@a+2)^0,c
 11984   002FF6  0E33               	movlw	51
 11985   002FF8  6E20               	movwf	(___flmul@a+3)^0,c
 11986   002FFA  C1B0  F019         	movff	powf@t,___flmul@b
 11987   002FFE  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 11988   003002  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 11989   003006  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 11990   00300A  EC20  F024         	call	___flmul	;wreg free
 11991   00300E  C019  F032         	movff	?___flmul,___fladd@b
 11992   003012  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 11993   003016  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 11994   00301A  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 11995   00301E  ECC0  F021         	call	___fladd	;wreg free
 11996   003022  C032  F148         	movff	?___fladd,_powf$2094
 11997   003026  C033  F149         	movff	?___fladd+1,_powf$2094+1
 11998   00302A  C034  F14A         	movff	?___fladd+2,_powf$2094+2
 11999   00302E  C035  F14B         	movff	?___fladd+3,_powf$2094+3
 12000   003032  0E55               	movlw	85
 12001   003034  6E36               	movwf	___fladd@a^0,c
 12002   003036  0EB3               	movlw	179
 12003   003038  6E37               	movwf	(___fladd@a+1)^0,c
 12004   00303A  0E8A               	movlw	138
 12005   00303C  6E38               	movwf	(___fladd@a+2)^0,c
 12006   00303E  0E38               	movlw	56
 12007   003040  6E39               	movwf	(___fladd@a+3)^0,c
 12008   003042  C1B0  F01D         	movff	powf@t,___flmul@a
 12009   003046  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12010   00304A  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12011   00304E  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12012   003052  C148  F019         	movff	_powf$2094,___flmul@b
 12013   003056  C149  F01A         	movff	_powf$2094+1,___flmul@b+1
 12014   00305A  C14A  F01B         	movff	_powf$2094+2,___flmul@b+2
 12015   00305E  C14B  F01C         	movff	_powf$2094+3,___flmul@b+3
 12016   003062  EC20  F024         	call	___flmul	;wreg free
 12017   003066  C019  F032         	movff	?___flmul,___fladd@b
 12018   00306A  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12019   00306E  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12020   003072  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12021   003076  ECC0  F021         	call	___fladd	;wreg free
 12022   00307A  C032  F15C         	movff	?___fladd,_powf$2095
 12023   00307E  C033  F15D         	movff	?___fladd+1,_powf$2095+1
 12024   003082  C034  F15E         	movff	?___fladd+2,_powf$2095+2
 12025   003086  C035  F15F         	movff	?___fladd+3,_powf$2095+3
 12026   00308A  0E61               	movlw	97
 12027   00308C  6E36               	movwf	___fladd@a^0,c
 12028   00308E  0E0B               	movlw	11
 12029   003090  6E37               	movwf	(___fladd@a+1)^0,c
 12030   003092  0E36               	movlw	54
 12031   003094  6E38               	movwf	(___fladd@a+2)^0,c
 12032   003096  0EBB               	movlw	187
 12033   003098  6E39               	movwf	(___fladd@a+3)^0,c
 12034   00309A  C1B0  F01D         	movff	powf@t,___flmul@a
 12035   00309E  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12036   0030A2  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12037   0030A6  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12038   0030AA  C15C  F019         	movff	_powf$2095,___flmul@b
 12039   0030AE  C15D  F01A         	movff	_powf$2095+1,___flmul@b+1
 12040   0030B2  C15E  F01B         	movff	_powf$2095+2,___flmul@b+2
 12041   0030B6  C15F  F01C         	movff	_powf$2095+3,___flmul@b+3
 12042   0030BA  EC20  F024         	call	___flmul	;wreg free
 12043   0030BE  C019  F032         	movff	?___flmul,___fladd@b
 12044   0030C2  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12045   0030C6  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12046   0030CA  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12047   0030CE  ECC0  F021         	call	___fladd	;wreg free
 12048   0030D2  C032  F14C         	movff	?___fladd,_powf$2096
 12049   0030D6  C033  F14D         	movff	?___fladd+1,_powf$2096+1
 12050   0030DA  C034  F14E         	movff	?___fladd+2,_powf$2096+2
 12051   0030DE  C035  F14F         	movff	?___fladd+3,_powf$2096+3
 12052   0030E2  0EAB               	movlw	171
 12053   0030E4  6E36               	movwf	___fladd@a^0,c
 12054   0030E6  0EAA               	movlw	170
 12055   0030E8  6E37               	movwf	(___fladd@a+1)^0,c
 12056   0030EA  0E2A               	movlw	42
 12057   0030EC  6E38               	movwf	(___fladd@a+2)^0,c
 12058   0030EE  0E3E               	movlw	62
 12059   0030F0  6E39               	movwf	(___fladd@a+3)^0,c
 12060   0030F2  C1B0  F01D         	movff	powf@t,___flmul@a
 12061   0030F6  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12062   0030FA  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12063   0030FE  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12064   003102  C14C  F019         	movff	_powf$2096,___flmul@b
 12065   003106  C14D  F01A         	movff	_powf$2096+1,___flmul@b+1
 12066   00310A  C14E  F01B         	movff	_powf$2096+2,___flmul@b+2
 12067   00310E  C14F  F01C         	movff	_powf$2096+3,___flmul@b+3
 12068   003112  EC20  F024         	call	___flmul	;wreg free
 12069   003116  C019  F032         	movff	?___flmul,___fladd@b
 12070   00311A  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12071   00311E  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12072   003122  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12073   003126  ECC0  F021         	call	___fladd	;wreg free
 12074   00312A  C032  F138         	movff	?___fladd,_powf$2098
 12075   00312E  C033  F139         	movff	?___fladd+1,_powf$2098+1
 12076   003132  C034  F13A         	movff	?___fladd+2,_powf$2098+2
 12077   003136  C035  F13B         	movff	?___fladd+3,_powf$2098+3
 12078   00313A  C1B4  F05B         	movff	powf@z,___flsub@b
 12079   00313E  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 12080   003142  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 12081   003146  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 12082   00314A  C1B0  F01D         	movff	powf@t,___flmul@a
 12083   00314E  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12084   003152  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12085   003156  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12086   00315A  C138  F019         	movff	_powf$2098,___flmul@b
 12087   00315E  C139  F01A         	movff	_powf$2098+1,___flmul@b+1
 12088   003162  C13A  F01B         	movff	_powf$2098+2,___flmul@b+2
 12089   003166  C13B  F01C         	movff	_powf$2098+3,___flmul@b+3
 12090   00316A  EC20  F024         	call	___flmul	;wreg free
 12091   00316E  C019  F05F         	movff	?___flmul,___flsub@a
 12092   003172  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 12093   003176  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 12094   00317A  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 12095   00317E  ECCB  F03A         	call	___flsub	;wreg free
 12096   003182  C05B  F18C         	movff	?___flsub,powf@t1
 12097   003186  C05C  F18D         	movff	?___flsub+1,powf@t1+1
 12098   00318A  C05D  F18E         	movff	?___flsub+2,powf@t1+2
 12099   00318E  C05E  F18F         	movff	?___flsub+3,powf@t1+3
 12100   003192  0E00               	movlw	0
 12101   003194  6E36               	movwf	___fladd@a^0,c
 12102   003196  0E00               	movlw	0
 12103   003198  6E37               	movwf	(___fladd@a+1)^0,c
 12104   00319A  0E00               	movlw	0
 12105   00319C  6E38               	movwf	(___fladd@a+2)^0,c
 12106   00319E  0EC0               	movlw	192
 12107   0031A0  6E39               	movwf	(___fladd@a+3)^0,c
 12108   0031A2  C18C  F032         	movff	powf@t1,___fladd@b
 12109   0031A6  C18D  F033         	movff	powf@t1+1,___fladd@b+1
 12110   0031AA  C18E  F034         	movff	powf@t1+2,___fladd@b+2
 12111   0031AE  C18F  F035         	movff	powf@t1+3,___fladd@b+3
 12112   0031B2  ECC0  F021         	call	___fladd	;wreg free
 12113   0031B6  C032  F046         	movff	?___fladd,___fldiv@a
 12114   0031BA  C033  F047         	movff	?___fladd+1,___fldiv@a+1
 12115   0031BE  C034  F048         	movff	?___fladd+2,___fldiv@a+2
 12116   0031C2  C035  F049         	movff	?___fladd+3,___fldiv@a+3
 12117   0031C6  C18C  F01D         	movff	powf@t1,___flmul@a
 12118   0031CA  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 12119   0031CE  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 12120   0031D2  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 12121   0031D6  C1B4  F019         	movff	powf@z,___flmul@b
 12122   0031DA  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12123   0031DE  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12124   0031E2  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12125   0031E6  EC20  F024         	call	___flmul	;wreg free
 12126   0031EA  C019  F042         	movff	?___flmul,___fldiv@b
 12127   0031EE  C01A  F043         	movff	?___flmul+1,___fldiv@b+1
 12128   0031F2  C01B  F044         	movff	?___flmul+2,___fldiv@b+2
 12129   0031F6  C01C  F045         	movff	?___flmul+3,___fldiv@b+3
 12130   0031FA  EC24  F028         	call	___fldiv	;wreg free
 12131   0031FE  C042  F13C         	movff	?___fldiv,_powf$2102
 12132   003202  C043  F13D         	movff	?___fldiv+1,_powf$2102+1
 12133   003206  C044  F13E         	movff	?___fldiv+2,_powf$2102+2
 12134   00320A  C045  F13F         	movff	?___fldiv+3,_powf$2102+3
 12135   00320E  C144  F036         	movff	powf@w,___fladd@a
 12136   003212  C145  F037         	movff	powf@w+1,___fladd@a+1
 12137   003216  C146  F038         	movff	powf@w+2,___fladd@a+2
 12138   00321A  C147  F039         	movff	powf@w+3,___fladd@a+3
 12139   00321E  C144  F01D         	movff	powf@w,___flmul@a
 12140   003222  C145  F01E         	movff	powf@w+1,___flmul@a+1
 12141   003226  C146  F01F         	movff	powf@w+2,___flmul@a+2
 12142   00322A  C147  F020         	movff	powf@w+3,___flmul@a+3
 12143   00322E  C1B4  F019         	movff	powf@z,___flmul@b
 12144   003232  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12145   003236  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12146   00323A  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12147   00323E  EC20  F024         	call	___flmul	;wreg free
 12148   003242  C019  F032         	movff	?___flmul,___fladd@b
 12149   003246  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12150   00324A  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12151   00324E  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12152   003252  ECC0  F021         	call	___fladd	;wreg free
 12153   003256  C032  F118         	movff	?___fladd,_powf$2108
 12154   00325A  C033  F119         	movff	?___fladd+1,_powf$2108+1
 12155   00325E  C034  F11A         	movff	?___fladd+2,_powf$2108+2
 12156   003262  C035  F11B         	movff	?___fladd+3,_powf$2108+3
 12157   003266  C13C  F05B         	movff	_powf$2102,___flsub@b
 12158   00326A  C13D  F05C         	movff	_powf$2102+1,___flsub@b+1
 12159   00326E  C13E  F05D         	movff	_powf$2102+2,___flsub@b+2
 12160   003272  C13F  F05E         	movff	_powf$2102+3,___flsub@b+3
 12161   003276  C118  F05F         	movff	_powf$2108,___flsub@a
 12162   00327A  C119  F060         	movff	_powf$2108+1,___flsub@a+1
 12163   00327E  C11A  F061         	movff	_powf$2108+2,___flsub@a+2
 12164   003282  C11B  F062         	movff	_powf$2108+3,___flsub@a+3
 12165   003286  ECCB  F03A         	call	___flsub	;wreg free
 12166   00328A  C05B  F150         	movff	?___flsub,powf@r
 12167   00328E  C05C  F151         	movff	?___flsub+1,powf@r+1
 12168   003292  C05D  F152         	movff	?___flsub+2,powf@r+2
 12169   003296  C05E  F153         	movff	?___flsub+3,powf@r+3
 12170   00329A  C1B4  F05F         	movff	powf@z,___flsub@a
 12171   00329E  C1B5  F060         	movff	powf@z+1,___flsub@a+1
 12172   0032A2  C1B6  F061         	movff	powf@z+2,___flsub@a+2
 12173   0032A6  C1B7  F062         	movff	powf@z+3,___flsub@a+3
 12174   0032AA  C150  F05B         	movff	powf@r,___flsub@b
 12175   0032AE  C151  F05C         	movff	powf@r+1,___flsub@b+1
 12176   0032B2  C152  F05D         	movff	powf@r+2,___flsub@b+2
 12177   0032B6  C153  F05E         	movff	powf@r+3,___flsub@b+3
 12178   0032BA  ECCB  F03A         	call	___flsub	;wreg free
 12179   0032BE  C05B  F19C         	movff	?___flsub,_powf$2097
 12180   0032C2  C05C  F19D         	movff	?___flsub+1,_powf$2097+1
 12181   0032C6  C05D  F19E         	movff	?___flsub+2,_powf$2097+2
 12182   0032CA  C05E  F19F         	movff	?___flsub+3,_powf$2097+3
 12183   0032CE  0E00               	movlw	0
 12184   0032D0  6E5B               	movwf	___flsub@b^0,c
 12185   0032D2  0E00               	movlw	0
 12186   0032D4  6E5C               	movwf	(___flsub@b+1)^0,c
 12187   0032D6  0E80               	movlw	128
 12188   0032D8  6E5D               	movwf	(___flsub@b+2)^0,c
 12189   0032DA  0E3F               	movlw	63
 12190   0032DC  6E5E               	movwf	(___flsub@b+3)^0,c
 12191   0032DE  C19C  F05F         	movff	_powf$2097,___flsub@a
 12192   0032E2  C19D  F060         	movff	_powf$2097+1,___flsub@a+1
 12193   0032E6  C19E  F061         	movff	_powf$2097+2,___flsub@a+2
 12194   0032EA  C19F  F062         	movff	_powf$2097+3,___flsub@a+3
 12195   0032EE  ECCB  F03A         	call	___flsub	;wreg free
 12196   0032F2  C05B  F1B4         	movff	?___flsub,powf@z
 12197   0032F6  C05C  F1B5         	movff	?___flsub+1,powf@z+1
 12198   0032FA  C05D  F1B6         	movff	?___flsub+2,powf@z+2
 12199   0032FE  C05E  F1B7         	movff	?___flsub+3,powf@z+3
 12200   003302  C1B4  F1A8         	movff	powf@z,powf@j
 12201   003306  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 12202   00330A  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 12203   00330E  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 12204   003312  C188  F077         	movff	powf@n,??_powf
 12205   003316  C189  F078         	movff	powf@n+1,??_powf+1
 12206   00331A  C18A  F079         	movff	powf@n+2,??_powf+2
 12207   00331E  C18B  F07A         	movff	powf@n+3,??_powf+3
 12208   003322  0E17               	movlw	23
 12209   003324                     u13265:
 12210   003324  90D8               	bcf	status,0,c
 12211   003326  3677               	rlcf	??_powf^0,f,c
 12212   003328  3678               	rlcf	(??_powf+1)^0,f,c
 12213   00332A  3679               	rlcf	(??_powf+2)^0,f,c
 12214   00332C  367A               	rlcf	(??_powf+3)^0,f,c
 12215   00332E  2EE8               	decfsz	wreg,f,c
 12216   003330  EF92  F019         	goto	u13265
 12217   003334  5077               	movf	??_powf^0,w,c
 12218   003336  0101               	movlb	1	; () banked
 12219   003338  27A8               	addwf	powf@j& (0+255),f,b
 12220   00333A  5078               	movf	(??_powf+1)^0,w,c
 12221   00333C  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 12222   00333E  5079               	movf	(??_powf+2)^0,w,c
 12223   003340  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 12224   003342  507A               	movf	(??_powf+3)^0,w,c
 12225   003344  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 12226   003346                     
 12227                           ; BSR set to: 1
 12228   003346  0E17               	movlw	23
 12229   003348  6E77               	movwf	??_powf^0,c
 12230   00334A  C1A8  F078         	movff	powf@j,??_powf+1
 12231   00334E  C1A9  F079         	movff	powf@j+1,??_powf+2
 12232   003352  C1AA  F07A         	movff	powf@j+2,??_powf+3
 12233   003356  C1AB  F07B         	movff	powf@j+3,??_powf+4
 12234   00335A                     u13275:
 12235   00335A  6677               	tstfsz	??_powf^0,c
 12236   00335C  EFB2  F019         	goto	u13276
 12237   003360  EFBA  F019         	goto	u13277
 12238   003364                     u13276:
 12239   003364  347B               	rlcf	(??_powf+4)^0,w,c
 12240   003366  327B               	rrcf	(??_powf+4)^0,f,c
 12241   003368  327A               	rrcf	(??_powf+3)^0,f,c
 12242   00336A  3279               	rrcf	(??_powf+2)^0,f,c
 12243   00336C  3278               	rrcf	(??_powf+1)^0,f,c
 12244   00336E  2E77               	decfsz	??_powf^0,f,c
 12245   003370  EFAD  F019         	goto	u13275
 12246   003374                     u13277:
 12247   003374  BE7B               	btfsc	(??_powf+4)^0,7,c
 12248   003376  EFC9  F019         	goto	u13280
 12249   00337A  507B               	movf	(??_powf+4)^0,w,c
 12250   00337C  107A               	iorwf	(??_powf+3)^0,w,c
 12251   00337E  1079               	iorwf	(??_powf+2)^0,w,c
 12252   003380  E106               	bnz	u13281
 12253   003382  0478               	decf	(??_powf+1)^0,w,c
 12254   003384  B0D8               	btfsc	status,0,c
 12255   003386  EFC7  F019         	goto	u13281
 12256   00338A  EFC9  F019         	goto	u13280
 12257   00338E                     u13281:
 12258   00338E  EFE1  F019         	goto	l1705
 12259   003392                     u13280:
 12260   003392  C1B4  F032         	movff	powf@z,scalbnf@x
 12261   003396  C1B5  F033         	movff	powf@z+1,scalbnf@x+1
 12262   00339A  C1B6  F034         	movff	powf@z+2,scalbnf@x+2
 12263   00339E  C1B7  F035         	movff	powf@z+3,scalbnf@x+3
 12264   0033A2  C188  F036         	movff	powf@n,scalbnf@n
 12265   0033A6  C189  F037         	movff	powf@n+1,scalbnf@n+1
 12266   0033AA  EC5B  F02C         	call	_scalbnf	;wreg free
 12267   0033AE  C032  F1B4         	movff	?_scalbnf,powf@z
 12268   0033B2  C033  F1B5         	movff	?_scalbnf+1,powf@z+1
 12269   0033B6  C034  F1B6         	movff	?_scalbnf+2,powf@z+2
 12270   0033BA  C035  F1B7         	movff	?_scalbnf+3,powf@z+3
 12271   0033BE  EFE9  F019         	goto	l12680
 12272   0033C2                     l1705:
 12273   0033C2  C1A8  F1B4         	movff	powf@j,powf@z
 12274   0033C6  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 12275   0033CA  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 12276   0033CE  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 12277   0033D2                     l12680:
 12278   0033D2  0101               	movlb	1	; () banked
 12279   0033D4  51B4               	movf	powf@z& (0+255),w,b
 12280   0033D6  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 12281   0033D8  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 12282   0033DA  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 12283   0033DC  B4D8               	btfsc	status,2,c
 12284   0033DE  EFF3  F019         	goto	u13291
 12285   0033E2  EFF5  F019         	goto	u13290
 12286   0033E6                     u13291:
 12287   0033E6  EF68  F00B         	goto	l12366
 12288   0033EA                     u13290:
 12289   0033EA                     
 12290                           ; BSR set to: 1
 12291   0033EA  5164               	movf	powf@sn& (0+255),w,b
 12292   0033EC  1BB4               	xorwf	powf@z& (0+255),f,b
 12293   0033EE  5165               	movf	(powf@sn+1)& (0+255),w,b
 12294   0033F0  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 12295   0033F2  5166               	movf	(powf@sn+2)& (0+255),w,b
 12296   0033F4  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 12297   0033F6  5167               	movf	(powf@sn+3)& (0+255),w,b
 12298   0033F8  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 12299   0033FA  EF68  F00B         	goto	l12366
 12300   0033FE                     l1639:
 12301   0033FE  0012               	return		;funcret
 12302   003400                     __end_of_powf:
 12303                           	callstack 0
 12304                           
 12305 ;; *************** function _sqrtf *****************
 12306 ;; Defined at:
 12307 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 12308 ;; Parameters:    Size  Location     Type
 12309 ;;  x               4    0[COMRAM] float 
 12310 ;; Auto vars:     Size  Location     Type
 12311 ;;  ix              4   33[COMRAM] struct .
 12312 ;;  r               4   29[COMRAM] unsigned long 
 12313 ;;  m               4   25[COMRAM] long 
 12314 ;;  t               4   21[COMRAM] long 
 12315 ;;  q               4   17[COMRAM] long 
 12316 ;;  i               4   13[COMRAM] long 
 12317 ;;  s               4    9[COMRAM] long 
 12318 ;;  z               4    0        float 
 12319 ;; Return value:  Size  Location     Type
 12320 ;;                  4    0[COMRAM] float 
 12321 ;; Registers used:
 12322 ;;		wreg, status,2, status,0
 12323 ;; Tracked objects:
 12324 ;;		On entry : 0/0
 12325 ;;		On exit  : 0/0
 12326 ;;		Unchanged: 0/0
 12327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12329 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12330 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12331 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12332 ;;Total ram usage:       37 bytes
 12333 ;; Hardware stack levels used: 1
 12334 ;; This function calls:
 12335 ;;		Nothing
 12336 ;; This function is called by:
 12337 ;;		_powf
 12338 ;; This function uses a non-reentrant model
 12339 ;;
 12340                           
 12341                           	psect	text40
 12342   004C6A                     __ptext40:
 12343                           	callstack 0
 12344   004C6A                     _sqrtf:
 12345                           	callstack 28
 12346   004C6A  C001  F022         	movff	sqrtf@x,sqrtf@ix
 12347   004C6E  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
 12348   004C72  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
 12349   004C76  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
 12350   004C7A  0E00               	movlw	0
 12351   004C7C  1422               	andwf	sqrtf@ix^0,w,c
 12352   004C7E  6E05               	movwf	??_sqrtf^0,c
 12353   004C80  0E00               	movlw	0
 12354   004C82  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12355   004C84  6E06               	movwf	(??_sqrtf+1)^0,c
 12356   004C86  0E80               	movlw	128
 12357   004C88  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12358   004C8A  6E07               	movwf	(??_sqrtf+2)^0,c
 12359   004C8C  0E7F               	movlw	127
 12360   004C8E  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12361   004C90  6E08               	movwf	(??_sqrtf+3)^0,c
 12362   004C92  0E80               	movlw	128
 12363   004C94  1807               	xorwf	(??_sqrtf+2)^0,w,c
 12364   004C96  E109               	bnz	u12511
 12365   004C98  0E7F               	movlw	127
 12366   004C9A  1808               	xorwf	(??_sqrtf+3)^0,w,c
 12367   004C9C  1005               	iorwf	??_sqrtf^0,w,c
 12368   004C9E  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12369   004CA0  A4D8               	btfss	status,2,c
 12370   004CA2  EF55  F026         	goto	u12511
 12371   004CA6  EF57  F026         	goto	u12510
 12372   004CAA                     u12511:
 12373   004CAA  EF87  F026         	goto	l12172
 12374   004CAE                     u12510:
 12375   004CAE  0EFF               	movlw	255
 12376   004CB0  1422               	andwf	sqrtf@ix^0,w,c
 12377   004CB2  6E05               	movwf	??_sqrtf^0,c
 12378   004CB4  0EFF               	movlw	255
 12379   004CB6  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12380   004CB8  6E06               	movwf	(??_sqrtf+1)^0,c
 12381   004CBA  0E7F               	movlw	127
 12382   004CBC  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12383   004CBE  6E07               	movwf	(??_sqrtf+2)^0,c
 12384   004CC0  0E00               	movlw	0
 12385   004CC2  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12386   004CC4  6E08               	movwf	(??_sqrtf+3)^0,c
 12387   004CC6  5005               	movf	??_sqrtf^0,w,c
 12388   004CC8  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12389   004CCA  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12390   004CCC  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12391   004CCE  A4D8               	btfss	status,2,c
 12392   004CD0  EF6C  F026         	goto	u12521
 12393   004CD4  EF6E  F026         	goto	u12520
 12394   004CD8                     u12521:
 12395   004CD8  EF75  F026         	goto	l12166
 12396   004CDC                     u12520:
 12397   004CDC  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12398   004CDE  EF75  F026         	goto	u12530
 12399   004CE2  EF73  F026         	goto	u12531
 12400   004CE6                     u12531:
 12401   004CE6  EF7D  F026         	goto	l12168
 12402   004CEA                     u12530:
 12403   004CEA                     l12166:
 12404   004CEA  0EFF               	movlw	255
 12405   004CEC  1222               	iorwf	sqrtf@ix^0,f,c
 12406   004CEE  0EFF               	movlw	255
 12407   004CF0  1223               	iorwf	(sqrtf@ix+1)^0,f,c
 12408   004CF2  0E7F               	movlw	127
 12409   004CF4  1224               	iorwf	(sqrtf@ix+2)^0,f,c
 12410   004CF6  0E00               	movlw	0
 12411   004CF8  1225               	iorwf	(sqrtf@ix+3)^0,f,c
 12412   004CFA                     l12168:
 12413   004CFA  C022  F001         	movff	sqrtf@ix,?_sqrtf
 12414   004CFE  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
 12415   004D02  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
 12416   004D06  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
 12417   004D0A  EF23  F028         	goto	l1731
 12418   004D0E                     l12172:
 12419   004D0E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12420   004D10  EF96  F026         	goto	u12540
 12421   004D14  5025               	movf	(sqrtf@ix+3)^0,w,c
 12422   004D16  1024               	iorwf	(sqrtf@ix+2)^0,w,c
 12423   004D18  1023               	iorwf	(sqrtf@ix+1)^0,w,c
 12424   004D1A  E106               	bnz	u12541
 12425   004D1C  0422               	decf	sqrtf@ix^0,w,c
 12426   004D1E  B0D8               	btfsc	status,0,c
 12427   004D20  EF94  F026         	goto	u12541
 12428   004D24  EF96  F026         	goto	u12540
 12429   004D28                     u12541:
 12430   004D28  EFCD  F026         	goto	l12188
 12431   004D2C                     u12540:
 12432   004D2C  0EFF               	movlw	255
 12433   004D2E  1422               	andwf	sqrtf@ix^0,w,c
 12434   004D30  6E05               	movwf	??_sqrtf^0,c
 12435   004D32  0EFF               	movlw	255
 12436   004D34  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12437   004D36  6E06               	movwf	(??_sqrtf+1)^0,c
 12438   004D38  0EFF               	movlw	255
 12439   004D3A  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12440   004D3C  6E07               	movwf	(??_sqrtf+2)^0,c
 12441   004D3E  0E7F               	movlw	127
 12442   004D40  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12443   004D42  6E08               	movwf	(??_sqrtf+3)^0,c
 12444   004D44  5005               	movf	??_sqrtf^0,w,c
 12445   004D46  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12446   004D48  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12447   004D4A  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12448   004D4C  A4D8               	btfss	status,2,c
 12449   004D4E  EFAB  F026         	goto	u12551
 12450   004D52  EFAD  F026         	goto	u12550
 12451   004D56                     u12551:
 12452   004D56  EFB7  F026         	goto	l12180
 12453   004D5A                     u12550:
 12454   004D5A  0E00               	movlw	0
 12455   004D5C  6E01               	movwf	?_sqrtf^0,c
 12456   004D5E  0E00               	movlw	0
 12457   004D60  6E02               	movwf	(?_sqrtf+1)^0,c
 12458   004D62  0E00               	movlw	0
 12459   004D64  6E03               	movwf	(?_sqrtf+2)^0,c
 12460   004D66  0E00               	movlw	0
 12461   004D68  6E04               	movwf	(?_sqrtf+3)^0,c
 12462   004D6A  EF23  F028         	goto	l1731
 12463   004D6E                     l12180:
 12464   004D6E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12465   004D70  EFBE  F026         	goto	u12560
 12466   004D74  EFBC  F026         	goto	u12561
 12467   004D78                     u12561:
 12468   004D78  EFCD  F026         	goto	l12188
 12469   004D7C                     u12560:
 12470   004D7C  0E00               	movlw	0
 12471   004D7E  0101               	movlb	1	; () banked
 12472   004D80  6FE7               	movwf	(_errno+1)& (0+255),b
 12473   004D82  0E21               	movlw	33
 12474   004D84  6FE6               	movwf	_errno& (0+255),b
 12475   004D86  0EFF               	movlw	255
 12476   004D88  6E22               	movwf	sqrtf@ix^0,c
 12477   004D8A  0EFF               	movlw	255
 12478   004D8C  6E23               	movwf	(sqrtf@ix+1)^0,c
 12479   004D8E  0EFF               	movlw	255
 12480   004D90  6E24               	movwf	(sqrtf@ix+2)^0,c
 12481   004D92  0E7F               	movlw	127
 12482   004D94  6E25               	movwf	(sqrtf@ix+3)^0,c
 12483   004D96  EF7D  F026         	goto	l12168
 12484   004D9A                     l12188:
 12485   004D9A  0E17               	movlw	23
 12486   004D9C  6E05               	movwf	??_sqrtf^0,c
 12487   004D9E  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
 12488   004DA2  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
 12489   004DA6  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
 12490   004DAA  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
 12491   004DAE                     u12575:
 12492   004DAE  6605               	tstfsz	??_sqrtf^0,c
 12493   004DB0  EFDC  F026         	goto	u12576
 12494   004DB4  EFE4  F026         	goto	u12577
 12495   004DB8                     u12576:
 12496   004DB8  3409               	rlcf	(??_sqrtf+4)^0,w,c
 12497   004DBA  3209               	rrcf	(??_sqrtf+4)^0,f,c
 12498   004DBC  3208               	rrcf	(??_sqrtf+3)^0,f,c
 12499   004DBE  3207               	rrcf	(??_sqrtf+2)^0,f,c
 12500   004DC0  3206               	rrcf	(??_sqrtf+1)^0,f,c
 12501   004DC2  2E05               	decfsz	??_sqrtf^0,f,c
 12502   004DC4  EFD7  F026         	goto	u12575
 12503   004DC8                     u12577:
 12504   004DC8  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
 12505   004DCC  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
 12506   004DD0  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
 12507   004DD4  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
 12508   004DD8  501A               	movf	sqrtf@m^0,w,c
 12509   004DDA  101B               	iorwf	(sqrtf@m+1)^0,w,c
 12510   004DDC  101C               	iorwf	(sqrtf@m+2)^0,w,c
 12511   004DDE  101D               	iorwf	(sqrtf@m+3)^0,w,c
 12512   004DE0  A4D8               	btfss	status,2,c
 12513   004DE2  EFF5  F026         	goto	u12581
 12514   004DE6  EFF7  F026         	goto	u12580
 12515   004DEA                     u12581:
 12516   004DEA  EF27  F027         	goto	l1735
 12517   004DEE                     u12580:
 12518   004DEE  0E00               	movlw	0
 12519   004DF0  6E0E               	movwf	sqrtf@i^0,c
 12520   004DF2  0E00               	movlw	0
 12521   004DF4  6E0F               	movwf	(sqrtf@i+1)^0,c
 12522   004DF6  0E00               	movlw	0
 12523   004DF8  6E10               	movwf	(sqrtf@i+2)^0,c
 12524   004DFA  0E00               	movlw	0
 12525   004DFC  6E11               	movwf	(sqrtf@i+3)^0,c
 12526   004DFE  EF0C  F027         	goto	l12196
 12527   004E02                     l12192:
 12528   004E02  90D8               	bcf	status,0,c
 12529   004E04  3622               	rlcf	sqrtf@ix^0,f,c
 12530   004E06  3623               	rlcf	(sqrtf@ix+1)^0,f,c
 12531   004E08  3624               	rlcf	(sqrtf@ix+2)^0,f,c
 12532   004E0A  3625               	rlcf	(sqrtf@ix+3)^0,f,c
 12533   004E0C  0E01               	movlw	1
 12534   004E0E  260E               	addwf	sqrtf@i^0,f,c
 12535   004E10  0E00               	movlw	0
 12536   004E12  220F               	addwfc	(sqrtf@i+1)^0,f,c
 12537   004E14  2210               	addwfc	(sqrtf@i+2)^0,f,c
 12538   004E16  2211               	addwfc	(sqrtf@i+3)^0,f,c
 12539   004E18                     l12196:
 12540   004E18  AE24               	btfss	(sqrtf@ix+2)^0,7,c
 12541   004E1A  EF11  F027         	goto	u12591
 12542   004E1E  EF13  F027         	goto	u12590
 12543   004E22                     u12591:
 12544   004E22  EF01  F027         	goto	l12192
 12545   004E26                     u12590:
 12546   004E26  0EFF               	movlw	255
 12547   004E28  240E               	addwf	sqrtf@i^0,w,c
 12548   004E2A  6E05               	movwf	??_sqrtf^0,c
 12549   004E2C  0EFF               	movlw	255
 12550   004E2E  200F               	addwfc	(sqrtf@i+1)^0,w,c
 12551   004E30  6E06               	movwf	(??_sqrtf+1)^0,c
 12552   004E32  0EFF               	movlw	255
 12553   004E34  2010               	addwfc	(sqrtf@i+2)^0,w,c
 12554   004E36  6E07               	movwf	(??_sqrtf+2)^0,c
 12555   004E38  0EFF               	movlw	255
 12556   004E3A  2011               	addwfc	(sqrtf@i+3)^0,w,c
 12557   004E3C  6E08               	movwf	(??_sqrtf+3)^0,c
 12558   004E3E  5005               	movf	??_sqrtf^0,w,c
 12559   004E40  5E1A               	subwf	sqrtf@m^0,f,c
 12560   004E42  5006               	movf	(??_sqrtf+1)^0,w,c
 12561   004E44  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
 12562   004E46  5007               	movf	(??_sqrtf+2)^0,w,c
 12563   004E48  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
 12564   004E4A  5008               	movf	(??_sqrtf+3)^0,w,c
 12565   004E4C  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
 12566   004E4E                     l1735:
 12567   004E4E  0E81               	movlw	129
 12568   004E50  261A               	addwf	sqrtf@m^0,f,c
 12569   004E52  0EFF               	movlw	255
 12570   004E54  221B               	addwfc	(sqrtf@m+1)^0,f,c
 12571   004E56  0EFF               	movlw	255
 12572   004E58  221C               	addwfc	(sqrtf@m+2)^0,f,c
 12573   004E5A  0EFF               	movlw	255
 12574   004E5C  221D               	addwfc	(sqrtf@m+3)^0,f,c
 12575   004E5E  0EFF               	movlw	255
 12576   004E60  1422               	andwf	sqrtf@ix^0,w,c
 12577   004E62  6E05               	movwf	??_sqrtf^0,c
 12578   004E64  0EFF               	movlw	255
 12579   004E66  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12580   004E68  6E06               	movwf	(??_sqrtf+1)^0,c
 12581   004E6A  0E7F               	movlw	127
 12582   004E6C  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12583   004E6E  6E07               	movwf	(??_sqrtf+2)^0,c
 12584   004E70  0E00               	movlw	0
 12585   004E72  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12586   004E74  6E08               	movwf	(??_sqrtf+3)^0,c
 12587   004E76  0E00               	movlw	0
 12588   004E78  1005               	iorwf	??_sqrtf^0,w,c
 12589   004E7A  6E22               	movwf	sqrtf@ix^0,c
 12590   004E7C  0E00               	movlw	0
 12591   004E7E  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12592   004E80  6E23               	movwf	(sqrtf@ix+1)^0,c
 12593   004E82  0E80               	movlw	128
 12594   004E84  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12595   004E86  6E24               	movwf	(sqrtf@ix+2)^0,c
 12596   004E88  0E00               	movlw	0
 12597   004E8A  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12598   004E8C  6E25               	movwf	(sqrtf@ix+3)^0,c
 12599   004E8E  A01A               	btfss	sqrtf@m^0,0,c
 12600   004E90  EF4C  F027         	goto	u12601
 12601   004E94  EF4E  F027         	goto	u12600
 12602   004E98                     u12601:
 12603   004E98  EF56  F027         	goto	l1739
 12604   004E9C                     u12600:
 12605   004E9C  5022               	movf	sqrtf@ix^0,w,c
 12606   004E9E  2622               	addwf	sqrtf@ix^0,f,c
 12607   004EA0  5023               	movf	(sqrtf@ix+1)^0,w,c
 12608   004EA2  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12609   004EA4  5024               	movf	(sqrtf@ix+2)^0,w,c
 12610   004EA6  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12611   004EA8  5025               	movf	(sqrtf@ix+3)^0,w,c
 12612   004EAA  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12613   004EAC                     l1739:
 12614   004EAC  341D               	rlcf	(sqrtf@m+3)^0,w,c
 12615   004EAE  321D               	rrcf	(sqrtf@m+3)^0,f,c
 12616   004EB0  321C               	rrcf	(sqrtf@m+2)^0,f,c
 12617   004EB2  321B               	rrcf	(sqrtf@m+1)^0,f,c
 12618   004EB4  321A               	rrcf	sqrtf@m^0,f,c
 12619   004EB6  5022               	movf	sqrtf@ix^0,w,c
 12620   004EB8  2622               	addwf	sqrtf@ix^0,f,c
 12621   004EBA  5023               	movf	(sqrtf@ix+1)^0,w,c
 12622   004EBC  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12623   004EBE  5024               	movf	(sqrtf@ix+2)^0,w,c
 12624   004EC0  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12625   004EC2  5025               	movf	(sqrtf@ix+3)^0,w,c
 12626   004EC4  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12627   004EC6  0E00               	movlw	0
 12628   004EC8  6E0A               	movwf	sqrtf@s^0,c
 12629   004ECA  0E00               	movlw	0
 12630   004ECC  6E0B               	movwf	(sqrtf@s+1)^0,c
 12631   004ECE  0E00               	movlw	0
 12632   004ED0  6E0C               	movwf	(sqrtf@s+2)^0,c
 12633   004ED2  0E00               	movlw	0
 12634   004ED4  6E0D               	movwf	(sqrtf@s+3)^0,c
 12635   004ED6  C00A  F012         	movff	sqrtf@s,sqrtf@q
 12636   004EDA  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
 12637   004EDE  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
 12638   004EE2  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
 12639   004EE6  0E00               	movlw	0
 12640   004EE8  6E1E               	movwf	sqrtf@r^0,c
 12641   004EEA  0E00               	movlw	0
 12642   004EEC  6E1F               	movwf	(sqrtf@r+1)^0,c
 12643   004EEE  0E00               	movlw	0
 12644   004EF0  6E20               	movwf	(sqrtf@r+2)^0,c
 12645   004EF2  0E01               	movlw	1
 12646   004EF4  6E21               	movwf	(sqrtf@r+3)^0,c
 12647   004EF6  EFC5  F027         	goto	l12214
 12648   004EFA                     l12208:
 12649   004EFA  500A               	movf	sqrtf@s^0,w,c
 12650   004EFC  241E               	addwf	sqrtf@r^0,w,c
 12651   004EFE  6E16               	movwf	sqrtf@t^0,c
 12652   004F00  500B               	movf	(sqrtf@s+1)^0,w,c
 12653   004F02  201F               	addwfc	(sqrtf@r+1)^0,w,c
 12654   004F04  6E17               	movwf	(sqrtf@t+1)^0,c
 12655   004F06  500C               	movf	(sqrtf@s+2)^0,w,c
 12656   004F08  2020               	addwfc	(sqrtf@r+2)^0,w,c
 12657   004F0A  6E18               	movwf	(sqrtf@t+2)^0,c
 12658   004F0C  500D               	movf	(sqrtf@s+3)^0,w,c
 12659   004F0E  2021               	addwfc	(sqrtf@r+3)^0,w,c
 12660   004F10  6E19               	movwf	(sqrtf@t+3)^0,c
 12661   004F12  5016               	movf	sqrtf@t^0,w,c
 12662   004F14  5C22               	subwf	sqrtf@ix^0,w,c
 12663   004F16  5017               	movf	(sqrtf@t+1)^0,w,c
 12664   004F18  5823               	subwfb	(sqrtf@ix+1)^0,w,c
 12665   004F1A  5018               	movf	(sqrtf@t+2)^0,w,c
 12666   004F1C  5824               	subwfb	(sqrtf@ix+2)^0,w,c
 12667   004F1E  5025               	movf	(sqrtf@ix+3)^0,w,c
 12668   004F20  0A80               	xorlw	128
 12669   004F22  6E05               	movwf	??_sqrtf^0,c
 12670   004F24  5019               	movf	(sqrtf@t+3)^0,w,c
 12671   004F26  0A80               	xorlw	128
 12672   004F28  5805               	subwfb	??_sqrtf^0,w,c
 12673   004F2A  A0D8               	btfss	status,0,c
 12674   004F2C  EF9A  F027         	goto	u12611
 12675   004F30  EF9C  F027         	goto	u12610
 12676   004F34                     u12611:
 12677   004F34  EFB8  F027         	goto	l1742
 12678   004F38                     u12610:
 12679   004F38  5016               	movf	sqrtf@t^0,w,c
 12680   004F3A  241E               	addwf	sqrtf@r^0,w,c
 12681   004F3C  6E0A               	movwf	sqrtf@s^0,c
 12682   004F3E  5017               	movf	(sqrtf@t+1)^0,w,c
 12683   004F40  201F               	addwfc	(sqrtf@r+1)^0,w,c
 12684   004F42  6E0B               	movwf	(sqrtf@s+1)^0,c
 12685   004F44  5018               	movf	(sqrtf@t+2)^0,w,c
 12686   004F46  2020               	addwfc	(sqrtf@r+2)^0,w,c
 12687   004F48  6E0C               	movwf	(sqrtf@s+2)^0,c
 12688   004F4A  5019               	movf	(sqrtf@t+3)^0,w,c
 12689   004F4C  2021               	addwfc	(sqrtf@r+3)^0,w,c
 12690   004F4E  6E0D               	movwf	(sqrtf@s+3)^0,c
 12691   004F50  5016               	movf	sqrtf@t^0,w,c
 12692   004F52  5E22               	subwf	sqrtf@ix^0,f,c
 12693   004F54  5017               	movf	(sqrtf@t+1)^0,w,c
 12694   004F56  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
 12695   004F58  5018               	movf	(sqrtf@t+2)^0,w,c
 12696   004F5A  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
 12697   004F5C  5019               	movf	(sqrtf@t+3)^0,w,c
 12698   004F5E  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
 12699   004F60  501E               	movf	sqrtf@r^0,w,c
 12700   004F62  2612               	addwf	sqrtf@q^0,f,c
 12701   004F64  501F               	movf	(sqrtf@r+1)^0,w,c
 12702   004F66  2213               	addwfc	(sqrtf@q+1)^0,f,c
 12703   004F68  5020               	movf	(sqrtf@r+2)^0,w,c
 12704   004F6A  2214               	addwfc	(sqrtf@q+2)^0,f,c
 12705   004F6C  5021               	movf	(sqrtf@r+3)^0,w,c
 12706   004F6E  2215               	addwfc	(sqrtf@q+3)^0,f,c
 12707   004F70                     l1742:
 12708   004F70  5022               	movf	sqrtf@ix^0,w,c
 12709   004F72  2622               	addwf	sqrtf@ix^0,f,c
 12710   004F74  5023               	movf	(sqrtf@ix+1)^0,w,c
 12711   004F76  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12712   004F78  5024               	movf	(sqrtf@ix+2)^0,w,c
 12713   004F7A  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12714   004F7C  5025               	movf	(sqrtf@ix+3)^0,w,c
 12715   004F7E  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12716   004F80  90D8               	bcf	status,0,c
 12717   004F82  3221               	rrcf	(sqrtf@r+3)^0,f,c
 12718   004F84  3220               	rrcf	(sqrtf@r+2)^0,f,c
 12719   004F86  321F               	rrcf	(sqrtf@r+1)^0,f,c
 12720   004F88  321E               	rrcf	sqrtf@r^0,f,c
 12721   004F8A                     l12214:
 12722   004F8A  501E               	movf	sqrtf@r^0,w,c
 12723   004F8C  101F               	iorwf	(sqrtf@r+1)^0,w,c
 12724   004F8E  1020               	iorwf	(sqrtf@r+2)^0,w,c
 12725   004F90  1021               	iorwf	(sqrtf@r+3)^0,w,c
 12726   004F92  A4D8               	btfss	status,2,c
 12727   004F94  EFCE  F027         	goto	u12621
 12728   004F98  EFD0  F027         	goto	u12620
 12729   004F9C                     u12621:
 12730   004F9C  EF7D  F027         	goto	l12208
 12731   004FA0                     u12620:
 12732   004FA0  5022               	movf	sqrtf@ix^0,w,c
 12733   004FA2  1023               	iorwf	(sqrtf@ix+1)^0,w,c
 12734   004FA4  1024               	iorwf	(sqrtf@ix+2)^0,w,c
 12735   004FA6  1025               	iorwf	(sqrtf@ix+3)^0,w,c
 12736   004FA8  B4D8               	btfsc	status,2,c
 12737   004FAA  EFD9  F027         	goto	u12631
 12738   004FAE  EFDB  F027         	goto	u12630
 12739   004FB2                     u12631:
 12740   004FB2  EFEF  F027         	goto	l1744
 12741   004FB6                     u12630:
 12742   004FB6  0E01               	movlw	1
 12743   004FB8  1412               	andwf	sqrtf@q^0,w,c
 12744   004FBA  6E05               	movwf	??_sqrtf^0,c
 12745   004FBC  0E00               	movlw	0
 12746   004FBE  1413               	andwf	(sqrtf@q+1)^0,w,c
 12747   004FC0  6E06               	movwf	(??_sqrtf+1)^0,c
 12748   004FC2  0E00               	movlw	0
 12749   004FC4  1414               	andwf	(sqrtf@q+2)^0,w,c
 12750   004FC6  6E07               	movwf	(??_sqrtf+2)^0,c
 12751   004FC8  0E00               	movlw	0
 12752   004FCA  1415               	andwf	(sqrtf@q+3)^0,w,c
 12753   004FCC  6E08               	movwf	(??_sqrtf+3)^0,c
 12754   004FCE  5005               	movf	??_sqrtf^0,w,c
 12755   004FD0  2612               	addwf	sqrtf@q^0,f,c
 12756   004FD2  5006               	movf	(??_sqrtf+1)^0,w,c
 12757   004FD4  2213               	addwfc	(sqrtf@q+1)^0,f,c
 12758   004FD6  5007               	movf	(??_sqrtf+2)^0,w,c
 12759   004FD8  2214               	addwfc	(sqrtf@q+2)^0,f,c
 12760   004FDA  5008               	movf	(??_sqrtf+3)^0,w,c
 12761   004FDC  2215               	addwfc	(sqrtf@q+3)^0,f,c
 12762   004FDE                     l1744:
 12763   004FDE  C012  F005         	movff	sqrtf@q,??_sqrtf
 12764   004FE2  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
 12765   004FE6  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
 12766   004FEA  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
 12767   004FEE  3408               	rlcf	(??_sqrtf+3)^0,w,c
 12768   004FF0  3208               	rrcf	(??_sqrtf+3)^0,f,c
 12769   004FF2  3207               	rrcf	(??_sqrtf+2)^0,f,c
 12770   004FF4  3206               	rrcf	(??_sqrtf+1)^0,f,c
 12771   004FF6  3205               	rrcf	??_sqrtf^0,f,c
 12772   004FF8  0E00               	movlw	0
 12773   004FFA  2405               	addwf	??_sqrtf^0,w,c
 12774   004FFC  6E22               	movwf	sqrtf@ix^0,c
 12775   004FFE  0E00               	movlw	0
 12776   005000  2006               	addwfc	(??_sqrtf+1)^0,w,c
 12777   005002  6E23               	movwf	(sqrtf@ix+1)^0,c
 12778   005004  0E00               	movlw	0
 12779   005006  2007               	addwfc	(??_sqrtf+2)^0,w,c
 12780   005008  6E24               	movwf	(sqrtf@ix+2)^0,c
 12781   00500A  0E3F               	movlw	63
 12782   00500C  2008               	addwfc	(??_sqrtf+3)^0,w,c
 12783   00500E  6E25               	movwf	(sqrtf@ix+3)^0,c
 12784   005010  C01A  F005         	movff	sqrtf@m,??_sqrtf
 12785   005014  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
 12786   005018  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
 12787   00501C  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
 12788   005020  0E17               	movlw	23
 12789   005022                     u12645:
 12790   005022  90D8               	bcf	status,0,c
 12791   005024  3605               	rlcf	??_sqrtf^0,f,c
 12792   005026  3606               	rlcf	(??_sqrtf+1)^0,f,c
 12793   005028  3607               	rlcf	(??_sqrtf+2)^0,f,c
 12794   00502A  3608               	rlcf	(??_sqrtf+3)^0,f,c
 12795   00502C  2EE8               	decfsz	wreg,f,c
 12796   00502E  EF11  F028         	goto	u12645
 12797   005032  5005               	movf	??_sqrtf^0,w,c
 12798   005034  2622               	addwf	sqrtf@ix^0,f,c
 12799   005036  5006               	movf	(??_sqrtf+1)^0,w,c
 12800   005038  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12801   00503A  5007               	movf	(??_sqrtf+2)^0,w,c
 12802   00503C  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12803   00503E  5008               	movf	(??_sqrtf+3)^0,w,c
 12804   005040  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12805   005042  EF7D  F026         	goto	l12168
 12806   005046                     l1731:
 12807   005046  0012               	return		;funcret
 12808   005048                     __end_of_sqrtf:
 12809                           	callstack 0
 12810                           
 12811 ;; *************** function _scalbnf *****************
 12812 ;; Defined at:
 12813 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 12814 ;; Parameters:    Size  Location     Type
 12815 ;;  x               4   49[COMRAM] float 
 12816 ;;  n               2   53[COMRAM] int 
 12817 ;; Auto vars:     Size  Location     Type
 12818 ;;  y               4   63[COMRAM] float 
 12819 ;;  u               4   59[COMRAM] struct .
 12820 ;; Return value:  Size  Location     Type
 12821 ;;                  4   49[COMRAM] float 
 12822 ;; Registers used:
 12823 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12824 ;; Tracked objects:
 12825 ;;		On entry : 0/0
 12826 ;;		On exit  : 0/0
 12827 ;;		Unchanged: 0/0
 12828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12829 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12830 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12831 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12832 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12833 ;;Total ram usage:       18 bytes
 12834 ;; Hardware stack levels used: 1
 12835 ;; Hardware stack levels required when called: 1
 12836 ;; This function calls:
 12837 ;;		___flmul
 12838 ;; This function is called by:
 12839 ;;		_powf
 12840 ;; This function uses a non-reentrant model
 12841 ;;
 12842                           
 12843                           	psect	text41
 12844   0058B6                     __ptext41:
 12845                           	callstack 0
 12846   0058B6                     _scalbnf:
 12847                           	callstack 27
 12848   0058B6  C032  F040         	movff	scalbnf@x,scalbnf@y
 12849   0058BA  C033  F041         	movff	scalbnf@x+1,scalbnf@y+1
 12850   0058BE  C034  F042         	movff	scalbnf@x+2,scalbnf@y+2
 12851   0058C2  C035  F043         	movff	scalbnf@x+3,scalbnf@y+3
 12852   0058C6  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 12853   0058C8  EF6F  F02C         	goto	u12651
 12854   0058CC  5037               	movf	(scalbnf@n+1)^0,w,c
 12855   0058CE  E109               	bnz	u12650
 12856   0058D0  0E80               	movlw	128
 12857   0058D2  5C36               	subwf	scalbnf@n^0,w,c
 12858   0058D4  A0D8               	btfss	status,0,c
 12859   0058D6  EF6F  F02C         	goto	u12651
 12860   0058DA  EF71  F02C         	goto	u12650
 12861   0058DE                     u12651:
 12862   0058DE  EFCF  F02C         	goto	l12242
 12863   0058E2                     u12650:
 12864   0058E2  C040  F019         	movff	scalbnf@y,___flmul@b
 12865   0058E6  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 12866   0058EA  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 12867   0058EE  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 12868   0058F2  0E00               	movlw	0
 12869   0058F4  6E1D               	movwf	___flmul@a^0,c
 12870   0058F6  0E00               	movlw	0
 12871   0058F8  6E1E               	movwf	(___flmul@a+1)^0,c
 12872   0058FA  0E00               	movlw	0
 12873   0058FC  6E1F               	movwf	(___flmul@a+2)^0,c
 12874   0058FE  0E7F               	movlw	127
 12875   005900  6E20               	movwf	(___flmul@a+3)^0,c
 12876   005902  EC20  F024         	call	___flmul	;wreg free
 12877   005906  C019  F040         	movff	?___flmul,scalbnf@y
 12878   00590A  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 12879   00590E  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 12880   005912  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 12881   005916  0E81               	movlw	129
 12882   005918  2636               	addwf	scalbnf@n^0,f,c
 12883   00591A  0EFF               	movlw	255
 12884   00591C  2237               	addwfc	(scalbnf@n+1)^0,f,c
 12885   00591E  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 12886   005920  EF9B  F02C         	goto	u12661
 12887   005924  5037               	movf	(scalbnf@n+1)^0,w,c
 12888   005926  E109               	bnz	u12660
 12889   005928  0E80               	movlw	128
 12890   00592A  5C36               	subwf	scalbnf@n^0,w,c
 12891   00592C  A0D8               	btfss	status,0,c
 12892   00592E  EF9B  F02C         	goto	u12661
 12893   005932  EF9D  F02C         	goto	u12660
 12894   005936                     u12661:
 12895   005936  EF39  F02D         	goto	l12258
 12896   00593A                     u12660:
 12897   00593A  C040  F019         	movff	scalbnf@y,___flmul@b
 12898   00593E  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 12899   005942  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 12900   005946  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 12901   00594A  0E00               	movlw	0
 12902   00594C  6E1D               	movwf	___flmul@a^0,c
 12903   00594E  0E00               	movlw	0
 12904   005950  6E1E               	movwf	(___flmul@a+1)^0,c
 12905   005952  0E00               	movlw	0
 12906   005954  6E1F               	movwf	(___flmul@a+2)^0,c
 12907   005956  0E7F               	movlw	127
 12908   005958  6E20               	movwf	(___flmul@a+3)^0,c
 12909   00595A  EC20  F024         	call	___flmul	;wreg free
 12910   00595E  C019  F040         	movff	?___flmul,scalbnf@y
 12911   005962  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 12912   005966  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 12913   00596A  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 12914   00596E  0E81               	movlw	129
 12915   005970  2636               	addwf	scalbnf@n^0,f,c
 12916   005972  0EFF               	movlw	255
 12917   005974  2237               	addwfc	(scalbnf@n+1)^0,f,c
 12918   005976  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 12919   005978  EFC7  F02C         	goto	u12671
 12920   00597C  5037               	movf	(scalbnf@n+1)^0,w,c
 12921   00597E  E109               	bnz	u12670
 12922   005980  0E80               	movlw	128
 12923   005982  5C36               	subwf	scalbnf@n^0,w,c
 12924   005984  A0D8               	btfss	status,0,c
 12925   005986  EFC7  F02C         	goto	u12671
 12926   00598A  EFC9  F02C         	goto	u12670
 12927   00598E                     u12671:
 12928   00598E  EF39  F02D         	goto	l12258
 12929   005992                     u12670:
 12930   005992  0E00               	movlw	0
 12931   005994  6E37               	movwf	(scalbnf@n+1)^0,c
 12932   005996  0E7F               	movlw	127
 12933   005998  6E36               	movwf	scalbnf@n^0,c
 12934   00599A  EF39  F02D         	goto	l12258
 12935   00599E                     l12242:
 12936   00599E  AE37               	btfss	(scalbnf@n+1)^0,7,c
 12937   0059A0  EFDB  F02C         	goto	u12681
 12938   0059A4  0E82               	movlw	130
 12939   0059A6  5C36               	subwf	scalbnf@n^0,w,c
 12940   0059A8  0EFF               	movlw	255
 12941   0059AA  5837               	subwfb	(scalbnf@n+1)^0,w,c
 12942   0059AC  B0D8               	btfsc	status,0,c
 12943   0059AE  EFDB  F02C         	goto	u12681
 12944   0059B2  EFDD  F02C         	goto	u12680
 12945   0059B6                     u12681:
 12946   0059B6  EF39  F02D         	goto	l12258
 12947   0059BA                     u12680:
 12948   0059BA  C040  F019         	movff	scalbnf@y,___flmul@b
 12949   0059BE  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 12950   0059C2  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 12951   0059C6  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 12952   0059CA  0E00               	movlw	0
 12953   0059CC  6E1D               	movwf	___flmul@a^0,c
 12954   0059CE  0E00               	movlw	0
 12955   0059D0  6E1E               	movwf	(___flmul@a+1)^0,c
 12956   0059D2  0E80               	movlw	128
 12957   0059D4  6E1F               	movwf	(___flmul@a+2)^0,c
 12958   0059D6  0E0C               	movlw	12
 12959   0059D8  6E20               	movwf	(___flmul@a+3)^0,c
 12960   0059DA  EC20  F024         	call	___flmul	;wreg free
 12961   0059DE  C019  F040         	movff	?___flmul,scalbnf@y
 12962   0059E2  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 12963   0059E6  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 12964   0059EA  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 12965   0059EE  0E66               	movlw	102
 12966   0059F0  2636               	addwf	scalbnf@n^0,f,c
 12967   0059F2  0E00               	movlw	0
 12968   0059F4  2237               	addwfc	(scalbnf@n+1)^0,f,c
 12969   0059F6  AE37               	btfss	(scalbnf@n+1)^0,7,c
 12970   0059F8  EF07  F02D         	goto	u12691
 12971   0059FC  0E82               	movlw	130
 12972   0059FE  5C36               	subwf	scalbnf@n^0,w,c
 12973   005A00  0EFF               	movlw	255
 12974   005A02  5837               	subwfb	(scalbnf@n+1)^0,w,c
 12975   005A04  B0D8               	btfsc	status,0,c
 12976   005A06  EF07  F02D         	goto	u12691
 12977   005A0A  EF09  F02D         	goto	u12690
 12978   005A0E                     u12691:
 12979   005A0E  EF39  F02D         	goto	l12258
 12980   005A12                     u12690:
 12981   005A12  C040  F019         	movff	scalbnf@y,___flmul@b
 12982   005A16  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 12983   005A1A  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 12984   005A1E  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 12985   005A22  0E00               	movlw	0
 12986   005A24  6E1D               	movwf	___flmul@a^0,c
 12987   005A26  0E00               	movlw	0
 12988   005A28  6E1E               	movwf	(___flmul@a+1)^0,c
 12989   005A2A  0E80               	movlw	128
 12990   005A2C  6E1F               	movwf	(___flmul@a+2)^0,c
 12991   005A2E  0E0C               	movlw	12
 12992   005A30  6E20               	movwf	(___flmul@a+3)^0,c
 12993   005A32  EC20  F024         	call	___flmul	;wreg free
 12994   005A36  C019  F040         	movff	?___flmul,scalbnf@y
 12995   005A3A  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 12996   005A3E  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 12997   005A42  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 12998   005A46  0E66               	movlw	102
 12999   005A48  2636               	addwf	scalbnf@n^0,f,c
 13000   005A4A  0E00               	movlw	0
 13001   005A4C  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13002   005A4E  AE37               	btfss	(scalbnf@n+1)^0,7,c
 13003   005A50  EF33  F02D         	goto	u12701
 13004   005A54  0E82               	movlw	130
 13005   005A56  5C36               	subwf	scalbnf@n^0,w,c
 13006   005A58  0EFF               	movlw	255
 13007   005A5A  5837               	subwfb	(scalbnf@n+1)^0,w,c
 13008   005A5C  B0D8               	btfsc	status,0,c
 13009   005A5E  EF33  F02D         	goto	u12701
 13010   005A62  EF35  F02D         	goto	u12700
 13011   005A66                     u12701:
 13012   005A66  EF39  F02D         	goto	l12258
 13013   005A6A                     u12700:
 13014   005A6A  0EFF               	movlw	255
 13015   005A6C  6E37               	movwf	(scalbnf@n+1)^0,c
 13016   005A6E  0E82               	movlw	130
 13017   005A70  6E36               	movwf	scalbnf@n^0,c
 13018   005A72                     l12258:
 13019   005A72  0E7F               	movlw	127
 13020   005A74  2436               	addwf	scalbnf@n^0,w,c
 13021   005A76  6E38               	movwf	??_scalbnf^0,c
 13022   005A78  0E00               	movlw	0
 13023   005A7A  2037               	addwfc	(scalbnf@n+1)^0,w,c
 13024   005A7C  6E39               	movwf	(??_scalbnf+1)^0,c
 13025   005A7E  6A3A               	clrf	(??_scalbnf+2)^0,c
 13026   005A80  6A3B               	clrf	(??_scalbnf+3)^0,c
 13027   005A82  0E17               	movlw	23
 13028   005A84                     u12715:
 13029   005A84  90D8               	bcf	status,0,c
 13030   005A86  3638               	rlcf	??_scalbnf^0,f,c
 13031   005A88  3639               	rlcf	(??_scalbnf+1)^0,f,c
 13032   005A8A  363A               	rlcf	(??_scalbnf+2)^0,f,c
 13033   005A8C  363B               	rlcf	(??_scalbnf+3)^0,f,c
 13034   005A8E  2EE8               	decfsz	wreg,f,c
 13035   005A90  EF42  F02D         	goto	u12715
 13036   005A94  C038  F03C         	movff	??_scalbnf,scalbnf@u
 13037   005A98  C039  F03D         	movff	??_scalbnf+1,scalbnf@u+1
 13038   005A9C  C03A  F03E         	movff	??_scalbnf+2,scalbnf@u+2
 13039   005AA0  C03B  F03F         	movff	??_scalbnf+3,scalbnf@u+3
 13040   005AA4  C03C  F019         	movff	scalbnf@u,___flmul@b
 13041   005AA8  C03D  F01A         	movff	scalbnf@u+1,___flmul@b+1
 13042   005AAC  C03E  F01B         	movff	scalbnf@u+2,___flmul@b+2
 13043   005AB0  C03F  F01C         	movff	scalbnf@u+3,___flmul@b+3
 13044   005AB4  C040  F01D         	movff	scalbnf@y,___flmul@a
 13045   005AB8  C041  F01E         	movff	scalbnf@y+1,___flmul@a+1
 13046   005ABC  C042  F01F         	movff	scalbnf@y+2,___flmul@a+2
 13047   005AC0  C043  F020         	movff	scalbnf@y+3,___flmul@a+3
 13048   005AC4  EC20  F024         	call	___flmul	;wreg free
 13049   005AC8  C019  F032         	movff	?___flmul,scalbnf@x
 13050   005ACC  C01A  F033         	movff	?___flmul+1,scalbnf@x+1
 13051   005AD0  C01B  F034         	movff	?___flmul+2,scalbnf@x+2
 13052   005AD4  C01C  F035         	movff	?___flmul+3,scalbnf@x+3
 13053   005AD8  C032  F032         	movff	scalbnf@x,?_scalbnf
 13054   005ADC  C033  F033         	movff	scalbnf@x+1,?_scalbnf+1
 13055   005AE0  C034  F034         	movff	scalbnf@x+2,?_scalbnf+2
 13056   005AE4  C035  F035         	movff	scalbnf@x+3,?_scalbnf+3
 13057   005AE8  0012               	return		;funcret
 13058   005AEA                     __end_of_scalbnf:
 13059                           	callstack 0
 13060                           
 13061 ;; *************** function ___flmul *****************
 13062 ;; Defined at:
 13063 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 13064 ;; Parameters:    Size  Location     Type
 13065 ;;  b               4   24[COMRAM] float 
 13066 ;;  a               4   28[COMRAM] float 
 13067 ;; Auto vars:     Size  Location     Type
 13068 ;;  prod            4   43[COMRAM] struct .
 13069 ;;  grs             4   39[COMRAM] unsigned long 
 13070 ;;  temp            2   47[COMRAM] struct .
 13071 ;;  bexp            1   38[COMRAM] unsigned char 
 13072 ;;  aexp            1   37[COMRAM] unsigned char 
 13073 ;;  sign            1   36[COMRAM] unsigned char 
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  4   24[COMRAM] unsigned char 
 13076 ;; Registers used:
 13077 ;;		wreg, status,2, status,0, prodl, prodh
 13078 ;; Tracked objects:
 13079 ;;		On entry : 0/0
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13083 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13084 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13086 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13087 ;;Total ram usage:       25 bytes
 13088 ;; Hardware stack levels used: 1
 13089 ;; This function calls:
 13090 ;;		Nothing
 13091 ;; This function is called by:
 13092 ;;		_convert_arr_to_float
 13093 ;;		_multiplication_operation
 13094 ;;		_efgtoa
 13095 ;;		_powf
 13096 ;;		_scalbnf
 13097 ;; This function uses a non-reentrant model
 13098 ;;
 13099                           
 13100                           	psect	text42
 13101   004840                     __ptext42:
 13102                           	callstack 0
 13103   004840                     ___flmul:
 13104                           	callstack 24
 13105   004840  501C               	movf	(___flmul@b+3)^0,w,c
 13106   004842  0B80               	andlw	128
 13107   004844  6E25               	movwf	___flmul@sign^0,c
 13108   004846  501C               	movf	(___flmul@b+3)^0,w,c
 13109   004848  241C               	addwf	(___flmul@b+3)^0,w,c
 13110   00484A  6E27               	movwf	___flmul@bexp^0,c
 13111   00484C  AE1B               	btfss	(___flmul@b+2)^0,7,c
 13112   00484E  EF2B  F024         	goto	u11781
 13113   004852  EF2D  F024         	goto	u11780
 13114   004856                     u11781:
 13115   004856  EF2E  F024         	goto	l11618
 13116   00485A                     u11780:
 13117   00485A  8027               	bsf	___flmul@bexp^0,0,c
 13118   00485C                     l11618:
 13119   00485C  5027               	movf	___flmul@bexp^0,w,c
 13120   00485E  B4D8               	btfsc	status,2,c
 13121   004860  EF34  F024         	goto	u11791
 13122   004864  EF36  F024         	goto	u11790
 13123   004868                     u11791:
 13124   004868  EF49  F024         	goto	l11626
 13125   00486C                     u11790:
 13126   00486C  2827               	incf	___flmul@bexp^0,w,c
 13127   00486E  A4D8               	btfss	status,2,c
 13128   004870  EF3C  F024         	goto	u11801
 13129   004874  EF3E  F024         	goto	u11800
 13130   004878                     u11801:
 13131   004878  EF46  F024         	goto	l11624
 13132   00487C                     u11800:
 13133   00487C  0E00               	movlw	0
 13134   00487E  6E19               	movwf	___flmul@b^0,c
 13135   004880  0E00               	movlw	0
 13136   004882  6E1A               	movwf	(___flmul@b+1)^0,c
 13137   004884  0E00               	movlw	0
 13138   004886  6E1B               	movwf	(___flmul@b+2)^0,c
 13139   004888  0E00               	movlw	0
 13140   00488A  6E1C               	movwf	(___flmul@b+3)^0,c
 13141   00488C                     l11624:
 13142   00488C  8E1B               	bsf	(___flmul@b+2)^0,7,c
 13143   00488E  EF51  F024         	goto	l11628
 13144   004892                     l11626:
 13145   004892  0E00               	movlw	0
 13146   004894  6E19               	movwf	___flmul@b^0,c
 13147   004896  0E00               	movlw	0
 13148   004898  6E1A               	movwf	(___flmul@b+1)^0,c
 13149   00489A  0E00               	movlw	0
 13150   00489C  6E1B               	movwf	(___flmul@b+2)^0,c
 13151   00489E  0E00               	movlw	0
 13152   0048A0  6E1C               	movwf	(___flmul@b+3)^0,c
 13153   0048A2                     l11628:
 13154   0048A2  5020               	movf	(___flmul@a+3)^0,w,c
 13155   0048A4  0B80               	andlw	128
 13156   0048A6  1A25               	xorwf	___flmul@sign^0,f,c
 13157   0048A8  5020               	movf	(___flmul@a+3)^0,w,c
 13158   0048AA  2420               	addwf	(___flmul@a+3)^0,w,c
 13159   0048AC  6E26               	movwf	___flmul@aexp^0,c
 13160   0048AE  AE1F               	btfss	(___flmul@a+2)^0,7,c
 13161   0048B0  EF5C  F024         	goto	u11811
 13162   0048B4  EF5E  F024         	goto	u11810
 13163   0048B8                     u11811:
 13164   0048B8  EF5F  F024         	goto	l11636
 13165   0048BC                     u11810:
 13166   0048BC  8026               	bsf	___flmul@aexp^0,0,c
 13167   0048BE                     l11636:
 13168   0048BE  5026               	movf	___flmul@aexp^0,w,c
 13169   0048C0  B4D8               	btfsc	status,2,c
 13170   0048C2  EF65  F024         	goto	u11821
 13171   0048C6  EF67  F024         	goto	u11820
 13172   0048CA                     u11821:
 13173   0048CA  EF7A  F024         	goto	l11644
 13174   0048CE                     u11820:
 13175   0048CE  2826               	incf	___flmul@aexp^0,w,c
 13176   0048D0  A4D8               	btfss	status,2,c
 13177   0048D2  EF6D  F024         	goto	u11831
 13178   0048D6  EF6F  F024         	goto	u11830
 13179   0048DA                     u11831:
 13180   0048DA  EF77  F024         	goto	l11642
 13181   0048DE                     u11830:
 13182   0048DE  0E00               	movlw	0
 13183   0048E0  6E1D               	movwf	___flmul@a^0,c
 13184   0048E2  0E00               	movlw	0
 13185   0048E4  6E1E               	movwf	(___flmul@a+1)^0,c
 13186   0048E6  0E00               	movlw	0
 13187   0048E8  6E1F               	movwf	(___flmul@a+2)^0,c
 13188   0048EA  0E00               	movlw	0
 13189   0048EC  6E20               	movwf	(___flmul@a+3)^0,c
 13190   0048EE                     l11642:
 13191   0048EE  8E1F               	bsf	(___flmul@a+2)^0,7,c
 13192   0048F0  EF82  F024         	goto	l1304
 13193   0048F4                     l11644:
 13194   0048F4  0E00               	movlw	0
 13195   0048F6  6E1D               	movwf	___flmul@a^0,c
 13196   0048F8  0E00               	movlw	0
 13197   0048FA  6E1E               	movwf	(___flmul@a+1)^0,c
 13198   0048FC  0E00               	movlw	0
 13199   0048FE  6E1F               	movwf	(___flmul@a+2)^0,c
 13200   004900  0E00               	movlw	0
 13201   004902  6E20               	movwf	(___flmul@a+3)^0,c
 13202   004904                     l1304:
 13203   004904  5026               	movf	___flmul@aexp^0,w,c
 13204   004906  B4D8               	btfsc	status,2,c
 13205   004908  EF88  F024         	goto	u11841
 13206   00490C  EF8A  F024         	goto	u11840
 13207   004910                     u11841:
 13208   004910  EF92  F024         	goto	l11648
 13209   004914                     u11840:
 13210   004914  5027               	movf	___flmul@bexp^0,w,c
 13211   004916  A4D8               	btfss	status,2,c
 13212   004918  EF90  F024         	goto	u11851
 13213   00491C  EF92  F024         	goto	u11850
 13214   004920                     u11851:
 13215   004920  EF9C  F024         	goto	l11652
 13216   004924                     u11850:
 13217   004924                     l11648:
 13218   004924  0E00               	movlw	0
 13219   004926  6E19               	movwf	?___flmul^0,c
 13220   004928  0E00               	movlw	0
 13221   00492A  6E1A               	movwf	(?___flmul+1)^0,c
 13222   00492C  0E00               	movlw	0
 13223   00492E  6E1B               	movwf	(?___flmul+2)^0,c
 13224   004930  0E00               	movlw	0
 13225   004932  6E1C               	movwf	(?___flmul+3)^0,c
 13226   004934  EF34  F026         	goto	l1308
 13227   004938                     l11652:
 13228   004938  501F               	movf	(___flmul@a+2)^0,w,c
 13229   00493A  0219               	mulwf	___flmul@b^0,c
 13230   00493C  CFF3 F030          	movff	prodl,___flmul@temp
 13231   004940  CFF4 F031          	movff	prodh,___flmul@temp+1
 13232   004944  5030               	movf	___flmul@temp^0,w,c
 13233   004946  6E28               	movwf	___flmul@grs^0,c
 13234   004948  6A29               	clrf	(___flmul@grs+1)^0,c
 13235   00494A  6A2A               	clrf	(___flmul@grs+2)^0,c
 13236   00494C  6A2B               	clrf	(___flmul@grs+3)^0,c
 13237   00494E  5031               	movf	(___flmul@temp+1)^0,w,c
 13238   004950  6E2C               	movwf	___flmul@prod^0,c
 13239   004952  6A2D               	clrf	(___flmul@prod+1)^0,c
 13240   004954  6A2E               	clrf	(___flmul@prod+2)^0,c
 13241   004956  6A2F               	clrf	(___flmul@prod+3)^0,c
 13242   004958  501E               	movf	(___flmul@a+1)^0,w,c
 13243   00495A  021A               	mulwf	(___flmul@b+1)^0,c
 13244   00495C  CFF3 F030          	movff	prodl,___flmul@temp
 13245   004960  CFF4 F031          	movff	prodh,___flmul@temp+1
 13246   004964  5030               	movf	___flmul@temp^0,w,c
 13247   004966  2628               	addwf	___flmul@grs^0,f,c
 13248   004968  0E00               	movlw	0
 13249   00496A  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13250   00496C  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13251   00496E  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13252   004970  5031               	movf	(___flmul@temp+1)^0,w,c
 13253   004972  262C               	addwf	___flmul@prod^0,f,c
 13254   004974  0E00               	movlw	0
 13255   004976  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13256   004978  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13257   00497A  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13258   00497C  501D               	movf	___flmul@a^0,w,c
 13259   00497E  021B               	mulwf	(___flmul@b+2)^0,c
 13260   004980  CFF3 F030          	movff	prodl,___flmul@temp
 13261   004984  CFF4 F031          	movff	prodh,___flmul@temp+1
 13262   004988  5030               	movf	___flmul@temp^0,w,c
 13263   00498A  2628               	addwf	___flmul@grs^0,f,c
 13264   00498C  0E00               	movlw	0
 13265   00498E  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13266   004990  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13267   004992  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13268   004994  5031               	movf	(___flmul@temp+1)^0,w,c
 13269   004996  262C               	addwf	___flmul@prod^0,f,c
 13270   004998  0E00               	movlw	0
 13271   00499A  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13272   00499C  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13273   00499E  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13274   0049A0  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13275   0049A4  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13276   0049A8  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13277   0049AC  6A28               	clrf	___flmul@grs^0,c
 13278   0049AE  501D               	movf	___flmul@a^0,w,c
 13279   0049B0  021A               	mulwf	(___flmul@b+1)^0,c
 13280   0049B2  CFF3 F030          	movff	prodl,___flmul@temp
 13281   0049B6  CFF4 F031          	movff	prodh,___flmul@temp+1
 13282   0049BA  5030               	movf	___flmul@temp^0,w,c
 13283   0049BC  2628               	addwf	___flmul@grs^0,f,c
 13284   0049BE  5031               	movf	(___flmul@temp+1)^0,w,c
 13285   0049C0  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13286   0049C2  0E00               	movlw	0
 13287   0049C4  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13288   0049C6  0E00               	movlw	0
 13289   0049C8  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13290   0049CA  501E               	movf	(___flmul@a+1)^0,w,c
 13291   0049CC  0219               	mulwf	___flmul@b^0,c
 13292   0049CE  CFF3 F030          	movff	prodl,___flmul@temp
 13293   0049D2  CFF4 F031          	movff	prodh,___flmul@temp+1
 13294   0049D6  5030               	movf	___flmul@temp^0,w,c
 13295   0049D8  2628               	addwf	___flmul@grs^0,f,c
 13296   0049DA  5031               	movf	(___flmul@temp+1)^0,w,c
 13297   0049DC  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13298   0049DE  0E00               	movlw	0
 13299   0049E0  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13300   0049E2  0E00               	movlw	0
 13301   0049E4  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13302   0049E6  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13303   0049EA  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13304   0049EE  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13305   0049F2  6A28               	clrf	___flmul@grs^0,c
 13306   0049F4  501D               	movf	___flmul@a^0,w,c
 13307   0049F6  0219               	mulwf	___flmul@b^0,c
 13308   0049F8  CFF3 F030          	movff	prodl,___flmul@temp
 13309   0049FC  CFF4 F031          	movff	prodh,___flmul@temp+1
 13310   004A00  5030               	movf	___flmul@temp^0,w,c
 13311   004A02  2628               	addwf	___flmul@grs^0,f,c
 13312   004A04  5031               	movf	(___flmul@temp+1)^0,w,c
 13313   004A06  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13314   004A08  0E00               	movlw	0
 13315   004A0A  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13316   004A0C  0E00               	movlw	0
 13317   004A0E  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13318   004A10  501F               	movf	(___flmul@a+2)^0,w,c
 13319   004A12  021A               	mulwf	(___flmul@b+1)^0,c
 13320   004A14  CFF3 F030          	movff	prodl,___flmul@temp
 13321   004A18  CFF4 F031          	movff	prodh,___flmul@temp+1
 13322   004A1C  5030               	movf	___flmul@temp^0,w,c
 13323   004A1E  262C               	addwf	___flmul@prod^0,f,c
 13324   004A20  5031               	movf	(___flmul@temp+1)^0,w,c
 13325   004A22  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13326   004A24  0E00               	movlw	0
 13327   004A26  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13328   004A28  0E00               	movlw	0
 13329   004A2A  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13330   004A2C  501E               	movf	(___flmul@a+1)^0,w,c
 13331   004A2E  021B               	mulwf	(___flmul@b+2)^0,c
 13332   004A30  CFF3 F030          	movff	prodl,___flmul@temp
 13333   004A34  CFF4 F031          	movff	prodh,___flmul@temp+1
 13334   004A38  5030               	movf	___flmul@temp^0,w,c
 13335   004A3A  262C               	addwf	___flmul@prod^0,f,c
 13336   004A3C  5031               	movf	(___flmul@temp+1)^0,w,c
 13337   004A3E  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13338   004A40  0E00               	movlw	0
 13339   004A42  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13340   004A44  0E00               	movlw	0
 13341   004A46  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13342   004A48  501F               	movf	(___flmul@a+2)^0,w,c
 13343   004A4A  021B               	mulwf	(___flmul@b+2)^0,c
 13344   004A4C  CFF3 F030          	movff	prodl,___flmul@temp
 13345   004A50  CFF4 F031          	movff	prodh,___flmul@temp+1
 13346   004A54  5030               	movf	___flmul@temp^0,w,c
 13347   004A56  6E21               	movwf	??___flmul^0,c
 13348   004A58  5031               	movf	(___flmul@temp+1)^0,w,c
 13349   004A5A  6E22               	movwf	(??___flmul+1)^0,c
 13350   004A5C  6A23               	clrf	(??___flmul+2)^0,c
 13351   004A5E  6A24               	clrf	(??___flmul+3)^0,c
 13352   004A60  C023  F024         	movff	??___flmul+2,??___flmul+3
 13353   004A64  C022  F023         	movff	??___flmul+1,??___flmul+2
 13354   004A68  C021  F022         	movff	??___flmul,??___flmul+1
 13355   004A6C  6A21               	clrf	??___flmul^0,c
 13356   004A6E  5021               	movf	??___flmul^0,w,c
 13357   004A70  262C               	addwf	___flmul@prod^0,f,c
 13358   004A72  5022               	movf	(??___flmul+1)^0,w,c
 13359   004A74  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13360   004A76  5023               	movf	(??___flmul+2)^0,w,c
 13361   004A78  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13362   004A7A  5024               	movf	(??___flmul+3)^0,w,c
 13363   004A7C  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13364   004A7E  C028  F021         	movff	___flmul@grs,??___flmul
 13365   004A82  C029  F022         	movff	___flmul@grs+1,??___flmul+1
 13366   004A86  C02A  F023         	movff	___flmul@grs+2,??___flmul+2
 13367   004A8A  C02B  F024         	movff	___flmul@grs+3,??___flmul+3
 13368   004A8E  0E19               	movlw	25
 13369   004A90  EF4F  F025         	goto	u11860
 13370   004A94                     u11865:
 13371   004A94  90D8               	bcf	status,0,c
 13372   004A96  3224               	rrcf	(??___flmul+3)^0,f,c
 13373   004A98  3223               	rrcf	(??___flmul+2)^0,f,c
 13374   004A9A  3222               	rrcf	(??___flmul+1)^0,f,c
 13375   004A9C  3221               	rrcf	??___flmul^0,f,c
 13376   004A9E                     u11860:
 13377   004A9E  2EE8               	decfsz	wreg,f,c
 13378   004AA0  EF4A  F025         	goto	u11865
 13379   004AA4  5021               	movf	??___flmul^0,w,c
 13380   004AA6  262C               	addwf	___flmul@prod^0,f,c
 13381   004AA8  5022               	movf	(??___flmul+1)^0,w,c
 13382   004AAA  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13383   004AAC  5023               	movf	(??___flmul+2)^0,w,c
 13384   004AAE  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13385   004AB0  5024               	movf	(??___flmul+3)^0,w,c
 13386   004AB2  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13387   004AB4  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13388   004AB8  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13389   004ABC  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13390   004AC0  6A28               	clrf	___flmul@grs^0,c
 13391   004AC2  5026               	movf	___flmul@aexp^0,w,c
 13392   004AC4  C027  F021         	movff	___flmul@bexp,??___flmul
 13393   004AC8  6A22               	clrf	(??___flmul+1)^0,c
 13394   004ACA  2621               	addwf	??___flmul^0,f,c
 13395   004ACC  0E00               	movlw	0
 13396   004ACE  2222               	addwfc	(??___flmul+1)^0,f,c
 13397   004AD0  0E82               	movlw	130
 13398   004AD2  2421               	addwf	??___flmul^0,w,c
 13399   004AD4  6E30               	movwf	___flmul@temp^0,c
 13400   004AD6  0EFF               	movlw	255
 13401   004AD8  2022               	addwfc	(??___flmul+1)^0,w,c
 13402   004ADA  6E31               	movwf	(___flmul@temp+1)^0,c
 13403   004ADC  EF85  F025         	goto	l11700
 13404   004AE0                     l11694:
 13405   004AE0  90D8               	bcf	status,0,c
 13406   004AE2  362C               	rlcf	___flmul@prod^0,f,c
 13407   004AE4  362D               	rlcf	(___flmul@prod+1)^0,f,c
 13408   004AE6  362E               	rlcf	(___flmul@prod+2)^0,f,c
 13409   004AE8  362F               	rlcf	(___flmul@prod+3)^0,f,c
 13410   004AEA  AE2B               	btfss	(___flmul@grs+3)^0,7,c
 13411   004AEC  EF7A  F025         	goto	u11871
 13412   004AF0  EF7C  F025         	goto	u11870
 13413   004AF4                     u11871:
 13414   004AF4  EF7D  F025         	goto	l1311
 13415   004AF8                     u11870:
 13416   004AF8  802C               	bsf	___flmul@prod^0,0,c
 13417   004AFA                     l1311:
 13418   004AFA  90D8               	bcf	status,0,c
 13419   004AFC  3628               	rlcf	___flmul@grs^0,f,c
 13420   004AFE  3629               	rlcf	(___flmul@grs+1)^0,f,c
 13421   004B00  362A               	rlcf	(___flmul@grs+2)^0,f,c
 13422   004B02  362B               	rlcf	(___flmul@grs+3)^0,f,c
 13423   004B04  0630               	decf	___flmul@temp^0,f,c
 13424   004B06  A0D8               	btfss	status,0,c
 13425   004B08  0631               	decf	(___flmul@temp+1)^0,f,c
 13426   004B0A                     l11700:
 13427   004B0A  AE2E               	btfss	(___flmul@prod+2)^0,7,c
 13428   004B0C  EF8A  F025         	goto	u11881
 13429   004B10  EF8C  F025         	goto	u11880
 13430   004B14                     u11881:
 13431   004B14  EF70  F025         	goto	l11694
 13432   004B18                     u11880:
 13433   004B18  0E00               	movlw	0
 13434   004B1A  6E26               	movwf	___flmul@aexp^0,c
 13435   004B1C  AE2B               	btfss	(___flmul@grs+3)^0,7,c
 13436   004B1E  EF93  F025         	goto	u11891
 13437   004B22  EF95  F025         	goto	u11890
 13438   004B26                     u11891:
 13439   004B26  EFB9  F025         	goto	l1313
 13440   004B2A                     u11890:
 13441   004B2A  0EFF               	movlw	255
 13442   004B2C  1428               	andwf	___flmul@grs^0,w,c
 13443   004B2E  6E21               	movwf	??___flmul^0,c
 13444   004B30  0EFF               	movlw	255
 13445   004B32  1429               	andwf	(___flmul@grs+1)^0,w,c
 13446   004B34  6E22               	movwf	(??___flmul+1)^0,c
 13447   004B36  0EFF               	movlw	255
 13448   004B38  142A               	andwf	(___flmul@grs+2)^0,w,c
 13449   004B3A  6E23               	movwf	(??___flmul+2)^0,c
 13450   004B3C  0E7F               	movlw	127
 13451   004B3E  142B               	andwf	(___flmul@grs+3)^0,w,c
 13452   004B40  6E24               	movwf	(??___flmul+3)^0,c
 13453   004B42  5021               	movf	??___flmul^0,w,c
 13454   004B44  1022               	iorwf	(??___flmul+1)^0,w,c
 13455   004B46  1023               	iorwf	(??___flmul+2)^0,w,c
 13456   004B48  1024               	iorwf	(??___flmul+3)^0,w,c
 13457   004B4A  B4D8               	btfsc	status,2,c
 13458   004B4C  EFAA  F025         	goto	u11901
 13459   004B50  EFAC  F025         	goto	u11900
 13460   004B54                     u11901:
 13461   004B54  EFB0  F025         	goto	l1314
 13462   004B58                     u11900:
 13463   004B58                     l11708:
 13464   004B58  0E01               	movlw	1
 13465   004B5A  6E26               	movwf	___flmul@aexp^0,c
 13466   004B5C  EFB9  F025         	goto	l1313
 13467   004B60                     l1314:
 13468   004B60  A02C               	btfss	___flmul@prod^0,0,c
 13469   004B62  EFB5  F025         	goto	u11911
 13470   004B66  EFB7  F025         	goto	u11910
 13471   004B6A                     u11911:
 13472   004B6A  EFB9  F025         	goto	l1313
 13473   004B6E                     u11910:
 13474   004B6E  EFAC  F025         	goto	l11708
 13475   004B72                     l1313:
 13476   004B72  5026               	movf	___flmul@aexp^0,w,c
 13477   004B74  B4D8               	btfsc	status,2,c
 13478   004B76  EFBF  F025         	goto	u11921
 13479   004B7A  EFC1  F025         	goto	u11920
 13480   004B7E                     u11921:
 13481   004B7E  EFE5  F025         	goto	l11720
 13482   004B82                     u11920:
 13483   004B82  0E01               	movlw	1
 13484   004B84  262C               	addwf	___flmul@prod^0,f,c
 13485   004B86  0E00               	movlw	0
 13486   004B88  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13487   004B8A  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13488   004B8C  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13489   004B8E  A02F               	btfss	(___flmul@prod+3)^0,0,c
 13490   004B90  EFCC  F025         	goto	u11931
 13491   004B94  EFCE  F025         	goto	u11930
 13492   004B98                     u11931:
 13493   004B98  EFE5  F025         	goto	l11720
 13494   004B9C                     u11930:
 13495   004B9C  C02C  F021         	movff	___flmul@prod,??___flmul
 13496   004BA0  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
 13497   004BA4  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
 13498   004BA8  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
 13499   004BAC  3424               	rlcf	(??___flmul+3)^0,w,c
 13500   004BAE  3224               	rrcf	(??___flmul+3)^0,f,c
 13501   004BB0  3223               	rrcf	(??___flmul+2)^0,f,c
 13502   004BB2  3222               	rrcf	(??___flmul+1)^0,f,c
 13503   004BB4  3221               	rrcf	??___flmul^0,f,c
 13504   004BB6  C021  F02C         	movff	??___flmul,___flmul@prod
 13505   004BBA  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
 13506   004BBE  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
 13507   004BC2  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
 13508   004BC6  4A30               	infsnz	___flmul@temp^0,f,c
 13509   004BC8  2A31               	incf	(___flmul@temp+1)^0,f,c
 13510   004BCA                     l11720:
 13511   004BCA  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 13512   004BCC  EFF0  F025         	goto	u11941
 13513   004BD0  5031               	movf	(___flmul@temp+1)^0,w,c
 13514   004BD2  E108               	bnz	u11940
 13515   004BD4  2830               	incf	___flmul@temp^0,w,c
 13516   004BD6  A0D8               	btfss	status,0,c
 13517   004BD8  EFF0  F025         	goto	u11941
 13518   004BDC  EFF2  F025         	goto	u11940
 13519   004BE0                     u11941:
 13520   004BE0  EFFC  F025         	goto	l11724
 13521   004BE4                     u11940:
 13522   004BE4  0E00               	movlw	0
 13523   004BE6  6E2C               	movwf	___flmul@prod^0,c
 13524   004BE8  0E00               	movlw	0
 13525   004BEA  6E2D               	movwf	(___flmul@prod+1)^0,c
 13526   004BEC  0E80               	movlw	128
 13527   004BEE  6E2E               	movwf	(___flmul@prod+2)^0,c
 13528   004BF0  0E7F               	movlw	127
 13529   004BF2  6E2F               	movwf	(___flmul@prod+3)^0,c
 13530   004BF4  EF2A  F026         	goto	l11736
 13531   004BF8                     l11724:
 13532   004BF8  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 13533   004BFA  EF09  F026         	goto	u11950
 13534   004BFE  5031               	movf	(___flmul@temp+1)^0,w,c
 13535   004C00  E106               	bnz	u11951
 13536   004C02  0430               	decf	___flmul@temp^0,w,c
 13537   004C04  B0D8               	btfsc	status,0,c
 13538   004C06  EF07  F026         	goto	u11951
 13539   004C0A  EF09  F026         	goto	u11950
 13540   004C0E                     u11951:
 13541   004C0E  EF15  F026         	goto	l1321
 13542   004C12                     u11950:
 13543   004C12  0E00               	movlw	0
 13544   004C14  6E2C               	movwf	___flmul@prod^0,c
 13545   004C16  0E00               	movlw	0
 13546   004C18  6E2D               	movwf	(___flmul@prod+1)^0,c
 13547   004C1A  0E00               	movlw	0
 13548   004C1C  6E2E               	movwf	(___flmul@prod+2)^0,c
 13549   004C1E  0E00               	movlw	0
 13550   004C20  6E2F               	movwf	(___flmul@prod+3)^0,c
 13551   004C22  0E00               	movlw	0
 13552   004C24  6E25               	movwf	___flmul@sign^0,c
 13553   004C26  EF2A  F026         	goto	l11736
 13554   004C2A                     l1321:
 13555   004C2A  C030  F027         	movff	___flmul@temp,___flmul@bexp
 13556   004C2E  0EFF               	movlw	255
 13557   004C30  162C               	andwf	___flmul@prod^0,f,c
 13558   004C32  0EFF               	movlw	255
 13559   004C34  162D               	andwf	(___flmul@prod+1)^0,f,c
 13560   004C36  0E7F               	movlw	127
 13561   004C38  162E               	andwf	(___flmul@prod+2)^0,f,c
 13562   004C3A  0E00               	movlw	0
 13563   004C3C  162F               	andwf	(___flmul@prod+3)^0,f,c
 13564   004C3E  A027               	btfss	___flmul@bexp^0,0,c
 13565   004C40  EF24  F026         	goto	u11961
 13566   004C44  EF26  F026         	goto	u11960
 13567   004C48                     u11961:
 13568   004C48  EF27  F026         	goto	l11734
 13569   004C4C                     u11960:
 13570   004C4C  8E2E               	bsf	(___flmul@prod+2)^0,7,c
 13571   004C4E                     l11734:
 13572   004C4E  90D8               	bcf	status,0,c
 13573   004C50  3027               	rrcf	___flmul@bexp^0,w,c
 13574   004C52  6E2F               	movwf	(___flmul@prod+3)^0,c
 13575   004C54                     l11736:
 13576   004C54  5025               	movf	___flmul@sign^0,w,c
 13577   004C56  122F               	iorwf	(___flmul@prod+3)^0,f,c
 13578   004C58  C02C  F019         	movff	___flmul@prod,?___flmul
 13579   004C5C  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
 13580   004C60  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
 13581   004C64  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
 13582   004C68                     l1308:
 13583   004C68  0012               	return		;funcret
 13584   004C6A                     __end_of___flmul:
 13585                           	callstack 0
 13586                           
 13587 ;; *************** function ___xxtofl *****************
 13588 ;; Defined at:
 13589 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 13590 ;; Parameters:    Size  Location     Type
 13591 ;;  sign            1    wreg     unsigned char 
 13592 ;;  val             4   10[COMRAM] long 
 13593 ;; Auto vars:     Size  Location     Type
 13594 ;;  sign            1   18[COMRAM] unsigned char 
 13595 ;;  arg             4   20[COMRAM] unsigned long 
 13596 ;;  exp             1   19[COMRAM] unsigned char 
 13597 ;; Return value:  Size  Location     Type
 13598 ;;                  4   10[COMRAM] unsigned char 
 13599 ;; Registers used:
 13600 ;;		wreg, status,2, status,0
 13601 ;; Tracked objects:
 13602 ;;		On entry : 0/0
 13603 ;;		On exit  : 0/0
 13604 ;;		Unchanged: 0/0
 13605 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13606 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13607 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13608 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13609 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13610 ;;Total ram usage:       14 bytes
 13611 ;; Hardware stack levels used: 1
 13612 ;; This function calls:
 13613 ;;		Nothing
 13614 ;; This function is called by:
 13615 ;;		_convert_arr_to_float
 13616 ;;		_send_the_result_to_LCD
 13617 ;;		_powf
 13618 ;; This function uses a non-reentrant model
 13619 ;;
 13620                           
 13621                           	psect	text43
 13622   005EE2                     __ptext43:
 13623                           	callstack 0
 13624   005EE2                     ___xxtofl:
 13625                           	callstack 29
 13626                           
 13627                           ;incstack = 0
 13628                           ;___xxtofl@sign stored from wreg
 13629   005EE2  6E13               	movwf	___xxtofl@sign^0,c
 13630   005EE4  5013               	movf	___xxtofl@sign^0,w,c
 13631   005EE6  B4D8               	btfsc	status,2,c
 13632   005EE8  EF78  F02F         	goto	u12411
 13633   005EEC  EF7A  F02F         	goto	u12410
 13634   005EF0                     u12411:
 13635   005EF0  EF9C  F02F         	goto	l1345
 13636   005EF4                     u12410:
 13637   005EF4  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 13638   005EF6  EF81  F02F         	goto	u12420
 13639   005EFA  EF7F  F02F         	goto	u12421
 13640   005EFE                     u12421:
 13641   005EFE  EF9C  F02F         	goto	l1345
 13642   005F02                     u12420:
 13643   005F02  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
 13644   005F06  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
 13645   005F0A  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
 13646   005F0E  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
 13647   005F12  1E0F               	comf	??___xxtofl^0,f,c
 13648   005F14  1E10               	comf	(??___xxtofl+1)^0,f,c
 13649   005F16  1E11               	comf	(??___xxtofl+2)^0,f,c
 13650   005F18  1E12               	comf	(??___xxtofl+3)^0,f,c
 13651   005F1A  2A0F               	incf	??___xxtofl^0,f,c
 13652   005F1C  0E00               	movlw	0
 13653   005F1E  2210               	addwfc	(??___xxtofl+1)^0,f,c
 13654   005F20  2211               	addwfc	(??___xxtofl+2)^0,f,c
 13655   005F22  2212               	addwfc	(??___xxtofl+3)^0,f,c
 13656   005F24  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
 13657   005F28  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
 13658   005F2C  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
 13659   005F30  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
 13660   005F34  EFA4  F02F         	goto	l12118
 13661   005F38                     l1345:
 13662   005F38  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
 13663   005F3C  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13664   005F40  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13665   005F44  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13666   005F48                     l12118:
 13667   005F48  500B               	movf	___xxtofl@val^0,w,c
 13668   005F4A  100C               	iorwf	(___xxtofl@val+1)^0,w,c
 13669   005F4C  100D               	iorwf	(___xxtofl@val+2)^0,w,c
 13670   005F4E  100E               	iorwf	(___xxtofl@val+3)^0,w,c
 13671   005F50  A4D8               	btfss	status,2,c
 13672   005F52  EFAD  F02F         	goto	u12431
 13673   005F56  EFAF  F02F         	goto	u12430
 13674   005F5A                     u12431:
 13675   005F5A  EFB9  F02F         	goto	l12124
 13676   005F5E                     u12430:
 13677   005F5E  0E00               	movlw	0
 13678   005F60  6E0B               	movwf	?___xxtofl^0,c
 13679   005F62  0E00               	movlw	0
 13680   005F64  6E0C               	movwf	(?___xxtofl+1)^0,c
 13681   005F66  0E00               	movlw	0
 13682   005F68  6E0D               	movwf	(?___xxtofl+2)^0,c
 13683   005F6A  0E00               	movlw	0
 13684   005F6C  6E0E               	movwf	(?___xxtofl+3)^0,c
 13685   005F6E  EF4A  F030         	goto	l1348
 13686   005F72                     l12124:
 13687   005F72  0E96               	movlw	150
 13688   005F74  6E14               	movwf	___xxtofl@exp^0,c
 13689   005F76  EFC3  F02F         	goto	l12128
 13690   005F7A                     l12126:
 13691   005F7A  2A14               	incf	___xxtofl@exp^0,f,c
 13692   005F7C  90D8               	bcf	status,0,c
 13693   005F7E  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 13694   005F80  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 13695   005F82  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 13696   005F84  3215               	rrcf	___xxtofl@arg^0,f,c
 13697   005F86                     l12128:
 13698   005F86  0E00               	movlw	0
 13699   005F88  1415               	andwf	___xxtofl@arg^0,w,c
 13700   005F8A  6E0F               	movwf	??___xxtofl^0,c
 13701   005F8C  0E00               	movlw	0
 13702   005F8E  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 13703   005F90  6E10               	movwf	(??___xxtofl+1)^0,c
 13704   005F92  0E00               	movlw	0
 13705   005F94  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 13706   005F96  6E11               	movwf	(??___xxtofl+2)^0,c
 13707   005F98  0EFE               	movlw	254
 13708   005F9A  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 13709   005F9C  6E12               	movwf	(??___xxtofl+3)^0,c
 13710   005F9E  500F               	movf	??___xxtofl^0,w,c
 13711   005FA0  1010               	iorwf	(??___xxtofl+1)^0,w,c
 13712   005FA2  1011               	iorwf	(??___xxtofl+2)^0,w,c
 13713   005FA4  1012               	iorwf	(??___xxtofl+3)^0,w,c
 13714   005FA6  A4D8               	btfss	status,2,c
 13715   005FA8  EFD8  F02F         	goto	u12441
 13716   005FAC  EFDA  F02F         	goto	u12440
 13717   005FB0                     u12441:
 13718   005FB0  EFBD  F02F         	goto	l12126
 13719   005FB4                     u12440:
 13720   005FB4  EFE8  F02F         	goto	l1352
 13721   005FB8                     l12130:
 13722   005FB8  2A14               	incf	___xxtofl@exp^0,f,c
 13723   005FBA  0E01               	movlw	1
 13724   005FBC  2615               	addwf	___xxtofl@arg^0,f,c
 13725   005FBE  0E00               	movlw	0
 13726   005FC0  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
 13727   005FC2  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
 13728   005FC4  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
 13729   005FC6  90D8               	bcf	status,0,c
 13730   005FC8  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 13731   005FCA  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 13732   005FCC  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 13733   005FCE  3215               	rrcf	___xxtofl@arg^0,f,c
 13734   005FD0                     l1352:
 13735   005FD0  0E00               	movlw	0
 13736   005FD2  1415               	andwf	___xxtofl@arg^0,w,c
 13737   005FD4  6E0F               	movwf	??___xxtofl^0,c
 13738   005FD6  0E00               	movlw	0
 13739   005FD8  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 13740   005FDA  6E10               	movwf	(??___xxtofl+1)^0,c
 13741   005FDC  0E00               	movlw	0
 13742   005FDE  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 13743   005FE0  6E11               	movwf	(??___xxtofl+2)^0,c
 13744   005FE2  0EFF               	movlw	255
 13745   005FE4  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 13746   005FE6  6E12               	movwf	(??___xxtofl+3)^0,c
 13747   005FE8  500F               	movf	??___xxtofl^0,w,c
 13748   005FEA  1010               	iorwf	(??___xxtofl+1)^0,w,c
 13749   005FEC  1011               	iorwf	(??___xxtofl+2)^0,w,c
 13750   005FEE  1012               	iorwf	(??___xxtofl+3)^0,w,c
 13751   005FF0  A4D8               	btfss	status,2,c
 13752   005FF2  EFFD  F02F         	goto	u12451
 13753   005FF6  EFFF  F02F         	goto	u12450
 13754   005FFA                     u12451:
 13755   005FFA  EFDC  F02F         	goto	l12130
 13756   005FFE                     u12450:
 13757   005FFE  EF07  F030         	goto	l12138
 13758   006002                     l12136:
 13759   006002  0614               	decf	___xxtofl@exp^0,f,c
 13760   006004  90D8               	bcf	status,0,c
 13761   006006  3615               	rlcf	___xxtofl@arg^0,f,c
 13762   006008  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
 13763   00600A  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
 13764   00600C  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
 13765   00600E                     l12138:
 13766   00600E  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
 13767   006010  EF0C  F030         	goto	u12461
 13768   006014  EF0E  F030         	goto	u12460
 13769   006018                     u12461:
 13770   006018  EF16  F030         	goto	l1359
 13771   00601C                     u12460:
 13772   00601C  0E02               	movlw	2
 13773   00601E  6014               	cpfslt	___xxtofl@exp^0,c
 13774   006020  EF14  F030         	goto	u12471
 13775   006024  EF16  F030         	goto	u12470
 13776   006028                     u12471:
 13777   006028  EF01  F030         	goto	l12136
 13778   00602C                     u12470:
 13779   00602C                     l1359:
 13780   00602C  B014               	btfsc	___xxtofl@exp^0,0,c
 13781   00602E  EF1B  F030         	goto	u12481
 13782   006032  EF1D  F030         	goto	u12480
 13783   006036                     u12481:
 13784   006036  EF1E  F030         	goto	l12144
 13785   00603A                     u12480:
 13786   00603A  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
 13787   00603C                     l12144:
 13788   00603C  90D8               	bcf	status,0,c
 13789   00603E  3214               	rrcf	___xxtofl@exp^0,f,c
 13790   006040  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
 13791   006044  6A10               	clrf	(??___xxtofl+1)^0,c
 13792   006046  6A11               	clrf	(??___xxtofl+2)^0,c
 13793   006048  6A12               	clrf	(??___xxtofl+3)^0,c
 13794   00604A  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
 13795   00604E  6A11               	clrf	(??___xxtofl+2)^0,c
 13796   006050  6A10               	clrf	(??___xxtofl+1)^0,c
 13797   006052  6A0F               	clrf	??___xxtofl^0,c
 13798   006054  500F               	movf	??___xxtofl^0,w,c
 13799   006056  1215               	iorwf	___xxtofl@arg^0,f,c
 13800   006058  5010               	movf	(??___xxtofl+1)^0,w,c
 13801   00605A  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
 13802   00605C  5011               	movf	(??___xxtofl+2)^0,w,c
 13803   00605E  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
 13804   006060  5012               	movf	(??___xxtofl+3)^0,w,c
 13805   006062  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
 13806   006064  5013               	movf	___xxtofl@sign^0,w,c
 13807   006066  B4D8               	btfsc	status,2,c
 13808   006068  EF38  F030         	goto	u12491
 13809   00606C  EF3A  F030         	goto	u12490
 13810   006070                     u12491:
 13811   006070  EF42  F030         	goto	l12154
 13812   006074                     u12490:
 13813   006074  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 13814   006076  EF41  F030         	goto	u12500
 13815   00607A  EF3F  F030         	goto	u12501
 13816   00607E                     u12501:
 13817   00607E  EF42  F030         	goto	l12154
 13818   006082                     u12500:
 13819   006082  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
 13820   006084                     l12154:
 13821   006084  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
 13822   006088  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
 13823   00608C  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
 13824   006090  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
 13825   006094                     l1348:
 13826   006094  0012               	return		;funcret
 13827   006096                     __end_of___xxtofl:
 13828                           	callstack 0
 13829                           
 13830 ;; *************** function ___flsub *****************
 13831 ;; Defined at:
 13832 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 13833 ;; Parameters:    Size  Location     Type
 13834 ;;  b               4   90[COMRAM] unsigned char 
 13835 ;;  a               4   94[COMRAM] unsigned char 
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;		None
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  4   90[COMRAM] unsigned char 
 13840 ;; Registers used:
 13841 ;;		wreg, status,2, status,0, cstack
 13842 ;; Tracked objects:
 13843 ;;		On entry : 0/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13847 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13850 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13851 ;;Total ram usage:        8 bytes
 13852 ;; Hardware stack levels used: 1
 13853 ;; Hardware stack levels required when called: 1
 13854 ;; This function calls:
 13855 ;;		___fladd
 13856 ;; This function is called by:
 13857 ;;		_subtraction_operation
 13858 ;;		_efgtoa
 13859 ;;		_powf
 13860 ;; This function uses a non-reentrant model
 13861 ;;
 13862                           
 13863                           	psect	text44
 13864   007596                     __ptext44:
 13865                           	callstack 0
 13866   007596                     ___flsub:
 13867                           	callstack 28
 13868   007596  0E00               	movlw	0
 13869   007598  1A5F               	xorwf	___flsub@a^0,f,c
 13870   00759A  0E00               	movlw	0
 13871   00759C  1A60               	xorwf	(___flsub@a+1)^0,f,c
 13872   00759E  0E00               	movlw	0
 13873   0075A0  1A61               	xorwf	(___flsub@a+2)^0,f,c
 13874   0075A2  0E80               	movlw	128
 13875   0075A4  1A62               	xorwf	(___flsub@a+3)^0,f,c
 13876   0075A6  C05B  F032         	movff	___flsub@b,___fladd@b
 13877   0075AA  C05C  F033         	movff	___flsub@b+1,___fladd@b+1
 13878   0075AE  C05D  F034         	movff	___flsub@b+2,___fladd@b+2
 13879   0075B2  C05E  F035         	movff	___flsub@b+3,___fladd@b+3
 13880   0075B6  C05F  F036         	movff	___flsub@a,___fladd@a
 13881   0075BA  C060  F037         	movff	___flsub@a+1,___fladd@a+1
 13882   0075BE  C061  F038         	movff	___flsub@a+2,___fladd@a+2
 13883   0075C2  C062  F039         	movff	___flsub@a+3,___fladd@a+3
 13884   0075C6  ECC0  F021         	call	___fladd	;wreg free
 13885   0075CA  C032  F05B         	movff	?___fladd,?___flsub
 13886   0075CE  C033  F05C         	movff	?___fladd+1,?___flsub+1
 13887   0075D2  C034  F05D         	movff	?___fladd+2,?___flsub+2
 13888   0075D6  C035  F05E         	movff	?___fladd+3,?___flsub+3
 13889   0075DA  0012               	return		;funcret
 13890   0075DC                     __end_of___flsub:
 13891                           	callstack 0
 13892                           
 13893 ;; *************** function ___fladd *****************
 13894 ;; Defined at:
 13895 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 13896 ;; Parameters:    Size  Location     Type
 13897 ;;  b               4   49[COMRAM] unsigned char 
 13898 ;;  a               4   53[COMRAM] unsigned char 
 13899 ;; Auto vars:     Size  Location     Type
 13900 ;;  grs             1   64[COMRAM] unsigned char 
 13901 ;;  bexp            1   63[COMRAM] unsigned char 
 13902 ;;  aexp            1   62[COMRAM] unsigned char 
 13903 ;;  signs           1   61[COMRAM] unsigned char 
 13904 ;; Return value:  Size  Location     Type
 13905 ;;                  4   49[COMRAM] unsigned char 
 13906 ;; Registers used:
 13907 ;;		wreg, status,2, status,0
 13908 ;; Tracked objects:
 13909 ;;		On entry : 0/0
 13910 ;;		On exit  : 0/0
 13911 ;;		Unchanged: 0/0
 13912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13913 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13914 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13915 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13916 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13917 ;;Total ram usage:       16 bytes
 13918 ;; Hardware stack levels used: 1
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_convert_arr_to_float
 13923 ;;		_sum_operation
 13924 ;;		___flsub
 13925 ;;		_efgtoa
 13926 ;;		_powf
 13927 ;; This function uses a non-reentrant model
 13928 ;;
 13929                           
 13930                           	psect	text45
 13931   004380                     __ptext45:
 13932                           	callstack 0
 13933   004380                     ___fladd:
 13934                           	callstack 29
 13935   004380  5035               	movf	(___fladd@b+3)^0,w,c
 13936   004382  0B80               	andlw	128
 13937   004384  6E3E               	movwf	___fladd@signs^0,c
 13938   004386  5035               	movf	(___fladd@b+3)^0,w,c
 13939   004388  2435               	addwf	(___fladd@b+3)^0,w,c
 13940   00438A  6E40               	movwf	___fladd@bexp^0,c
 13941   00438C  AE34               	btfss	(___fladd@b+2)^0,7,c
 13942   00438E  EFCB  F021         	goto	u11161
 13943   004392  EFCD  F021         	goto	u11160
 13944   004396                     u11161:
 13945   004396  EFCE  F021         	goto	l11278
 13946   00439A                     u11160:
 13947   00439A  8040               	bsf	___fladd@bexp^0,0,c
 13948   00439C                     l11278:
 13949   00439C  5040               	movf	___fladd@bexp^0,w,c
 13950   00439E  B4D8               	btfsc	status,2,c
 13951   0043A0  EFD4  F021         	goto	u11171
 13952   0043A4  EFD6  F021         	goto	u11170
 13953   0043A8                     u11171:
 13954   0043A8  EFEB  F021         	goto	l11288
 13955   0043AC                     u11170:
 13956   0043AC  2840               	incf	___fladd@bexp^0,w,c
 13957   0043AE  A4D8               	btfss	status,2,c
 13958   0043B0  EFDC  F021         	goto	u11181
 13959   0043B4  EFDE  F021         	goto	u11180
 13960   0043B8                     u11181:
 13961   0043B8  EFE6  F021         	goto	l11284
 13962   0043BC                     u11180:
 13963   0043BC  0E00               	movlw	0
 13964   0043BE  6E32               	movwf	___fladd@b^0,c
 13965   0043C0  0E00               	movlw	0
 13966   0043C2  6E33               	movwf	(___fladd@b+1)^0,c
 13967   0043C4  0E00               	movlw	0
 13968   0043C6  6E34               	movwf	(___fladd@b+2)^0,c
 13969   0043C8  0E00               	movlw	0
 13970   0043CA  6E35               	movwf	(___fladd@b+3)^0,c
 13971   0043CC                     l11284:
 13972   0043CC  8E34               	bsf	(___fladd@b+2)^0,7,c
 13973   0043CE  0E00               	movlw	0
 13974   0043D0  6E35               	movwf	(___fladd@b+3)^0,c
 13975   0043D2  EFF3  F021         	goto	l11290
 13976   0043D6                     l11288:
 13977   0043D6  0E00               	movlw	0
 13978   0043D8  6E32               	movwf	___fladd@b^0,c
 13979   0043DA  0E00               	movlw	0
 13980   0043DC  6E33               	movwf	(___fladd@b+1)^0,c
 13981   0043DE  0E00               	movlw	0
 13982   0043E0  6E34               	movwf	(___fladd@b+2)^0,c
 13983   0043E2  0E00               	movlw	0
 13984   0043E4  6E35               	movwf	(___fladd@b+3)^0,c
 13985   0043E6                     l11290:
 13986   0043E6  5039               	movf	(___fladd@a+3)^0,w,c
 13987   0043E8  0B80               	andlw	128
 13988   0043EA  6E3F               	movwf	___fladd@aexp^0,c
 13989   0043EC  503E               	movf	___fladd@signs^0,w,c
 13990   0043EE  183F               	xorwf	___fladd@aexp^0,w,c
 13991   0043F0  B4D8               	btfsc	status,2,c
 13992   0043F2  EFFD  F021         	goto	u11191
 13993   0043F6  EFFF  F021         	goto	u11190
 13994   0043FA                     u11191:
 13995   0043FA  EF00  F022         	goto	l11296
 13996   0043FE                     u11190:
 13997   0043FE  8C3E               	bsf	___fladd@signs^0,6,c
 13998   004400                     l11296:
 13999   004400  5039               	movf	(___fladd@a+3)^0,w,c
 14000   004402  2439               	addwf	(___fladd@a+3)^0,w,c
 14001   004404  6E3F               	movwf	___fladd@aexp^0,c
 14002   004406  AE38               	btfss	(___fladd@a+2)^0,7,c
 14003   004408  EF08  F022         	goto	u11201
 14004   00440C  EF0A  F022         	goto	u11200
 14005   004410                     u11201:
 14006   004410  EF0B  F022         	goto	l11302
 14007   004414                     u11200:
 14008   004414  803F               	bsf	___fladd@aexp^0,0,c
 14009   004416                     l11302:
 14010   004416  503F               	movf	___fladd@aexp^0,w,c
 14011   004418  B4D8               	btfsc	status,2,c
 14012   00441A  EF11  F022         	goto	u11211
 14013   00441E  EF13  F022         	goto	u11210
 14014   004422                     u11211:
 14015   004422  EF28  F022         	goto	l11312
 14016   004426                     u11210:
 14017   004426  283F               	incf	___fladd@aexp^0,w,c
 14018   004428  A4D8               	btfss	status,2,c
 14019   00442A  EF19  F022         	goto	u11221
 14020   00442E  EF1B  F022         	goto	u11220
 14021   004432                     u11221:
 14022   004432  EF23  F022         	goto	l11308
 14023   004436                     u11220:
 14024   004436  0E00               	movlw	0
 14025   004438  6E36               	movwf	___fladd@a^0,c
 14026   00443A  0E00               	movlw	0
 14027   00443C  6E37               	movwf	(___fladd@a+1)^0,c
 14028   00443E  0E00               	movlw	0
 14029   004440  6E38               	movwf	(___fladd@a+2)^0,c
 14030   004442  0E00               	movlw	0
 14031   004444  6E39               	movwf	(___fladd@a+3)^0,c
 14032   004446                     l11308:
 14033   004446  8E38               	bsf	(___fladd@a+2)^0,7,c
 14034   004448  0E00               	movlw	0
 14035   00444A  6E39               	movwf	(___fladd@a+3)^0,c
 14036   00444C  EF30  F022         	goto	l11314
 14037   004450                     l11312:
 14038   004450  0E00               	movlw	0
 14039   004452  6E36               	movwf	___fladd@a^0,c
 14040   004454  0E00               	movlw	0
 14041   004456  6E37               	movwf	(___fladd@a+1)^0,c
 14042   004458  0E00               	movlw	0
 14043   00445A  6E38               	movwf	(___fladd@a+2)^0,c
 14044   00445C  0E00               	movlw	0
 14045   00445E  6E39               	movwf	(___fladd@a+3)^0,c
 14046   004460                     l11314:
 14047   004460  5040               	movf	___fladd@bexp^0,w,c
 14048   004462  5C3F               	subwf	___fladd@aexp^0,w,c
 14049   004464  B0D8               	btfsc	status,0,c
 14050   004466  EF37  F022         	goto	u11231
 14051   00446A  EF39  F022         	goto	u11230
 14052   00446E                     u11231:
 14053   00446E  EF60  F022         	goto	l11350
 14054   004472                     u11230:
 14055   004472  AC3E               	btfss	___fladd@signs^0,6,c
 14056   004474  EF3E  F022         	goto	u11241
 14057   004478  EF40  F022         	goto	u11240
 14058   00447C                     u11241:
 14059   00447C  EF42  F022         	goto	l11320
 14060   004480                     u11240:
 14061   004480  0E80               	movlw	128
 14062   004482  1A3E               	xorwf	___fladd@signs^0,f,c
 14063   004484                     l11320:
 14064   004484  C040  F041         	movff	___fladd@bexp,___fladd@grs
 14065   004488  C03F  F040         	movff	___fladd@aexp,___fladd@bexp
 14066   00448C  C041  F03F         	movff	___fladd@grs,___fladd@aexp
 14067   004490  C032  F041         	movff	___fladd@b,___fladd@grs
 14068   004494  C036  F032         	movff	___fladd@a,___fladd@b
 14069   004498  C041  F036         	movff	___fladd@grs,___fladd@a
 14070   00449C  C033  F041         	movff	___fladd@b+1,___fladd@grs
 14071   0044A0  C037  F033         	movff	___fladd@a+1,___fladd@b+1
 14072   0044A4  C041  F037         	movff	___fladd@grs,___fladd@a+1
 14073   0044A8  C034  F041         	movff	___fladd@b+2,___fladd@grs
 14074   0044AC  C038  F034         	movff	___fladd@a+2,___fladd@b+2
 14075   0044B0  C041  F038         	movff	___fladd@grs,___fladd@a+2
 14076   0044B4  C035  F041         	movff	___fladd@b+3,___fladd@grs
 14077   0044B8  C039  F035         	movff	___fladd@a+3,___fladd@b+3
 14078   0044BC  C041  F039         	movff	___fladd@grs,___fladd@a+3
 14079   0044C0                     l11350:
 14080   0044C0  0E00               	movlw	0
 14081   0044C2  6E41               	movwf	___fladd@grs^0,c
 14082   0044C4  5040               	movf	___fladd@bexp^0,w,c
 14083   0044C6  C03F  F03A         	movff	___fladd@aexp,??___fladd
 14084   0044CA  6A3B               	clrf	(??___fladd+1)^0,c
 14085   0044CC  5E3A               	subwf	??___fladd^0,f,c
 14086   0044CE  0E00               	movlw	0
 14087   0044D0  5A3B               	subwfb	(??___fladd+1)^0,f,c
 14088   0044D2  BE3B               	btfsc	(??___fladd+1)^0,7,c
 14089   0044D4  EF75  F022         	goto	u11251
 14090   0044D8  503B               	movf	(??___fladd+1)^0,w,c
 14091   0044DA  E109               	bnz	u11250
 14092   0044DC  0E1A               	movlw	26
 14093   0044DE  5C3A               	subwf	??___fladd^0,w,c
 14094   0044E0  A0D8               	btfss	status,0,c
 14095   0044E2  EF75  F022         	goto	u11251
 14096   0044E6  EF77  F022         	goto	u11250
 14097   0044EA                     u11251:
 14098   0044EA  EFAE  F022         	goto	l1219
 14099   0044EE                     u11250:
 14100   0044EE  5032               	movf	___fladd@b^0,w,c
 14101   0044F0  1033               	iorwf	(___fladd@b+1)^0,w,c
 14102   0044F2  1034               	iorwf	(___fladd@b+2)^0,w,c
 14103   0044F4  1035               	iorwf	(___fladd@b+3)^0,w,c
 14104   0044F6  A4D8               	btfss	status,2,c
 14105   0044F8  EF80  F022         	goto	u11261
 14106   0044FC  EF83  F022         	goto	u11260
 14107   004500                     u11261:
 14108   004500  0E01               	movlw	1
 14109   004502  EF84  F022         	goto	u11270
 14110   004506                     u11260:
 14111   004506  0E00               	movlw	0
 14112   004508                     u11270:
 14113   004508  6E41               	movwf	___fladd@grs^0,c
 14114   00450A  0E00               	movlw	0
 14115   00450C  6E32               	movwf	___fladd@b^0,c
 14116   00450E  0E00               	movlw	0
 14117   004510  6E33               	movwf	(___fladd@b+1)^0,c
 14118   004512  0E00               	movlw	0
 14119   004514  6E34               	movwf	(___fladd@b+2)^0,c
 14120   004516  0E00               	movlw	0
 14121   004518  6E35               	movwf	(___fladd@b+3)^0,c
 14122   00451A  C03F  F040         	movff	___fladd@aexp,___fladd@bexp
 14123   00451E  EFB7  F022         	goto	l1218
 14124   004522                     l1220:
 14125   004522  A041               	btfss	___fladd@grs^0,0,c
 14126   004524  EF96  F022         	goto	u11281
 14127   004528  EF98  F022         	goto	u11280
 14128   00452C                     u11281:
 14129   00452C  EF9E  F022         	goto	l11362
 14130   004530                     u11280:
 14131   004530  90D8               	bcf	status,0,c
 14132   004532  3041               	rrcf	___fladd@grs^0,w,c
 14133   004534  0901               	iorlw	1
 14134   004536  6E41               	movwf	___fladd@grs^0,c
 14135   004538  EFA0  F022         	goto	l11364
 14136   00453C                     l11362:
 14137   00453C  90D8               	bcf	status,0,c
 14138   00453E  3241               	rrcf	___fladd@grs^0,f,c
 14139   004540                     l11364:
 14140   004540  A032               	btfss	___fladd@b^0,0,c
 14141   004542  EFA5  F022         	goto	u11291
 14142   004546  EFA7  F022         	goto	u11290
 14143   00454A                     u11291:
 14144   00454A  EFA8  F022         	goto	l11368
 14145   00454E                     u11290:
 14146   00454E  8E41               	bsf	___fladd@grs^0,7,c
 14147   004550                     l11368:
 14148   004550  3435               	rlcf	(___fladd@b+3)^0,w,c
 14149   004552  3235               	rrcf	(___fladd@b+3)^0,f,c
 14150   004554  3234               	rrcf	(___fladd@b+2)^0,f,c
 14151   004556  3233               	rrcf	(___fladd@b+1)^0,f,c
 14152   004558  3232               	rrcf	___fladd@b^0,f,c
 14153   00455A  2A40               	incf	___fladd@bexp^0,f,c
 14154   00455C                     l1219:
 14155   00455C  503F               	movf	___fladd@aexp^0,w,c
 14156   00455E  5C40               	subwf	___fladd@bexp^0,w,c
 14157   004560  A0D8               	btfss	status,0,c
 14158   004562  EFB5  F022         	goto	u11301
 14159   004566  EFB7  F022         	goto	u11300
 14160   00456A                     u11301:
 14161   00456A  EF91  F022         	goto	l1220
 14162   00456E                     u11300:
 14163   00456E                     l1218:
 14164   00456E  BC3E               	btfsc	___fladd@signs^0,6,c
 14165   004570  EFBC  F022         	goto	u11311
 14166   004574  EFBE  F022         	goto	u11310
 14167   004578                     u11311:
 14168   004578  EFFE  F022         	goto	l11396
 14169   00457C                     u11310:
 14170   00457C  5040               	movf	___fladd@bexp^0,w,c
 14171   00457E  A4D8               	btfss	status,2,c
 14172   004580  EFC4  F022         	goto	u11321
 14173   004584  EFC6  F022         	goto	u11320
 14174   004588                     u11321:
 14175   004588  EFD0  F022         	goto	l11378
 14176   00458C                     u11320:
 14177   00458C  0E00               	movlw	0
 14178   00458E  6E32               	movwf	?___fladd^0,c
 14179   004590  0E00               	movlw	0
 14180   004592  6E33               	movwf	(?___fladd+1)^0,c
 14181   004594  0E00               	movlw	0
 14182   004596  6E34               	movwf	(?___fladd+2)^0,c
 14183   004598  0E00               	movlw	0
 14184   00459A  6E35               	movwf	(?___fladd+3)^0,c
 14185   00459C  EF1F  F024         	goto	l1227
 14186   0045A0                     l11378:
 14187   0045A0  5036               	movf	___fladd@a^0,w,c
 14188   0045A2  2632               	addwf	___fladd@b^0,f,c
 14189   0045A4  5037               	movf	(___fladd@a+1)^0,w,c
 14190   0045A6  2233               	addwfc	(___fladd@b+1)^0,f,c
 14191   0045A8  5038               	movf	(___fladd@a+2)^0,w,c
 14192   0045AA  2234               	addwfc	(___fladd@b+2)^0,f,c
 14193   0045AC  5039               	movf	(___fladd@a+3)^0,w,c
 14194   0045AE  2235               	addwfc	(___fladd@b+3)^0,f,c
 14195   0045B0  A035               	btfss	(___fladd@b+3)^0,0,c
 14196   0045B2  EFDD  F022         	goto	u11331
 14197   0045B6  EFDF  F022         	goto	u11330
 14198   0045BA                     u11331:
 14199   0045BA  EF8B  F023         	goto	l11432
 14200   0045BE                     u11330:
 14201   0045BE  A041               	btfss	___fladd@grs^0,0,c
 14202   0045C0  EFE4  F022         	goto	u11341
 14203   0045C4  EFE6  F022         	goto	u11340
 14204   0045C8                     u11341:
 14205   0045C8  EFEC  F022         	goto	l11386
 14206   0045CC                     u11340:
 14207   0045CC  90D8               	bcf	status,0,c
 14208   0045CE  3041               	rrcf	___fladd@grs^0,w,c
 14209   0045D0  0901               	iorlw	1
 14210   0045D2  6E41               	movwf	___fladd@grs^0,c
 14211   0045D4  EFEE  F022         	goto	l11388
 14212   0045D8                     l11386:
 14213   0045D8  90D8               	bcf	status,0,c
 14214   0045DA  3241               	rrcf	___fladd@grs^0,f,c
 14215   0045DC                     l11388:
 14216   0045DC  A032               	btfss	___fladd@b^0,0,c
 14217   0045DE  EFF3  F022         	goto	u11351
 14218   0045E2  EFF5  F022         	goto	u11350
 14219   0045E6                     u11351:
 14220   0045E6  EFF6  F022         	goto	l11392
 14221   0045EA                     u11350:
 14222   0045EA  8E41               	bsf	___fladd@grs^0,7,c
 14223   0045EC                     l11392:
 14224   0045EC  3435               	rlcf	(___fladd@b+3)^0,w,c
 14225   0045EE  3235               	rrcf	(___fladd@b+3)^0,f,c
 14226   0045F0  3234               	rrcf	(___fladd@b+2)^0,f,c
 14227   0045F2  3233               	rrcf	(___fladd@b+1)^0,f,c
 14228   0045F4  3232               	rrcf	___fladd@b^0,f,c
 14229   0045F6  2A40               	incf	___fladd@bexp^0,f,c
 14230   0045F8  EF8B  F023         	goto	l11432
 14231   0045FC                     l11396:
 14232   0045FC  5036               	movf	___fladd@a^0,w,c
 14233   0045FE  5C32               	subwf	___fladd@b^0,w,c
 14234   004600  5037               	movf	(___fladd@a+1)^0,w,c
 14235   004602  5833               	subwfb	(___fladd@b+1)^0,w,c
 14236   004604  5038               	movf	(___fladd@a+2)^0,w,c
 14237   004606  5834               	subwfb	(___fladd@b+2)^0,w,c
 14238   004608  5035               	movf	(___fladd@b+3)^0,w,c
 14239   00460A  0A80               	xorlw	128
 14240   00460C  6E3A               	movwf	??___fladd^0,c
 14241   00460E  5039               	movf	(___fladd@a+3)^0,w,c
 14242   004610  0A80               	xorlw	128
 14243   004612  583A               	subwfb	??___fladd^0,w,c
 14244   004614  B0D8               	btfsc	status,0,c
 14245   004616  EF0F  F023         	goto	u11361
 14246   00461A  EF11  F023         	goto	u11360
 14247   00461E                     u11361:
 14248   00461E  EF3C  F023         	goto	l11406
 14249   004622                     u11360:
 14250   004622  5032               	movf	___fladd@b^0,w,c
 14251   004624  5C36               	subwf	___fladd@a^0,w,c
 14252   004626  6E3A               	movwf	??___fladd^0,c
 14253   004628  5033               	movf	(___fladd@b+1)^0,w,c
 14254   00462A  5837               	subwfb	(___fladd@a+1)^0,w,c
 14255   00462C  6E3B               	movwf	(??___fladd+1)^0,c
 14256   00462E  5034               	movf	(___fladd@b+2)^0,w,c
 14257   004630  5838               	subwfb	(___fladd@a+2)^0,w,c
 14258   004632  6E3C               	movwf	(??___fladd+2)^0,c
 14259   004634  5035               	movf	(___fladd@b+3)^0,w,c
 14260   004636  5839               	subwfb	(___fladd@a+3)^0,w,c
 14261   004638  6E3D               	movwf	(??___fladd+3)^0,c
 14262   00463A  0EFF               	movlw	255
 14263   00463C  243A               	addwf	??___fladd^0,w,c
 14264   00463E  6E32               	movwf	___fladd@b^0,c
 14265   004640  0EFF               	movlw	255
 14266   004642  203B               	addwfc	(??___fladd+1)^0,w,c
 14267   004644  6E33               	movwf	(___fladd@b+1)^0,c
 14268   004646  0EFF               	movlw	255
 14269   004648  203C               	addwfc	(??___fladd+2)^0,w,c
 14270   00464A  6E34               	movwf	(___fladd@b+2)^0,c
 14271   00464C  0EFF               	movlw	255
 14272   00464E  203D               	addwfc	(??___fladd+3)^0,w,c
 14273   004650  6E35               	movwf	(___fladd@b+3)^0,c
 14274   004652  0E80               	movlw	128
 14275   004654  1A3E               	xorwf	___fladd@signs^0,f,c
 14276   004656  6C41               	negf	___fladd@grs^0,c
 14277   004658  5041               	movf	___fladd@grs^0,w,c
 14278   00465A  A4D8               	btfss	status,2,c
 14279   00465C  EF32  F023         	goto	u11371
 14280   004660  EF34  F023         	goto	u11370
 14281   004664                     u11371:
 14282   004664  EF44  F023         	goto	l1235
 14283   004668                     u11370:
 14284   004668  0E01               	movlw	1
 14285   00466A  2632               	addwf	___fladd@b^0,f,c
 14286   00466C  0E00               	movlw	0
 14287   00466E  2233               	addwfc	(___fladd@b+1)^0,f,c
 14288   004670  2234               	addwfc	(___fladd@b+2)^0,f,c
 14289   004672  2235               	addwfc	(___fladd@b+3)^0,f,c
 14290   004674  EF44  F023         	goto	l1235
 14291   004678                     l11406:
 14292   004678  5036               	movf	___fladd@a^0,w,c
 14293   00467A  5E32               	subwf	___fladd@b^0,f,c
 14294   00467C  5037               	movf	(___fladd@a+1)^0,w,c
 14295   00467E  5A33               	subwfb	(___fladd@b+1)^0,f,c
 14296   004680  5038               	movf	(___fladd@a+2)^0,w,c
 14297   004682  5A34               	subwfb	(___fladd@b+2)^0,f,c
 14298   004684  5039               	movf	(___fladd@a+3)^0,w,c
 14299   004686  5A35               	subwfb	(___fladd@b+3)^0,f,c
 14300   004688                     l1235:
 14301   004688  5032               	movf	___fladd@b^0,w,c
 14302   00468A  1033               	iorwf	(___fladd@b+1)^0,w,c
 14303   00468C  1034               	iorwf	(___fladd@b+2)^0,w,c
 14304   00468E  1035               	iorwf	(___fladd@b+3)^0,w,c
 14305   004690  A4D8               	btfss	status,2,c
 14306   004692  EF4D  F023         	goto	u11381
 14307   004696  EF4F  F023         	goto	u11380
 14308   00469A                     u11381:
 14309   00469A  EF84  F023         	goto	l11430
 14310   00469E                     u11380:
 14311   00469E  5041               	movf	___fladd@grs^0,w,c
 14312   0046A0  A4D8               	btfss	status,2,c
 14313   0046A2  EF55  F023         	goto	u11391
 14314   0046A6  EF57  F023         	goto	u11390
 14315   0046AA                     u11391:
 14316   0046AA  EF84  F023         	goto	l11430
 14317   0046AE                     u11390:
 14318   0046AE  0E00               	movlw	0
 14319   0046B0  6E32               	movwf	?___fladd^0,c
 14320   0046B2  0E00               	movlw	0
 14321   0046B4  6E33               	movwf	(?___fladd+1)^0,c
 14322   0046B6  0E00               	movlw	0
 14323   0046B8  6E34               	movwf	(?___fladd+2)^0,c
 14324   0046BA  0E00               	movlw	0
 14325   0046BC  6E35               	movwf	(?___fladd+3)^0,c
 14326   0046BE  EF1F  F024         	goto	l1227
 14327   0046C2                     l11414:
 14328   0046C2  90D8               	bcf	status,0,c
 14329   0046C4  3632               	rlcf	___fladd@b^0,f,c
 14330   0046C6  3633               	rlcf	(___fladd@b+1)^0,f,c
 14331   0046C8  3634               	rlcf	(___fladd@b+2)^0,f,c
 14332   0046CA  3635               	rlcf	(___fladd@b+3)^0,f,c
 14333   0046CC  AE41               	btfss	___fladd@grs^0,7,c
 14334   0046CE  EF6B  F023         	goto	u11401
 14335   0046D2  EF6D  F023         	goto	u11400
 14336   0046D6                     u11401:
 14337   0046D6  EF6E  F023         	goto	l11420
 14338   0046DA                     u11400:
 14339   0046DA  8032               	bsf	___fladd@b^0,0,c
 14340   0046DC                     l11420:
 14341   0046DC  A041               	btfss	___fladd@grs^0,0,c
 14342   0046DE  EF73  F023         	goto	u11411
 14343   0046E2  EF75  F023         	goto	u11410
 14344   0046E6                     u11411:
 14345   0046E6  EF79  F023         	goto	l11424
 14346   0046EA                     u11410:
 14347   0046EA  80D8               	bsf	status,0,c
 14348   0046EC  3641               	rlcf	___fladd@grs^0,f,c
 14349   0046EE  EF7B  F023         	goto	l11426
 14350   0046F2                     l11424:
 14351   0046F2  90D8               	bcf	status,0,c
 14352   0046F4  3641               	rlcf	___fladd@grs^0,f,c
 14353   0046F6                     l11426:
 14354   0046F6  5040               	movf	___fladd@bexp^0,w,c
 14355   0046F8  B4D8               	btfsc	status,2,c
 14356   0046FA  EF81  F023         	goto	u11421
 14357   0046FE  EF83  F023         	goto	u11420
 14358   004702                     u11421:
 14359   004702  EF84  F023         	goto	l11430
 14360   004706                     u11420:
 14361   004706  0640               	decf	___fladd@bexp^0,f,c
 14362   004708                     l11430:
 14363   004708  AE34               	btfss	(___fladd@b+2)^0,7,c
 14364   00470A  EF89  F023         	goto	u11431
 14365   00470E  EF8B  F023         	goto	u11430
 14366   004712                     u11431:
 14367   004712  EF61  F023         	goto	l11414
 14368   004716                     u11430:
 14369   004716                     l11432:
 14370   004716  0E00               	movlw	0
 14371   004718  6E3F               	movwf	___fladd@aexp^0,c
 14372   00471A  AE41               	btfss	___fladd@grs^0,7,c
 14373   00471C  EF92  F023         	goto	u11441
 14374   004720  EF94  F023         	goto	u11440
 14375   004724                     u11441:
 14376   004724  EFAC  F023         	goto	l1244
 14377   004728                     u11440:
 14378   004728  C041  F03A         	movff	___fladd@grs,??___fladd
 14379   00472C  0E7F               	movlw	127
 14380   00472E  163A               	andwf	??___fladd^0,f,c
 14381   004730  B4D8               	btfsc	status,2,c
 14382   004732  EF9D  F023         	goto	u11451
 14383   004736  EF9F  F023         	goto	u11450
 14384   00473A                     u11451:
 14385   00473A  EFA3  F023         	goto	l1245
 14386   00473E                     u11450:
 14387   00473E                     l11438:
 14388   00473E  0E01               	movlw	1
 14389   004740  6E3F               	movwf	___fladd@aexp^0,c
 14390   004742  EFAC  F023         	goto	l1244
 14391   004746                     l1245:
 14392   004746  A032               	btfss	___fladd@b^0,0,c
 14393   004748  EFA8  F023         	goto	u11461
 14394   00474C  EFAA  F023         	goto	u11460
 14395   004750                     u11461:
 14396   004750  EFAC  F023         	goto	l1244
 14397   004754                     u11460:
 14398   004754  EF9F  F023         	goto	l11438
 14399   004758                     l1244:
 14400   004758  503F               	movf	___fladd@aexp^0,w,c
 14401   00475A  B4D8               	btfsc	status,2,c
 14402   00475C  EFB2  F023         	goto	u11471
 14403   004760  EFB4  F023         	goto	u11470
 14404   004764                     u11471:
 14405   004764  EFDF  F023         	goto	l11450
 14406   004768                     u11470:
 14407   004768  0E01               	movlw	1
 14408   00476A  2632               	addwf	___fladd@b^0,f,c
 14409   00476C  0E00               	movlw	0
 14410   00476E  2233               	addwfc	(___fladd@b+1)^0,f,c
 14411   004770  2234               	addwfc	(___fladd@b+2)^0,f,c
 14412   004772  2235               	addwfc	(___fladd@b+3)^0,f,c
 14413   004774  A035               	btfss	(___fladd@b+3)^0,0,c
 14414   004776  EFBF  F023         	goto	u11481
 14415   00477A  EFC1  F023         	goto	u11480
 14416   00477E                     u11481:
 14417   00477E  EFDF  F023         	goto	l11450
 14418   004782                     u11480:
 14419   004782  C032  F03A         	movff	___fladd@b,??___fladd
 14420   004786  C033  F03B         	movff	___fladd@b+1,??___fladd+1
 14421   00478A  C034  F03C         	movff	___fladd@b+2,??___fladd+2
 14422   00478E  C035  F03D         	movff	___fladd@b+3,??___fladd+3
 14423   004792  343D               	rlcf	(??___fladd+3)^0,w,c
 14424   004794  323D               	rrcf	(??___fladd+3)^0,f,c
 14425   004796  323C               	rrcf	(??___fladd+2)^0,f,c
 14426   004798  323B               	rrcf	(??___fladd+1)^0,f,c
 14427   00479A  323A               	rrcf	??___fladd^0,f,c
 14428   00479C  C03A  F032         	movff	??___fladd,___fladd@b
 14429   0047A0  C03B  F033         	movff	??___fladd+1,___fladd@b+1
 14430   0047A4  C03C  F034         	movff	??___fladd+2,___fladd@b+2
 14431   0047A8  C03D  F035         	movff	??___fladd+3,___fladd@b+3
 14432   0047AC  2840               	incf	___fladd@bexp^0,w,c
 14433   0047AE  B4D8               	btfsc	status,2,c
 14434   0047B0  EFDC  F023         	goto	u11491
 14435   0047B4  EFDE  F023         	goto	u11490
 14436   0047B8                     u11491:
 14437   0047B8  EFDF  F023         	goto	l11450
 14438   0047BC                     u11490:
 14439   0047BC  2A40               	incf	___fladd@bexp^0,f,c
 14440   0047BE                     l11450:
 14441   0047BE  2840               	incf	___fladd@bexp^0,w,c
 14442   0047C0  B4D8               	btfsc	status,2,c
 14443   0047C2  EFE5  F023         	goto	u11501
 14444   0047C6  EFE7  F023         	goto	u11500
 14445   0047CA                     u11501:
 14446   0047CA  EFEF  F023         	goto	l11454
 14447   0047CE                     u11500:
 14448   0047CE  5040               	movf	___fladd@bexp^0,w,c
 14449   0047D0  A4D8               	btfss	status,2,c
 14450   0047D2  EFED  F023         	goto	u11511
 14451   0047D6  EFEF  F023         	goto	u11510
 14452   0047DA                     u11511:
 14453   0047DA  EF01  F024         	goto	l11458
 14454   0047DE                     u11510:
 14455   0047DE                     l11454:
 14456   0047DE  0E00               	movlw	0
 14457   0047E0  6E32               	movwf	___fladd@b^0,c
 14458   0047E2  0E00               	movlw	0
 14459   0047E4  6E33               	movwf	(___fladd@b+1)^0,c
 14460   0047E6  0E00               	movlw	0
 14461   0047E8  6E34               	movwf	(___fladd@b+2)^0,c
 14462   0047EA  0E00               	movlw	0
 14463   0047EC  6E35               	movwf	(___fladd@b+3)^0,c
 14464   0047EE  5040               	movf	___fladd@bexp^0,w,c
 14465   0047F0  A4D8               	btfss	status,2,c
 14466   0047F2  EFFD  F023         	goto	u11521
 14467   0047F6  EFFF  F023         	goto	u11520
 14468   0047FA                     u11521:
 14469   0047FA  EF01  F024         	goto	l11458
 14470   0047FE                     u11520:
 14471   0047FE  0E00               	movlw	0
 14472   004800  6E3E               	movwf	___fladd@signs^0,c
 14473   004802                     l11458:
 14474   004802  A040               	btfss	___fladd@bexp^0,0,c
 14475   004804  EF06  F024         	goto	u11531
 14476   004808  EF08  F024         	goto	u11530
 14477   00480C                     u11531:
 14478   00480C  EF0B  F024         	goto	l11462
 14479   004810                     u11530:
 14480   004810  8E34               	bsf	(___fladd@b+2)^0,7,c
 14481   004812  EF0C  F024         	goto	l11464
 14482   004816                     l11462:
 14483   004816  9E34               	bcf	(___fladd@b+2)^0,7,c
 14484   004818                     l11464:
 14485   004818  90D8               	bcf	status,0,c
 14486   00481A  3040               	rrcf	___fladd@bexp^0,w,c
 14487   00481C  6E35               	movwf	(___fladd@b+3)^0,c
 14488   00481E  AE3E               	btfss	___fladd@signs^0,7,c
 14489   004820  EF14  F024         	goto	u11541
 14490   004824  EF16  F024         	goto	u11540
 14491   004828                     u11541:
 14492   004828  EF17  F024         	goto	l11470
 14493   00482C                     u11540:
 14494   00482C  8E35               	bsf	(___fladd@b+3)^0,7,c
 14495   00482E                     l11470:
 14496   00482E  C032  F032         	movff	___fladd@b,?___fladd
 14497   004832  C033  F033         	movff	___fladd@b+1,?___fladd+1
 14498   004836  C034  F034         	movff	___fladd@b+2,?___fladd+2
 14499   00483A  C035  F035         	movff	___fladd@b+3,?___fladd+3
 14500   00483E                     l1227:
 14501   00483E  0012               	return		;funcret
 14502   004840                     __end_of___fladd:
 14503                           	callstack 0
 14504                           
 14505 ;; *************** function ___flneg *****************
 14506 ;; Defined at:
 14507 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 14508 ;; Parameters:    Size  Location     Type
 14509 ;;  f1              4    0[COMRAM] unsigned char 
 14510 ;; Auto vars:     Size  Location     Type
 14511 ;;		None
 14512 ;; Return value:  Size  Location     Type
 14513 ;;                  4    0[COMRAM] unsigned char 
 14514 ;; Registers used:
 14515 ;;		wreg, status,2, status,0
 14516 ;; Tracked objects:
 14517 ;;		On entry : 0/0
 14518 ;;		On exit  : 0/0
 14519 ;;		Unchanged: 0/0
 14520 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14521 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14522 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14523 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14524 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14525 ;;Total ram usage:        4 bytes
 14526 ;; Hardware stack levels used: 1
 14527 ;; This function calls:
 14528 ;;		Nothing
 14529 ;; This function is called by:
 14530 ;;		_efgtoa
 14531 ;;		_powf
 14532 ;; This function uses a non-reentrant model
 14533 ;;
 14534                           
 14535                           	psect	text46
 14536   0078B2                     __ptext46:
 14537                           	callstack 0
 14538   0078B2                     ___flneg:
 14539                           	callstack 24
 14540   0078B2  5001               	movf	___flneg@f1^0,w,c
 14541   0078B4  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14542   0078B6  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14543   0078B8  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14544   0078BA  B4D8               	btfsc	status,2,c
 14545   0078BC  EF62  F03C         	goto	u12021
 14546   0078C0  EF64  F03C         	goto	u12020
 14547   0078C4                     u12021:
 14548   0078C4  EF6C  F03C         	goto	l11774
 14549   0078C8                     u12020:
 14550   0078C8  0E00               	movlw	0
 14551   0078CA  1A01               	xorwf	___flneg@f1^0,f,c
 14552   0078CC  0E00               	movlw	0
 14553   0078CE  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14554   0078D0  0E00               	movlw	0
 14555   0078D2  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14556   0078D4  0E80               	movlw	128
 14557   0078D6  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14558   0078D8                     l11774:
 14559   0078D8  C001  F001         	movff	___flneg@f1,?___flneg
 14560   0078DC  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14561   0078E0  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14562   0078E4  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14563   0078E8  0012               	return		;funcret
 14564   0078EA                     __end_of___flneg:
 14565                           	callstack 0
 14566                           
 14567 ;; *************** function ___flge *****************
 14568 ;; Defined at:
 14569 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 14570 ;; Parameters:    Size  Location     Type
 14571 ;;  ff1             4   98[COMRAM] unsigned char 
 14572 ;;  ff2             4  102[COMRAM] unsigned char 
 14573 ;; Auto vars:     Size  Location     Type
 14574 ;;		None
 14575 ;; Return value:  Size  Location     Type
 14576 ;;		None               void
 14577 ;; Registers used:
 14578 ;;		wreg, status,2, status,0
 14579 ;; Tracked objects:
 14580 ;;		On entry : 0/0
 14581 ;;		On exit  : 0/0
 14582 ;;		Unchanged: 0/0
 14583 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14584 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14585 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14586 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14587 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14588 ;;Total ram usage:       12 bytes
 14589 ;; Hardware stack levels used: 1
 14590 ;; This function calls:
 14591 ;;		Nothing
 14592 ;; This function is called by:
 14593 ;;		_send_the_result_to_LCD
 14594 ;;		_efgtoa
 14595 ;;		_powf
 14596 ;; This function uses a non-reentrant model
 14597 ;;
 14598                           
 14599                           	psect	text47
 14600   0067BE                     __ptext47:
 14601                           	callstack 0
 14602   0067BE                     ___flge:
 14603                           	callstack 24
 14604   0067BE  0E00               	movlw	0
 14605   0067C0  1463               	andwf	___flge@ff1^0,w,c
 14606   0067C2  6E6B               	movwf	??___flge^0,c
 14607   0067C4  0E00               	movlw	0
 14608   0067C6  1464               	andwf	(___flge@ff1+1)^0,w,c
 14609   0067C8  6E6C               	movwf	(??___flge+1)^0,c
 14610   0067CA  0E80               	movlw	128
 14611   0067CC  1465               	andwf	(___flge@ff1+2)^0,w,c
 14612   0067CE  6E6D               	movwf	(??___flge+2)^0,c
 14613   0067D0  0E7F               	movlw	127
 14614   0067D2  1466               	andwf	(___flge@ff1+3)^0,w,c
 14615   0067D4  6E6E               	movwf	(??___flge+3)^0,c
 14616   0067D6  506B               	movf	??___flge^0,w,c
 14617   0067D8  106C               	iorwf	(??___flge+1)^0,w,c
 14618   0067DA  106D               	iorwf	(??___flge+2)^0,w,c
 14619   0067DC  106E               	iorwf	(??___flge+3)^0,w,c
 14620   0067DE  A4D8               	btfss	status,2,c
 14621   0067E0  EFF4  F033         	goto	u11971
 14622   0067E4  EFF6  F033         	goto	u11970
 14623   0067E8                     u11971:
 14624   0067E8  EFFE  F033         	goto	l11752
 14625   0067EC                     u11970:
 14626   0067EC  0E00               	movlw	0
 14627   0067EE  6E63               	movwf	___flge@ff1^0,c
 14628   0067F0  0E00               	movlw	0
 14629   0067F2  6E64               	movwf	(___flge@ff1+1)^0,c
 14630   0067F4  0E00               	movlw	0
 14631   0067F6  6E65               	movwf	(___flge@ff1+2)^0,c
 14632   0067F8  0E00               	movlw	0
 14633   0067FA  6E66               	movwf	(___flge@ff1+3)^0,c
 14634   0067FC                     l11752:
 14635   0067FC  0E00               	movlw	0
 14636   0067FE  1467               	andwf	___flge@ff2^0,w,c
 14637   006800  6E6B               	movwf	??___flge^0,c
 14638   006802  0E00               	movlw	0
 14639   006804  1468               	andwf	(___flge@ff2+1)^0,w,c
 14640   006806  6E6C               	movwf	(??___flge+1)^0,c
 14641   006808  0E80               	movlw	128
 14642   00680A  1469               	andwf	(___flge@ff2+2)^0,w,c
 14643   00680C  6E6D               	movwf	(??___flge+2)^0,c
 14644   00680E  0E7F               	movlw	127
 14645   006810  146A               	andwf	(___flge@ff2+3)^0,w,c
 14646   006812  6E6E               	movwf	(??___flge+3)^0,c
 14647   006814  506B               	movf	??___flge^0,w,c
 14648   006816  106C               	iorwf	(??___flge+1)^0,w,c
 14649   006818  106D               	iorwf	(??___flge+2)^0,w,c
 14650   00681A  106E               	iorwf	(??___flge+3)^0,w,c
 14651   00681C  A4D8               	btfss	status,2,c
 14652   00681E  EF13  F034         	goto	u11981
 14653   006822  EF15  F034         	goto	u11980
 14654   006826                     u11981:
 14655   006826  EF1D  F034         	goto	l11756
 14656   00682A                     u11980:
 14657   00682A  0E00               	movlw	0
 14658   00682C  6E67               	movwf	___flge@ff2^0,c
 14659   00682E  0E00               	movlw	0
 14660   006830  6E68               	movwf	(___flge@ff2+1)^0,c
 14661   006832  0E00               	movlw	0
 14662   006834  6E69               	movwf	(___flge@ff2+2)^0,c
 14663   006836  0E00               	movlw	0
 14664   006838  6E6A               	movwf	(___flge@ff2+3)^0,c
 14665   00683A                     l11756:
 14666   00683A  AE66               	btfss	(___flge@ff1+3)^0,7,c
 14667   00683C  EF22  F034         	goto	u11991
 14668   006840  EF24  F034         	goto	u11990
 14669   006844                     u11991:
 14670   006844  EF2D  F034         	goto	l11760
 14671   006848                     u11990:
 14672   006848  6C63               	negf	___flge@ff1^0,c
 14673   00684A  1E64               	comf	(___flge@ff1+1)^0,f,c
 14674   00684C  B0D8               	btfsc	status,0,c
 14675   00684E  2A64               	incf	(___flge@ff1+1)^0,f,c
 14676   006850  1E65               	comf	(___flge@ff1+2)^0,f,c
 14677   006852  B0D8               	btfsc	status,0,c
 14678   006854  2A65               	incf	(___flge@ff1+2)^0,f,c
 14679   006856  0E80               	movlw	128
 14680   006858  5666               	subfwb	(___flge@ff1+3)^0,f,c
 14681   00685A                     l11760:
 14682   00685A  AE6A               	btfss	(___flge@ff2+3)^0,7,c
 14683   00685C  EF32  F034         	goto	u12001
 14684   006860  EF34  F034         	goto	u12000
 14685   006864                     u12001:
 14686   006864  EF3D  F034         	goto	l955
 14687   006868                     u12000:
 14688   006868  6C67               	negf	___flge@ff2^0,c
 14689   00686A  1E68               	comf	(___flge@ff2+1)^0,f,c
 14690   00686C  B0D8               	btfsc	status,0,c
 14691   00686E  2A68               	incf	(___flge@ff2+1)^0,f,c
 14692   006870  1E69               	comf	(___flge@ff2+2)^0,f,c
 14693   006872  B0D8               	btfsc	status,0,c
 14694   006874  2A69               	incf	(___flge@ff2+2)^0,f,c
 14695   006876  0E80               	movlw	128
 14696   006878  566A               	subfwb	(___flge@ff2+3)^0,f,c
 14697   00687A                     l955:
 14698   00687A  0E00               	movlw	0
 14699   00687C  1A63               	xorwf	___flge@ff1^0,f,c
 14700   00687E  0E00               	movlw	0
 14701   006880  1A64               	xorwf	(___flge@ff1+1)^0,f,c
 14702   006882  0E00               	movlw	0
 14703   006884  1A65               	xorwf	(___flge@ff1+2)^0,f,c
 14704   006886  0E80               	movlw	128
 14705   006888  1A66               	xorwf	(___flge@ff1+3)^0,f,c
 14706   00688A  0E00               	movlw	0
 14707   00688C  1A67               	xorwf	___flge@ff2^0,f,c
 14708   00688E  0E00               	movlw	0
 14709   006890  1A68               	xorwf	(___flge@ff2+1)^0,f,c
 14710   006892  0E00               	movlw	0
 14711   006894  1A69               	xorwf	(___flge@ff2+2)^0,f,c
 14712   006896  0E80               	movlw	128
 14713   006898  1A6A               	xorwf	(___flge@ff2+3)^0,f,c
 14714   00689A  5067               	movf	___flge@ff2^0,w,c
 14715   00689C  5C63               	subwf	___flge@ff1^0,w,c
 14716   00689E  5068               	movf	(___flge@ff2+1)^0,w,c
 14717   0068A0  5864               	subwfb	(___flge@ff1+1)^0,w,c
 14718   0068A2  5069               	movf	(___flge@ff2+2)^0,w,c
 14719   0068A4  5865               	subwfb	(___flge@ff1+2)^0,w,c
 14720   0068A6  506A               	movf	(___flge@ff2+3)^0,w,c
 14721   0068A8  5866               	subwfb	(___flge@ff1+3)^0,w,c
 14722   0068AA  B0D8               	btfsc	status,0,c
 14723   0068AC  EF5A  F034         	goto	u12011
 14724   0068B0  EF5C  F034         	goto	u12010
 14725   0068B4                     u12011:
 14726   0068B4  EF5F  F034         	goto	l11766
 14727   0068B8                     u12010:
 14728   0068B8  90D8               	bcf	status,0,c
 14729   0068BA  EF60  F034         	goto	l960
 14730   0068BE                     l11766:
 14731   0068BE  80D8               	bsf	status,0,c
 14732   0068C0                     l960:
 14733   0068C0  0012               	return		;funcret
 14734   0068C2                     __end_of___flge:
 14735                           	callstack 0
 14736                           
 14737 ;; *************** function _Division_operation *****************
 14738 ;; Defined at:
 14739 ;;		line 174 in file "calculator_function/calculator_functions.c"
 14740 ;; Parameters:    Size  Location     Type
 14741 ;;  num1_val        4   90[COMRAM] float 
 14742 ;;  num2_val        4   94[COMRAM] float 
 14743 ;;  result          1   98[COMRAM] PTR float 
 14744 ;;		 -> total_result(4), result(4), 
 14745 ;; Auto vars:     Size  Location     Type
 14746 ;;		None
 14747 ;; Return value:  Size  Location     Type
 14748 ;;                  1    wreg      void 
 14749 ;; Registers used:
 14750 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14751 ;; Tracked objects:
 14752 ;;		On entry : 0/0
 14753 ;;		On exit  : 0/0
 14754 ;;		Unchanged: 0/0
 14755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14756 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14759 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14760 ;;Total ram usage:        9 bytes
 14761 ;; Hardware stack levels used: 1
 14762 ;; Hardware stack levels required when called: 1
 14763 ;; This function calls:
 14764 ;;		___fldiv
 14765 ;; This function is called by:
 14766 ;;		_main
 14767 ;; This function uses a non-reentrant model
 14768 ;;
 14769                           
 14770                           	psect	text48
 14771   0077CA                     __ptext48:
 14772                           	callstack 0
 14773   0077CA                     _Division_operation:
 14774                           	callstack 29
 14775   0077CA                     
 14776                           ;calculator_function/calculator_functions.c: 175: *result = num1_val/num2_val;
 14777   0077CA  C05B  F042         	movff	Division_operation@num1_val,___fldiv@b
 14778   0077CE  C05C  F043         	movff	Division_operation@num1_val+1,___fldiv@b+1
 14779   0077D2  C05D  F044         	movff	Division_operation@num1_val+2,___fldiv@b+2
 14780   0077D6  C05E  F045         	movff	Division_operation@num1_val+3,___fldiv@b+3
 14781   0077DA  C05F  F046         	movff	Division_operation@num2_val,___fldiv@a
 14782   0077DE  C060  F047         	movff	Division_operation@num2_val+1,___fldiv@a+1
 14783   0077E2  C061  F048         	movff	Division_operation@num2_val+2,___fldiv@a+2
 14784   0077E6  C062  F049         	movff	Division_operation@num2_val+3,___fldiv@a+3
 14785   0077EA  EC24  F028         	call	___fldiv	;wreg free
 14786   0077EE  5063               	movf	Division_operation@result^0,w,c
 14787   0077F0  6ED9               	movwf	fsr2l,c
 14788   0077F2  6ADA               	clrf	fsr2h,c
 14789   0077F4  C042  FFDE         	movff	?___fldiv,postinc2
 14790   0077F8  C043  FFDE         	movff	?___fldiv+1,postinc2
 14791   0077FC  C044  FFDE         	movff	?___fldiv+2,postinc2
 14792   007800  C045  FFDE         	movff	?___fldiv+3,postinc2
 14793   007804  0012               	return		;funcret
 14794   007806                     __end_of_Division_operation:
 14795                           	callstack 0
 14796                           
 14797 ;; *************** function ___fldiv *****************
 14798 ;; Defined at:
 14799 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 14800 ;; Parameters:    Size  Location     Type
 14801 ;;  b               4   65[COMRAM] void 
 14802 ;;  a               4   69[COMRAM] void 
 14803 ;; Auto vars:     Size  Location     Type
 14804 ;;  grs             4   84[COMRAM] unsigned long 
 14805 ;;  rem             4   77[COMRAM] unsigned long 
 14806 ;;  new_exp         2   82[COMRAM] short 
 14807 ;;  aexp            1   89[COMRAM] unsigned char 
 14808 ;;  bexp            1   88[COMRAM] unsigned char 
 14809 ;;  sign            1   81[COMRAM] unsigned char 
 14810 ;; Return value:  Size  Location     Type
 14811 ;;                  4   65[COMRAM] unsigned char 
 14812 ;; Registers used:
 14813 ;;		wreg, status,2, status,0
 14814 ;; Tracked objects:
 14815 ;;		On entry : 0/0
 14816 ;;		On exit  : 0/0
 14817 ;;		Unchanged: 0/0
 14818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14819 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14820 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14821 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14822 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14823 ;;Total ram usage:       25 bytes
 14824 ;; Hardware stack levels used: 1
 14825 ;; This function calls:
 14826 ;;		Nothing
 14827 ;; This function is called by:
 14828 ;;		_Division_operation
 14829 ;;		_efgtoa
 14830 ;;		_powf
 14831 ;; This function uses a non-reentrant model
 14832 ;;
 14833                           
 14834                           	psect	text49
 14835   005048                     __ptext49:
 14836                           	callstack 0
 14837   005048                     ___fldiv:
 14838                           	callstack 24
 14839   005048  5045               	movf	(___fldiv@b+3)^0,w,c
 14840   00504A  0B80               	andlw	128
 14841   00504C  6E52               	movwf	___fldiv@sign^0,c
 14842   00504E  5045               	movf	(___fldiv@b+3)^0,w,c
 14843   005050  2445               	addwf	(___fldiv@b+3)^0,w,c
 14844   005052  6E59               	movwf	___fldiv@bexp^0,c
 14845   005054  AE44               	btfss	(___fldiv@b+2)^0,7,c
 14846   005056  EF2F  F028         	goto	u11551
 14847   00505A  EF31  F028         	goto	u11550
 14848   00505E                     u11551:
 14849   00505E  EF32  F028         	goto	l11480
 14850   005062                     u11550:
 14851   005062  8059               	bsf	___fldiv@bexp^0,0,c
 14852   005064                     l11480:
 14853   005064  5059               	movf	___fldiv@bexp^0,w,c
 14854   005066  B4D8               	btfsc	status,2,c
 14855   005068  EF38  F028         	goto	u11561
 14856   00506C  EF3A  F028         	goto	u11560
 14857   005070                     u11561:
 14858   005070  EF4F  F028         	goto	l11490
 14859   005074                     u11560:
 14860   005074  2859               	incf	___fldiv@bexp^0,w,c
 14861   005076  A4D8               	btfss	status,2,c
 14862   005078  EF40  F028         	goto	u11571
 14863   00507C  EF42  F028         	goto	u11570
 14864   005080                     u11571:
 14865   005080  EF4A  F028         	goto	l11486
 14866   005084                     u11570:
 14867   005084  0E00               	movlw	0
 14868   005086  6E42               	movwf	___fldiv@b^0,c
 14869   005088  0E00               	movlw	0
 14870   00508A  6E43               	movwf	(___fldiv@b+1)^0,c
 14871   00508C  0E00               	movlw	0
 14872   00508E  6E44               	movwf	(___fldiv@b+2)^0,c
 14873   005090  0E00               	movlw	0
 14874   005092  6E45               	movwf	(___fldiv@b+3)^0,c
 14875   005094                     l11486:
 14876   005094  8E44               	bsf	(___fldiv@b+2)^0,7,c
 14877   005096  0E00               	movlw	0
 14878   005098  6E45               	movwf	(___fldiv@b+3)^0,c
 14879   00509A  EF57  F028         	goto	l11492
 14880   00509E                     l11490:
 14881   00509E  0E00               	movlw	0
 14882   0050A0  6E42               	movwf	___fldiv@b^0,c
 14883   0050A2  0E00               	movlw	0
 14884   0050A4  6E43               	movwf	(___fldiv@b+1)^0,c
 14885   0050A6  0E00               	movlw	0
 14886   0050A8  6E44               	movwf	(___fldiv@b+2)^0,c
 14887   0050AA  0E00               	movlw	0
 14888   0050AC  6E45               	movwf	(___fldiv@b+3)^0,c
 14889   0050AE                     l11492:
 14890   0050AE  5049               	movf	(___fldiv@a+3)^0,w,c
 14891   0050B0  0B80               	andlw	128
 14892   0050B2  1A52               	xorwf	___fldiv@sign^0,f,c
 14893   0050B4  5049               	movf	(___fldiv@a+3)^0,w,c
 14894   0050B6  2449               	addwf	(___fldiv@a+3)^0,w,c
 14895   0050B8  6E5A               	movwf	___fldiv@aexp^0,c
 14896   0050BA  AE48               	btfss	(___fldiv@a+2)^0,7,c
 14897   0050BC  EF62  F028         	goto	u11581
 14898   0050C0  EF64  F028         	goto	u11580
 14899   0050C4                     u11581:
 14900   0050C4  EF65  F028         	goto	l11500
 14901   0050C8                     u11580:
 14902   0050C8  805A               	bsf	___fldiv@aexp^0,0,c
 14903   0050CA                     l11500:
 14904   0050CA  505A               	movf	___fldiv@aexp^0,w,c
 14905   0050CC  B4D8               	btfsc	status,2,c
 14906   0050CE  EF6B  F028         	goto	u11591
 14907   0050D2  EF6D  F028         	goto	u11590
 14908   0050D6                     u11591:
 14909   0050D6  EF82  F028         	goto	l11510
 14910   0050DA                     u11590:
 14911   0050DA  285A               	incf	___fldiv@aexp^0,w,c
 14912   0050DC  A4D8               	btfss	status,2,c
 14913   0050DE  EF73  F028         	goto	u11601
 14914   0050E2  EF75  F028         	goto	u11600
 14915   0050E6                     u11601:
 14916   0050E6  EF7D  F028         	goto	l11506
 14917   0050EA                     u11600:
 14918   0050EA  0E00               	movlw	0
 14919   0050EC  6E46               	movwf	___fldiv@a^0,c
 14920   0050EE  0E00               	movlw	0
 14921   0050F0  6E47               	movwf	(___fldiv@a+1)^0,c
 14922   0050F2  0E00               	movlw	0
 14923   0050F4  6E48               	movwf	(___fldiv@a+2)^0,c
 14924   0050F6  0E00               	movlw	0
 14925   0050F8  6E49               	movwf	(___fldiv@a+3)^0,c
 14926   0050FA                     l11506:
 14927   0050FA  8E48               	bsf	(___fldiv@a+2)^0,7,c
 14928   0050FC  0E00               	movlw	0
 14929   0050FE  6E49               	movwf	(___fldiv@a+3)^0,c
 14930   005100  EF8A  F028         	goto	l11512
 14931   005104                     l11510:
 14932   005104  0E00               	movlw	0
 14933   005106  6E46               	movwf	___fldiv@a^0,c
 14934   005108  0E00               	movlw	0
 14935   00510A  6E47               	movwf	(___fldiv@a+1)^0,c
 14936   00510C  0E00               	movlw	0
 14937   00510E  6E48               	movwf	(___fldiv@a+2)^0,c
 14938   005110  0E00               	movlw	0
 14939   005112  6E49               	movwf	(___fldiv@a+3)^0,c
 14940   005114                     l11512:
 14941   005114  5046               	movf	___fldiv@a^0,w,c
 14942   005116  1047               	iorwf	(___fldiv@a+1)^0,w,c
 14943   005118  1048               	iorwf	(___fldiv@a+2)^0,w,c
 14944   00511A  1049               	iorwf	(___fldiv@a+3)^0,w,c
 14945   00511C  A4D8               	btfss	status,2,c
 14946   00511E  EF93  F028         	goto	u11611
 14947   005122  EF95  F028         	goto	u11610
 14948   005126                     u11611:
 14949   005126  EFAD  F028         	goto	l11524
 14950   00512A                     u11610:
 14951   00512A  0E00               	movlw	0
 14952   00512C  6E42               	movwf	___fldiv@b^0,c
 14953   00512E  0E00               	movlw	0
 14954   005130  6E43               	movwf	(___fldiv@b+1)^0,c
 14955   005132  0E00               	movlw	0
 14956   005134  6E44               	movwf	(___fldiv@b+2)^0,c
 14957   005136  0E00               	movlw	0
 14958   005138  6E45               	movwf	(___fldiv@b+3)^0,c
 14959   00513A  0E80               	movlw	128
 14960   00513C  1244               	iorwf	(___fldiv@b+2)^0,f,c
 14961   00513E  0E7F               	movlw	127
 14962   005140  1245               	iorwf	(___fldiv@b+3)^0,f,c
 14963   005142                     l11518:
 14964   005142  5052               	movf	___fldiv@sign^0,w,c
 14965   005144  1245               	iorwf	(___fldiv@b+3)^0,f,c
 14966   005146  C042  F042         	movff	___fldiv@b,?___fldiv
 14967   00514A  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
 14968   00514E  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
 14969   005152  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
 14970   005156  EFF0  F029         	goto	l1272
 14971   00515A                     l11524:
 14972   00515A  5059               	movf	___fldiv@bexp^0,w,c
 14973   00515C  A4D8               	btfss	status,2,c
 14974   00515E  EFB3  F028         	goto	u11621
 14975   005162  EFB5  F028         	goto	u11620
 14976   005166                     u11621:
 14977   005166  EFBF  F028         	goto	l11532
 14978   00516A                     u11620:
 14979   00516A  0E00               	movlw	0
 14980   00516C  6E42               	movwf	?___fldiv^0,c
 14981   00516E  0E00               	movlw	0
 14982   005170  6E43               	movwf	(?___fldiv+1)^0,c
 14983   005172  0E00               	movlw	0
 14984   005174  6E44               	movwf	(?___fldiv+2)^0,c
 14985   005176  0E00               	movlw	0
 14986   005178  6E45               	movwf	(?___fldiv+3)^0,c
 14987   00517A  EFF0  F029         	goto	l1272
 14988   00517E                     l11532:
 14989   00517E  505A               	movf	___fldiv@aexp^0,w,c
 14990   005180  C059  F04A         	movff	___fldiv@bexp,??___fldiv
 14991   005184  6A4B               	clrf	(??___fldiv+1)^0,c
 14992   005186  5E4A               	subwf	??___fldiv^0,f,c
 14993   005188  0E00               	movlw	0
 14994   00518A  5A4B               	subwfb	(??___fldiv+1)^0,f,c
 14995   00518C  0E7F               	movlw	127
 14996   00518E  244A               	addwf	??___fldiv^0,w,c
 14997   005190  6E53               	movwf	___fldiv@new_exp^0,c
 14998   005192  0E00               	movlw	0
 14999   005194  204B               	addwfc	(??___fldiv+1)^0,w,c
 15000   005196  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15001   005198  C042  F04E         	movff	___fldiv@b,___fldiv@rem
 15002   00519C  C043  F04F         	movff	___fldiv@b+1,___fldiv@rem+1
 15003   0051A0  C044  F050         	movff	___fldiv@b+2,___fldiv@rem+2
 15004   0051A4  C045  F051         	movff	___fldiv@b+3,___fldiv@rem+3
 15005   0051A8  0E00               	movlw	0
 15006   0051AA  6E42               	movwf	___fldiv@b^0,c
 15007   0051AC  0E00               	movlw	0
 15008   0051AE  6E43               	movwf	(___fldiv@b+1)^0,c
 15009   0051B0  0E00               	movlw	0
 15010   0051B2  6E44               	movwf	(___fldiv@b+2)^0,c
 15011   0051B4  0E00               	movlw	0
 15012   0051B6  6E45               	movwf	(___fldiv@b+3)^0,c
 15013   0051B8  0E00               	movlw	0
 15014   0051BA  6E55               	movwf	___fldiv@grs^0,c
 15015   0051BC  0E00               	movlw	0
 15016   0051BE  6E56               	movwf	(___fldiv@grs+1)^0,c
 15017   0051C0  0E00               	movlw	0
 15018   0051C2  6E57               	movwf	(___fldiv@grs+2)^0,c
 15019   0051C4  0E00               	movlw	0
 15020   0051C6  6E58               	movwf	(___fldiv@grs+3)^0,c
 15021   0051C8  0E00               	movlw	0
 15022   0051CA  6E5A               	movwf	___fldiv@aexp^0,c
 15023   0051CC  EF20  F029         	goto	l1274
 15024   0051D0                     l11542:
 15025   0051D0  505A               	movf	___fldiv@aexp^0,w,c
 15026   0051D2  B4D8               	btfsc	status,2,c
 15027   0051D4  EFEE  F028         	goto	u11631
 15028   0051D8  EFF0  F028         	goto	u11630
 15029   0051DC                     u11631:
 15030   0051DC  EF07  F029         	goto	l11550
 15031   0051E0                     u11630:
 15032   0051E0  90D8               	bcf	status,0,c
 15033   0051E2  364E               	rlcf	___fldiv@rem^0,f,c
 15034   0051E4  364F               	rlcf	(___fldiv@rem+1)^0,f,c
 15035   0051E6  3650               	rlcf	(___fldiv@rem+2)^0,f,c
 15036   0051E8  3651               	rlcf	(___fldiv@rem+3)^0,f,c
 15037   0051EA  90D8               	bcf	status,0,c
 15038   0051EC  3642               	rlcf	___fldiv@b^0,f,c
 15039   0051EE  3643               	rlcf	(___fldiv@b+1)^0,f,c
 15040   0051F0  3644               	rlcf	(___fldiv@b+2)^0,f,c
 15041   0051F2  3645               	rlcf	(___fldiv@b+3)^0,f,c
 15042   0051F4  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15043   0051F6  EFFF  F028         	goto	u11641
 15044   0051FA  EF01  F029         	goto	u11640
 15045   0051FE                     u11641:
 15046   0051FE  EF02  F029         	goto	l1277
 15047   005202                     u11640:
 15048   005202  8042               	bsf	___fldiv@b^0,0,c
 15049   005204                     l1277:
 15050   005204  90D8               	bcf	status,0,c
 15051   005206  3655               	rlcf	___fldiv@grs^0,f,c
 15052   005208  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 15053   00520A  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 15054   00520C  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 15055   00520E                     l11550:
 15056   00520E  5046               	movf	___fldiv@a^0,w,c
 15057   005210  5C4E               	subwf	___fldiv@rem^0,w,c
 15058   005212  5047               	movf	(___fldiv@a+1)^0,w,c
 15059   005214  584F               	subwfb	(___fldiv@rem+1)^0,w,c
 15060   005216  5048               	movf	(___fldiv@a+2)^0,w,c
 15061   005218  5850               	subwfb	(___fldiv@rem+2)^0,w,c
 15062   00521A  5049               	movf	(___fldiv@a+3)^0,w,c
 15063   00521C  5851               	subwfb	(___fldiv@rem+3)^0,w,c
 15064   00521E  A0D8               	btfss	status,0,c
 15065   005220  EF14  F029         	goto	u11651
 15066   005224  EF16  F029         	goto	u11650
 15067   005228                     u11651:
 15068   005228  EF1F  F029         	goto	l11556
 15069   00522C                     u11650:
 15070   00522C  8C58               	bsf	(___fldiv@grs+3)^0,6,c
 15071   00522E  5046               	movf	___fldiv@a^0,w,c
 15072   005230  5E4E               	subwf	___fldiv@rem^0,f,c
 15073   005232  5047               	movf	(___fldiv@a+1)^0,w,c
 15074   005234  5A4F               	subwfb	(___fldiv@rem+1)^0,f,c
 15075   005236  5048               	movf	(___fldiv@a+2)^0,w,c
 15076   005238  5A50               	subwfb	(___fldiv@rem+2)^0,f,c
 15077   00523A  5049               	movf	(___fldiv@a+3)^0,w,c
 15078   00523C  5A51               	subwfb	(___fldiv@rem+3)^0,f,c
 15079   00523E                     l11556:
 15080   00523E  2A5A               	incf	___fldiv@aexp^0,f,c
 15081   005240                     l1274:
 15082   005240  0E19               	movlw	25
 15083   005242  645A               	cpfsgt	___fldiv@aexp^0,c
 15084   005244  EF26  F029         	goto	u11661
 15085   005248  EF28  F029         	goto	u11660
 15086   00524C                     u11661:
 15087   00524C  EFE8  F028         	goto	l11542
 15088   005250                     u11660:
 15089   005250  504E               	movf	___fldiv@rem^0,w,c
 15090   005252  104F               	iorwf	(___fldiv@rem+1)^0,w,c
 15091   005254  1050               	iorwf	(___fldiv@rem+2)^0,w,c
 15092   005256  1051               	iorwf	(___fldiv@rem+3)^0,w,c
 15093   005258  B4D8               	btfsc	status,2,c
 15094   00525A  EF31  F029         	goto	u11671
 15095   00525E  EF33  F029         	goto	u11670
 15096   005262                     u11671:
 15097   005262  EF4B  F029         	goto	l11568
 15098   005266                     u11670:
 15099   005266  8055               	bsf	___fldiv@grs^0,0,c
 15100   005268  EF4B  F029         	goto	l11568
 15101   00526C                     l11562:
 15102   00526C  90D8               	bcf	status,0,c
 15103   00526E  3642               	rlcf	___fldiv@b^0,f,c
 15104   005270  3643               	rlcf	(___fldiv@b+1)^0,f,c
 15105   005272  3644               	rlcf	(___fldiv@b+2)^0,f,c
 15106   005274  3645               	rlcf	(___fldiv@b+3)^0,f,c
 15107   005276  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15108   005278  EF40  F029         	goto	u11681
 15109   00527C  EF42  F029         	goto	u11680
 15110   005280                     u11681:
 15111   005280  EF43  F029         	goto	l1283
 15112   005284                     u11680:
 15113   005284  8042               	bsf	___fldiv@b^0,0,c
 15114   005286                     l1283:
 15115   005286  90D8               	bcf	status,0,c
 15116   005288  3655               	rlcf	___fldiv@grs^0,f,c
 15117   00528A  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 15118   00528C  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 15119   00528E  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 15120   005290  0653               	decf	___fldiv@new_exp^0,f,c
 15121   005292  A0D8               	btfss	status,0,c
 15122   005294  0654               	decf	(___fldiv@new_exp+1)^0,f,c
 15123   005296                     l11568:
 15124   005296  AE44               	btfss	(___fldiv@b+2)^0,7,c
 15125   005298  EF50  F029         	goto	u11691
 15126   00529C  EF52  F029         	goto	u11690
 15127   0052A0                     u11691:
 15128   0052A0  EF36  F029         	goto	l11562
 15129   0052A4                     u11690:
 15130   0052A4  0E00               	movlw	0
 15131   0052A6  6E5A               	movwf	___fldiv@aexp^0,c
 15132   0052A8  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15133   0052AA  EF59  F029         	goto	u11701
 15134   0052AE  EF5B  F029         	goto	u11700
 15135   0052B2                     u11701:
 15136   0052B2  EF7F  F029         	goto	l1285
 15137   0052B6                     u11700:
 15138   0052B6  0EFF               	movlw	255
 15139   0052B8  1455               	andwf	___fldiv@grs^0,w,c
 15140   0052BA  6E4A               	movwf	??___fldiv^0,c
 15141   0052BC  0EFF               	movlw	255
 15142   0052BE  1456               	andwf	(___fldiv@grs+1)^0,w,c
 15143   0052C0  6E4B               	movwf	(??___fldiv+1)^0,c
 15144   0052C2  0EFF               	movlw	255
 15145   0052C4  1457               	andwf	(___fldiv@grs+2)^0,w,c
 15146   0052C6  6E4C               	movwf	(??___fldiv+2)^0,c
 15147   0052C8  0E7F               	movlw	127
 15148   0052CA  1458               	andwf	(___fldiv@grs+3)^0,w,c
 15149   0052CC  6E4D               	movwf	(??___fldiv+3)^0,c
 15150   0052CE  504A               	movf	??___fldiv^0,w,c
 15151   0052D0  104B               	iorwf	(??___fldiv+1)^0,w,c
 15152   0052D2  104C               	iorwf	(??___fldiv+2)^0,w,c
 15153   0052D4  104D               	iorwf	(??___fldiv+3)^0,w,c
 15154   0052D6  B4D8               	btfsc	status,2,c
 15155   0052D8  EF70  F029         	goto	u11711
 15156   0052DC  EF72  F029         	goto	u11710
 15157   0052E0                     u11711:
 15158   0052E0  EF76  F029         	goto	l1286
 15159   0052E4                     u11710:
 15160   0052E4                     l11576:
 15161   0052E4  0E01               	movlw	1
 15162   0052E6  6E5A               	movwf	___fldiv@aexp^0,c
 15163   0052E8  EF7F  F029         	goto	l1285
 15164   0052EC                     l1286:
 15165   0052EC  A042               	btfss	___fldiv@b^0,0,c
 15166   0052EE  EF7B  F029         	goto	u11721
 15167   0052F2  EF7D  F029         	goto	u11720
 15168   0052F6                     u11721:
 15169   0052F6  EF7F  F029         	goto	l1285
 15170   0052FA                     u11720:
 15171   0052FA  EF72  F029         	goto	l11576
 15172   0052FE                     l1285:
 15173   0052FE  505A               	movf	___fldiv@aexp^0,w,c
 15174   005300  B4D8               	btfsc	status,2,c
 15175   005302  EF85  F029         	goto	u11731
 15176   005306  EF87  F029         	goto	u11730
 15177   00530A                     u11731:
 15178   00530A  EFAB  F029         	goto	l11588
 15179   00530E                     u11730:
 15180   00530E  0E01               	movlw	1
 15181   005310  2642               	addwf	___fldiv@b^0,f,c
 15182   005312  0E00               	movlw	0
 15183   005314  2243               	addwfc	(___fldiv@b+1)^0,f,c
 15184   005316  2244               	addwfc	(___fldiv@b+2)^0,f,c
 15185   005318  2245               	addwfc	(___fldiv@b+3)^0,f,c
 15186   00531A  A045               	btfss	(___fldiv@b+3)^0,0,c
 15187   00531C  EF92  F029         	goto	u11741
 15188   005320  EF94  F029         	goto	u11740
 15189   005324                     u11741:
 15190   005324  EFAB  F029         	goto	l11588
 15191   005328                     u11740:
 15192   005328  C042  F04A         	movff	___fldiv@b,??___fldiv
 15193   00532C  C043  F04B         	movff	___fldiv@b+1,??___fldiv+1
 15194   005330  C044  F04C         	movff	___fldiv@b+2,??___fldiv+2
 15195   005334  C045  F04D         	movff	___fldiv@b+3,??___fldiv+3
 15196   005338  344D               	rlcf	(??___fldiv+3)^0,w,c
 15197   00533A  324D               	rrcf	(??___fldiv+3)^0,f,c
 15198   00533C  324C               	rrcf	(??___fldiv+2)^0,f,c
 15199   00533E  324B               	rrcf	(??___fldiv+1)^0,f,c
 15200   005340  324A               	rrcf	??___fldiv^0,f,c
 15201   005342  C04A  F042         	movff	??___fldiv,___fldiv@b
 15202   005346  C04B  F043         	movff	??___fldiv+1,___fldiv@b+1
 15203   00534A  C04C  F044         	movff	??___fldiv+2,___fldiv@b+2
 15204   00534E  C04D  F045         	movff	??___fldiv+3,___fldiv@b+3
 15205   005352  4A53               	infsnz	___fldiv@new_exp^0,f,c
 15206   005354  2A54               	incf	(___fldiv@new_exp+1)^0,f,c
 15207   005356                     l11588:
 15208   005356  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15209   005358  EFB6  F029         	goto	u11751
 15210   00535C  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 15211   00535E  E108               	bnz	u11750
 15212   005360  2853               	incf	___fldiv@new_exp^0,w,c
 15213   005362  A0D8               	btfss	status,0,c
 15214   005364  EFB6  F029         	goto	u11751
 15215   005368  EFB8  F029         	goto	u11750
 15216   00536C                     u11751:
 15217   00536C  EFC3  F029         	goto	l11592
 15218   005370                     u11750:
 15219   005370  0E00               	movlw	0
 15220   005372  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15221   005374  6853               	setf	___fldiv@new_exp^0,c
 15222   005376  0E00               	movlw	0
 15223   005378  6E42               	movwf	___fldiv@b^0,c
 15224   00537A  0E00               	movlw	0
 15225   00537C  6E43               	movwf	(___fldiv@b+1)^0,c
 15226   00537E  0E00               	movlw	0
 15227   005380  6E44               	movwf	(___fldiv@b+2)^0,c
 15228   005382  0E00               	movlw	0
 15229   005384  6E45               	movwf	(___fldiv@b+3)^0,c
 15230   005386                     l11592:
 15231   005386  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15232   005388  EFD0  F029         	goto	u11760
 15233   00538C  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 15234   00538E  E106               	bnz	u11761
 15235   005390  0453               	decf	___fldiv@new_exp^0,w,c
 15236   005392  B0D8               	btfsc	status,0,c
 15237   005394  EFCE  F029         	goto	u11761
 15238   005398  EFD0  F029         	goto	u11760
 15239   00539C                     u11761:
 15240   00539C  EFDE  F029         	goto	l11596
 15241   0053A0                     u11760:
 15242   0053A0  0E00               	movlw	0
 15243   0053A2  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15244   0053A4  0E00               	movlw	0
 15245   0053A6  6E53               	movwf	___fldiv@new_exp^0,c
 15246   0053A8  0E00               	movlw	0
 15247   0053AA  6E42               	movwf	___fldiv@b^0,c
 15248   0053AC  0E00               	movlw	0
 15249   0053AE  6E43               	movwf	(___fldiv@b+1)^0,c
 15250   0053B0  0E00               	movlw	0
 15251   0053B2  6E44               	movwf	(___fldiv@b+2)^0,c
 15252   0053B4  0E00               	movlw	0
 15253   0053B6  6E45               	movwf	(___fldiv@b+3)^0,c
 15254   0053B8  0E00               	movlw	0
 15255   0053BA  6E52               	movwf	___fldiv@sign^0,c
 15256   0053BC                     l11596:
 15257   0053BC  C053  F059         	movff	___fldiv@new_exp,___fldiv@bexp
 15258   0053C0  A059               	btfss	___fldiv@bexp^0,0,c
 15259   0053C2  EFE5  F029         	goto	u11771
 15260   0053C6  EFE7  F029         	goto	u11770
 15261   0053CA                     u11771:
 15262   0053CA  EFEA  F029         	goto	l11602
 15263   0053CE                     u11770:
 15264   0053CE  8E44               	bsf	(___fldiv@b+2)^0,7,c
 15265   0053D0  EFEB  F029         	goto	l11604
 15266   0053D4                     l11602:
 15267   0053D4  9E44               	bcf	(___fldiv@b+2)^0,7,c
 15268   0053D6                     l11604:
 15269   0053D6  90D8               	bcf	status,0,c
 15270   0053D8  3059               	rrcf	___fldiv@bexp^0,w,c
 15271   0053DA  6E45               	movwf	(___fldiv@b+3)^0,c
 15272   0053DC  EFA1  F028         	goto	l11518
 15273   0053E0                     l1272:
 15274   0053E0  0012               	return		;funcret
 15275   0053E2                     __end_of___fldiv:
 15276                           	callstack 0
 15277                           
 15278 ;; *************** function _Application_Initialization *****************
 15279 ;; Defined at:
 15280 ;;		line 93 in file "newmain.c"
 15281 ;; Parameters:    Size  Location     Type
 15282 ;;		None
 15283 ;; Auto vars:     Size  Location     Type
 15284 ;;		None
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  1    wreg      void 
 15287 ;; Registers used:
 15288 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15294 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15295 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15296 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15297 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15298 ;;Total ram usage:        0 bytes
 15299 ;; Hardware stack levels used: 1
 15300 ;; Hardware stack levels required when called: 5
 15301 ;; This function calls:
 15302 ;;		_ecu_layer_Initialization
 15303 ;; This function is called by:
 15304 ;;		_main
 15305 ;; This function uses a non-reentrant model
 15306 ;;
 15307                           
 15308                           	psect	text50
 15309   007998                     __ptext50:
 15310                           	callstack 0
 15311   007998                     _Application_Initialization:
 15312                           	callstack 25
 15313   007998                     
 15314                           ;newmain.c: 95: ecu_layer_Initialization();
 15315   007998  ECB5  F03C         	call	_ecu_layer_Initialization	;wreg free
 15316   00799C  0012               	return		;funcret
 15317   00799E                     __end_of_Application_Initialization:
 15318                           	callstack 0
 15319                           
 15320 ;; *************** function _ecu_layer_Initialization *****************
 15321 ;; Defined at:
 15322 ;;		line 79 in file "ECU_layer/ecu_layer_init.c"
 15323 ;; Parameters:    Size  Location     Type
 15324 ;;		None
 15325 ;; Auto vars:     Size  Location     Type
 15326 ;;		None
 15327 ;; Return value:  Size  Location     Type
 15328 ;;                  1    wreg      void 
 15329 ;; Registers used:
 15330 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15331 ;; Tracked objects:
 15332 ;;		On entry : 0/0
 15333 ;;		On exit  : 0/0
 15334 ;;		Unchanged: 0/0
 15335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15340 ;;Total ram usage:        0 bytes
 15341 ;; Hardware stack levels used: 1
 15342 ;; Hardware stack levels required when called: 4
 15343 ;; This function calls:
 15344 ;;		_ecu_keypad_initialize
 15345 ;;		_lcd_4bit_initialize
 15346 ;; This function is called by:
 15347 ;;		_Application_Initialization
 15348 ;; This function uses a non-reentrant model
 15349 ;;
 15350                           
 15351                           	psect	text51
 15352   00796A                     __ptext51:
 15353                           	callstack 0
 15354   00796A                     _ecu_layer_Initialization:
 15355                           	callstack 25
 15356   00796A                     
 15357                           ;ECU_layer/ecu_layer_init.c: 81:     lcd_4bit_initialize(&lcd1);
 15358   00796A  0EF9               	movlw	low _lcd1
 15359   00796C  6E12               	movwf	lcd_4bit_initialize@lcd^0,c
 15360   00796E  ECE0  F034         	call	_lcd_4bit_initialize	;wreg free
 15361                           
 15362                           ;ECU_layer/ecu_layer_init.c: 82:     ecu_keypad_initialize(&keypad);
 15363   007972  0ED6               	movlw	low _keypad
 15364   007974  6E0F               	movwf	ecu_keypad_initialize@keypad^0,c
 15365   007976  0E01               	movlw	high _keypad
 15366   007978  6E10               	movwf	(ecu_keypad_initialize@keypad+1)^0,c
 15367   00797A  EC51  F039         	call	_ecu_keypad_initialize	;wreg free
 15368   00797E  0012               	return		;funcret
 15369   007980                     __end_of_ecu_layer_Initialization:
 15370                           	callstack 0
 15371                           
 15372 ;; *************** function _lcd_4bit_initialize *****************
 15373 ;; Defined at:
 15374 ;;		line 25 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;  lcd             1   17[COMRAM] PTR const struct .
 15377 ;;		 -> lcd1(6), 
 15378 ;; Auto vars:     Size  Location     Type
 15379 ;;  ret             1   20[COMRAM] unsigned char 
 15380 ;;  counter         1   19[COMRAM] unsigned char 
 15381 ;; Return value:  Size  Location     Type
 15382 ;;                  1    wreg      unsigned char 
 15383 ;; Registers used:
 15384 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15385 ;; Tracked objects:
 15386 ;;		On entry : 0/0
 15387 ;;		On exit  : 0/0
 15388 ;;		Unchanged: 0/0
 15389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15390 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15392 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15393 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15394 ;;Total ram usage:        4 bytes
 15395 ;; Hardware stack levels used: 1
 15396 ;; Hardware stack levels required when called: 3
 15397 ;; This function calls:
 15398 ;;		_gpio_pin_initialize
 15399 ;;		_lcd_4bit_send_command
 15400 ;; This function is called by:
 15401 ;;		_ecu_layer_Initialization
 15402 ;; This function uses a non-reentrant model
 15403 ;;
 15404                           
 15405                           	psect	text52
 15406   0069C0                     __ptext52:
 15407                           	callstack 0
 15408   0069C0                     _lcd_4bit_initialize:
 15409                           	callstack 25
 15410   0069C0                     
 15411                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 27: uint8 counter = 0 ;
 15412   0069C0  0E00               	movlw	0
 15413   0069C2  6E14               	movwf	lcd_4bit_initialize@counter^0,c
 15414                           
 15415                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 28:     if(((void*)0) == lcd)
 15416   0069C4  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
 15417   0069C6  A4D8               	btfss	status,2,c
 15418   0069C8  EFE8  F034         	goto	u8521
 15419   0069CC  EFEA  F034         	goto	u8520
 15420   0069D0                     u8521:
 15421   0069D0  EFEC  F034         	goto	l8536
 15422   0069D4                     u8520:
 15423   0069D4                     
 15424                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 31:     }
 15425   0069D4  EF58  F035         	goto	l187
 15426   0069D8                     l8536:
 15427                           
 15428                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 33:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 34:        
      +                           ret = gpio_pin_initialize(&(lcd->rs));
 15429   0069D8  C012  F00B         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
 15430   0069DC  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15431   0069DE  EC89  F039         	call	_gpio_pin_initialize	;wreg free
 15432   0069E2  6E15               	movwf	lcd_4bit_initialize@ret^0,c
 15433                           
 15434                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 35:         ret = gpio_pin_initialize(&(lcd->en));
 15435   0069E4  C012  F013         	movff	lcd_4bit_initialize@lcd,??_lcd_4bit_initialize
 15436   0069E8  0E01               	movlw	1
 15437   0069EA  2613               	addwf	??_lcd_4bit_initialize^0,f,c
 15438   0069EC  C013  F00B         	movff	??_lcd_4bit_initialize,gpio_pin_initialize@_pin_config
 15439   0069F0  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15440   0069F2  EC89  F039         	call	_gpio_pin_initialize	;wreg free
 15441   0069F6  6E15               	movwf	lcd_4bit_initialize@ret^0,c
 15442   0069F8                     
 15443                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 36:         for(counter=0 ;counter < 4 ;counter++)
 15444   0069F8  0E00               	movlw	0
 15445   0069FA  6E14               	movwf	lcd_4bit_initialize@counter^0,c
 15446   0069FC                     l8544:
 15447   0069FC  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
 15448   0069FE  2414               	addwf	lcd_4bit_initialize@counter^0,w,c
 15449   006A00  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15450   006A02  0E02               	movlw	2
 15451   006A04  2613               	addwf	??_lcd_4bit_initialize^0,f,c
 15452   006A06  C013  F00B         	movff	??_lcd_4bit_initialize,gpio_pin_initialize@_pin_config
 15453   006A0A  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15454   006A0C  EC89  F039         	call	_gpio_pin_initialize	;wreg free
 15455   006A10                     
 15456                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 39:         }
 15457   006A10  2A14               	incf	lcd_4bit_initialize@counter^0,f,c
 15458   006A12  0E03               	movlw	3
 15459   006A14  6414               	cpfsgt	lcd_4bit_initialize@counter^0,c
 15460   006A16  EF0F  F035         	goto	u8531
 15461   006A1A  EF11  F035         	goto	u8530
 15462   006A1E                     u8531:
 15463   006A1E  EFFE  F034         	goto	l8544
 15464   006A22                     u8530:
 15465   006A22                     
 15466                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 40:          _delay((unsigned long)((20)*(8000000ul/40
      +                          00.0)));
 15467   006A22  0E34               	movlw	52
 15468   006A24  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15469   006A26  0EF2               	movlw	242
 15470   006A28                     u13527:
 15471   006A28  2EE8               	decfsz	wreg,f,c
 15472   006A2A  D7FE               	bra	u13527
 15473   006A2C  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
 15474   006A2E  D7FC               	bra	u13527
 15475   006A30  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15476   006A34  0E38               	movlw	56
 15477   006A36  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15478   006A38  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15479   006A3C                     
 15480                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 42:         _delay((unsigned long)((5)*(8000000ul/4000
      +                          .0)));
 15481   006A3C  0E0D               	movlw	13
 15482   006A3E  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15483   006A40  0EFC               	movlw	252
 15484   006A42                     u13537:
 15485   006A42  2EE8               	decfsz	wreg,f,c
 15486   006A44  D7FE               	bra	u13537
 15487   006A46  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
 15488   006A48  D7FC               	bra	u13537
 15489   006A4A  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15490   006A4E  0E38               	movlw	56
 15491   006A50  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15492   006A52  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15493   006A56                     
 15494                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 44:         _delay((unsigned long)((150)*(8000000ul/40
      +                          00000.0)));
 15495   006A56  0E64               	movlw	100
 15496   006A58                     u13547:
 15497   006A58  2EE8               	decfsz	wreg,f,c
 15498   006A5A  D7FE               	bra	u13547
 15499   006A5C  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15500   006A60  0E38               	movlw	56
 15501   006A62  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15502   006A64  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15503   006A68  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15504   006A6C  0E01               	movlw	1
 15505   006A6E  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15506   006A70  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15507   006A74  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15508   006A78  0E02               	movlw	2
 15509   006A7A  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15510   006A7C  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15511   006A80  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15512   006A84  0E06               	movlw	6
 15513   006A86  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15514   006A88  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15515   006A8C  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15516   006A90  0E0C               	movlw	12
 15517   006A92  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15518   006A94  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15519   006A98  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15520   006A9C  0E28               	movlw	40
 15521   006A9E  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15522   006AA0  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15523   006AA4  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15524   006AA8  0E80               	movlw	128
 15525   006AAA  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15526   006AAC  EC21  F03A         	call	_lcd_4bit_send_command	;wreg free
 15527   006AB0                     l187:
 15528   006AB0  0012               	return		;funcret
 15529   006AB2                     __end_of_lcd_4bit_initialize:
 15530                           	callstack 0
 15531                           
 15532 ;; *************** function _lcd_4bit_send_command *****************
 15533 ;; Defined at:
 15534 ;;		line 65 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15535 ;; Parameters:    Size  Location     Type
 15536 ;;  lcd             1   14[COMRAM] PTR const struct .
 15537 ;;		 -> lcd1(6), 
 15538 ;;  command         1   15[COMRAM] unsigned char 
 15539 ;; Auto vars:     Size  Location     Type
 15540 ;;  ret             1   16[COMRAM] unsigned char 
 15541 ;; Return value:  Size  Location     Type
 15542 ;;                  1    wreg      unsigned char 
 15543 ;; Registers used:
 15544 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15545 ;; Tracked objects:
 15546 ;;		On entry : 0/0
 15547 ;;		On exit  : 0/0
 15548 ;;		Unchanged: 0/0
 15549 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15550 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15551 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15552 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15553 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15554 ;;Total ram usage:        3 bytes
 15555 ;; Hardware stack levels used: 1
 15556 ;; Hardware stack levels required when called: 2
 15557 ;; This function calls:
 15558 ;;		_gpio_pin_write_logic
 15559 ;;		_lcd_4bit_send_enable_enable
 15560 ;;		_lcd_send_4bit
 15561 ;; This function is called by:
 15562 ;;		_send_the_result_to_LCD
 15563 ;;		_lcd_4bit_initialize
 15564 ;;		_lcd_4bit_set_curser
 15565 ;;		_main
 15566 ;;		_lcd_4bit_send_custome_char
 15567 ;; This function uses a non-reentrant model
 15568 ;;
 15569                           
 15570                           	psect	text53
 15571   007442                     __ptext53:
 15572                           	callstack 0
 15573   007442                     _lcd_4bit_send_command:
 15574                           	callstack 25
 15575   007442                     
 15576                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 68:     if(((void*)0) == lcd)
 15577   007442  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
 15578   007444  A4D8               	btfss	status,2,c
 15579   007446  EF27  F03A         	goto	u8501
 15580   00744A  EF29  F03A         	goto	u8500
 15581   00744E                     u8501:
 15582   00744E  EF2D  F03A         	goto	l8504
 15583   007452                     u8500:
 15584   007452                     
 15585                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 69:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 70:        
      +                           ret = (STD_ReturnType)0x00;
 15586   007452  0E00               	movlw	0
 15587   007454  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15588                           
 15589                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 71:     }
 15590   007456  EF4E  F03A         	goto	l8506
 15591   00745A                     l8504:
 15592                           
 15593                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 73:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 75:        
      +                           ret = gpio_pin_write_logic(&(lcd->rs),LOW);
 15594   00745A  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
 15595   00745E  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15596   007460  0E00               	movlw	0
 15597   007462  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15598   007464  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15599   007468  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15600                           
 15601                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 76:         ret = lcd_send_4bit(lcd,command >>4);
 15602   00746A  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
 15603   00746E  3810               	swapf	lcd_4bit_send_command@command^0,w,c
 15604   007470  0B0F               	andlw	15
 15605   007472  6E0C               	movwf	lcd_send_4bit@command_data^0,c
 15606   007474  EC19  F039         	call	_lcd_send_4bit	;wreg free
 15607   007478  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15608                           
 15609                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 77:         ret = lcd_4bit_send_enable_enable(lcd);
 15610   00747A  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_enable@lcd
 15611   00747E  EC20  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
 15612   007482  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15613                           
 15614                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 78:         ret = lcd_send_4bit(lcd,command);
 15615   007484  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
 15616   007488  C010  F00C         	movff	lcd_4bit_send_command@command,lcd_send_4bit@command_data
 15617   00748C  EC19  F039         	call	_lcd_send_4bit	;wreg free
 15618   007490  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15619                           
 15620                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 79:         ret = lcd_4bit_send_enable_enable(lcd);
 15621   007492  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_enable@lcd
 15622   007496  EC20  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
 15623   00749A  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15624   00749C                     l8506:
 15625                           
 15626                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 84:      return ret;
 15627   00749C  5011               	movf	lcd_4bit_send_command@ret^0,w,c
 15628   00749E  0012               	return		;funcret
 15629   0074A0                     __end_of_lcd_4bit_send_command:
 15630                           	callstack 0
 15631                           
 15632 ;; *************** function _lcd_send_4bit *****************
 15633 ;; Defined at:
 15634 ;;		line 493 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15635 ;; Parameters:    Size  Location     Type
 15636 ;;  lcd             1   10[COMRAM] PTR const struct .
 15637 ;;		 -> lcd1(6), 
 15638 ;;  command_data    1   11[COMRAM] unsigned char 
 15639 ;; Auto vars:     Size  Location     Type
 15640 ;;  ret             1   13[COMRAM] unsigned char 
 15641 ;; Return value:  Size  Location     Type
 15642 ;;                  1    wreg      unsigned char 
 15643 ;; Registers used:
 15644 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15645 ;; Tracked objects:
 15646 ;;		On entry : 0/0
 15647 ;;		On exit  : 0/0
 15648 ;;		Unchanged: 0/0
 15649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15650 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15651 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15652 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15653 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15654 ;;Total ram usage:        4 bytes
 15655 ;; Hardware stack levels used: 1
 15656 ;; Hardware stack levels required when called: 1
 15657 ;; This function calls:
 15658 ;;		_gpio_pin_write_logic
 15659 ;; This function is called by:
 15660 ;;		_lcd_4bit_send_command
 15661 ;;		_lcd_4bit_send_char_data
 15662 ;; This function uses a non-reentrant model
 15663 ;;
 15664                           
 15665                           	psect	text54
 15666   007232                     __ptext54:
 15667                           	callstack 0
 15668   007232                     _lcd_send_4bit:
 15669                           	callstack 25
 15670   007232  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15671   007236  0E02               	movlw	2
 15672   007238  260D               	addwf	??_lcd_send_4bit^0,f,c
 15673   00723A  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15674   00723E  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15675   007240  500C               	movf	lcd_send_4bit@command_data^0,w,c
 15676   007242  0B01               	andlw	1
 15677   007244  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15678   007246  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15679   00724A  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15680   00724E  0E03               	movlw	3
 15681   007250  260D               	addwf	??_lcd_send_4bit^0,f,c
 15682   007252  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15683   007256  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15684   007258  90D8               	bcf	status,0,c
 15685   00725A  300C               	rrcf	lcd_send_4bit@command_data^0,w,c
 15686   00725C  0B01               	andlw	1
 15687   00725E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15688   007260  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15689   007264  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15690   007268  0E04               	movlw	4
 15691   00726A  260D               	addwf	??_lcd_send_4bit^0,f,c
 15692   00726C  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15693   007270  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15694   007272  400C               	rrncf	lcd_send_4bit@command_data^0,w,c
 15695   007274  42E8               	rrncf	wreg,f,c
 15696   007276  0B3F               	andlw	63
 15697   007278  0B01               	andlw	1
 15698   00727A  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15699   00727C  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15700   007280                     
 15701                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 498: ret = gpio_pin_write_logic(&(lcd->data[3]),(comma
      +                          nd_data >> 3) & 0x01);
 15702   007280  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15703   007284  0E05               	movlw	5
 15704   007286  260D               	addwf	??_lcd_send_4bit^0,f,c
 15705   007288  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15706   00728C  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15707   00728E  380C               	swapf	lcd_send_4bit@command_data^0,w,c
 15708   007290  46E8               	rlncf	wreg,f,c
 15709   007292  0B1F               	andlw	31
 15710   007294  0B01               	andlw	1
 15711   007296  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15712   007298  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15713   00729C  6E0E               	movwf	lcd_send_4bit@ret^0,c
 15714                           
 15715                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 500: return ret;
 15716   00729E  500E               	movf	lcd_send_4bit@ret^0,w,c
 15717   0072A0  0012               	return		;funcret
 15718   0072A2                     __end_of_lcd_send_4bit:
 15719                           	callstack 0
 15720                           
 15721 ;; *************** function _lcd_4bit_send_enable_enable *****************
 15722 ;; Defined at:
 15723 ;;		line 509 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15724 ;; Parameters:    Size  Location     Type
 15725 ;;  lcd             1   10[COMRAM] PTR const struct .
 15726 ;;		 -> lcd1(6), 
 15727 ;; Auto vars:     Size  Location     Type
 15728 ;;  ret             1   12[COMRAM] unsigned char 
 15729 ;; Return value:  Size  Location     Type
 15730 ;;                  1    wreg      unsigned char 
 15731 ;; Registers used:
 15732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15733 ;; Tracked objects:
 15734 ;;		On entry : 0/0
 15735 ;;		On exit  : 0/0
 15736 ;;		Unchanged: 0/0
 15737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15738 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15739 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15740 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15741 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15742 ;;Total ram usage:        3 bytes
 15743 ;; Hardware stack levels used: 1
 15744 ;; Hardware stack levels required when called: 1
 15745 ;; This function calls:
 15746 ;;		_gpio_pin_write_logic
 15747 ;; This function is called by:
 15748 ;;		_lcd_4bit_send_command
 15749 ;;		_lcd_4bit_send_char_data
 15750 ;; This function uses a non-reentrant model
 15751 ;;
 15752                           
 15753                           	psect	text55
 15754   007840                     __ptext55:
 15755                           	callstack 0
 15756   007840                     _lcd_4bit_send_enable_enable:
 15757                           	callstack 25
 15758   007840  C00B  F00C         	movff	lcd_4bit_send_enable_enable@lcd,??_lcd_4bit_send_enable_enable
 15759   007844  0E01               	movlw	1
 15760   007846  260C               	addwf	??_lcd_4bit_send_enable_enable^0,f,c
 15761   007848  C00C  F001         	movff	??_lcd_4bit_send_enable_enable,gpio_pin_write_logic@_pin_config
 15762   00784C  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15763   00784E  0E01               	movlw	1
 15764   007850  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15765   007852  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15766   007856                     
 15767                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 512: _delay((unsigned long)((5)*(8000000ul/4000000.0))
      +                          );
 15768   007856  0E03               	movlw	3
 15769   007858                     u13557:
 15770   007858  2EE8               	decfsz	wreg,f,c
 15771   00785A  D7FE               	bra	u13557
 15772   00785C  0000               	nop	
 15773   00785E                     
 15774                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 513: ret = gpio_pin_write_logic(&(lcd->en),LOW);
 15775   00785E  C00B  F00C         	movff	lcd_4bit_send_enable_enable@lcd,??_lcd_4bit_send_enable_enable
 15776   007862  0E01               	movlw	1
 15777   007864  260C               	addwf	??_lcd_4bit_send_enable_enable^0,f,c
 15778   007866  C00C  F001         	movff	??_lcd_4bit_send_enable_enable,gpio_pin_write_logic@_pin_config
 15779   00786A  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15780   00786C  0E00               	movlw	0
 15781   00786E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15782   007870  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15783   007874  6E0D               	movwf	lcd_4bit_send_enable_enable@ret^0,c
 15784   007876                     
 15785                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 515: return ret;
 15786   007876  500D               	movf	lcd_4bit_send_enable_enable@ret^0,w,c
 15787   007878  0012               	return		;funcret
 15788   00787A                     __end_of_lcd_4bit_send_enable_enable:
 15789                           	callstack 0
 15790                           
 15791 ;; *************** function _ecu_keypad_initialize *****************
 15792 ;; Defined at:
 15793 ;;		line 25 in file "ECU_layer/Keypad/ecu_keypad.c"
 15794 ;; Parameters:    Size  Location     Type
 15795 ;;  keypad          2   14[COMRAM] PTR const struct .
 15796 ;;		 -> keypad(8), 
 15797 ;; Auto vars:     Size  Location     Type
 15798 ;;  columns         1   19[COMRAM] unsigned char 
 15799 ;;  rows            1   18[COMRAM] unsigned char 
 15800 ;;  ret             1    0        unsigned char 
 15801 ;; Return value:  Size  Location     Type
 15802 ;;                  1    wreg      unsigned char 
 15803 ;; Registers used:
 15804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15805 ;; Tracked objects:
 15806 ;;		On entry : 0/0
 15807 ;;		On exit  : 0/0
 15808 ;;		Unchanged: 0/0
 15809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15810 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15811 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15812 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15813 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15814 ;;Total ram usage:        6 bytes
 15815 ;; Hardware stack levels used: 1
 15816 ;; Hardware stack levels required when called: 2
 15817 ;; This function calls:
 15818 ;;		_gpio_pin_direction_initialize
 15819 ;;		_gpio_pin_initialize
 15820 ;; This function is called by:
 15821 ;;		_ecu_layer_Initialization
 15822 ;; This function uses a non-reentrant model
 15823 ;;
 15824                           
 15825                           	psect	text56
 15826   0072A2                     __ptext56:
 15827                           	callstack 0
 15828   0072A2                     _ecu_keypad_initialize:
 15829                           	callstack 26
 15830   0072A2                     
 15831                           ;ECU_layer/Keypad/ecu_keypad.c: 27: uint8 rows,columns;;ECU_layer/Keypad/ecu_keypad.c: 2
      +                          8:     if(((void*)0) == keypad)
 15832   0072A2  500F               	movf	ecu_keypad_initialize@keypad^0,w,c
 15833   0072A4  1010               	iorwf	(ecu_keypad_initialize@keypad+1)^0,w,c
 15834   0072A6  A4D8               	btfss	status,2,c
 15835   0072A8  EF58  F039         	goto	u6071
 15836   0072AC  EF5A  F039         	goto	u6070
 15837   0072B0                     u6071:
 15838   0072B0  EF5C  F039         	goto	l6226
 15839   0072B4                     u6070:
 15840   0072B4                     
 15841                           ;ECU_layer/Keypad/ecu_keypad.c: 31:     }
 15842   0072B4  EF88  F039         	goto	l363
 15843   0072B8                     l6226:
 15844                           
 15845                           ;ECU_layer/Keypad/ecu_keypad.c: 33:     {;ECU_layer/Keypad/ecu_keypad.c: 34:         for
      +                          (rows = 0;rows < 4 ;rows++)
 15846   0072B8  0E00               	movlw	0
 15847   0072BA  6E13               	movwf	ecu_keypad_initialize@rows^0,c
 15848   0072BC                     l6232:
 15849                           
 15850                           ;ECU_layer/Keypad/ecu_keypad.c: 35:         {;ECU_layer/Keypad/ecu_keypad.c: 36:        
      +                               gpio_pin_initialize(&(keypad->keypad_rows_pins[rows]));
 15851   0072BC  5013               	movf	ecu_keypad_initialize@rows^0,w,c
 15852   0072BE  240F               	addwf	ecu_keypad_initialize@keypad^0,w,c
 15853   0072C0  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
 15854   0072C2  0E00               	movlw	0
 15855   0072C4  2010               	addwfc	(ecu_keypad_initialize@keypad+1)^0,w,c
 15856   0072C6  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
 15857   0072C8  EC89  F039         	call	_gpio_pin_initialize	;wreg free
 15858   0072CC                     
 15859                           ;ECU_layer/Keypad/ecu_keypad.c: 38:         }
 15860   0072CC  2A13               	incf	ecu_keypad_initialize@rows^0,f,c
 15861   0072CE  0E03               	movlw	3
 15862   0072D0  6413               	cpfsgt	ecu_keypad_initialize@rows^0,c
 15863   0072D2  EF6D  F039         	goto	u6081
 15864   0072D6  EF6F  F039         	goto	u6080
 15865   0072DA                     u6081:
 15866   0072DA  EF5E  F039         	goto	l6232
 15867   0072DE                     u6080:
 15868   0072DE                     
 15869                           ;ECU_layer/Keypad/ecu_keypad.c: 39:         for(columns = 0;columns < 4 ;columns++){
 15870   0072DE  0E00               	movlw	0
 15871   0072E0  6E14               	movwf	ecu_keypad_initialize@columns^0,c
 15872   0072E2                     l6244:
 15873                           
 15874                           ;ECU_layer/Keypad/ecu_keypad.c: 40:                 gpio_pin_direction_initialize(&(keyp
      +                          ad->keypad_columns_pins[columns]));
 15875   0072E2  5014               	movf	ecu_keypad_initialize@columns^0,w,c
 15876   0072E4  240F               	addwf	ecu_keypad_initialize@keypad^0,w,c
 15877   0072E6  6E11               	movwf	??_ecu_keypad_initialize^0,c
 15878   0072E8  0E00               	movlw	0
 15879   0072EA  2010               	addwfc	(ecu_keypad_initialize@keypad+1)^0,w,c
 15880   0072EC  6E12               	movwf	(??_ecu_keypad_initialize+1)^0,c
 15881   0072EE  0E04               	movlw	4
 15882   0072F0  2411               	addwf	??_ecu_keypad_initialize^0,w,c
 15883   0072F2  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
 15884   0072F4  0E00               	movlw	0
 15885   0072F6  2012               	addwfc	(??_ecu_keypad_initialize+1)^0,w,c
 15886   0072F8  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
 15887   0072FA  EC08  F031         	call	_gpio_pin_direction_initialize	;wreg free
 15888   0072FE                     
 15889                           ;ECU_layer/Keypad/ecu_keypad.c: 41:             }
 15890   0072FE  2A14               	incf	ecu_keypad_initialize@columns^0,f,c
 15891   007300  0E03               	movlw	3
 15892   007302  6414               	cpfsgt	ecu_keypad_initialize@columns^0,c
 15893   007304  EF86  F039         	goto	u6091
 15894   007308  EF88  F039         	goto	u6090
 15895   00730C                     u6091:
 15896   00730C  EF71  F039         	goto	l6244
 15897   007310                     u6090:
 15898   007310                     l363:
 15899   007310  0012               	return		;funcret
 15900   007312                     __end_of_ecu_keypad_initialize:
 15901                           	callstack 0
 15902                           
 15903 ;; *************** function _gpio_pin_initialize *****************
 15904 ;; Defined at:
 15905 ;;		line 164 in file "MCAL_layer/GPIO/hal_gpio.c"
 15906 ;; Parameters:    Size  Location     Type
 15907 ;;  _pin_config     2   10[COMRAM] PTR const struct .
 15908 ;;		 -> keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_initialize@relay_pin(1), ecu_led_initialize@led_pin(1), 
 15909 ;;		 -> lcd1(6), keypad(8), 
 15910 ;; Auto vars:     Size  Location     Type
 15911 ;;  ret             1   13[COMRAM] unsigned char 
 15912 ;; Return value:  Size  Location     Type
 15913 ;;                  1    wreg      unsigned char 
 15914 ;; Registers used:
 15915 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15916 ;; Tracked objects:
 15917 ;;		On entry : 0/0
 15918 ;;		On exit  : 0/0
 15919 ;;		Unchanged: 0/0
 15920 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15921 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15922 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15923 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15924 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15925 ;;Total ram usage:        4 bytes
 15926 ;; Hardware stack levels used: 1
 15927 ;; Hardware stack levels required when called: 1
 15928 ;; This function calls:
 15929 ;;		_gpio_pin_direction_initialize
 15930 ;;		_gpio_pin_write_logic
 15931 ;; This function is called by:
 15932 ;;		_lcd_4bit_initialize
 15933 ;;		_ecu_keypad_initialize
 15934 ;;		_ecu_seven_segment_initialize
 15935 ;;		_lcd_8bit_initialize
 15936 ;;		_ecu_dc_motor_initialize
 15937 ;;		_ecu_led_initialize
 15938 ;;		_ecu_relay_initialize
 15939 ;; This function uses a non-reentrant model
 15940 ;;
 15941                           
 15942                           	psect	text57
 15943   007312                     __ptext57:
 15944                           	callstack 0
 15945   007312                     _gpio_pin_initialize:
 15946                           	callstack 26
 15947   007312                     
 15948                           ;MCAL_layer/GPIO/hal_gpio.c: 167:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
 15949   007312  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
 15950   007314  100C               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
 15951   007316  B4D8               	btfsc	status,2,c
 15952   007318  EF90  F039         	goto	u5961
 15953   00731C  EF92  F039         	goto	u5960
 15954   007320                     u5961:
 15955   007320  EFA3  F039         	goto	l6094
 15956   007324                     u5960:
 15957   007324  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
 15958   007328  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
 15959   00732C  30DF               	rrcf	223,w,c
 15960   00732E  32E8               	rrcf	wreg,f,c
 15961   007330  32E8               	rrcf	wreg,f,c
 15962   007332  0B07               	andlw	7
 15963   007334  6E0D               	movwf	??_gpio_pin_initialize^0,c
 15964   007336  0E07               	movlw	7
 15965   007338  640D               	cpfsgt	??_gpio_pin_initialize^0,c
 15966   00733A  EFA1  F039         	goto	u5971
 15967   00733E  EFA3  F039         	goto	u5970
 15968   007342                     u5971:
 15969   007342  EFA7  F039         	goto	l6096
 15970   007346                     u5970:
 15971   007346                     l6094:
 15972                           
 15973                           ;MCAL_layer/GPIO/hal_gpio.c: 168:     {;MCAL_layer/GPIO/hal_gpio.c: 169:         ret = (
      +                          STD_ReturnType)0x00;
 15974   007346  0E00               	movlw	0
 15975   007348  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 15976                           
 15977                           ;MCAL_layer/GPIO/hal_gpio.c: 170:     }
 15978   00734A  EFBD  F039         	goto	l6098
 15979   00734E                     l6096:
 15980                           
 15981                           ;MCAL_layer/GPIO/hal_gpio.c: 172:     {;MCAL_layer/GPIO/hal_gpio.c: 173:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
 15982   00734E  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
 15983   007352  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
 15984   007356  EC08  F031         	call	_gpio_pin_direction_initialize	;wreg free
 15985   00735A  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 15986                           
 15987                           ;MCAL_layer/GPIO/hal_gpio.c: 174:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
 15988   00735C  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
 15989   007360  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
 15990   007364  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
 15991   007368  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
 15992   00736C  0E00               	movlw	0
 15993   00736E  BEDF               	btfsc	indf2,7,c
 15994   007370  0E01               	movlw	1
 15995   007372  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15996   007374  ECAA  F031         	call	_gpio_pin_write_logic	;wreg free
 15997   007378  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 15998   00737A                     l6098:
 15999                           
 16000                           ;MCAL_layer/GPIO/hal_gpio.c: 177:      return ret;
 16001   00737A  500E               	movf	gpio_pin_initialize@ret^0,w,c
 16002   00737C  0012               	return		;funcret
 16003   00737E                     __end_of_gpio_pin_initialize:
 16004                           	callstack 0
 16005                           
 16006 ;; *************** function _gpio_pin_write_logic *****************
 16007 ;; Defined at:
 16008 ;;		line 83 in file "MCAL_layer/GPIO/hal_gpio.c"
 16009 ;; Parameters:    Size  Location     Type
 16010 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16011 ;;		 -> keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_off@relay_pin(1), ecu_relay_on@relay_pin(1), 
 16012 ;;		 -> ecu_relay_initialize@relay_pin(1), ecu_led_turn_off@led_pin(1), ecu_led_turn_on@led_pin(1), ecu_led_initialize@l
      +ed_pin(1), 
 16013 ;;		 -> lcd1(6), keypad(8), 
 16014 ;;  logic           1    2[COMRAM] enum E3403
 16015 ;; Auto vars:     Size  Location     Type
 16016 ;;  ret             1    9[COMRAM] unsigned char 
 16017 ;; Return value:  Size  Location     Type
 16018 ;;                  1    wreg      unsigned char 
 16019 ;; Registers used:
 16020 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16021 ;; Tracked objects:
 16022 ;;		On entry : 0/0
 16023 ;;		On exit  : 0/0
 16024 ;;		Unchanged: 0/0
 16025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16026 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16027 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16028 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16029 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16030 ;;Total ram usage:       10 bytes
 16031 ;; Hardware stack levels used: 1
 16032 ;; This function calls:
 16033 ;;		Nothing
 16034 ;; This function is called by:
 16035 ;;		_lcd_4bit_send_command
 16036 ;;		_lcd_4bit_send_char_data
 16037 ;;		_lcd_send_4bit
 16038 ;;		_lcd_4bit_send_enable_enable
 16039 ;;		_ecu_keypad_get_value
 16040 ;;		_gpio_pin_initialize
 16041 ;;		_ecu_seven_segment_write_number
 16042 ;;		_lcd_8bit_send_command
 16043 ;;		_lcd_8bit_send_char_data
 16044 ;;		_lcd_8bit_send_enable_enable
 16045 ;;		_ecu_dc_motor_move_right
 16046 ;;		_ecu_dc_motor_move_left
 16047 ;;		_ecu_dc_motor_stop
 16048 ;;		_ecu_led_turn_on
 16049 ;;		_ecu_led_turn_off
 16050 ;;		_ecu_relay_on
 16051 ;;		_ecu_relay_off
 16052 ;; This function uses a non-reentrant model
 16053 ;;
 16054                           
 16055                           	psect	text58
 16056   006354                     __ptext58:
 16057                           	callstack 0
 16058   006354                     _gpio_pin_write_logic:
 16059                           	callstack 25
 16060   006354                     
 16061                           ;MCAL_layer/GPIO/hal_gpio.c: 83: STD_ReturnType gpio_pin_write_logic(const pin_config_t*
      +                           _pin_config, logic_t logic);MCAL_layer/GPIO/hal_gpio.c: 84: {;MCAL_layer/GPIO/hal_gpio.
      +                          c: 85:     STD_ReturnType ret = (STD_ReturnType)0x01;
 16062   006354  0E01               	movlw	1
 16063   006356  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 16064   006358                     
 16065                           ;MCAL_layer/GPIO/hal_gpio.c: 86:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
 16066   006358  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 16067   00635A  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
 16068   00635C  B4D8               	btfsc	status,2,c
 16069   00635E  EFB3  F031         	goto	u5371
 16070   006362  EFB5  F031         	goto	u5370
 16071   006366                     u5371:
 16072   006366  EFC6  F031         	goto	l5642
 16073   00636A                     u5370:
 16074   00636A  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16075   00636E  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16076   006372  30DF               	rrcf	223,w,c
 16077   006374  32E8               	rrcf	wreg,f,c
 16078   006376  32E8               	rrcf	wreg,f,c
 16079   006378  0B07               	andlw	7
 16080   00637A  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16081   00637C  0E07               	movlw	7
 16082   00637E  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
 16083   006380  EFC4  F031         	goto	u5381
 16084   006384  EFC6  F031         	goto	u5380
 16085   006388                     u5381:
 16086   006388  EF29  F032         	goto	l5650
 16087   00638C                     u5380:
 16088   00638C                     l5642:
 16089                           
 16090                           ;MCAL_layer/GPIO/hal_gpio.c: 87:     {;MCAL_layer/GPIO/hal_gpio.c: 88:         ret = (ST
      +                          D_ReturnType)0x00;
 16091   00638C  0E00               	movlw	0
 16092   00638E  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 16093                           
 16094                           ;MCAL_layer/GPIO/hal_gpio.c: 89:     }
 16095   006390  EF3E  F032         	goto	l5652
 16096   006394                     l5644:
 16097                           
 16098                           ;MCAL_layer/GPIO/hal_gpio.c: 95:             (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
 16099   006394  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16100   006398  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16101   00639C  30DF               	rrcf	223,w,c
 16102   00639E  32E8               	rrcf	wreg,f,c
 16103   0063A0  32E8               	rrcf	wreg,f,c
 16104   0063A2  0B07               	andlw	7
 16105   0063A4  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16106   0063A6  0E01               	movlw	1
 16107   0063A8  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 16108   0063AA  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 16109   0063AC  EFDA  F031         	goto	u5394
 16110   0063B0                     u5395:
 16111   0063B0  90D8               	bcf	status,0,c
 16112   0063B2  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 16113   0063B4                     u5394:
 16114   0063B4  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 16115   0063B6  EFD8  F031         	goto	u5395
 16116   0063BA  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16117   0063BC  0AFF               	xorlw	255
 16118   0063BE  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 16119   0063C0  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16120   0063C4  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16121   0063C8  50DF               	movf	223,w,c
 16122   0063CA  0B07               	andlw	7
 16123   0063CC  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
 16124   0063CE  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
 16125   0063D0  0D02               	mullw	2
 16126   0063D2  0EC2               	movlw	low _lat_registers
 16127   0063D4  24F3               	addwf	243,w,c
 16128   0063D6  6ED9               	movwf	fsr2l,c
 16129   0063D8  0E01               	movlw	high _lat_registers
 16130   0063DA  20F4               	addwfc	prodh,w,c
 16131   0063DC  6EDA               	movwf	fsr2h,c
 16132   0063DE  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
 16133   0063E2  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
 16134   0063E6  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
 16135   0063EA  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
 16136   0063EE  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 16137   0063F0  16DF               	andwf	indf2,f,c
 16138                           
 16139                           ;MCAL_layer/GPIO/hal_gpio.c: 96:             break;
 16140   0063F2  EF3E  F032         	goto	l5652
 16141   0063F6                     l5646:
 16142                           
 16143                           ;MCAL_layer/GPIO/hal_gpio.c: 98:             (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
 16144   0063F6  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16145   0063FA  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16146   0063FE  30DF               	rrcf	223,w,c
 16147   006400  32E8               	rrcf	wreg,f,c
 16148   006402  32E8               	rrcf	wreg,f,c
 16149   006404  0B07               	andlw	7
 16150   006406  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16151   006408  0E01               	movlw	1
 16152   00640A  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 16153   00640C  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 16154   00640E  EF0B  F032         	goto	u5404
 16155   006412                     u5405:
 16156   006412  90D8               	bcf	status,0,c
 16157   006414  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 16158   006416                     u5404:
 16159   006416  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 16160   006418  EF09  F032         	goto	u5405
 16161   00641C  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16162   006420  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16163   006424  50DF               	movf	223,w,c
 16164   006426  0B07               	andlw	7
 16165   006428  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 16166   00642A  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 16167   00642C  0D02               	mullw	2
 16168   00642E  0EC2               	movlw	low _lat_registers
 16169   006430  24F3               	addwf	243,w,c
 16170   006432  6ED9               	movwf	fsr2l,c
 16171   006434  0E01               	movlw	high _lat_registers
 16172   006436  20F4               	addwfc	prodh,w,c
 16173   006438  6EDA               	movwf	fsr2h,c
 16174   00643A  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
 16175   00643E  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
 16176   006442  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 16177   006446  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 16178   00644A  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16179   00644C  12DF               	iorwf	indf2,f,c
 16180                           
 16181                           ;MCAL_layer/GPIO/hal_gpio.c: 99:             break;
 16182   00644E  EF3E  F032         	goto	l5652
 16183   006452                     l5650:
 16184   006452  5003               	movf	gpio_pin_write_logic@logic^0,w,c
 16185   006454  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16186   006456  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
 16187                           
 16188                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16189                           ; Switch size 1, requested type "simple"
 16190                           ; Number of cases is 1, Range of values is 0 to 0
 16191                           ; switch strategies available:
 16192                           ; Name         Instructions Cycles
 16193                           ; simple_byte            4     3 (average)
 16194                           ;	Chosen strategy is simple_byte
 16195   006458  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16196   00645A  0A00               	xorlw	0	; case 0
 16197   00645C  B4D8               	btfsc	status,2,c
 16198   00645E  EF33  F032         	goto	l13256
 16199   006462  EFC6  F031         	goto	l5642
 16200   006466                     l13256:
 16201                           
 16202                           ; Switch size 1, requested type "simple"
 16203                           ; Number of cases is 2, Range of values is 0 to 1
 16204                           ; switch strategies available:
 16205                           ; Name         Instructions Cycles
 16206                           ; simple_byte            7     4 (average)
 16207                           ;	Chosen strategy is simple_byte
 16208   006466  5004               	movf	??_gpio_pin_write_logic^0,w,c
 16209   006468  0A00               	xorlw	0	; case 0
 16210   00646A  B4D8               	btfsc	status,2,c
 16211   00646C  EFCA  F031         	goto	l5644
 16212   006470  0A01               	xorlw	1	; case 1
 16213   006472  B4D8               	btfsc	status,2,c
 16214   006474  EFFB  F031         	goto	l5646
 16215   006478  EFC6  F031         	goto	l5642
 16216   00647C                     l5652:
 16217                           
 16218                           ;MCAL_layer/GPIO/hal_gpio.c: 104:      return ret;
 16219   00647C  500A               	movf	gpio_pin_write_logic@ret^0,w,c
 16220   00647E  0012               	return		;funcret
 16221   006480                     __end_of_gpio_pin_write_logic:
 16222                           	callstack 0
 16223                           
 16224 ;; *************** function _gpio_pin_direction_initialize *****************
 16225 ;; Defined at:
 16226 ;;		line 24 in file "MCAL_layer/GPIO/hal_gpio.c"
 16227 ;; Parameters:    Size  Location     Type
 16228 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16229 ;;		 -> keypad$keypad_columns_pins(4), keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_initialize@relay_pin(1), 
 16230 ;;		 -> ecu_led_initialize@led_pin(1), lcd1(6), keypad(8), 
 16231 ;; Auto vars:     Size  Location     Type
 16232 ;;  ret             1    8[COMRAM] unsigned char 
 16233 ;; Return value:  Size  Location     Type
 16234 ;;                  1    wreg      unsigned char 
 16235 ;; Registers used:
 16236 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16237 ;; Tracked objects:
 16238 ;;		On entry : 0/0
 16239 ;;		On exit  : 0/0
 16240 ;;		Unchanged: 0/0
 16241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16242 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16243 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16244 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16245 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16246 ;;Total ram usage:        9 bytes
 16247 ;; Hardware stack levels used: 1
 16248 ;; This function calls:
 16249 ;;		Nothing
 16250 ;; This function is called by:
 16251 ;;		_ecu_keypad_initialize
 16252 ;;		_gpio_pin_initialize
 16253 ;;		_ecu_button_initialize
 16254 ;; This function uses a non-reentrant model
 16255 ;;
 16256                           
 16257                           	psect	text59
 16258   006210                     __ptext59:
 16259                           	callstack 0
 16260   006210                     _gpio_pin_direction_initialize:
 16261                           	callstack 26
 16262   006210                     
 16263                           ;MCAL_layer/GPIO/hal_gpio.c: 24: STD_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t* _pin_config);MCAL_layer/GPIO/hal_gpio.c: 25: {;MCAL_layer/GPIO/hal_gpio.c: 26:
      +                               STD_ReturnType ret = (STD_ReturnType)0x01;
 16264   006210  0E01               	movlw	1
 16265   006212  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
 16266   006214                     
 16267                           ;MCAL_layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
 16268   006214  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
 16269   006216  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
 16270   006218  B4D8               	btfsc	status,2,c
 16271   00621A  EF11  F031         	goto	u5841
 16272   00621E  EF13  F031         	goto	u5840
 16273   006222                     u5841:
 16274   006222  EF24  F031         	goto	l5946
 16275   006226                     u5840:
 16276   006226  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16277   00622A  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16278   00622E  30DF               	rrcf	223,w,c
 16279   006230  32E8               	rrcf	wreg,f,c
 16280   006232  32E8               	rrcf	wreg,f,c
 16281   006234  0B07               	andlw	7
 16282   006236  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16283   006238  0E07               	movlw	7
 16284   00623A  6403               	cpfsgt	??_gpio_pin_direction_initialize^0,c
 16285   00623C  EF22  F031         	goto	u5851
 16286   006240  EF24  F031         	goto	u5850
 16287   006244                     u5851:
 16288   006244  EF87  F031         	goto	l5954
 16289   006248                     u5850:
 16290   006248                     l5946:
 16291                           
 16292                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     {;MCAL_layer/GPIO/hal_gpio.c: 29:         ret = (ST
      +                          D_ReturnType)0x00;
 16293   006248  0E00               	movlw	0
 16294   00624A  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
 16295                           
 16296                           ;MCAL_layer/GPIO/hal_gpio.c: 30:     }
 16297   00624C  EFA8  F031         	goto	l5956
 16298   006250                     l5948:
 16299                           
 16300                           ;MCAL_layer/GPIO/hal_gpio.c: 36:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
 16301   006250  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16302   006254  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16303   006258  30DF               	rrcf	223,w,c
 16304   00625A  32E8               	rrcf	wreg,f,c
 16305   00625C  32E8               	rrcf	wreg,f,c
 16306   00625E  0B07               	andlw	7
 16307   006260  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16308   006262  0E01               	movlw	1
 16309   006264  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 16310   006266  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
 16311   006268  EF38  F031         	goto	u5864
 16312   00626C                     u5865:
 16313   00626C  90D8               	bcf	status,0,c
 16314   00626E  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 16315   006270                     u5864:
 16316   006270  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 16317   006272  EF36  F031         	goto	u5865
 16318   006276  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16319   006278  0AFF               	xorlw	255
 16320   00627A  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
 16321   00627C  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16322   006280  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16323   006284  50DF               	movf	223,w,c
 16324   006286  0B07               	andlw	7
 16325   006288  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
 16326   00628A  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
 16327   00628C  0D02               	mullw	2
 16328   00628E  0ECC               	movlw	low _tris_registers
 16329   006290  24F3               	addwf	243,w,c
 16330   006292  6ED9               	movwf	fsr2l,c
 16331   006294  0E01               	movlw	high _tris_registers
 16332   006296  20F4               	addwfc	prodh,w,c
 16333   006298  6EDA               	movwf	fsr2h,c
 16334   00629A  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
 16335   00629E  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
 16336   0062A2  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
 16337   0062A6  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
 16338   0062AA  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
 16339   0062AC  16DF               	andwf	indf2,f,c
 16340                           
 16341                           ;MCAL_layer/GPIO/hal_gpio.c: 37:             break;
 16342   0062AE  EFA8  F031         	goto	l5956
 16343   0062B2                     l5950:
 16344                           
 16345                           ;MCAL_layer/GPIO/hal_gpio.c: 39:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
 16346   0062B2  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16347   0062B6  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16348   0062BA  30DF               	rrcf	223,w,c
 16349   0062BC  32E8               	rrcf	wreg,f,c
 16350   0062BE  32E8               	rrcf	wreg,f,c
 16351   0062C0  0B07               	andlw	7
 16352   0062C2  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16353   0062C4  0E01               	movlw	1
 16354   0062C6  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 16355   0062C8  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
 16356   0062CA  EF69  F031         	goto	u5874
 16357   0062CE                     u5875:
 16358   0062CE  90D8               	bcf	status,0,c
 16359   0062D0  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 16360   0062D2                     u5874:
 16361   0062D2  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 16362   0062D4  EF67  F031         	goto	u5875
 16363   0062D8  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16364   0062DC  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16365   0062E0  50DF               	movf	223,w,c
 16366   0062E2  0B07               	andlw	7
 16367   0062E4  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
 16368   0062E6  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
 16369   0062E8  0D02               	mullw	2
 16370   0062EA  0ECC               	movlw	low _tris_registers
 16371   0062EC  24F3               	addwf	243,w,c
 16372   0062EE  6ED9               	movwf	fsr2l,c
 16373   0062F0  0E01               	movlw	high _tris_registers
 16374   0062F2  20F4               	addwfc	prodh,w,c
 16375   0062F4  6EDA               	movwf	fsr2h,c
 16376   0062F6  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
 16377   0062FA  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
 16378   0062FE  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
 16379   006302  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
 16380   006306  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16381   006308  12DF               	iorwf	indf2,f,c
 16382                           
 16383                           ;MCAL_layer/GPIO/hal_gpio.c: 40:             break;
 16384   00630A  EFA8  F031         	goto	l5956
 16385   00630E                     l5954:
 16386   00630E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16387   006312  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16388   006316  BCDF               	btfsc	indf2,6,c
 16389   006318  EF90  F031         	goto	u5881
 16390   00631C  EF93  F031         	goto	u5880
 16391   006320                     u5881:
 16392   006320  0E01               	movlw	1
 16393   006322  EF94  F031         	goto	u5890
 16394   006326                     u5880:
 16395   006326  0E00               	movlw	0
 16396   006328                     u5890:
 16397   006328  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16398   00632A  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
 16399                           
 16400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16401                           ; Switch size 1, requested type "simple"
 16402                           ; Number of cases is 1, Range of values is 0 to 0
 16403                           ; switch strategies available:
 16404                           ; Name         Instructions Cycles
 16405                           ; simple_byte            4     3 (average)
 16406                           ;	Chosen strategy is simple_byte
 16407   00632C  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16408   00632E  0A00               	xorlw	0	; case 0
 16409   006330  B4D8               	btfsc	status,2,c
 16410   006332  EF9D  F031         	goto	l13258
 16411   006336  EF24  F031         	goto	l5946
 16412   00633A                     l13258:
 16413                           
 16414                           ; Switch size 1, requested type "simple"
 16415                           ; Number of cases is 2, Range of values is 0 to 1
 16416                           ; switch strategies available:
 16417                           ; Name         Instructions Cycles
 16418                           ; simple_byte            7     4 (average)
 16419                           ;	Chosen strategy is simple_byte
 16420   00633A  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
 16421   00633C  0A00               	xorlw	0	; case 0
 16422   00633E  B4D8               	btfsc	status,2,c
 16423   006340  EF28  F031         	goto	l5948
 16424   006344  0A01               	xorlw	1	; case 1
 16425   006346  B4D8               	btfsc	status,2,c
 16426   006348  EF59  F031         	goto	l5950
 16427   00634C  EF24  F031         	goto	l5946
 16428   006350                     l5956:
 16429                           
 16430                           ;MCAL_layer/GPIO/hal_gpio.c: 45:      return ret;
 16431   006350  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
 16432   006352  0012               	return		;funcret
 16433   006354                     __end_of_gpio_pin_direction_initialize:
 16434                           	callstack 0
 16435                           
 16436                           	psect	rparam
 16437   000000                     
 16438                           	psect	config
 16439                           
 16440                           ; Padding undefined space
 16441   300000                     	org	3145728
 16442   300000  FF                 	db	255
 16443                           
 16444                           ;Config register CONFIG1H @ 0x300001
 16445                           ;	Oscillator Selection bits
 16446                           ;	OSC = EC, EC oscillator, CLKOUT function on RA6
 16447                           ;	Fail-Safe Clock Monitor Enable bit
 16448                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16449                           ;	Internal/External Oscillator Switchover bit
 16450                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16451   300001                     	org	3145729
 16452   300001  04                 	db	4
 16453                           
 16454                           ;Config register CONFIG2L @ 0x300002
 16455                           ;	Power-up Timer Enable bit
 16456                           ;	PWRT = OFF, PWRT disabled
 16457                           ;	Brown-out Reset Enable bits
 16458                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 16459                           ;	Brown Out Reset Voltage bits
 16460                           ;	BORV = 1, 
 16461   300002                     	org	3145730
 16462   300002  09                 	db	9
 16463                           
 16464                           ;Config register CONFIG2H @ 0x300003
 16465                           ;	Watchdog Timer Enable bit
 16466                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16467                           ;	Watchdog Timer Postscale Select bits
 16468                           ;	WDTPS = 32768, 1:32768
 16469   300003                     	org	3145731
 16470   300003  1E                 	db	30
 16471                           
 16472                           ; Padding undefined space
 16473   300004                     	org	3145732
 16474   300004  FF                 	db	255
 16475                           
 16476                           ;Config register CONFIG3H @ 0x300005
 16477                           ;	CCP2 MUX bit
 16478                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 16479                           ;	PORTB A/D Enable bit
 16480                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 16481                           ;	Low-Power Timer1 Oscillator Enable bit
 16482                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16483                           ;	MCLR Pin Enable bit
 16484                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16485   300005                     	org	3145733
 16486   300005  81                 	db	129
 16487                           
 16488                           ;Config register CONFIG4L @ 0x300006
 16489                           ;	Stack Full/Underflow Reset Enable bit
 16490                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16491                           ;	Single-Supply ICSP Enable bit
 16492                           ;	LVP = OFF, Single-Supply ICSP disabled
 16493                           ;	Extended Instruction Set Enable bit
 16494                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16495                           ;	Background Debugger Enable bit
 16496                           ;	DEBUG = 0x1, unprogrammed default
 16497   300006                     	org	3145734
 16498   300006  81                 	db	129
 16499                           
 16500                           ; Padding undefined space
 16501   300007                     	org	3145735
 16502   300007  FF                 	db	255
 16503                           
 16504                           ;Config register CONFIG5L @ 0x300008
 16505                           ;	Code Protection bit
 16506                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 16507                           ;	Code Protection bit
 16508                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 16509                           ;	Code Protection bit
 16510                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 16511                           ;	Code Protection bit
 16512                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 16513   300008                     	org	3145736
 16514   300008  0F                 	db	15
 16515                           
 16516                           ;Config register CONFIG5H @ 0x300009
 16517                           ;	Boot Block Code Protection bit
 16518                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16519                           ;	Data EEPROM Code Protection bit
 16520                           ;	CPD = OFF, Data EEPROM not code-protected
 16521   300009                     	org	3145737
 16522   300009  C0                 	db	192
 16523                           
 16524                           ;Config register CONFIG6L @ 0x30000A
 16525                           ;	Write Protection bit
 16526                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 16527                           ;	Write Protection bit
 16528                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 16529                           ;	Write Protection bit
 16530                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 16531                           ;	Write Protection bit
 16532                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 16533   30000A                     	org	3145738
 16534   30000A  0F                 	db	15
 16535                           
 16536                           ;Config register CONFIG6H @ 0x30000B
 16537                           ;	Configuration Register Write Protection bit
 16538                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16539                           ;	Boot Block Write Protection bit
 16540                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16541                           ;	Data EEPROM Write Protection bit
 16542                           ;	WRTD = OFF, Data EEPROM not write-protected
 16543   30000B                     	org	3145739
 16544   30000B  E0                 	db	224
 16545                           
 16546                           ;Config register CONFIG7L @ 0x30000C
 16547                           ;	Table Read Protection bit
 16548                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 16549                           ;	Table Read Protection bit
 16550                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16551                           ;	Table Read Protection bit
 16552                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 16553                           ;	Table Read Protection bit
 16554                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 16555   30000C                     	org	3145740
 16556   30000C  0F                 	db	15
 16557                           
 16558                           ;Config register CONFIG7H @ 0x30000D
 16559                           ;	Boot Block Table Read Protection bit
 16560                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16561   30000D                     	org	3145741
 16562   30000D  40                 	db	64
 16563                           tosu	equ	0xFFF
 16564                           tosh	equ	0xFFE
 16565                           tosl	equ	0xFFD
 16566                           stkptr	equ	0xFFC
 16567                           pclatu	equ	0xFFB
 16568                           pclath	equ	0xFFA
 16569                           pcl	equ	0xFF9
 16570                           tblptru	equ	0xFF8
 16571                           tblptrh	equ	0xFF7
 16572                           tblptrl	equ	0xFF6
 16573                           tablat	equ	0xFF5
 16574                           prodh	equ	0xFF4
 16575                           prodl	equ	0xFF3
 16576                           indf0	equ	0xFEF
 16577                           postinc0	equ	0xFEE
 16578                           postdec0	equ	0xFED
 16579                           preinc0	equ	0xFEC
 16580                           plusw0	equ	0xFEB
 16581                           fsr0h	equ	0xFEA
 16582                           fsr0l	equ	0xFE9
 16583                           wreg	equ	0xFE8
 16584                           indf1	equ	0xFE7
 16585                           postinc1	equ	0xFE6
 16586                           postdec1	equ	0xFE5
 16587                           preinc1	equ	0xFE4
 16588                           plusw1	equ	0xFE3
 16589                           fsr1h	equ	0xFE2
 16590                           fsr1l	equ	0xFE1
 16591                           bsr	equ	0xFE0
 16592                           indf2	equ	0xFDF
 16593                           postinc2	equ	0xFDE
 16594                           postdec2	equ	0xFDD
 16595                           preinc2	equ	0xFDC
 16596                           plusw2	equ	0xFDB
 16597                           fsr2h	equ	0xFDA
 16598                           fsr2l	equ	0xFD9
 16599                           status	equ	0xFD8

Data Sizes:
    Strings     99
    Constant    112
    Data        61
    BSS         147
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     82     128
    BANK1           256    184     250
    BANK2           256      0      96
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    convert_arr_to_float@arr	PTR const unsigned char  size(2) Largest target is 4
		 -> num1(BANK1[4]), num2(BANK1[4]), num3(BANK1[4]), 

    convert_arr_to_float@num_value	PTR float  size(1) Largest target is 4
		 -> num1_val(BANK0[4]), num2_val(BANK0[4]), num3_val(BANK0[4]), 

    convert_float_to_string@str	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), 

    convert_int_to_string@str	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    Division_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    ecu_keypad_get_value@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 

    ecu_keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> get_number_and_operartion@keypad_value(COMRAM[1]), get_third_number_and_third_operartion@keypad_value(COMRAM[1]), 

    ecu_keypad_initialize@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    get_number_and_operartion@counter_num	PTR unsigned char  size(1) Largest target is 1
		 -> counter_num1(BANK0[1]), counter_num2(BANK0[1]), 

    get_number_and_operartion@lcd_counter	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_counter(BANK0[1]), 

    get_number_and_operartion@num	PTR unsigned char  size(2) Largest target is 4
		 -> num1(BANK1[4]), num2(BANK1[4]), 

    get_number_and_operartion@operation	PTR unsigned char  size(1) Largest target is 1
		 -> operation(BANK0[1]), operation2(BANK0[1]), 

    get_third_number_and_third_operartion@counter_num	PTR unsigned char  size(1) Largest target is 1
		 -> counter_num3(BANK0[1]), 

    get_third_number_and_third_operartion@lcd_counter	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_counter(BANK0[1]), 

    get_third_number_and_third_operartion@num	PTR unsigned char  size(2) Largest target is 4
		 -> num3(BANK1[4]), 

    get_third_number_and_third_operartion@operation	PTR unsigned char  size(1) Largest target is 1
		 -> operation3(BANK0[1]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_columns_pins(BANK1[4]), 
		 -> keypad$keypad_rows_pins(BANK1[4]), lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_rows_pins(BANK1[4]), 
		 -> lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), keypad$keypad_columns_pins(BANK1[4]), 

    gpio_pin_read_logic@logic	PTR enum E3403 size(1) Largest target is 1
		 -> ecu_button_read_state@btn_logic(COMRAM[1]), ecu_keypad_get_value@column_val(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_led_turn_off@led_pin(COMRAM[1]), ecu_led_turn_on@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), 
		 -> ecu_relay_off@relay_pin(COMRAM[1]), ecu_relay_on@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_rows_pins(BANK1[4]), 
		 -> lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_enable@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), STR_1(CODE[18]), STR_11(CODE[14]), STR_2(CODE[19]), 
		 -> STR_3(CODE[23]), STR_4(CODE[28]), STR_5(CODE[18]), STR_6(CODE[19]), 

    lcd_4bit_set_curser@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memset@dest	PTR void  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    memset@p	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    multiplication_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1396$buffer	PTR unsigned char  size(2) Largest target is 0

    S1396$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[3]), STR_7(CODE[5]), STR_8(CODE[3]), STR_9(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 4095
		 -> RAM(DATA[4095]), send_the_result_to_LCD@result_str(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_12(CODE[4]), STR_15(CODE[4]), 

    subtraction_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    sum_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[3]), STR_7(CODE[5]), STR_8(CODE[3]), STR_9(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[3]), STR_7(CODE[5]), STR_8(CODE[3]), STR_9(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_10(CODE[3]), STR_7(CODE[5]), STR_8(CODE[3]), STR_9(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _sum_operation->___fladd
    _subtraction_operation->___flsub
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___flge
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _multiplication_operation->___flmul
    _get_third_number_and_third_operartion->_lcd_4bit_send_char_data_pos
    _get_third_number_and_third_operartion->_lcd_4bit_send_string_pos
    _get_number_and_operartion->_lcd_4bit_send_char_data_pos
    _get_number_and_operartion->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_curser
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_curser
    _lcd_4bit_set_curser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _ecu_keypad_get_value->_gpio_pin_write_logic
    _convert_arr_to_float->_powf
    _powf->___flge
    _scalbnf->___flmul
    ___flmul->___xxtofl
    ___xxtofl->___fltol
    ___flsub->___fldiv
    ___fladd->___flmul
    ___flge->___flsub
    _Division_operation->___fldiv
    ___fldiv->___fladd
    _ecu_layer_Initialization->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable_enable->_gpio_pin_write_logic
    _ecu_keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_send_the_result_to_LCD
    _send_the_result_to_LCD->_convert_float_to_string
    _convert_int_to_string->_sprintf
    _convert_float_to_string->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _convert_arr_to_float->_powf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  670636
                                             80 BANK0      2     2      0
         _Application_Initialization
                 _Division_operation
                            ___fltol
               _convert_arr_to_float
          _get_number_and_operartion
_get_third_number_and_third_operarti
                     _initialize_var
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
           _multiplication_operation
             _send_the_result_to_LCD
              _subtraction_operation
                      _sum_operation
 ---------------------------------------------------------------------------------
 (1) _sum_operation                                        9     0      9   13294
                                             65 COMRAM     9     0      9
                            ___fladd
 ---------------------------------------------------------------------------------
 (1) _subtraction_operation                                9     0      9   20550
                                             98 COMRAM     9     0      9
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _send_the_result_to_LCD                              86    82      4  224627
                                             76 BANK0      4     0      4
                                              0 BANK1     82    82      0
                             ___flge
                            ___fltol
                           ___xxtofl
            _convert_float_to_string
              _convert_int_to_string
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _convert_int_to_string                                5     1      4   79544
                                             70 BANK0      4     0      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _convert_float_to_string                              6     0      6   79460
                                             70 BANK0      6     0      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   78039
                                             50 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3   76395
                                            123 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           12     9      3   75526
                                            118 COMRAM     5     2      3
                                             44 BANK0      6     6      0
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              53    47      6   66784
                                            110 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             90 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     837
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     9      3    4750
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    2959
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1008
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _multiplication_operation                             9     0      9   16324
                                             49 COMRAM     9     0      9
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) _initialize_var                                       2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_third_number_and_third_operartion                8     3      5   88960
                                             28 COMRAM     8     3      5
               _ecu_keypad_get_value
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _get_number_and_operartion                            8     3      5   89320
                                             28 COMRAM     8     3      5
               _ecu_keypad_get_value
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_pos                             6     1      5   41025
                                             23 COMRAM     5     0      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   40655
                                             23 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_curser
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_curser                                  6     3      3   20737
                                             17 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   17169
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (2) _ecu_keypad_get_value                                10     7      3    6099
                                             10 COMRAM     9     6      3
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                  9     6      3     444
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _convert_arr_to_float                                17    13      4  115528
                                              0 BANK0     17    13      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   85198
                                            110 COMRAM    17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1600
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   16128
                                             49 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8   15208
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1108
                                             10 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8   19434
                                             90 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8   12178
                                             49 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1896
                                             98 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Division_operation                                   9     0      9    5836
                                             90 COMRAM     9     0      9
                            ___fldiv
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    4720
                                             65 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Application_Initialization                           0     0      0   34354
           _ecu_layer_Initialization
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_Initialization                             0     0      0   34354
              _ecu_keypad_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   27087
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   19869
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bit                                        4     2      2    5905
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_enable                          3     2      1    5353
                                             10 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _ecu_keypad_initialize                                7     5      2    7267
                                             14 COMRAM     6     4      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6574
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    4891
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_Initialization
     _ecu_layer_Initialization
       _ecu_keypad_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_enable
             _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
   _Division_operation
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
   ___fltol
   _convert_arr_to_float
     ___fladd
     ___flmul
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
         ___fladd (ARG)
         ___flmul (ARG)
         ___flsub (ARG)
           ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _get_number_and_operartion
     _ecu_keypad_get_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_enable
         _lcd_send_4bit
       _lcd_4bit_set_curser
         _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_curser
   _get_third_number_and_third_operartion
     _ecu_keypad_get_value
     _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_string_pos
   _initialize_var
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
   _multiplication_operation
     ___flmul
   _send_the_result_to_LCD
     ___flge
     ___fltol
     ___xxtofl
     _convert_float_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
               ___wmul
     _convert_int_to_string
       _memset
       _sprintf
     _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
   _subtraction_operation
     ___flsub
   _sum_operation
     ___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      60       9       37.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      FA       7       97.7%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     52      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     259      39        0.0%
DATA                 0      0     259       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 05 14:54:09 2024

                                   ?_lcd_send_4bit 000B                                       ___fldiv@aexp 005A  
                                     ___fldiv@bexp 0059                                       ___fldiv@sign 0052  
                                               _L1 105D                                                 _L2 1059  
                                               _L3 1055                                                 _L4 1051  
                                               _L5 104D                                                 _L6 1049  
                                               _P1 1045                                                 _P2 1041  
                                               _P3 103D                                                 _P4 1039  
                                               _P5 1035                                                 l92 65A6  
                                               l69 5EE0                                                 l87 58B4  
                                               l95 761A                                                 l98 7714  
                                     ___awdiv@sign 0006                                                 _bp 1011  
                                               _cp 1021                                ___wmul@multiplicand 0003  
              __end_of_lcd_4bit_send_enable_enable 787A                        _lcd_4bit_send_enable_enable 7840  
                                              l101 7750                                                l104 778C  
                                              l112 6B8E                                                l202 77C8  
                                              l107 7804                                                l117 6C56  
                                              l218 7230                                                l318 7116  
                                              l192 749E                                                l521 6FD8  
                                              l514 647E                                                l363 7310  
                                              l187 6AB0                                                l292 72A0  
                                              l197 7440                                                l535 737C  
                                              l295 7878                                                l447 797E  
                                              l377 66B6                                                l289 7544  
                                              l495 6352                                                l921 6D1A  
                                              l690 7968                                                l667 4178  
                                              l934 6E84                                                l687 799C  
                                              l960 68C0                                                l955 687A  
                                              l964 78E8                                                l949 6F2E  
                                              l987 67BC                   send_the_result_to_LCD@result_str 0100  
                                              _lg2 1031                                                _abs 78EA  
                                              _pad 737E                                                _ovt 1025  
                                     ___awmod@sign 0006                                                prod 0FF3  
                           ?_subtraction_operation 0063                                                wreg 0FE8  
                                     ___flmul@aexp 0026                                       ___flmul@bexp 0027  
                          _convert_float_to_string 75DC                                       ___flmul@sign 0025  
                                     ___flmul@temp 0030                                       ___flmul@prod 002C  
                    ??_lcd_4bit_send_enable_enable 000C                                       ___fltol@exp1 000A  
                                             ?_abs 0007                                               l1220 4522  
                                             l1311 4AFA                                               l1304 4904  
                                             l1321 4C2A                                               l1313 4B72  
                                             l1218 456E                                               l1314 4B60  
                                             l1235 4688                                               l1227 483E  
                                             l1219 455C                                               l1403 7394  
                                             l1411 60C6                                               l1244 4758  
                                             l1260 75DA                                               l1308 4C68  
                                             l1245 4746                                               l1413 60CE  
                                             l1414 6114                                               l1407 73E2  
                                             l1272 53E0                                               l1352 5FD0  
                                             l1345 5F38                                               l1425 620E  
                                             l1441 35CC                                               l1274 5240  
                                             l1530 7904                                               l1283 5286  
                                             l1515 76D8                                               l1348 6094  
                                             l1436 3DE6                                               l1285 52FE  
                                             l1277 5204                                               l1533 791C  
                                             l1525 69BE                                               l1286 52EC  
                                             l1542 5C3E                                               l1374 765A  
                                             l1359 602C                                               l1367 78B0  
                                             l1439 3786                                               l1712 799E  
                                             l1705 33C2                                               l1553 74F4  
                                             l1481 7076                                               l1722 5AE8  
                                             l1731 5046                                               l1571 6DD4  
                                             l1539 5CFA                                               l1644 1372  
                                             l1469 3BCE                                               l1485 707E  
                                             l1493 5666                                               l1742 4F70  
                                             l1654 1402                                               l1750 783E  
                                             l1735 4E4E                                               l1639 33FE  
                                             l1559 7594                                               l1744 4FDE  
                                             l1672 15D2                                               l1664 14C2  
                                             l1739 4EAC                                               l1579 769A  
                                             l1668 1574                                               l6112 787A  
                                             l5400 6CC8                                               l6114 7886  
                                             l5410 6CF4                                               l5402 6CCE  
                                             l6220 72A2                                               l6140 6F74  
                                             l6132 6F30                                               l6116 7892  
                                             l5404 6CE4                                               l5412 6CFA  
                                             l5420 6DD6                                               l6222 72A2  
                                             l6142 6F78                                               l6134 6F30  
                                             l7110 6C04                                               l6118 7896  
                                             l5414 6D0A                                               l5406 6CEC  
                                             l5430 6E02                                               l5422 6DDA  
                                             l5510 670C                                               l5502 66B8  
                                             ?_pad 000F                                               l6232 72BC  
                                             l6224 72B4                                               l6136 6F42  
                                             l7104 6BBA                                               l5416 6D12  
                                             l5408 6CEE                                               l5440 6E3A  
                                             l5432 6E0A                                               l5424 6DE8  
                                             l5512 670E                                               l5504 66CE  
                                             l5600 5B60                                               l5096 7944  
                                             l6090 7312                                               l6234 72CC  
                                             l6226 72B8                                               l6138 6F52  
                                             l6410 65D2                                               l7106 6BE4  
                                             l5450 6E74                                               l5442 6E50  
                                             l5434 6E1C                                               l5426 6DF0  
                                             l5514 671E                                               l5610 5C2E  
                                             l5602 5B74                                               l5098 7960  
                                             l6092 7324                                               l6244 72E2  
                                             l6236 72CE                                               l6420 65EA  
                                             l6412 65E2                                               l6404 65A8  
                                             l7108 6BE8                                               l5380 6C6A  
                                             l5452 6E7C                                               l5444 6E58  
                                             l5436 6E24                                               l5428 6DF4  
                                             l8100 73B4                                               l5460 6EC4  
                                             l5540 679C                                               l5524 6748  
                                             l5516 6722                                               l5508 66E2  
                                             l5620 5CEA                                               l5604 5B82  
                                             l5612 5C62                                               l6094 7346  
                                             l6246 72FE                                               l6238 72DE  
                                             l6430 6604                                               l6414 65E6  
                                             l6406 65B8                                               l5390 6C90  
                                             l5382 6C72                                               l5446 6E5E  
                                             l5438 6E2C                                               l8102 73D2  
                                             l5462 6EF2                                               l5542 67AC  
                                             l5534 6770                                               l5526 6752  
                                             l5518 6730                                               l5614 5C9E  
                                             l8110 755A                                               l5640 636A  
                                             l6096 734E                                               l6088 7312  
                                             l6248 7300                                               l6432 6614  
                                             l6408 65C0                                               l5392 6C98  
                                             l5384 6C76                                               l5376 6C58  
                                             l5448 6E64                                               l5560 78F8  
                                             l8120 6096                                               l5464 6F02  
                                             l5456 6E86                                               l5536 677C  
                                             l5528 675C                                               l5616 5CB2  
                                             l5608 5BF2                                               l8112 7566  
                                             l8104 7806                                               l5650 6452  
                                             l5642 638C                                               l6098 737A  
                                             l6450 6694                                               l6442 663C  
                                             l6434 6628                                               l6426 65EE  
                                             l5394 6CAA                                               l5386 6C84  
                                             l5378 6C5C                                               l8130 60FC  
                                             l8122 60BA                                               l5466 6F26  
                                             l5458 6EB4                                               l5538 678C  
                                             l5570 6954                                               l5562 68C2  
                                             l5618 5CDA                                               l8114 756A  
                                             l8106 780E                                               l5644 6394  
                                             l5652 647C                                               l5636 6354  
                                             l6452 66A4                                               l6444 665C  
                                             l6436 6638                                               l6428 6602  
                                             l5396 6CB2                                               l5388 6C8C  
                                             l8140 612C                                               l8132 6108  
                                             l8124 60D6                                               l5468 6F2C  
                                             l5580 69B6                                               l5564 68E2  
                                             l8116 7576                                               l8108 7546  
                                             l5646 63F6                                               l5638 6358  
                                             l6454 66A6                                               l6446 666C  
                                             l5398 6CBA                                               l5558 78EA  
                                             l8150 61A0                                               l8142 615E  
                                             l8134 6110                                               l8126 60E6  
                                             l5566 6920                                               l5574 6960  
                                             l5590 74AE                                               l8118 757A  
                                             l8400 7840                                               l6448 6692  
                                             l4880 6D62                                               l4872 6D1C  
                                             l8160 61F2                                               l8152 61B2  
                                             l8144 6164                                               l8136 611C  
                                             l8128 60EC                                               l5576 6972  
                                             l5568 6948                                               l5592 74C2  
                                             l8402 7856                                               l7098 6B90  
                                             l4882 6D94                                               l4874 6D2C  
                                             l8090 767A                                               l8154 61CC  
                                             l8146 616A                                               l8138 6126  
                                             l5930 7004                                               l5940 6210  
                                             l8404 785E                                               l8500 7442  
                                             l4876 6D3C                                               l8084 765C  
                                             l8092 737E                                               l8156 61DC  
                                             l8148 6186                                               l5596 5AEA  
                                             l5588 74A0                                               l5932 700C  
                                             l5950 62B2                                               l5942 6214  
                                             l8406 7876                                               l8502 7452  
                                             l4878 6D46                                               l8086 7668  
                                             l8094 738C                                               l8158 61E2  
                                             l5598 5B0A                                               l5934 7028  
                                             l5926 6FDA                                               l5944 6226  
                                             l8504 745A                                               l8088 7676  
                                             l8096 73A0                                               l5936 7048  
                                             l5928 6FE2                                               l5954 630E  
                                             l5946 6248                                               l8506 749C  
                                             l8610 77A6                                               l8098 73B0  
                                             l5938 7050                                               l5948 6250  
                                             l5956 6350                                               l8532 69C0  
                                             l8612 77C6                                               l8620 71BA  
                                             l8700 56A4                                               l8390 724A  
                                             l8550 6A22                                               l8534 69D4  
                                             l8606 778E                                               l8622 71CE  
                                             l8710 5720                                               l8702 56B6  
                                             l8392 7264                                               l8560 6A68  
                                             l8552 6A30                                               l8544 69FC  
                                             l8536 69D8                                               l8608 779E  
                                             l8624 71FA                                               l8616 71A6  
                                             l8720 57AC                                               l8712 5732  
                                             l8704 56DE                                               l8394 7280  
                                             l8386 7232                                               l8570 6AA4  
                                             l8562 6A74                                               l8554 6A3C  
                                             l8546 6A10                                               l8538 69F8  
                                             l8626 71FE                                               l8618 71B6  
                                             l8650 5D10                                               l8722 57BE  
                                             l8730 57EE                                               l8714 5744  
                                             l8706 56FC                                               l8388 7232  
                                             l8564 6A80                                               l8556 6A56  
                                             l8548 6A12                                               l8644 796A  
                                             l8580 743E                                               l8660 5D90  
                                             l8652 5D28                                               l8732 5804  
                                             l8740 584C                                               l8724 57C8  
                                             l8716 5760                                               l8708 570E  
                                             l8398 7840                                               l8566 6A8C  
                                             l8558 6A5C                                               l8574 73E4  
                                             l8590 709E                                               l8662 5DA2  
                                             l8670 5DEA                                               l8654 5D38  
                                             l8646 5CFC                                               l8742 5868  
                                             l8734 581E                                               l8726 57E2  
                                             l8718 5776                                               l8568 6A98  
                                             l8576 73F4                                               l8592 70B2  
                                             l8584 7080                                               l8680 5E4A  
                                             l8672 5DF4                                               l8664 5DB4  
                                             l8656 5D4A                                               l8648 5D00  
                                             l8744 587E                                               l8736 5838  
                                             l8578 73FC                                               l8594 70C6  
                                             l8586 7084                                               l8690 5EAA  
                                             l8682 5E64                                               l8674 5E0E  
                                             l8666 5DC6                                               l8658 5D72  
                                             l8738 5840                                               l8780 7998  
                                             l8588 708A                                               l8596 70DA  
                                             l8684 5E6C                                               l8676 5E1A  
                                             l8668 5DD8                                               l8692 5668  
                                             l8598 7114                                               l8678 5E30  
                                             l8686 5E78                                               l8694 566C  
                                             l8688 5E94                                               l8696 567C  
                                             l8698 5694                                               STR_1 10A4  
                                             STR_2 107A                                               STR_3 108D  
                                             STR_4 1071                                               STR_5 10A4  
                                             STR_6 107A                                               STR_7 10C4  
                                             STR_8 10D1                                               _LATA 0F89  
                                             _LATB 0F8A                                               _LATC 0F8B  
                                             u4000 6D2C                                               _LATD 0F8C  
                                             u4001 6D28                                               _LATE 0F8D  
                                             u4010 6D3C                                               u4011 6D38  
                                             u4020 6D62                                               u4021 6D5E  
                                             u4030 6D94                                               u4031 6D90  
                                             u5000 6F26                                               u5001 6F22  
                                             u5100 6744                                               u5101 6740  
                                             u5110 676C                                               u5111 6768  
                                             u6000 6F42                                               u5120 678C  
                                             u5200 6972                                               u6001 6F3E  
                                             u5121 6788                                               u5201 696E  
                                             u6010 6F52                                               u5130 679C  
                                             u6011 6F4E                                               u5131 6798  
                                             u6020 6F74                                               u5220 69AC  
                                             u5300 5BEE                                               u6021 6F70  
                                             u5221 69A6                                               u5301 5BEA  
                                             u5070 66CE                                               u5230 69AE  
                                             u5310 5C12                                               u5071 66CA  
                                             u5215 6984                                               u5160 78F8  
                                             u5080 6702                                               u5320 5C2E  
                                             u5161 78F4                                               u5321 5C2A  
                                             u6034 6FCC                                               u5090 6730  
                                             u5170 6902                                               u5330 5C82  
                                             u5250 74AE                                               u6035 6FC8  
                                             u5091 672C                                               u5315 5C08  
                                             u5251 74AA                                               u5404 6416  
                                             u5180 6920                                               u5340 5C9E  
                                             u5260 5B32                                               u5405 6412  
                                             u5085 66F8                                               u5181 691C  
                                             u5341 5C9A                                               u6070 72B4  
                                             u5190 6948                                               u5350 5CDA  
                                             u5270 5B60                                               u6071 72B0  
                                             u5191 6944                                               u5175 68F8  
                                             u5351 5CD6                                               u5335 5C78  
                                             u5271 5B5C                                               u6080 72DE  
                                             u8000 738C                                               u5280 5B82  
                                             u6081 72DA                                               u8001 7388  
                                             u5281 5B7E                                               u5265 5B28  
                                             u5370 636A                                               u6090 7310  
                                             u6410 65D2                                               u8010 73D2  
                                             u5371 6366                                               u6091 730C  
                                             u6411 65CE                                               u8011 73CE  
                                             u5380 638C                                               u6420 65E2  
                                             u4900 6CE4                                               u8100 61B2  
                                             u8020 783E                                               u5381 6388  
                                             u6421 65DE                                               u4901 6CE0  
                                             u8101 61AE                                               u8021 783A  
                                             u6430 6614                                               u4910 6D0A  
                                             u8110 61CC                                               u8030 7594  
                                             u6431 6610                                               u4911 6D06  
                                             u8111 61C8                                               u5295 5B96  
                                             u8031 7590                                               u6440 666C  
                                             u4920 6DE8                                               u8120 61DC  
                                             u8040 60A6                                               u5296 5BA0  
                                             u6441 6668                                               u4921 6DE4  
                                             u8121 61D8                                               u8041 60A0  
                                             u5297 5BB0                                               u5394 63B4  
                                             u6450 66A4                                               u7330 6C04  
                                             u4930 6E02                                               u8050 60A8  
                                             u5395 63B0                                               u6451 66A0  
                                             u7331 6C00                                               u4931 6DFE  
                                             u6460 66B6                                               u4860 6C6A  
                                             u4940 6E1C                                               u8060 60BA  
                                             u5820 7004                                               u6461 66B2  
                                             u4861 6C66                                               u4941 6E18  
                                             u8061 60B6                                               u5821 7000  
                                             u4870 6C84                                               u4950 6E3A  
                                             u8070 60E6                                               u5830 7076  
                                             u4871 6C80                                               u4951 6E36  
                                             u8071 60E2                                               u5831 7072  
                                             u5840 6226                                               u4880 6CAA  
                                             u4960 6E50                                               u8080 60FC  
                                             u5841 6222                                               u4881 6CA6  
                                             u4961 6E4C                                               u8081 60F8  
                                             u5850 6248                                               u4890 6CC8  
                                             u4970 6E74                                               u8090 61A0  
                                             u5851 6244                                               u4891 6CC4  
                                             u4971 6E70                                               u8091 619C  
                                             u8500 7452                                               u4980 6EB4  
                                             u8501 744E                                               u4981 6EB0  
                                             u4990 6EF2                                               u4991 6EEE  
                                             u5880 6326                                               u5864 6270  
                                             u5960 7324                                               u8520 69D4  
                                             u5881 6320                                               u5865 626C  
                                             u5961 7320                                               u8521 69D0  
                                             u5890 6328                                               u5874 62D2  
                                             u5970 7346                                               u8530 6A22  
                                             u8610 5D38                                               u5875 62CE  
                                             u5971 7342                                               u8531 6A1E  
                                             u8611 5D34                                               u8540 73F4  
                                             u8620 5D4A                                               u8700 56B6  
                                             u8541 73F0                                               u8621 5D46  
                                             u8701 56B2                                               u8550 779E  
                                             u8630 5DA2                                               u8710 570E  
                                             u5990 78B0                                               u8551 779A  
                                             u8631 5D9E                                               u8711 570A  
                                             u5991 78AC                                               u8560 71B6  
                                             u8640 5DB4                                               u8720 5720  
                                             u8561 71B2                                               u8641 5DB0  
                                             u8721 571C                                               u8570 71F4  
                                             u8650 5DC6                                               u8730 5732  
                                             u8651 5DC2                                               u8731 572E  
                                             u8580 7220                                               u8660 5DD8  
                                             u8740 5744                                               u8661 5DD4  
                                             u8741 5740                                               u8590 7230  
                                             u8670 5DEA                                               u8750 57BE  
                                             u8591 722C                                               u8671 5DE6  
                                             u8751 57BA                                               u8680 5E30  
                                             u8760 5804                                               u8577 71EA  
                                             u8681 5E2C                                               u8761 5800  
                                             u8690 56A4                                               u8587 7216  
                                             u8691 56A0                                               u7990 769A  
                                             u7991 7696                                   ??_initialize_var 0001  
                                             abs@a 0007                                               _lcd1 00F9  
                                             _dbuf 0200                     gpio_pin_read_logic@_pin_config 0001  
                                             _cp_h 106D                                               _cp_l 1069  
                                             _dp_h 1009                                               _dp_l 1001  
                                             _labs 74A0                                               _main 3DE8  
                                             _dtoa 6096                                               _num1 01F6  
                                             _num2 01F2                                               _num3 01EE  
                        lcd_4bit_set_curser@column 0014                                               _prec 00D4  
                                             _powf 10D6                                               pad@i 0015  
                                             pad@p 0012                                               fsr0h 0FEA  
                                             fsr1h 0FE2                                               indf0 0FEF  
                                             fsr2h 0FDA                                               fsr0l 0FE9  
                                             indf1 0FE7                                               indf2 0FDF  
                                             fsr1l 0FE1                                               fsr2l 0FD9  
                lcd_4bit_send_char_data_pos@column 001A                                      ___fpclassifyf 68C2  
                                             prodh 0FF4                                               prodl 0FF3  
                                             start 0000                                    ___fldiv@new_exp 0053  
                       ecu_keypad_get_value@keypad 000B                          lcd_send_4bit@command_data 000C  
                                     ___param_bank 0000                         ??_multiplication_operation 003B  
                            _lcd_4bit_send_command 7442                                              ??_abs 0009  
                             _gpio_pin_write_logic 6354                     lcd_4bit_send_string_pos@column 001A  
                                            ??_pad 0014                                       _total_result 00DF  
                                            l12000 53E2                                              l12010 5440  
                                            l12002 5404                                              l11300 4414  
                                            l12020 54A0                                              l12012 5448  
                                            l12004 540C                                              l12100 761C  
                                            l11310 4448                                              l11302 4416  
                                            l12030 54E0                                              l12022 54B8  
                                            l12014 545C                                              l12006 541A  
                                            l12102 762A                                              l11400 4656  
                                            l11320 4484                                              l11304 4426  
                                            l11312 4450                                              l12120 5F5E  
                                            l12112 5EE4                                              l12200 4E8E  
                                            l12032 54F2                                              l12040 5508  
                                            l12024 54C2                                              l12016 5468  
                                            l12008 541E                                              l12104 7632  
                                            l11410 46AE                                              l11402 4658  
                                            l11330 4498                                              l11322 4488  
                                            l11314 4460                                              l11306 4436  
                                            l12130 5FB8                                              l12114 5EF4  
                                            l12210 4F38                                              l12202 4E9C  
                                            l12050 55AA                                              l12034 54F8  
                                            l12042 553A                                              l12018 5484  
                                            l12106 763A                                              l11500 50CA  
                                            l11420 46DC                                              l11404 4668  
                                            l11340 44AC                                              l11332 449C  
                                            l11324 448C                                              l11316 4472  
                                            l11308 4446                                              l12140 601C  
                                            l12132 5FBA                                              l12124 5F72  
                                            l12116 5F02                                              l12212 4F80  
                                            l12204 4EC6                                              l12300 1342  
                                            l12060 560C                                              l12052 55D4  
                                            l12044 555A                                              l12036 5500  
                                            l12028 54D6                                              l12108 764A  
                                            l11502 50DA                                              l11510 5104  
                                            l11422 46EA                                              l11414 46C2  
                                            l11430 4708                                              l11406 4678  
                                            l11342 44B0                                              l11334 44A0  
                                            l11326 4490                                              l11318 4480  
                                            l11350 44C0                                              l12150 6074  
                                            l12142 603A                                              l12134 5FC6  
                                            l12126 5F7A                                              l12118 5F48  
                                            l12230 5916                                              l12214 4F8A  
                                            l12206 4EE6                                              l12310 13BE  
                                            l12302 138E                                              l12054 55E2  
                                            l12046 5582                                              l12062 5638  
                                            l11600 53CE                                              l11520 5146  
                                            l11512 5114                                              l11504 50EA  
                                            l11424 46F2                                              l11416 46CC  
                                            l11408 469E                                              l11432 4716  
                                            l11360 4530                                              l11352 44C4  
                                            l11344 44B4                                              l11336 44A4  
                                            l11328 4494                                              l11280 43AC  
                                            l11272 4380                                              l12152 6082  
                                            l12144 603C                                              l12136 6002  
                                            l12128 5F86                                              l12240 5992  
                                            l12232 591E                                              l12224 58B6  
                                            l12216 4FA0                                              l12208 4EFA  
                                            l12160 4C7A                                              l12400 17B4  
                                            l12320 1424                                              l12312 13E0  
                                            l12304 13AA                                              l11602 53D4  
                                            l11514 512A                                              l11506 50FA  
                                            l11442 4768                                              l11450 47BE  
                                            l11434 471A                                              l11426 46F6  
                                            l11418 46DA                                              l11370 455A  
                                            l11362 453C                                              l11354 44EE  
                                            l11346 44B8                                              l11338 44A8  
                                            l11290 43E6                                              l11282 43BC  
                                            l11274 438C                                              l12154 6084  
                                            l12146 6040                                              l12138 600E  
                                            l12250 5A12                                              l12234 593A  
                                            l12242 599E                                              l12226 58C6  
                                            l12218 4FB6                                              l12162 4CAE  
                                            l12330 148A                                              l12322 144C  
                                            l12314 13EE                                              l12066 5644  
                                            l12090 769C                                              l11604 53D6  
                                            l11540 51C8                                              l11532 517E  
                                            l11516 513A                                              l11524 515A  
                                            l11508 50FC                                              l11460 4810  
                                            l11452 47CE                                              l11444 4774  
                                            l11436 4728                                              l11428 4706  
                                            l11380 45B0                                              l11372 457C  
                                            l11364 4540                                              l11356 450A  
                                            l11348 44BC                                              l11292 43EC  
                                            l11284 43CC                                              l11276 439A  
                                            l12148 6064                                              l11700 4B0A  
                                            l11620 486C                                              l11612 4840  
                                            l12260 5AA4                                              l12252 5A46  
                                            l12244 59BA                                              l12236 596E  
                                            l12228 58E2                                              l12180 4D6E  
                                            l12164 4CDC                                              l12172 4D0E  
                                            l12500 1FF4                                              l12420 1822  
                                            l12404 17C8                                              l12340 153E  
                                            l12332 14D6                                              l12092 76A4  
                                            l11550 520E                                              l11542 51D0  
                                            l11534 5198                                              l11526 516A  
                                            l11518 5142                                              l11470 482E  
                                            l11462 4816                                              l11454 47DE  
                                            l11446 4782                                              l11438 473E  
                                            l11390 45EA                                              l11382 45BE  
                                            l11374 458C                                              l11366 454E  
                                            l11358 451A                                              l11294 43FE  
                                            l11286 43CE                                              l11278 439C  
                                            l11702 4B18                                              l11630 48A8  
                                            l11622 487C                                              l11614 484C  
                                            l12262 5AD8                                              l12254 5A4E  
                                            l12246 59EE                                              l12238 5976  
                                            l12190 4DEE                                              l12182 4D7C  
                                            l12174 4D2C                                              l12166 4CEA  
                                            l12158 4C6A                                              l12510 21AC  
                                            l12502 204C                                              l12430 196E  
                                            l12422 1856                                              l12406 17EC  
                                            l12350 15B6                                              l12342 154C  
                                            l12334 14EE                                              l12318 1416  
                                            l12326 1460                                              l12270 113E  
                                            l12094 76B4                                              l11560 5266  
                                            l11552 522C                                              l11544 51E0  
                                            l11536 51A8                                              l11528 516A  
                                            l11480 5064                                              l11464 4818  
                                            l11456 47FE                                              l11448 47BC  
                                            l11392 45EC                                              l11384 45CC  
                                            l11368 4550                                              l11296 4400  
                                            l11288 43D6                                              l11712 4B82  
                                            l11720 4BCA                                              l11704 4B1C  
                                            l11640 48DE                                              l11632 48AE  
                                            l11624 488C                                              l11616 485A  
                                            l12256 5A6A                                              l12248 59F6  
                                            l12192 4E02                                              l12176 4D5A  
                                            l12168 4CFA                                              l12520 22D4  
                                            l12512 21E0                                              l12504 20A4  
                                            l12440 1AB0                                              l12432 19A2  
                                            l12424 18AE                                              l12416 180E  
                                            l12360 167A                                              l12352 15E2  
                                            l12328 147C                                              l12280 1182  
                                            l11800 3492                                              l12096 76D0  
                                            l13240 409A                                              l11570 52A4  
                                            l11562 526C                                              l11554 522E  
                                            l11546 51F4                                              l11538 51B8  
                                            l11482 5074                                              l11490 509E  
                                            l11474 5048                                              l11466 481E  
                                            l11458 4802                                              l11394 45F6  
                                            l11386 45D8                                              l11378 45A0  
                                            l11298 4406                                              l11730 4C3E  
                                            l11722 4BE4                                              l11714 4B8E  
                                            l11706 4B2A                                              l11642 48EE  
                                            l11634 48BC                                              l11626 4892  
                                            l11618 485C                                              l12258 5A72  
                                            l12194 4E0C                                              l12610 2ACA  
                                            l12602 2A7C                                              l12530 239A  
                                            l12522 2308                                              l12514 2214  
                                            l12506 20FC                                              l12450 1B5A  
                                            l12434 1A52                                              l12426 18E2  
                                            l12442 1AE8                                              l12362 1696  
                                            l12354 15F0                                              l12370 16E4  
                                            l12346 1584                                              l12338 1526  
                                            l12290 120E                                              l12282 11A4  
                                            l12274 1152                                              l12266 10D6  
                                            l11810 34D8                                              l11802 3496  
                                            l13250 55BE                                              l13242 41A0  
                                            l11580 530E                                              l11572 52A8  
                                            l11564 5276                                              l11556 523E  
                                            l11548 5202                                              l11492 50AE  
                                            l11484 5084                                              l11476 5054  
                                            l11468 482C                                              l11388 45DC  
                                            l11396 45FC                                              l11732 4C4C  
                                            l11724 4BF8                                              l11716 4B9C  
                                            l11708 4B58                                              l11660 4970  
                                            l11652 4938                                              l11644 48F4  
                                            l11636 48BE                                              l11628 48A2  
                                            l12196 4E18                                              l12188 4D9A  
                                            l12620 2BB2                                              l12612 2AE6  
                                            l12604 2AB6                                              l12540 24E6  
                                            l12532 23CE                                              l12524 233C  
                                            l12516 226C                                              l12508 2154  
                                            l12460 1C02                                              l12452 1B6A  
                                            l12444 1AF8                                              l12436 1A62  
                                            l12428 193A                                              l12372 16F4  
                                            l12364 16AC                                              l12356 1624  
                                            l12348 15A0                                              l12292 121C  
                                            l12284 11C6                                              l12276 116E  
                                            l12268 10F6                                              l11900 3932  
                                            l11812 34E0                                              l11804 34BC  
                                            l11820 351A                                              l13252 562A  
                                            l12700 752A                                              l13244 42AC  
                                            l13236 3FD2                                              l11590 5370  
                                            l11582 531A                                              l11574 52B6  
                                            l11566 5284                                              l11558 5250  
                                            l11494 50B4                                              l11486 5094  
                                            l11478 5062                                              l11750 67EC  
                                            l11398 4622                                              l11742 7596  
                                            l11734 4C4E                                              l11726 4C12  
                                            l11718 4BC6                                              l11670 49BA  
                                            l11662 4988                                              l11654 4944  
                                            l11646 4914                                              l11638 48CE  
                                            l12198 4E26                                              l12630 2D94  
                                            l12622 2BC2                                              l12614 2B3C  
                                            l12550 25AC                                              l12542 24F6  
                                            l12534 2402                                              l12526 234C  
                                            l12518 22A0                                              l12470 1C7E  
                                            l12454 1BC2                                              l12446 1B14  
                                            l12438 1A7C                                              l12390 1788  
                                            l12382 171C                                              l12374 1702  
                                            l12358 1634                                              l12366 16D0  
                                            l12294 1238                                              l13254 70EE  
                                            l11910 39FE                                              l11902 3950  
                                            l11830 3564                                              l11822 3540  
                                            l11814 34F4                                              l11806 34CE  
                                            l13246 4308                                              l13238 4056  
                                            l13256 6466                                              l11592 5386  
                                            l11584 5328                                              l11576 52E4  
                                            l11568 5296                                              l11496 50BA  
                                            l11488 5096                                              l11760 685A  
                                            l11752 67FC                                              l11744 75A6  
                                            l11728 4C2E                                              l11736 4C54  
                                            l11680 4A10                                              l11672 49CA  
                                            l11664 4994                                              l11656 494E  
                                            l11648 4924                                              l12640 2E5A  
                                            l12632 2DC8                                              l12624 2BE4  
                                            l12560 2766                                              l12552 2678  
                                            l12544 2510                                              l12536 2436  
                                            l12528 2366                                              l12480 1D94  
                                            l12472 1C8E                                              l12464 1C2A  
                                            l12456 1BDA                                              l12448 1B48  
                                            l12392 1796                                              l12384 1732  
                                            l12296 124C                                              l12288 11FE  
                                            l12720 6592                                              l12712 649E  
                                            l12704 6480                                              l11920 3AAE  
                                            l11912 3A0E                                              l11904 3984  
                                            l11840 3596                                              l11824 3552  
                                            l11816 34FE                                              l11808 34D2  
                                            l13248 551C                                              l12800 3F02  
                                            l13258 633A                                              l11594 53A0  
                                            l11586 5352                                              l11498 50C8  
                                            l12730 77CA                                              l11762 6868  
                                            l11754 682A                                              l11770 78B2  
                                            l11738 4C58                                              l11690 4AB4  
                                            l11682 4A2C                                              l11674 49D6  
                                            l11666 49A0                                              l11658 4964  
                                            l12650 2FA6                                              l12642 2EB2  
                                            l12634 2DD8                                              l12626 2D50  
                                            l12618 2B50                                              l12562 2780  
                                            l12554 269E                                              l12546 2544  
                                            l12538 24B2                                              l12490 1EA8  
                                            l12482 1DA4                                              l12474 1CDC  
                                            l12466 1C4E                                              l12458 1BEA  
                                            l12570 286C                                              l12386 1742  
                                            l12298 1268                                              l12722 6594  
                                            l12714 64BE                                              l12706 6486  
                                            l11930 3B12                                              l11922 3AE2  
                                            l11914 3A1E                                              l11906 39B6  
                                            l11850 3654                                              l11826 3556  
                                            l12810 3F66                                              l12802 3F18  
                                            l11596 53BC                                              l11588 5356  
                                            l11764 68B8                                              l11756 683A  
                                            l11748 67BE                                              l11772 78C8  
                                            l11692 4AC2                                              l11684 4A38  
                                            l11676 49E6                                              l11668 49AE  
                                            l12660 313A                                              l12652 2FDA  
                                            l12644 2F0A                                              l12636 2DF2  
                                            l12628 2D60                                              l12580 29AE  
                                            l12572 2896                                              l12564 27B4  
                                            l12556 2722                                              l12548 2578  
                                            l12492 1EDC                                              l12484 1DBE  
                                            l12476 1D50                                              l12468 1C62  
                                            l12388 1764                                              l12716 64F2  
                                            l12708 648A                                              l11940 3BC4  
                                            l11932 3B18                                              l11924 3AF6  
                                            l11916 3A52                                              l11908 39CC  
                                            l11860 3714                                              l11852 3686  
                                            l11844 35DC                                              l11828 355C  
                                            l11780 3406                                              l12740 6B5E  
                                            l12732 6AB2                                              l12724 76DA  
                                            l12820 4014                                              l12812 3F92  
                                            l12804 3F2C                                              l11598 53C0  
                                            l11766 68BE                                              l11758 6848  
                                            l11774 78D8                                              l11694 4AE0  
                                            l11686 4A54                                              l11678 4A00  
                                            l12670 32CE                                              l12662 3192  
                                            l12654 3032                                              l12646 2F3E  
                                            l12638 2E26                                              l12582 29BE  
                                            l12574 28EE                                              l12566 2804  
                                            l12558 2756                                              l12494 1F34  
                                            l12486 1E08                                              l12478 1D84  
                                            l12718 6590                                              l11950 3C08  
                                            l11942 3BE0                                              l11934 3B20  
                                            l11918 3AA8                                              l11926 3AFA  
                                            l11870 37AA                                              l11854 36C4  
                                            l11846 35E2                                              l11838 357C  
                                            l11790 3456                                              l11782 3416  
                                            l12742 6B6A                                              l12734 6B0A  
                                            l12726 7716                                              l12830 4084  
                                            l12806 3F3E                                              l11696 4AEA  
                                            l11688 4A7E                                              l12680 33D2  
                                            l12672 3302                                              l12664 320E  
                                            l12656 308A                                              l12648 2F72  
                                            l12592 29E6                                              l12576 2946  
                                            l12568 2838                                              l12496 1F8C  
                                            l12488 1E5A                                              l12728 7752  
                                            l11952 3C10                                              l11944 3BEE  
                                            l11960 3C30                                              l11936 3B2C  
                                            l11928 3B0A                                              l11880 37DE  
                                            l11872 37B2                                              l11856 36D8  
                                            l11864 3754                                              l11848 3616  
                                            l11792 345E                                              l11784 3424  
                                            l12744 6B76                                              l12736 6B2C  
                                            l12832 40C8                                              l12824 4040  
                                            l12808 3F50                                              l12816 3FBE  
                                            l11698 4AF8                                              l12682 33EA  
                                            l12674 3312                                              l12666 3266  
                                            l12658 30E2                                              l12594 29FE  
                                            l12578 297A                                              l12498 1FC0  
                                            l11970 3CB6                                              l11962 3C42  
                                            l11954 3C20                                              l11946 3BFE  
                                            l11938 3BA4                                              l11890 3828  
                                            l11882 37F6                                              l11874 37BA  
                                            l11866 378E                                              l11858 370C  
                                            l11794 346E                                              l11786 3428  
                                            l11778 3400                                              l12690 75F8  
                                            l12738 6B48                                              l12850 4252  
                                            l12834 40F4                                              l12826 406C  
                                            l12818 3FE8                                              l12842 418C  
                                            l12770 3DE8                                              l12676 3346  
                                            l12668 329A                                              l11980 3D30  
                                            l11972 3CEA                                              l11964 3C54  
                                            l11956 3C24                                              l11948 3C02  
                                            l11892 383C                                              l11884 3808  
                                            l11876 37BE                                              l11868 379E  
                                            l11796 347E                                              l11788 344C  
                                            l12692 74F6                                              l12852 427E  
                                            l12844 41CE                                              l12836 4120  
                                            l12780 3E32                                              l12772 3DEC  
                                            l12678 3392                                              l11990 3D9C  
                                            l11982 3D38                                              l11974 3CF2  
                                            l11966 3C58                                              l11958 3C2A  
                                            l11894 38A0                                              l11878 37D0  
                                            l11886 3810                                              l11798 348A  
                                            l12694 74F6                                              l12846 41FA  
                                            l12862 42F2                                              l12838 414C  
                                            l12790 3EA0                                              l12782 3E3E  
                                            l12774 3DF0                                              l11992 3DAC  
                                            l11984 3D46                                              l11968 3C5E  
                                            l11976 3CF6                                              l11896 38F8  
                                            l11888 3818                                              l12688 75DC  
                                            l12696 750A                                              l12864 4336  
                                            l12848 4226                                              l12856 4296  
                                            l12792 3EB6                                              l12784 3E56  
                                            l12776 3DFC                                              l11994 3DC2  
                                            l11986 3D76                                              l11978 3D14  
                                            l11898 392C                                              l12698 750E  
                                            l12858 42DA                                              l12866 4352  
                                            l12794 3ED2                                              l12786 3E6C  
                                            l12778 3E18                                              l11996 3DCA  
                                            l11988 3D84                                              l12868 436C  
                                            l12788 3E88                                              l12798 3EEA  
                                    ___fltol@sign1 0009                                              ?_labs 0001  
                                  __end_of___fladd 4840                                              ?_main 0001  
                                            ?_dtoa 0017                                    __end_of___fldiv 53E2  
                                  __end_of___awdiv 6D1C                                    __end_of___flneg 78EA  
                                            STR_10 10D1                                              STR_11 10B6  
                                            STR_12 10C9                                              STR_15 10CD  
                                  __end_of___awmod 6E86                                    __end_of___flmul 4C6A  
                                            ?_powf 006F                                    __end_of___flsub 75DC  
                                  __end_of___fltol 67BE                                              u12000 6868  
                                            u11200 4414                                              u12001 6864  
                                            u11201 4410                                              u12010 68B8  
                                            u11210 4426                                              u12011 68B4  
                                            u11211 4422                                              u12020 78C8  
                                            u11300 456E                                              u11220 4436  
                                            u12100 35C8                                              u12021 78C4  
                                            u11301 456A                                              u11221 4432  
                                            u12101 35C4                                              u11310 457C  
                                            u11230 4472                                              u12110 3654  
                                            u12030 3424                                              u11311 4578  
                                            u11231 446E                                              u12111 3650  
                                            u12031 3420                                              u11400 46DA  
                                            u11320 458C                                              u11240 4480  
                                            u11160 439A                                              u13000 1702  
                                            u12200 3950                                              u12120 3686  
                                            u12040 346E                                              u11401 46D6  
                                            u11321 4588                                              u11241 447C  
                                            u11161 4396                                              u13001 16FE  
                                            u12201 394C                                              u12121 3682  
                                            u12041 346A                                              u11410 46EA  
                                            u11330 45BE                                              u11250 44EE  
                                            u11170 43AC                                              u13010 1718  
                                            u12210 39B6                                              u12130 36C4  
                                            u12050 347E                                              u11411 46E6  
                                            u11331 45BA                                              u11251 44EA  
                                            u11171 43A8                                              u13011 1714  
                                            u12211 39B2                                              u12131 36C0  
                                            u12051 347A                                              u11500 47CE  
                                            u11420 4706                                              u11340 45CC  
                                            u11260 4506                                              u11180 43BC  
                                            u13100 1C26                                              u13020 1732  
                                            u12300 3D14                                              u12220 39FE  
                                            u12140 3750                                              u12060 34BC  
                                  ___awdiv@divisor 0003                                              u11501 47CA  
                                            u11421 4702                                              u11341 45C8  
                                            u11261 4500                                              u11181 43B8  
                                            u13101 1C22                                              u13021 172E  
                                            u12301 3D10                                              u12221 39FA  
                                            u12141 374C                                              u12061 34B8  
                                            u11510 47DE                                              u11430 4716  
                                            u11350 45EA                                              u11270 4508  
                                            u11190 43FE                                              u13110 1C4E  
                                            u13030 1764                                              u12310 3D30  
                                            u12230 3A0E                                              u12150 3786  
                                            u12070 34CE                                              u11511 47DA  
                                            u11431 4712                                              u11351 45E6  
                                            u11191 43FA                                              u13111 1C4A  
                                            u13031 1760                                              u12311 3D2C  
                                            u12231 3A0A                                              u12151 3782  
                                            u12071 34CA                                              u11600 50EA  
                                            u11520 47FE                                              u11440 4728  
                                            u11360 4622                                              u11280 4530  
                                            u13200 2BE4                                              u13040 1788  
                                            u12320 3D96                                              u12240 3AA8  
                                            u12160 379E                                              u12080 3540  
                                            u12400 76D0                                              u11601 50E6  
                                            u11521 47FA                                              u11441 4724  
                                            u11361 461E                                              u11281 452C  
                                            u13201 2BE0                                              u13041 1784  
                                            u12321 3D90                                              u12241 3AA4  
                                            u12161 379A                                              u12081 353C  
                                            u12401 76CC                                              u11610 512A  
                                            u11530 4810                                              u11450 473E  
                                            u11370 4668                                              u11290 454E  
                                            u12410 5EF4                                              u13130 29E2  
                                            u13050 1796                                              u12330 3D98  
                                            u12250 3AF6                                              u12170 37D0  
                                            u12090 3552                                              u11611 5126  
                                            u11531 480C                                              u11451 473A  
                                            u11371 4664                                              u11291 454A  
                                            u12411 5EF0                                              u13131 29DE  
                                            u13051 1792                                              u12251 3AF2  
                                            u12171 37CC                                              u12091 354E  
                                            u11700 52B6                                              u11620 516A  
                                            u11540 482C                                              u11460 4754  
                                            u11380 469E                                              u12500 6082  
                                            u12420 5F02                                              u13140 29FE  
                                            u13060 17EC                                              u12340 3DAC  
                                            u12260 3BA4                                              u12180 37DE  
                                            u13300 750A                                              u11701 52B2  
                                            u11621 5166                                              u11541 4828  
                                            u11461 4750                                              u11381 469A  
                                            u12501 607E                                              u12421 5EFE  
                                            u13141 29FA                                              u13125 1E1A  
                                            u13061 17E8                                              u12341 3DA8  
                                            u12261 3BA0                                              u12181 37DA  
                                            u13301 7506                                              u11710 52E4  
                                            u11630 51E0                                              u11550 5062  
                                            u11470 4768                                              u11390 46AE  
                                            u12430 5F5E                                              u12510 4CAE  
                                            u13150 2A78                                              u13070 180A  
                                            u13310 649A                                              u12270 3BE0  
                                            u12190 3808                                              u12350 5404  
                                            u11711 52E0                                              u11631 51DC  
                                            u11551 505E                                              u11471 4764  
                                            u11391 46AA                                              u12431 5F5A  
                                            u12511 4CAA                                              u13215 2BFC  
                                            u13151 2A74                                              u13071 1806  
                                            u13311 6496                                              u12271 3BDC  
                                            u12191 3804                                              u12351 5400  
                                            u11720 52FA                                              u11640 5202  
                                            u11560 5074                                              u11480 4782  
                                            u12440 5FB4                                              u11800 487C  
                                            u12600 4E9C                                              u12520 4CDC  
                                            u13216 2C06                                              u13160 2AB6  
                                            u13080 1B14                                              u13320 65A6  
                                            u12280 3BEE                                              u12360 5440  
                                            u13400 3F62                                              u11721 52F6  
                                            u11641 51FE                                              u11561 5070  
                                            u11481 477E                                              u12441 5FB0  
                                            u11801 4878                                              u12601 4E98  
                                            u12521 4CD8                                              u13225 2C54  
                                            u13217 2C16                                              u13161 2AB2  
                                            u13081 1B10                                              u13321 65A2  
                                            u12281 3BEA                                              u12361 543C  
                                            u13401 3F5E                                              u11730 530E  
                                            u11650 522C                                              u11570 5084  
                                            u11490 47BC                                              u12450 5FFE  
                                            u11810 48BC                                              u12610 4F38  
                                            u12530 4CEA                                              u13250 2D50  
                                            u13226 2C5E                                              u13170 2AE6  
                                            u12290 3C42                                              u12370 5484  
                                            u13330 6B0A                                              u11731 530A  
                                            u11651 5228                                              u11571 5080  
                                            u11491 47B8                                              u12451 5FFA  
                                            u11811 48B8                                              u12611 4F34  
                                            u12531 4CE6                                              u13251 2D4C  
                                            u13235 2C9C                                              u13227 2C6E  
                                            u13171 2AE2                                              u12291 3C3E  
                                            u12371 5480                                              u13331 6B06  
                                            u11740 5328                                              u11660 5250  
                                            u11580 50C8                                              u12460 601C  
                                            u11900 4B58                                              u11820 48CE  
                                            u12700 5A6A                                              u12620 4FA0  
                                            u12540 4D2C                                              u13236 2CA6  
                                            u13180 2B3C                                              u12380 54A0  
                                            u11741 5324                                              u11661 524C  
                                            u11581 50C4                                              u12461 6018  
                                            u11901 4B54                                              u11821 48CA  
                                            u12701 5A66                                              u12621 4F9C  
                                            u12541 4D28                                              u13245 2D16  
                                            u13237 2CB6                                              u13181 2B38  
                                            u12381 549C                                              u11750 5370  
                                            u11670 5266                                              u11590 50DA  
                                            u12470 602C                                              u11910 4B6E  
                                            u11830 48DE                                              u12630 4FB6  
                                            u12550 4D5A                                              u13246 2D20  
                                            u12390 5556                                              u11751 536C  
                                            u11671 5262                                              u11591 50D6  
                                            u12471 6028                                              u11911 4B6A  
                                            u11831 48DA                                              u12631 4FB2  
                                            u12551 4D56                                              u13247 2D30  
                                            u13095 1B7E                                              u12391 5552  
                                            u11760 53A0                                              u11680 5284  
                                            u12480 603A                                              u11920 4B82  
                                            u11840 4914                                              u12560 4D7C  
                                            u13280 3392                                              u13096 1B88  
                                            u12720 113E                                              u13360 3EE6  
                                            u11761 539C                                              u11681 5280  
                                            u12481 6036                                              u11921 4B7E  
                                            u11841 4910                                              u12561 4D78  
                                            u13281 338E                                              u13265 3324  
                                            u13097 1B98                                              u12721 113A  
                                            u13361 3EE2                                              u13417 3E24  
                                            u11770 53CE                                              u11690 52A4  
                                            u12490 6074                                              u11930 4B9C  
                                            u11850 4924                                              u12650 58E2  
                                            u13290 33EA                                              u12810 1318  
                                            u12730 116E                                              u13370 3F2C  
                                            u11771 53CA                                              u11691 52A0  
                                            u12491 6070                                              u11931 4B98  
                                            u11851 4920                                              u12715 5A84  
                                            u12651 58DE                                              u13291 33E6  
                                            u13275 335A                                              u13195 2B7E  
                                            u12731 116A                                              u13507 5ED0  
                                            u13427 435E                                              u13371 3F28  
                                            u11940 4BE4                                              u11860 4A9E  
                                            u11780 485A                                              u12660 593A  
                                            u12580 4DEE                                              u13276 3364  
                                            u13196 2B88                                              u12900 14EE  
                                            u12820 1342                                              u12740 11A4  
                                            u13380 3F3E                                              u11941 4BE0  
                                            u11781 4856                                              u12661 5936  
                                            u12645 5022                                              u12581 4DEA  
                                            u13277 3374                                              u13197 2B98  
                                            u12901 14EA                                              u12821 133E  
                                            u12805 12C6                                              u12741 11A0  
                                            u13517 662E                                              u13437 5686  
                                            u13381 3F3A                                              u11950 4C12  
                                            u11870 4AF8                                              u11790 486C  
                                            u12670 5992                                              u12590 4E26  
                                            u12910 153E                                              u12830 138E  
                                            u12806 12D0                                              u12750 11C6  
                                            u13390 3F50                                              u13527 6A28  
                                            u11951 4C0E                                              u11871 4AF4  
                                            u11791 4868                                              u12671 598E  
                                            u12591 4E22                                              u12575 4DAE  
                                            u12911 153A                                              u12831 138A  
                                            u12815 130E                                              u12807 12E0  
                                            u12751 11C2                                              u13447 576A  
                                            u13391 3F4C                                              u11960 4C4C  
                                            u11880 4B18                                              u12680 59BA  
                                            u12576 4DB8                                              u12920 154C  
                                            u12840 13AA                                              u12760 121C  
                                            u13537 6A42                                              u11961 4C48  
                                            u11881 4B14                                              u11865 4A94  
                                            u12681 59B6                                              u12577 4DC8  
                                            u12921 1548                                              u12841 13A6  
                                            u12761 1218                                              u13457 579C  
                                            u11970 67EC                                              u11890 4B2A  
                                            u12690 5A12                                              u12930 15A0  
                                            u12850 13E0                                              u12770 1238  
                                            u13547 6A58                                              u11971 67E8  
                                            u11891 4B26                                              u12691 5A0E  
                                            u12931 159C                                              u12851 13DC  
                                            u12771 1234                                              u13467 5872  
                                            u11980 682A                                              u12940 15B6  
                                            u12860 13EE                                              u12780 1268  
                                            u13557 7858                                              u11981 6826  
                                            u12941 15B2                                              u12861 13EA  
                                            u12781 1264                                              u13477 58A4  
                                            u11990 6848                                              u12950 15D2  
                                            u12870 1424                                              u11991 6844  
                                            u12951 15CE                                              u12871 1420  
                                            u13487 5D1A                                              u12960 15F0  
                                            u12880 147C                                              u12961 15EC  
                                            u12881 1478                                              u13497 5E9E  
                                            u12970 1634                                              u12890 148A  
                                            u12971 1630                                              u12891 1486  
                                            u12795 127C                                              u12980 167A  
                                            u12796 1286                                              u12981 1676  
                                            u12797 1296                                              u12990 16AC  
                                            u12991 16A8                                    ___awdiv@counter 0005  
                                     vfpfcnvrt@fmt 0078                                              _PORTA 0F80  
                                            _PORTB 0F81                                              _PORTC 0F82  
                                            _PORTD 0F83                                              _PORTE 0F84  
                                            _TRISA 0F92                                              _TRISB 0F93  
                                            _TRISC 0F94                                              _TRISD 0F95  
                                            _TRISE 0F96                             ?_ecu_keypad_initialize 000F  
                                            _lg2_h 102D                                              _lg2_l 1029  
                                            _flags 00D6                                read_prec_or_width@c 0009  
                                            _errno 01E6                                read_prec_or_width@n 000A  
                                            _ivln2 101D                                              _fputc 6D1C  
                                            _fputs 765C                                    __end_of_ivln2_h 1069  
                                            _temp1 01EC                                    __end_of_ivln2_l 101D  
                                            _temp2 01EA                                              _two24 1061  
                                  __end_of_scalbnf 5AEA                                              labs@a 0001  
                                            pad@fp 000F                                              _width 00D2  
                                            _putch 799E                                              dtoa@d 0018  
                                            dtoa@i 0021                                              dtoa@p 001E  
                                            _sqrtf 4C6A                                              dtoa@s 0020  
                                            dtoa@w 001C                          convert_arr_to_float@count 0090  
               __end_of_Application_Initialization 799E                         _Application_Initialization 7998  
                                            tablat 0FF5                                              powf@i 0128  
                                            powf@j 01A8                                              powf@k 01A4  
                                            powf@n 0188                                              powf@r 0150  
                                            powf@s 0158                                              powf@t 01B0  
                                            powf@u 017C                                              powf@v 0180  
                                            powf@w 0144                                              powf@x 006F  
                                            powf@y 0073                                              powf@z 01B4  
                       ?_get_number_and_operartion 001D                                              status 0FD8  
                                  __end_of_sprintf 765C                                     ?___fpclassifyf 0001  
                           _send_the_result_to_LCD 6AB2                        ecu_keypad_get_value@columns 0013  
                   ?_gpio_pin_direction_initialize 0001                                    ??_lcd_send_4bit 000D  
                                  __initialization 7118                                       __end_of_cp_h 1071  
                                     __end_of_cp_l 106D                                       __end_of_dp_h 1011  
                                     __end_of_dp_l 1009                                       __end_of_labs 74F6  
                                     __end_of_main 4380                                       __end_of_dtoa 6210  
                                     __end_of_powf 3400                              ?_gpio_pin_write_logic 0001  
                         gpio_pin_read_logic@logic 0003                                      _lat_registers 01C2  
                                           ??_labs 0005                                             ??_main 00D0  
                                           ??_dtoa 001A                                             ??_powf 0077  
                                    __activetblptr 0002                          ??_convert_float_to_string 0080  
                               _Division_operation 77CA                         __end_of_read_prec_or_width 7080  
                                           ?_fputc 0001                                             ?_fputs 0009  
                                 ___awdiv@dividend 0001                                             ?_putch 0001  
                                           ?_sqrtf 0001                        ecu_keypad_initialize@keypad 000F  
                              ?_Division_operation 005B                 get_number_and_operartion@operation 0021  
                                 __end_of___xxtofl 6096                                      _sum_operation 76DA  
                 __end_of_lcd_4bit_send_string_pos 7232                             ?_lcd_4bit_send_command 000F  
                                     vfprintf@cfmt 007F                                             ___flge 67BE  
                                           ___fleq 6E86                          _convert_arr_to_float$2091 0087  
                        _convert_arr_to_float$2092 008B                                          ??___fladd 003A  
                                           ___wmul 7944                                          ??___fldiv 004A  
                                        ??___awdiv 0005                                          ??___flneg 0005  
                                        ??___awmod 0005                                          ??___flmul 0021  
                                        ??___flsub 0063                                          ??___fltol 0005  
                                           _efgtoa 3400                               ??_Division_operation 0064  
                                           _floorf 5AEA                                             _memcpy 7546  
                             read_prec_or_width@ap 0008                                             _keypad 01D6  
                                           _memset 787A                                             clear_0 717E  
                                           clear_1 718A                                             clear_2 7196  
                                 ___awdiv@quotient 0007                                    ___awmod@divisor 0003  
                                           isa$std 0001                                             _result 00E3  
                                 lcd_send_4bit@lcd 000B                                    ___awmod@counter 0005  
                                           pad@buf 0010                                   lcd_send_4bit@ret 000E  
                                           dtoa@fp 0017                                             _strcpy 7806  
                                           fputc@c 0001                                             fputs@c 000C  
                                           fputs@i 000D                                             fputs@s 0009  
                                        ??_scalbnf 0038                                    ___fpclassifyf@e 0009  
                                  ___fpclassifyf@u 000B                                    ___fpclassifyf@x 0001  
                                     __mediumconst 0000                                             powf@s2 0190  
                                           powf@t1 018C                                             powf@t2 011C  
                                           tblptrh 0FF7                                             tblptrl 0FF6  
                                           powf@y1 012C                                             tblptru 0FF8  
                                           powf@ax 0178                                             powf@is 0198  
                                           powf@hx 0168                                             powf@hy 0184  
                                           powf@ix 01AC                                             powf@iy 0194  
                                           powf@sn 0164                                             putch@c 0001  
                                 __end_of_vfprintf 76DA                                             sqrtf@i 000E  
                                           sqrtf@m 001A                                             sqrtf@q 0012  
                                           sqrtf@r 001E                                             sqrtf@s 000A  
                                           sqrtf@t 0016                          ecu_keypad_get_value@value 000D  
                                           sqrtf@x 0001                                          ??_sprintf 0080  
                                       ___flge@ff1 0063                                         ___flge@ff2 0067  
                                  ??___fpclassifyf 0005                                       ___xxtofl@arg 0015  
                          ??_convert_int_to_string 0080                                       ___xxtofl@exp 0014  
                                     ___xxtofl@val 000B                                         ___fleq@ff1 0001  
                                       ___fleq@ff2 0005                                         __accesstop 0080  
                          __end_of__initialization 719C              get_number_and_operartion@keypad_value 0024  
                                       ___flneg@f1 0001                                     ?_sum_operation 0042  
                  __end_of_convert_float_to_string 761C                                      ___rparam_used 0001  
                                       ___fltol@f1 0001                                 ecu_relay_off@F3487 00D7  
                          _lcd_4bit_send_char_data 73E4                   __end_of_multiplication_operation 778E  
                           ??_gpio_pin_write_logic 0004                                     __pcstackCOMRAM 0001  
                                     __pidataBANK0 7990                                       __pidataBANK1 791E  
                                     __pidataBANK2 7980                                      __end_of_lg2_h 1031  
                                    __end_of_lg2_l 102D                           _ecu_layer_Initialization 796A  
                                    __end_of_ivln2 1021                                      __end_of_fputc 6DD6  
                                    __end_of_fputs 769C                                      __end_of_two24 1065  
                                    __end_of_putch 79A0                                      __end_of_sqrtf 5048  
                                       __end_of_L1 1061                                         __end_of_L2 105D  
                                       __end_of_L3 1059                                         __end_of_L4 1055  
                                       __end_of_L5 1051                                         __end_of_L6 104D  
                                       __end_of_P1 1049                                         __end_of_P2 1045  
                                       __end_of_P3 1041                                         __end_of_P4 103D  
                                       __end_of_P5 1039                           lcd_4bit_send_command@lcd 000F  
                         lcd_4bit_send_command@ret 0011                                         __end_of_bp 1019  
                                       __end_of_cp 1025                            ??_subtraction_operation 006C  
                     __end_of_ecu_keypad_get_value 66B8           gpio_pin_direction_initialize@_pin_config 0001  
                     ?_lcd_4bit_send_char_data_pos 0018                                            ??_fputc 0004  
                                          ??_fputs 000C                                            ??_putch 0001  
                                          ??_sqrtf 0005                                         __pbssBANK0 00D2  
                                       __pbssBANK1 01DE                                         __pbssBANK2 0200  
                              initialize_var@count 0001                      subtraction_operation@num1_val 0063  
                    subtraction_operation@num2_val 0067                                            ?___flge 0063  
                                          ?___fleq 0001                                            ?___wmul 0001  
                                          ?_efgtoa 006F                                            ?_floorf 005B  
                                          ?_memcpy 0001                                            ?_memset 0001  
                          ??_ecu_keypad_initialize 0011                       ecu_keypad_initialize@columns 0014  
                                          ?_strcpy 0001                                          ?___xxtofl 000B  
                        ?_lcd_4bit_send_string_pos 0018                                      _keypad_values 0250  
                          ?_send_the_result_to_LCD 00CC                                    ??_sum_operation 004B  
                      ?_Application_Initialization 0001                                     _tris_registers 01CC  
                      ??_get_number_and_operartion 0022                          ??_lcd_4bit_send_char_data 0011  
                                          __Hparam 0000                                            __Lparam 0000  
                              _gpio_pin_initialize 7312                                            ___fladd 4380  
                                          ___fldiv 5048                                _gpio_pin_read_logic 6F30  
                                          ___awdiv 6C58                                            ___flneg 78B2  
                                          ___awmod 6DD6                                            ___flmul 4840  
                                          ___flsub 7596                                            ___fltol 66B8  
                                        ?_vfprintf 007C                                       __psmallconst 1000  
                                          __pcinit 7118                                            __ramtop 1000  
                                          __ptext0 3DE8                                            __ptext1 76DA  
                                          __ptext2 7716                                            __ptext3 6AB2  
                                          __ptext4 74F6                                            __ptext5 75DC  
                                          __ptext6 761C                                            __ptext7 769C  
                                          __ptext8 53E2                                            __ptext9 6FDA  
                  ??_gpio_pin_direction_initialize 0003                              read_prec_or_width@fmt 0007  
                                          _ivln2_h 1065                                            _ivln2_l 1019  
                                       ??___xxtofl 000F                                            _scalbnf 58B6  
                                 ___awmod@dividend 0001                                            efgtoa@c 0074  
                                          efgtoa@d 008B                                            efgtoa@e 008F  
                                          efgtoa@f 0070                                            efgtoa@g 00A2  
                                          efgtoa@h 0099                                            efgtoa@i 0097  
                                          efgtoa@l 009D                                            efgtoa@m 008D  
                                          efgtoa@n 00A6                                            efgtoa@p 0082  
                                          efgtoa@t 0084                                            efgtoa@u 00A8  
                                          efgtoa@w 0091                          ?_multiplication_operation 0032  
                             ?_gpio_pin_initialize 000B                               ?_gpio_pin_read_logic 0001  
                   __end_of_send_the_result_to_LCD 6B90                                            _sprintf 761C  
                             end_of_initialization 719C                                            floorf@e 0069  
                                          floorf@m 0065                                            floorf@u 006B  
                                          floorf@x 005B                                            memcpy@d 0008  
                                          memcpy@n 0005                                            memcpy@s 000A  
                                          fputc@fp 0003                                            memset@c 0003  
                                          memset@n 0005                                            memset@p 0007  
                                    __Lmediumconst 0000                                            fputs@fp 000B  
                               _read_prec_or_width 6FDA                            ??_lcd_4bit_send_command 0011  
                             _ecu_keypad_get_value 65A8                                         _operation2 00F4  
                                       _operation3 00F3                                            powf@p_h 01A0  
                                          powf@p_l 016C                                            powf@s_h 0174  
                                          powf@t_h 0170                                            powf@s_l 0130  
                                          powf@t_l 0134                                            powf@z_h 0120  
                                          powf@z_l 0124                                  __end_of_vfpfcnvrt 5668  
                                       efgtoa@mode 0089                                         efgtoa@sign 00A1  
                            __end_of_lcd_send_4bit 72A2                                            postdec1 0FE5  
                                          postdec2 0FDD                                ?_read_prec_or_width 0007  
                                          postinc0 0FEE                                            postinc1 0FE6  
                                          postinc2 0FDE                                   vfpfcnvrt@convarg 00AC  
                      _send_the_result_to_LCD$2093 0150                                         ??_vfprintf 007F  
                                          sqrtf@ix 0022                                            strcpy@d 0005  
                              _lcd_4bit_initialize 69C0                          _get_number_and_operartion 5CFC  
                  __end_of_lcd_4bit_send_char_data 7442                                        ___fladd@grs 0041  
                       lcd_4bit_send_char_data@lcd 000F                         lcd_4bit_send_char_data@ret 0011  
                                    ___xxtofl@sign 0013                              ??_gpio_pin_initialize 000D  
                            ??_gpio_pin_read_logic 0004                               ??_read_prec_or_width 0009  
                                      ___fldiv@grs 0055                                        ___fldiv@rem 004E  
   get_third_number_and_third_operartion@operation 0021                       send_the_result_to_LCD@result 00CC  
                  lcd_4bit_send_char_data_pos@data 001B                               ?_lcd_4bit_initialize 0012  
                                      ___flmul@grs 0028                         ??_ecu_layer_Initialization 0016  
                    __end_of_convert_int_to_string 7546                              ?_ecu_keypad_get_value 000B  
                              _lcd_4bit_set_curser 7080                              ecu_led_turn_off@F3493 00DB  
                     __end_of_convert_arr_to_float 65A8                        lcd_4bit_send_string_pos@lcd 0018  
                      lcd_4bit_send_string_pos@row 0019                        lcd_4bit_send_string_pos@str 001B  
                                   __end_of___flge 68C2                                     __end_of___fleq 6F30  
                         ?_convert_float_to_string 00C6                                        vfpfcnvrt@ap 0079  
                                      vfpfcnvrt@cp 00B1                                        vfpfcnvrt@fp 0077  
                                   __end_of___wmul 796A                                     __end_of_efgtoa 3DE8  
                                   __end_of_floorf 5CFC                                     __end_of_memcpy 7596  
                                       floorf@F521 01DE                                     __end_of_memset 78B2  
                     ?_lcd_4bit_send_enable_enable 000B                      __end_of_subtraction_operation 7752  
                                   __end_of_strcpy 7840                                start_initialization 7118  
                             ?_lcd_4bit_set_curser 0012                                        __end_of_lg2 1035  
                                      __end_of_abs 791E                                        __end_of_pad 73E4  
                                      __end_of_ovt 1029              __end_of_gpio_pin_direction_initialize 6354  
                    _gpio_pin_direction_initialize 6210                              ??_lcd_4bit_initialize 0013  
                                     _counter_num1 00F8                                       _counter_num2 00F7  
                                     _counter_num3 00F6                              __end_of___fpclassifyf 69C0  
                      subtraction_operation@result 006B                                        vfprintf@fmt 007D  
                                         ??___flge 006B                                           ??___fleq 0009  
                                         ??___wmul 0005                                           ??_efgtoa 0075  
                                      __pdataBANK0 00F9                                        __pdataBANK1 01B8  
                                      __pdataBANK2 0250                                           ??_floorf 005F  
                                         ??_memcpy 0007                                           ??_memset 0007  
                                       memset@dest 0001                       lcd_4bit_send_command@command 0010  
                                ecu_relay_on@F3482 00D8                                           ??_strcpy 0004  
                                        ___fladd@a 0036                                          ___fladd@b 0032  
                       convert_int_to_string@value 00C6                      __end_of_ecu_keypad_initialize 7312  
                                        ___fldiv@a 0046                                          ___fldiv@b 0042  
                                        ___flmul@a 001D                                          ___flmul@b 0019  
                            ??_lcd_4bit_set_curser 0015                                          ___flsub@a 005F  
                                        ___flsub@b 005B                                      __pcstackBANK0 0080  
                                    __pcstackBANK1 0100                             ??_ecu_keypad_get_value 000E  
                                      _efgtoa$1537 0086                                          _dtoa$1506 001A  
                                         ?___fladd 0032                                     _initialize_var 6B90  
                  gpio_pin_write_logic@_pin_config 0001                                           ?___fldiv 0042  
                                         ?___awdiv 0001                                           ?___flneg 0001  
                                         ?___awmod 0001                                           ?___flmul 0019  
                                         ?___flsub 005B                                           ?___fltol 0001  
                        gpio_pin_write_logic@logic 0003                                       _keypad_value 00DE  
                              sum_operation@result 004A                     multiplication_operation@result 003A  
                                      __smallconst 1000                                           ?_scalbnf 0032  
                  convert_arr_to_float@count_power 008F                    convert_arr_to_float@counter_num 0082  
                                         ?_sprintf 00B2                               _convert_arr_to_float 6480  
                                        _powf$2100 0104                                          _powf$2101 0160  
                                        _powf$2102 013C                                          _powf$2103 0140  
                                        _powf$2104 0108                                          _powf$2105 010C  
                                        _powf$2106 0110                                          _powf$2107 0114  
                                        _powf$2108 0118                                          _powf$2094 0148  
                                        _powf$2095 015C                                          _powf$2096 014C  
                                        _powf$2097 019C                                          _powf$2098 0138  
                                        _powf$2099 0100                   __end_of_ecu_layer_Initialization 7980  
                    convert_arr_to_float@num_value 0083                                     ___wmul@product 0005  
             get_number_and_operartion@lcd_counter 0020                              __end_of_sum_operation 7716  
                       lcd_4bit_initialize@counter 0014                              sum_operation@num1_val 0042  
                            sum_operation@num2_val 0046      __end_of_get_third_number_and_third_operartion 58B6  
          ??_get_third_number_and_third_operartion 0022             ?_get_third_number_and_third_operartion 001D  
            _get_third_number_and_third_operartion 5668                          ecu_relay_initialize@F3477 00D9  
                                      _lcd_counter 00FF                      __end_of_lcd_4bit_send_command 74A0  
                           __end_of_initialize_var 6C58                                          _operation 00F5  
           ecu_keypad_get_value@clear_rows_counter 0011                   gpio_pin_direction_initialize@ret 0009  
                                       powf@yisint 0154                                          _vfpfcnvrt 53E2  
                         _lcd_4bit_send_string_pos 71A6                          ecu_keypad_initialize@rows 0013  
                       Division_operation@num1_val 005B                         Division_operation@num2_val 005F  
                                ___wmul@multiplier 0001                               ecu_led_turn_on@F3488 00DC  
                   lcd_4bit_send_char_data_pos@lcd 0018                     lcd_4bit_send_char_data_pos@ret 001C  
                   lcd_4bit_send_char_data_pos@row 0019                             gpio_pin_initialize@ret 000E  
              __end_of_lcd_4bit_send_char_data_pos 77CA                        _lcd_4bit_send_char_data_pos 778E  
                            ?_convert_arr_to_float 0080                                         vfpfcnvrt@c 00B0  
                          gpio_pin_write_logic@ret 000A                           ?_lcd_4bit_send_char_data 000F  
                                        copy_data0 712C                                          copy_data1 714C  
                                        copy_data2 716C                  __end_of_get_number_and_operartion 5EE2  
                   ecu_keypad_get_value@column_val 0010               get_number_and_operartion@counter_num 001F  
                    ??_lcd_4bit_send_char_data_pos 001C                                           __Hrparam 0000  
                     convert_float_to_string@value 00C6                                    ?_initialize_var 0001  
                   lcd_4bit_send_enable_enable@lcd 000B                                          memcpy@tmp 0007  
                   lcd_4bit_send_enable_enable@ret 000D                                         vfprintf@ap 007E  
                                         __Lrparam 0000                                         vfprintf@fp 007C  
                       convert_float_to_string@str 00CA                            ecu_led_initialize@F3483 00DD  
                           lcd_4bit_set_curser@lcd 0012                             lcd_4bit_set_curser@ret 0017  
                           lcd_4bit_set_curser@row 0013                                         ?_vfpfcnvrt 0077  
                      __end_of_gpio_pin_initialize 737E   get_third_number_and_third_operartion@lcd_counter 0020  
                      __end_of_gpio_pin_read_logic 6FDA                           _multiplication_operation 7752  
                   gpio_pin_initialize@_pin_config 000B                                 ___fpclassifyf@F465 01E2  
         get_third_number_and_third_operartion@num 001D                           ecu_keypad_get_value@rows 0012  
                                       sprintf@fmt 00B4                                           ___xxtofl 5EE2  
                                         __ptext10 7944                                           __ptext11 3400  
                                         __ptext20 737E                                           __ptext12 7806  
                                         __ptext21 765C                                           __ptext13 7546  
                                         __ptext30 5668                                           __ptext22 6D1C  
                                         __ptext14 74A0                                           __ptext31 5CFC  
                                         __ptext23 799E                                           __ptext15 5AEA  
                                         __ptext40 4C6A                                           __ptext32 71A6  
                                         __ptext24 78EA                                           __ptext16 68C2  
                                         __ptext41 58B6                                           __ptext33 778E  
                                         __ptext25 6DD6                                           __ptext17 66B8  
                                         __ptext50 7998                                           __ptext42 4840  
                                         __ptext34 7080                                           __ptext26 6C58  
                                         __ptext18 6E86                                           __ptext51 796A  
                                         __ptext43 5EE2                                           __ptext35 73E4  
                                         __ptext27 787A                                           __ptext19 6096  
                                         __ptext52 69C0                                           __ptext44 7596  
                                         __ptext36 65A8                                           __ptext28 7752  
                                         __ptext53 7442                                           __ptext45 4380  
                                         __ptext37 6F30                                           __ptext29 6B90  
                                         __ptext54 7232                                           __ptext46 78B2  
                                         __ptext38 6480                                           __ptext55 7840  
                                         __ptext47 67BE                                           __ptext39 10D6  
                                         __ptext56 72A2                                           __ptext48 77CA  
                                         __ptext57 7312                                           __ptext49 5048  
                                         __ptext58 6354                                           __ptext59 6210  
                                       strcpy@dest 0001                                           _num1_val 00EF  
                                         _num2_val 00EB                                           _num3_val 00E7  
get_third_number_and_third_operartion@keypad_value 0024                              _convert_int_to_string 74F6  
                                         efgtoa@fp 006F                                           efgtoa@ne 0080  
                                         efgtoa@pp 0088                                           efgtoa@ou 0093  
                                         isa$xinst 0000                         __end_of_Division_operation 7806  
                                         _vfprintf 769C                            convert_arr_to_float@arr 0080  
 get_third_number_and_third_operartion@counter_num 001F                          ?_ecu_layer_Initialization 0001  
                         ??_send_the_result_to_LCD 0080                           Division_operation@result 0063  
                      __end_of_lcd_4bit_initialize 6AB2                                           memcpy@d1 0001  
                                         memcpy@s1 0003                             ??_convert_arr_to_float 0084  
                            _subtraction_operation 7716                       __end_of_gpio_pin_write_logic 6480  
                                         scalbnf@n 0036                                           scalbnf@u 003C  
                                         scalbnf@x 0032                                           scalbnf@y 0040  
                                        sprintf@ap 00B9                   multiplication_operation@num1_val 0032  
                 multiplication_operation@num2_val 0036                       ??_Application_Initialization 0016  
                         ecu_led_turn_toggle@F3498 00DA                                          strcpy@src 0003  
                                      efgtoa@nmode 008A                                      _lcd_send_4bit 7232  
                                      ??_vfpfcnvrt 007A                        __end_of_lcd_4bit_set_curser 7118  
                                      _temp_result 01E8                                           sprintf@f 00BA  
                                         sprintf@s 00B2                                     _port_registers 01B8  
                         convert_int_to_string@str 00C8                              _ecu_keypad_initialize 72A2  
                                    ___fladd@signs 003E                                       ___fladd@aexp 003F  
                                     ___fladd@bexp 0040                       get_number_and_operartion@num 001D  
                      lcd_4bit_send_char_data@data 0010                             ?_convert_int_to_string 00C6  
                       ??_lcd_4bit_send_string_pos 001D                             lcd_4bit_initialize@lcd 0012  
                           lcd_4bit_initialize@ret 0015  
