

Microchip MPLAB XC8 Assembler V2.45 build 20230818022343 
                                                                                               Mon Feb 05 18:20:55 2024

Microchip MPLAB XC8 C Compiler v2.45 (Free license) build 20230818022343 Og1 
     1                           	processor	18F4620
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    17                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    18                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	text0,global,reloc=2,class=CODE,delta=1
    20                           	psect	text1,global,reloc=2,class=CODE,delta=1
    21                           	psect	text2,global,reloc=2,class=CODE,delta=1
    22                           	psect	text3,global,reloc=2,class=CODE,delta=1
    23                           	psect	text4,global,reloc=2,class=CODE,delta=1
    24                           	psect	text5,global,reloc=2,class=CODE,delta=1
    25                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=3
    26                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    31                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text28,global,reloc=2,class=CODE,delta=1
    48                           	psect	text29,global,reloc=2,class=CODE,delta=1
    49                           	psect	text30,global,reloc=2,class=CODE,delta=1
    50                           	psect	text31,global,reloc=2,class=CODE,delta=1
    51                           	psect	text32,global,reloc=2,class=CODE,delta=1
    52                           	psect	text33,global,reloc=2,class=CODE,delta=1
    53                           	psect	text34,global,reloc=2,class=CODE,delta=1
    54                           	psect	text35,global,reloc=2,class=CODE,delta=1
    55                           	psect	text36,global,reloc=2,class=CODE,delta=1
    56                           	psect	text37,global,reloc=2,class=CODE,delta=1
    57                           	psect	text38,global,reloc=2,class=CODE,delta=1
    58                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    66                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text48,global,reloc=2,class=CODE,delta=1
    68                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    69                           	psect	text50,global,reloc=2,class=CODE,delta=1
    70                           	psect	text51,global,reloc=2,class=CODE,delta=1
    71                           	psect	text52,global,reloc=2,class=CODE,delta=1
    72                           	psect	text53,global,reloc=2,class=CODE,delta=1
    73                           	psect	text54,global,reloc=2,class=CODE,delta=1
    74                           	psect	text55,global,reloc=2,class=CODE,delta=1
    75                           	psect	text56,global,reloc=2,class=CODE,delta=1
    76                           	psect	text57,global,reloc=2,class=CODE,delta=1
    77                           	psect	text58,global,reloc=2,class=CODE,delta=1
    78                           	psect	text59,global,reloc=2,class=CODE,delta=1
    79                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    80                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    81                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    82   000000                     
    83                           ; Generated 23/03/2023 GMT
    84                           ; 
    85                           ; Copyright Â© 2023, Microchip Technology Inc. and its subsidiaries ("Microchip")
    86                           ; All rights reserved.
    87                           ; 
    88                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    89                           ; 
    90                           ; Redistribution and use in source and binary forms, with or without modification, are
    91                           ; permitted provided that the following conditions are met:
    92                           ; 
    93                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    94                           ;        conditions and the following disclaimer.
    95                           ; 
    96                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    97                           ;        of conditions and the following disclaimer in the documentation and/or other
    98                           ;        materials provided with the distribution. Publication is not required when
    99                           ;        this file is used in an embedded application.
   100                           ; 
   101                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   102                           ;        software without specific prior written permission.
   103                           ; 
   104                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   105                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   106                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   107                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   108                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   109                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   110                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   111                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   112                           ; 
   113                           ; 
   114                           ; Code-generator required, PIC18F4620 Definitions
   115                           ; 
   116                           ; SFR Addresses
   117   000000                     
   118                           	psect	idataBANK0
   119   007A62                     __pidataBANK0:
   120                           	callstack 0
   121                           
   122                           ;initializer for _lcd1
   123   007A62  02                 	db	2
   124   007A63  0A                 	db	10
   125   007A64  12                 	db	18
   126   007A65  1A                 	db	26
   127   007A66  22                 	db	34
   128   007A67  2A                 	db	42
   129                           
   130                           ;initializer for _lcd_counter
   131   007A68  01                 	db	1
   132                           
   133                           	psect	idataBANK1
   134   0079F0                     __pidataBANK1:
   135                           	callstack 0
   136                           
   137                           ;initializer for _port_registers
   138   0079F0  80                 	db	128
   139   0079F1  0F                 	db	15
   140   0079F2  81                 	db	129
   141   0079F3  0F                 	db	15
   142   0079F4  82                 	db	130
   143   0079F5  0F                 	db	15
   144   0079F6  83                 	db	131
   145   0079F7  0F                 	db	15
   146   0079F8  84                 	db	132
   147   0079F9  0F                 	db	15
   148                           
   149                           ;initializer for _lat_registers
   150   0079FA  89                 	db	137
   151   0079FB  0F                 	db	15
   152   0079FC  8A                 	db	138
   153   0079FD  0F                 	db	15
   154   0079FE  8B                 	db	139
   155   0079FF  0F                 	db	15
   156   007A00  8C                 	db	140
   157   007A01  0F                 	db	15
   158   007A02  8D                 	db	141
   159   007A03  0F                 	db	15
   160                           
   161                           ;initializer for _tris_registers
   162   007A04  92                 	db	146
   163   007A05  0F                 	db	15
   164   007A06  93                 	db	147
   165   007A07  0F                 	db	15
   166   007A08  94                 	db	148
   167   007A09  0F                 	db	15
   168   007A0A  95                 	db	149
   169   007A0B  0F                 	db	15
   170   007A0C  96                 	db	150
   171   007A0D  0F                 	db	15
   172                           
   173                           ;initializer for _keypad
   174   007A0E  03                 	db	3
   175   007A0F  0B                 	db	11
   176   007A10  13                 	db	19
   177   007A11  1B                 	db	27
   178   007A12  63                 	db	99
   179   007A13  6B                 	db	107
   180   007A14  73                 	db	115
   181   007A15  7B                 	db	123
   182                           
   183                           	psect	idataBANK2
   184   007A52                     __pidataBANK2:
   185                           	callstack 0
   186                           
   187                           ;initializer for _keypad_values
   188   007A52  37                 	db	55
   189   007A53  38                 	db	56
   190   007A54  39                 	db	57
   191   007A55  2F                 	db	47
   192   007A56  34                 	db	52
   193   007A57  35                 	db	53
   194   007A58  36                 	db	54
   195   007A59  2A                 	db	42
   196   007A5A  31                 	db	49
   197   007A5B  32                 	db	50
   198   007A5C  33                 	db	51
   199   007A5D  2D                 	db	45
   200   007A5E  23                 	db	35
   201   007A5F  30                 	db	48
   202   007A60  3D                 	db	61
   203   007A61  2B                 	db	43
   204                           
   205                           	psect	smallconst
   206   001000                     __psmallconst:
   207                           	callstack 0
   208   001000  00                 	db	0
   209   001001                     _dp_l:
   210                           	callstack 0
   211   001001  0000               	dw	0
   212   001003  0000               	dw	0
   213   001005  CFDC               	dw	53212
   214   001007  35D1               	dw	13777
   215   001009                     __end_of_dp_l:
   216                           	callstack 0
   217   001009                     _dp_h:
   218                           	callstack 0
   219   001009  0000               	dw	0
   220   00100B  0000               	dw	0
   221   00100D  C000               	dw	49152
   222   00100F  3F15               	dw	16149
   223   001011                     __end_of_dp_h:
   224                           	callstack 0
   225   001011                     _bp:
   226                           	callstack 0
   227   001011  0000               	dw	0
   228   001013  3F80               	dw	16256
   229   001015  0000               	dw	0
   230   001017  3FC0               	dw	16320
   231   001019                     __end_of_bp:
   232                           	callstack 0
   233   001019  A570               	dw	42352
   234   00101B  36EC               	dw	14060
   235   00101D                     __end_of_ivln2_l:
   236                           	callstack 0
   237   00101D  AA3B               	dw	43579
   238   00101F  3FB8               	dw	16312
   239   001021                     __end_of_ivln2:
   240                           	callstack 0
   241   001021  384F               	dw	14415
   242   001023  3F76               	dw	16246
   243   001025                     __end_of_cp:
   244                           	callstack 0
   245   001025  AA3C               	dw	43580
   246   001027  3338               	dw	13112
   247   001029                     __end_of_ovt:
   248                           	callstack 0
   249   001029  BE8C               	dw	48780
   250   00102B  35BF               	dw	13759
   251   00102D                     __end_of_lg2_l:
   252                           	callstack 0
   253   00102D  7200               	dw	29184
   254   00102F  3F31               	dw	16177
   255   001031                     __end_of_lg2_h:
   256                           	callstack 0
   257   001031  7218               	dw	29208
   258   001033  3F31               	dw	16177
   259   001035                     __end_of_lg2:
   260                           	callstack 0
   261   001035  BB4C               	dw	47948
   262   001037  3331               	dw	13105
   263   001039                     __end_of_P5:
   264                           	callstack 0
   265   001039  EA0E               	dw	59918
   266   00103B  B5DD               	dw	46557
   267   00103D                     __end_of_P4:
   268                           	callstack 0
   269   00103D  B355               	dw	45909
   270   00103F  388A               	dw	14474
   271   001041                     __end_of_P3:
   272                           	callstack 0
   273   001041  0B61               	dw	2913
   274   001043  BB36               	dw	47926
   275   001045                     __end_of_P2:
   276                           	callstack 0
   277   001045  AAAB               	dw	43691
   278   001047  3E2A               	dw	15914
   279   001049                     __end_of_P1:
   280                           	callstack 0
   281   001049  F142               	dw	61762
   282   00104B  3E53               	dw	15955
   283   00104D                     __end_of_L6:
   284                           	callstack 0
   285   00104D  3255               	dw	12885
   286   00104F  3E6C               	dw	15980
   287   001051                     __end_of_L5:
   288                           	callstack 0
   289   001051  A305               	dw	41733
   290   001053  3E8B               	dw	16011
   291   001055                     __end_of_L4:
   292                           	callstack 0
   293   001055  AAAB               	dw	43691
   294   001057  3EAA               	dw	16042
   295   001059                     __end_of_L3:
   296                           	callstack 0
   297   001059  6DB7               	dw	28087
   298   00105B  3EDB               	dw	16091
   299   00105D                     __end_of_L2:
   300                           	callstack 0
   301   00105D  999A               	dw	39322
   302   00105F  3F19               	dw	16153
   303   001061                     __end_of_L1:
   304                           	callstack 0
   305   001061  0000               	dw	0
   306   001063  4B80               	dw	19328
   307   001065                     __end_of_two24:
   308                           	callstack 0
   309   001065  AA00               	dw	43520
   310   001067  3FB8               	dw	16312
   311   001069                     __end_of_ivln2_h:
   312                           	callstack 0
   313   001069  23C6               	dw	9158
   314   00106B  B8F6               	dw	47350
   315   00106D                     __end_of_cp_l:
   316                           	callstack 0
   317   00106D  4000               	dw	16384
   318   00106F  3F76               	dw	16246
   319   001071                     __end_of_cp_h:
   320                           	callstack 0
   321   000000                     _PORTE	set	3972
   322   000000                     _PORTD	set	3971
   323   000000                     _PORTC	set	3970
   324   000000                     _PORTB	set	3969
   325   000000                     _PORTA	set	3968
   326   000000                     _LATA	set	3977
   327   000000                     _TRISA	set	3986
   328   000000                     _TRISE	set	3990
   329   000000                     _TRISD	set	3989
   330   000000                     _TRISC	set	3988
   331   000000                     _TRISB	set	3987
   332   000000                     _LATE	set	3981
   333   000000                     _LATD	set	3980
   334   000000                     _LATC	set	3979
   335   000000                     _LATB	set	3978
   336   001071                     STR_8:
   337   001071  20                 	db	32
   338   001072  20                 	db	32
   339   001073  20                 	db	32
   340   001074  20                 	db	32
   341   001075  20                 	db	32
   342   001076  20                 	db	32
   343   001077  20                 	db	32
   344   001078  20                 	db	32
   345   001079  20                 	db	32
   346   00107A  20                 	db	32
   347   00107B  20                 	db	32
   348   00107C  20                 	db	32
   349   00107D  20                 	db	32
   350   00107E  20                 	db	32
   351   00107F  20                 	db	32
   352   001080  20                 	db	32
   353   001081  20                 	db	32
   354   001082  20                 	db	32
   355   001083  20                 	db	32
   356   001084  20                 	db	32
   357   001085  20                 	db	32
   358   001086  20                 	db	32
   359   001087  20                 	db	32
   360   001088  20                 	db	32
   361   001089  20                 	db	32
   362   00108A  20                 	db	32
   363   00108B  20                 	db	32
   364   00108C  00                 	db	0
   365   00108D                     STR_7:
   366   00108D  68                 	db	104	;'h'
   367   00108E  69                 	db	105	;'i'
   368   00108F  6E                 	db	110	;'n'
   369   001090  74                 	db	116	;'t'
   370   001091  3A                 	db	58	;':'
   371   001092  6D                 	db	109	;'m'
   372   001093  61                 	db	97	;'a'
   373   001094  78                 	db	120	;'x'
   374   001095  20                 	db	32
   375   001096  32                 	db	50	;'2'
   376   001097  20                 	db	32
   377   001098  6F                 	db	111	;'o'
   378   001099  70                 	db	112	;'p'
   379   00109A  65                 	db	101	;'e'
   380   00109B  72                 	db	114	;'r'
   381   00109C  61                 	db	97	;'a'
   382   00109D  74                 	db	116	;'t'
   383   00109E  69                 	db	105	;'i'
   384   00109F  6F                 	db	111	;'o'
   385   0010A0  6E                 	db	110	;'n'
   386   0010A1  21                 	db	33
   387   0010A2  21                 	db	33
   388   0010A3  00                 	db	0
   389   0010A4                     STR_3:
   390   0010A4  68                 	db	104	;'h'
   391   0010A5  69                 	db	105	;'i'
   392   0010A6  6E                 	db	110	;'n'
   393   0010A7  74                 	db	116	;'t'
   394   0010A8  3A                 	db	58	;':'
   395   0010A9  6D                 	db	109	;'m'
   396   0010AA  61                 	db	97	;'a'
   397   0010AB  78                 	db	120	;'x'
   398   0010AC  20                 	db	32
   399   0010AD  34                 	db	52	;'4'
   400   0010AE  20                 	db	32
   401   0010AF  64                 	db	100	;'d'
   402   0010B0  69                 	db	105	;'i'
   403   0010B1  67                 	db	103	;'g'
   404   0010B2  69                 	db	105	;'i'
   405   0010B3  74                 	db	116	;'t'
   406   0010B4  73                 	db	115	;'s'
   407   0010B5  00                 	db	0
   408   0010B6                     STR_1:
   409   0010B6  73                 	db	115	;'s'
   410   0010B7  79                 	db	121	;'y'
   411   0010B8  6E                 	db	110	;'n'
   412   0010B9  74                 	db	116	;'t'
   413   0010BA  61                 	db	97	;'a'
   414   0010BB  78                 	db	120	;'x'
   415   0010BC  20                 	db	32
   416   0010BD  65                 	db	101	;'e'
   417   0010BE  72                 	db	114	;'r'
   418   0010BF  72                 	db	114	;'r'
   419   0010C0  6F                 	db	111	;'o'
   420   0010C1  72                 	db	114	;'r'
   421   0010C2  20                 	db	32
   422   0010C3  21                 	db	33
   423   0010C4  00                 	db	0
   424   0010C5                     STR_15:
   425   0010C5  63                 	db	99	;'c'
   426   0010C6  61                 	db	97	;'a'
   427   0010C7  6C                 	db	108	;'l'
   428   0010C8  63                 	db	99	;'c'
   429   0010C9  20                 	db	32
   430   0010CA  69                 	db	105	;'i'
   431   0010CB  73                 	db	115	;'s'
   432   0010CC  20                 	db	32
   433   0010CD  72                 	db	114	;'r'
   434   0010CE  65                 	db	101	;'e'
   435   0010CF  61                 	db	97	;'a'
   436   0010D0  64                 	db	100	;'d'
   437   0010D1  79                 	db	121	;'y'
   438   0010D2  00                 	db	0
   439   0010D3                     STR_11:
   440   0010D3  25                 	db	37
   441   0010D4  2E                 	db	46
   442   0010D5  32                 	db	50	;'2'
   443   0010D6  66                 	db	102	;'f'
   444   0010D7  00                 	db	0
   445   0010D8                     STR_16:
   446   0010D8  69                 	db	105	;'i'
   447   0010D9  6E                 	db	110	;'n'
   448   0010DA  66                 	db	102	;'f'
   449   0010DB  00                 	db	0
   450   0010DC                     STR_19:
   451   0010DC  6E                 	db	110	;'n'
   452   0010DD  61                 	db	97	;'a'
   453   0010DE  6E                 	db	110	;'n'
   454   0010DF  00                 	db	0
   455   0010E0                     STR_12:
   456   0010E0  25                 	db	37
   457   0010E1  69                 	db	105	;'i'
   458   0010E2  00                 	db	0
   459   0010E3  00                 	db	0	; dummy byte at the end
   460   000000                     
   461                           ; #config settings
   462                           
   463                           	psect	cinit
   464   0071EA                     __pcinit:
   465                           	callstack 0
   466   0071EA                     start_initialization:
   467                           	callstack 0
   468   0071EA                     __initialization:
   469                           	callstack 0
   470                           
   471                           ; Initialize objects allocated to BANK2 (16 bytes)
   472                           ; load TBLPTR registers with __pidataBANK2
   473   0071EA  0E52               	movlw	low __pidataBANK2
   474   0071EC  6EF6               	movwf	tblptrl,c
   475   0071EE  0E7A               	movlw	high __pidataBANK2
   476   0071F0  6EF7               	movwf	tblptrh,c
   477   0071F2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
   478   0071F4  6EF8               	movwf	tblptru,c
   479   0071F6  EE02  F050         	lfsr	0,__pdataBANK2
   480   0071FA  EE10 F010          	lfsr	1,16
   481   0071FE                     copy_data0:
   482   0071FE  0009               	tblrd		*+
   483   007200  CFF5 FFEE          	movff	tablat,postinc0
   484   007204  50E5               	movf	postdec1,w,c
   485   007206  50E1               	movf	fsr1l,w,c
   486   007208  E1FA               	bnz	copy_data0
   487                           
   488                           ; Initialize objects allocated to BANK1 (38 bytes)
   489                           ; load TBLPTR registers with __pidataBANK1
   490   00720A  0EF0               	movlw	low __pidataBANK1
   491   00720C  6EF6               	movwf	tblptrl,c
   492   00720E  0E79               	movlw	high __pidataBANK1
   493   007210  6EF7               	movwf	tblptrh,c
   494   007212  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   495   007214  6EF8               	movwf	tblptru,c
   496   007216  EE01  F0B8         	lfsr	0,__pdataBANK1
   497   00721A  EE10 F026          	lfsr	1,38
   498   00721E                     copy_data1:
   499   00721E  0009               	tblrd		*+
   500   007220  CFF5 FFEE          	movff	tablat,postinc0
   501   007224  50E5               	movf	postdec1,w,c
   502   007226  50E1               	movf	fsr1l,w,c
   503   007228  E1FA               	bnz	copy_data1
   504                           
   505                           ; Initialize objects allocated to BANK0 (7 bytes)
   506                           ; load TBLPTR registers with __pidataBANK0
   507   00722A  0E62               	movlw	low __pidataBANK0
   508   00722C  6EF6               	movwf	tblptrl,c
   509   00722E  0E7A               	movlw	high __pidataBANK0
   510   007230  6EF7               	movwf	tblptrh,c
   511   007232  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   512   007234  6EF8               	movwf	tblptru,c
   513   007236  EE00  F0F9         	lfsr	0,__pdataBANK0
   514   00723A  EE10 F007          	lfsr	1,7
   515   00723E                     copy_data2:
   516   00723E  0009               	tblrd		*+
   517   007240  CFF5 FFEE          	movff	tablat,postinc0
   518   007244  50E5               	movf	postdec1,w,c
   519   007246  50E1               	movf	fsr1l,w,c
   520   007248  E1FA               	bnz	copy_data2
   521                           
   522                           ; Clear objects allocated to BANK2 (80 bytes)
   523   00724A  EE02  F000         	lfsr	0,__pbssBANK2
   524   00724E  0E50               	movlw	80
   525   007250                     clear_0:
   526   007250  6AEE               	clrf	postinc0,c
   527   007252  06E8               	decf	wreg,f,c
   528   007254  E1FD               	bnz	clear_0
   529                           
   530                           ; Clear objects allocated to BANK1 (22 bytes)
   531   007256  EE01  F0DE         	lfsr	0,__pbssBANK1
   532   00725A  0E16               	movlw	22
   533   00725C                     clear_1:
   534   00725C  6AEE               	clrf	postinc0,c
   535   00725E  06E8               	decf	wreg,f,c
   536   007260  E1FD               	bnz	clear_1
   537                           
   538                           ; Clear objects allocated to BANK0 (39 bytes)
   539   007262  EE00  F0D2         	lfsr	0,__pbssBANK0
   540   007266  0E27               	movlw	39
   541   007268                     clear_2:
   542   007268  6AEE               	clrf	postinc0,c
   543   00726A  06E8               	decf	wreg,f,c
   544   00726C  E1FD               	bnz	clear_2
   545   00726E                     end_of_initialization:
   546                           	callstack 0
   547   00726E                     __end_of__initialization:
   548                           	callstack 0
   549   00726E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   550   007270  6EF8               	movwf	tblptru,c
   551   007272  0100               	movlb	0
   552   007274  EFFB  F01E         	goto	_main	;jump to C main() function
   553                           
   554                           	psect	bssBANK0
   555   0000D2                     __pbssBANK0:
   556                           	callstack 0
   557   0000D2                     _width:
   558                           	callstack 0
   559   0000D2                     	ds	2
   560   0000D4                     _prec:
   561                           	callstack 0
   562   0000D4                     	ds	2
   563   0000D6                     _flags:
   564                           	callstack 0
   565   0000D6                     	ds	1
   566   0000D7                     ecu_relay_off@F3487:
   567                           	callstack 0
   568   0000D7                     	ds	1
   569   0000D8                     ecu_relay_on@F3482:
   570                           	callstack 0
   571   0000D8                     	ds	1
   572   0000D9                     ecu_relay_initialize@F3477:
   573                           	callstack 0
   574   0000D9                     	ds	1
   575   0000DA                     ecu_led_turn_toggle@F3498:
   576                           	callstack 0
   577   0000DA                     	ds	1
   578   0000DB                     ecu_led_turn_off@F3493:
   579                           	callstack 0
   580   0000DB                     	ds	1
   581   0000DC                     ecu_led_turn_on@F3488:
   582                           	callstack 0
   583   0000DC                     	ds	1
   584   0000DD                     ecu_led_initialize@F3483:
   585                           	callstack 0
   586   0000DD                     	ds	1
   587   0000DE                     _keypad_value:
   588                           	callstack 0
   589   0000DE                     	ds	1
   590   0000DF                     _total_result:
   591                           	callstack 0
   592   0000DF                     	ds	4
   593   0000E3                     _result:
   594                           	callstack 0
   595   0000E3                     	ds	4
   596   0000E7                     _num3_val:
   597                           	callstack 0
   598   0000E7                     	ds	4
   599   0000EB                     _num2_val:
   600                           	callstack 0
   601   0000EB                     	ds	4
   602   0000EF                     _num1_val:
   603                           	callstack 0
   604   0000EF                     	ds	4
   605   0000F3                     _operation3:
   606                           	callstack 0
   607   0000F3                     	ds	1
   608   0000F4                     _operation2:
   609                           	callstack 0
   610   0000F4                     	ds	1
   611   0000F5                     _operation:
   612                           	callstack 0
   613   0000F5                     	ds	1
   614   0000F6                     _counter_num3:
   615                           	callstack 0
   616   0000F6                     	ds	1
   617   0000F7                     _counter_num2:
   618                           	callstack 0
   619   0000F7                     	ds	1
   620   0000F8                     _counter_num1:
   621                           	callstack 0
   622   0000F8                     	ds	1
   623                           
   624                           	psect	dataBANK0
   625   0000F9                     __pdataBANK0:
   626                           	callstack 0
   627   0000F9                     _lcd1:
   628                           	callstack 0
   629   0000F9                     	ds	6
   630   0000FF                     _lcd_counter:
   631                           	callstack 0
   632   0000FF                     	ds	1
   633                           
   634                           	psect	bssBANK1
   635   0001DE                     __pbssBANK1:
   636                           	callstack 0
   637   0001DE                     floorf@F521:
   638                           	callstack 0
   639   0001DE                     	ds	4
   640   0001E2                     ___fpclassifyf@F465:
   641                           	callstack 0
   642   0001E2                     	ds	4
   643   0001E6                     _errno:
   644                           	callstack 0
   645   0001E6                     	ds	2
   646   0001E8                     _num3:
   647                           	callstack 0
   648   0001E8                     	ds	4
   649   0001EC                     _num2:
   650                           	callstack 0
   651   0001EC                     	ds	4
   652   0001F0                     _num1:
   653                           	callstack 0
   654   0001F0                     	ds	4
   655                           
   656                           	psect	dataBANK1
   657   0001B8                     __pdataBANK1:
   658                           	callstack 0
   659   0001B8                     _port_registers:
   660                           	callstack 0
   661   0001B8                     	ds	10
   662   0001C2                     _lat_registers:
   663                           	callstack 0
   664   0001C2                     	ds	10
   665   0001CC                     _tris_registers:
   666                           	callstack 0
   667   0001CC                     	ds	10
   668   0001D6                     _keypad:
   669                           	callstack 0
   670   0001D6                     	ds	8
   671                           
   672                           	psect	bssBANK2
   673   000200                     __pbssBANK2:
   674                           	callstack 0
   675   000200                     _dbuf:
   676                           	callstack 0
   677   000200                     	ds	80
   678                           
   679                           	psect	dataBANK2
   680   000250                     __pdataBANK2:
   681                           	callstack 0
   682   000250                     _keypad_values:
   683                           	callstack 0
   684   000250                     	ds	16
   685                           
   686                           	psect	cstackBANK1
   687   000100                     __pcstackBANK1:
   688                           	callstack 0
   689   000100                     _powf$2100:
   690                           	callstack 0
   691   000100                     send_the_result_to_LCD@result_str:
   692                           	callstack 0
   693                           
   694                           ; 80 bytes @ 0x0
   695   000100                     	ds	4
   696   000104                     _powf$2101:
   697                           	callstack 0
   698                           
   699                           ; 4 bytes @ 0x4
   700   000104                     	ds	4
   701   000108                     _powf$2105:
   702                           	callstack 0
   703                           
   704                           ; 4 bytes @ 0x8
   705   000108                     	ds	4
   706   00010C                     _powf$2106:
   707                           	callstack 0
   708                           
   709                           ; 4 bytes @ 0xC
   710   00010C                     	ds	4
   711   000110                     _powf$2107:
   712                           	callstack 0
   713                           
   714                           ; 4 bytes @ 0x10
   715   000110                     	ds	4
   716   000114                     _powf$2108:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x14
   720   000114                     	ds	4
   721   000118                     _powf$2109:
   722                           	callstack 0
   723                           
   724                           ; 4 bytes @ 0x18
   725   000118                     	ds	4
   726   00011C                     powf@t2:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0x1C
   730   00011C                     	ds	4
   731   000120                     powf@z_h:
   732                           	callstack 0
   733                           
   734                           ; 4 bytes @ 0x20
   735   000120                     	ds	4
   736   000124                     powf@z_l:
   737                           	callstack 0
   738                           
   739                           ; 4 bytes @ 0x24
   740   000124                     	ds	4
   741   000128                     powf@i:
   742                           	callstack 0
   743                           
   744                           ; 4 bytes @ 0x28
   745   000128                     	ds	4
   746   00012C                     powf@y1:
   747                           	callstack 0
   748                           
   749                           ; 4 bytes @ 0x2C
   750   00012C                     	ds	4
   751   000130                     powf@s_l:
   752                           	callstack 0
   753                           
   754                           ; 4 bytes @ 0x30
   755   000130                     	ds	4
   756   000134                     powf@t_l:
   757                           	callstack 0
   758                           
   759                           ; 4 bytes @ 0x34
   760   000134                     	ds	4
   761   000138                     _powf$2099:
   762                           	callstack 0
   763                           
   764                           ; 4 bytes @ 0x38
   765   000138                     	ds	4
   766   00013C                     _powf$2103:
   767                           	callstack 0
   768                           
   769                           ; 4 bytes @ 0x3C
   770   00013C                     	ds	4
   771   000140                     _powf$2104:
   772                           	callstack 0
   773                           
   774                           ; 4 bytes @ 0x40
   775   000140                     	ds	4
   776   000144                     powf@w:
   777                           	callstack 0
   778                           
   779                           ; 4 bytes @ 0x44
   780   000144                     	ds	4
   781   000148                     _powf$2095:
   782                           	callstack 0
   783                           
   784                           ; 4 bytes @ 0x48
   785   000148                     	ds	4
   786   00014C                     _powf$2097:
   787                           	callstack 0
   788                           
   789                           ; 4 bytes @ 0x4C
   790   00014C                     	ds	4
   791   000150                     powf@r:
   792                           	callstack 0
   793   000150                     send_the_result_to_LCD@result_str_179:
   794                           	callstack 0
   795                           
   796                           ; 40 bytes @ 0x50
   797   000150                     	ds	4
   798   000154                     powf@yisint:
   799                           	callstack 0
   800                           
   801                           ; 4 bytes @ 0x54
   802   000154                     	ds	4
   803   000158                     powf@s:
   804                           	callstack 0
   805                           
   806                           ; 4 bytes @ 0x58
   807   000158                     	ds	4
   808   00015C                     _powf$2096:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x5C
   812   00015C                     	ds	4
   813   000160                     _powf$2102:
   814                           	callstack 0
   815                           
   816                           ; 4 bytes @ 0x60
   817   000160                     	ds	4
   818   000164                     powf@sn:
   819                           	callstack 0
   820                           
   821                           ; 4 bytes @ 0x64
   822   000164                     	ds	4
   823   000168                     powf@hx:
   824                           	callstack 0
   825                           
   826                           ; 4 bytes @ 0x68
   827   000168                     	ds	4
   828   00016C                     powf@p_l:
   829                           	callstack 0
   830                           
   831                           ; 4 bytes @ 0x6C
   832   00016C                     	ds	4
   833   000170                     powf@t_h:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x70
   837   000170                     	ds	4
   838   000174                     powf@s_h:
   839                           	callstack 0
   840                           
   841                           ; 4 bytes @ 0x74
   842   000174                     	ds	4
   843   000178                     _send_the_result_to_LCD$2094:
   844                           	callstack 0
   845   000178                     powf@ax:
   846                           	callstack 0
   847                           
   848                           ; 4 bytes @ 0x78
   849   000178                     	ds	4
   850   00017C                     powf@u:
   851                           	callstack 0
   852                           
   853                           ; 4 bytes @ 0x7C
   854   00017C                     	ds	4
   855   000180                     powf@v:
   856                           	callstack 0
   857                           
   858                           ; 4 bytes @ 0x80
   859   000180                     	ds	4
   860   000184                     powf@hy:
   861                           	callstack 0
   862                           
   863                           ; 4 bytes @ 0x84
   864   000184                     	ds	4
   865   000188                     powf@n:
   866                           	callstack 0
   867                           
   868                           ; 4 bytes @ 0x88
   869   000188                     	ds	4
   870   00018C                     powf@t1:
   871                           	callstack 0
   872                           
   873                           ; 4 bytes @ 0x8C
   874   00018C                     	ds	4
   875   000190                     powf@s2:
   876                           	callstack 0
   877                           
   878                           ; 4 bytes @ 0x90
   879   000190                     	ds	4
   880   000194                     powf@iy:
   881                           	callstack 0
   882                           
   883                           ; 4 bytes @ 0x94
   884   000194                     	ds	4
   885   000198                     powf@is:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x98
   889   000198                     	ds	4
   890   00019C                     _powf$2098:
   891                           	callstack 0
   892                           
   893                           ; 4 bytes @ 0x9C
   894   00019C                     	ds	4
   895   0001A0                     powf@p_h:
   896                           	callstack 0
   897                           
   898                           ; 4 bytes @ 0xA0
   899   0001A0                     	ds	4
   900   0001A4                     powf@k:
   901                           	callstack 0
   902                           
   903                           ; 4 bytes @ 0xA4
   904   0001A4                     	ds	4
   905   0001A8                     powf@j:
   906                           	callstack 0
   907                           
   908                           ; 4 bytes @ 0xA8
   909   0001A8                     	ds	4
   910   0001AC                     powf@ix:
   911                           	callstack 0
   912                           
   913                           ; 4 bytes @ 0xAC
   914   0001AC                     	ds	4
   915   0001B0                     powf@t:
   916                           	callstack 0
   917                           
   918                           ; 4 bytes @ 0xB0
   919   0001B0                     	ds	4
   920   0001B4                     powf@z:
   921                           	callstack 0
   922                           
   923                           ; 4 bytes @ 0xB4
   924   0001B4                     	ds	4
   925                           
   926                           	psect	cstackBANK0
   927   000080                     __pcstackBANK0:
   928                           	callstack 0
   929   000080                     convert_arr_to_float@arr:
   930                           	callstack 0
   931   000080                     efgtoa@ne:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x0
   935   000080                     	ds	2
   936   000082                     convert_arr_to_float@counter_num:
   937                           	callstack 0
   938   000082                     efgtoa@p:
   939                           	callstack 0
   940                           
   941                           ; 2 bytes @ 0x2
   942   000082                     	ds	1
   943   000083                     convert_arr_to_float@num_value:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x3
   947   000083                     	ds	1
   948   000084                     ??_convert_arr_to_float:
   949   000084                     efgtoa@t:
   950                           	callstack 0
   951                           
   952                           ; 2 bytes @ 0x4
   953   000084                     	ds	2
   954   000086                     _efgtoa$1538:
   955                           	callstack 0
   956                           
   957                           ; 2 bytes @ 0x6
   958   000086                     	ds	1
   959   000087                     _convert_arr_to_float$2092:
   960                           	callstack 0
   961                           
   962                           ; 4 bytes @ 0x7
   963   000087                     	ds	1
   964   000088                     efgtoa@pp:
   965                           	callstack 0
   966                           
   967                           ; 1 bytes @ 0x8
   968   000088                     	ds	1
   969   000089                     efgtoa@mode:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x9
   973   000089                     	ds	1
   974   00008A                     efgtoa@nmode:
   975                           	callstack 0
   976                           
   977                           ; 1 bytes @ 0xA
   978   00008A                     	ds	1
   979   00008B                     efgtoa@d:
   980                           	callstack 0
   981   00008B                     _convert_arr_to_float$2093:
   982                           	callstack 0
   983                           
   984                           ; 4 bytes @ 0xB
   985   00008B                     	ds	2
   986   00008D                     efgtoa@m:
   987                           	callstack 0
   988                           
   989                           ; 2 bytes @ 0xD
   990   00008D                     	ds	2
   991   00008F                     convert_arr_to_float@count_power:
   992                           	callstack 0
   993   00008F                     efgtoa@e:
   994                           	callstack 0
   995                           
   996                           ; 2 bytes @ 0xF
   997   00008F                     	ds	1
   998   000090                     convert_arr_to_float@count:
   999                           	callstack 0
  1000                           
  1001                           ; 1 bytes @ 0x10
  1002   000090                     	ds	1
  1003   000091                     efgtoa@w:
  1004                           	callstack 0
  1005                           
  1006                           ; 2 bytes @ 0x11
  1007   000091                     	ds	2
  1008   000093                     efgtoa@ou:
  1009                           	callstack 0
  1010                           
  1011                           ; 4 bytes @ 0x13
  1012   000093                     	ds	4
  1013   000097                     efgtoa@i:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x17
  1017   000097                     	ds	2
  1018   000099                     efgtoa@h:
  1019                           	callstack 0
  1020                           
  1021                           ; 4 bytes @ 0x19
  1022   000099                     	ds	4
  1023   00009D                     efgtoa@l:
  1024                           	callstack 0
  1025                           
  1026                           ; 4 bytes @ 0x1D
  1027   00009D                     	ds	4
  1028   0000A1                     efgtoa@sign:
  1029                           	callstack 0
  1030                           
  1031                           ; 1 bytes @ 0x21
  1032   0000A1                     	ds	1
  1033   0000A2                     efgtoa@g:
  1034                           	callstack 0
  1035                           
  1036                           ; 4 bytes @ 0x22
  1037   0000A2                     	ds	4
  1038   0000A6                     efgtoa@n:
  1039                           	callstack 0
  1040                           
  1041                           ; 2 bytes @ 0x26
  1042   0000A6                     	ds	2
  1043   0000A8                     efgtoa@u:
  1044                           	callstack 0
  1045                           
  1046                           ; 4 bytes @ 0x28
  1047   0000A8                     	ds	4
  1048   0000AC                     vfpfcnvrt@convarg:
  1049                           	callstack 0
  1050                           
  1051                           ; 4 bytes @ 0x2C
  1052   0000AC                     	ds	4
  1053   0000B0                     vfpfcnvrt@c:
  1054                           	callstack 0
  1055                           
  1056                           ; 1 bytes @ 0x30
  1057   0000B0                     	ds	1
  1058   0000B1                     vfpfcnvrt@cp:
  1059                           	callstack 0
  1060                           
  1061                           ; 1 bytes @ 0x31
  1062   0000B1                     	ds	1
  1063   0000B2                     ?_sprintf:
  1064                           	callstack 0
  1065   0000B2                     sprintf@s:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x32
  1069   0000B2                     	ds	2
  1070   0000B4                     sprintf@fmt:
  1071                           	callstack 0
  1072                           
  1073                           ; 1 bytes @ 0x34
  1074   0000B4                     	ds	5
  1075   0000B9                     sprintf@ap:
  1076                           	callstack 0
  1077                           
  1078                           ; 1 bytes @ 0x39
  1079   0000B9                     	ds	1
  1080   0000BA                     sprintf@f:
  1081                           	callstack 0
  1082                           
  1083                           ; 12 bytes @ 0x3A
  1084   0000BA                     	ds	12
  1085   0000C6                     convert_int_to_string@value:
  1086                           	callstack 0
  1087   0000C6                     convert_float_to_string@value:
  1088                           	callstack 0
  1089                           
  1090                           ; 4 bytes @ 0x46
  1091   0000C6                     	ds	2
  1092   0000C8                     convert_int_to_string@str:
  1093                           	callstack 0
  1094                           
  1095                           ; 2 bytes @ 0x48
  1096   0000C8                     	ds	2
  1097   0000CA                     convert_float_to_string@str:
  1098                           	callstack 0
  1099                           
  1100                           ; 2 bytes @ 0x4A
  1101   0000CA                     	ds	2
  1102   0000CC                     send_the_result_to_LCD@result:
  1103                           	callstack 0
  1104                           
  1105                           ; 4 bytes @ 0x4C
  1106   0000CC                     	ds	4
  1107   0000D0                     ??_main:
  1108                           
  1109                           ; 1 bytes @ 0x50
  1110   0000D0                     	ds	2
  1111                           
  1112                           	psect	cstackCOMRAM
  1113   000001                     __pcstackCOMRAM:
  1114                           	callstack 0
  1115   000001                     ?___fpclassifyf:
  1116                           	callstack 0
  1117   000001                     ?___wmul:
  1118                           	callstack 0
  1119   000001                     ?___awdiv:
  1120                           	callstack 0
  1121   000001                     ?___awmod:
  1122                           	callstack 0
  1123   000001                     ?_labs:
  1124                           	callstack 0
  1125   000001                     ?_sqrtf:
  1126                           	callstack 0
  1127   000001                     ?___flneg:
  1128                           	callstack 0
  1129   000001                     ?___fltol:
  1130                           	callstack 0
  1131   000001                     initialize_var@count:
  1132                           	callstack 0
  1133   000001                     gpio_pin_direction_initialize@_pin_config:
  1134                           	callstack 0
  1135   000001                     gpio_pin_write_logic@_pin_config:
  1136                           	callstack 0
  1137   000001                     gpio_pin_read_logic@_pin_config:
  1138                           	callstack 0
  1139   000001                     ___wmul@multiplier:
  1140                           	callstack 0
  1141   000001                     ___awdiv@dividend:
  1142                           	callstack 0
  1143   000001                     ___awmod@dividend:
  1144                           	callstack 0
  1145   000001                     memset@dest:
  1146                           	callstack 0
  1147   000001                     memcpy@d1:
  1148                           	callstack 0
  1149   000001                     fputc@c:
  1150                           	callstack 0
  1151   000001                     strcpy@dest:
  1152                           	callstack 0
  1153   000001                     ___fleq@ff1:
  1154                           	callstack 0
  1155   000001                     ___flneg@f1:
  1156                           	callstack 0
  1157   000001                     ___fltol@f1:
  1158                           	callstack 0
  1159   000001                     ___fpclassifyf@x:
  1160                           	callstack 0
  1161   000001                     labs@a:
  1162                           	callstack 0
  1163   000001                     sqrtf@x:
  1164                           	callstack 0
  1165                           
  1166                           ; 4 bytes @ 0x0
  1167   000001                     	ds	2
  1168   000003                     ??_gpio_pin_direction_initialize:
  1169   000003                     gpio_pin_write_logic@logic:
  1170                           	callstack 0
  1171   000003                     gpio_pin_read_logic@logic:
  1172                           	callstack 0
  1173   000003                     fputc@fp:
  1174                           	callstack 0
  1175   000003                     strcpy@src:
  1176                           	callstack 0
  1177   000003                     ___wmul@multiplicand:
  1178                           	callstack 0
  1179   000003                     ___awdiv@divisor:
  1180                           	callstack 0
  1181   000003                     ___awmod@divisor:
  1182                           	callstack 0
  1183   000003                     memset@c:
  1184                           	callstack 0
  1185   000003                     memcpy@s1:
  1186                           	callstack 0
  1187                           
  1188                           ; 2 bytes @ 0x2
  1189   000003                     	ds	1
  1190   000004                     ??_gpio_pin_write_logic:
  1191   000004                     ??_gpio_pin_read_logic:
  1192   000004                     ??_fputc:
  1193   000004                     ??_strcpy:
  1194                           
  1195                           ; 1 bytes @ 0x3
  1196   000004                     	ds	1
  1197   000005                     ??___fpclassifyf:
  1198   000005                     ??_labs:
  1199   000005                     ??_sqrtf:
  1200   000005                     ??___fltol:
  1201   000005                     ___awdiv@counter:
  1202                           	callstack 0
  1203   000005                     ___awmod@counter:
  1204                           	callstack 0
  1205   000005                     ___wmul@product:
  1206                           	callstack 0
  1207   000005                     memset@n:
  1208                           	callstack 0
  1209   000005                     memcpy@n:
  1210                           	callstack 0
  1211   000005                     strcpy@d:
  1212                           	callstack 0
  1213   000005                     ___fleq@ff2:
  1214                           	callstack 0
  1215                           
  1216                           ; 4 bytes @ 0x4
  1217   000005                     	ds	1
  1218   000006                     ___awdiv@sign:
  1219                           	callstack 0
  1220   000006                     ___awmod@sign:
  1221                           	callstack 0
  1222                           
  1223                           ; 1 bytes @ 0x5
  1224   000006                     	ds	1
  1225   000007                     ?_abs:
  1226                           	callstack 0
  1227   000007                     ?_read_prec_or_width:
  1228                           	callstack 0
  1229   000007                     read_prec_or_width@fmt:
  1230                           	callstack 0
  1231   000007                     memcpy@tmp:
  1232                           	callstack 0
  1233   000007                     ___awdiv@quotient:
  1234                           	callstack 0
  1235   000007                     memset@p:
  1236                           	callstack 0
  1237   000007                     abs@a:
  1238                           	callstack 0
  1239                           
  1240                           ; 2 bytes @ 0x6
  1241   000007                     	ds	1
  1242   000008                     read_prec_or_width@ap:
  1243                           	callstack 0
  1244   000008                     memcpy@d:
  1245                           	callstack 0
  1246                           
  1247                           ; 2 bytes @ 0x7
  1248   000008                     	ds	1
  1249   000009                     ??_abs:
  1250   000009                     ??___fleq:
  1251   000009                     gpio_pin_direction_initialize@ret:
  1252                           	callstack 0
  1253   000009                     ___fltol@sign1:
  1254                           	callstack 0
  1255   000009                     read_prec_or_width@c:
  1256                           	callstack 0
  1257   000009                     ___fpclassifyf@e:
  1258                           	callstack 0
  1259   000009                     fputs@s:
  1260                           	callstack 0
  1261                           
  1262                           ; 2 bytes @ 0x8
  1263   000009                     	ds	1
  1264   00000A                     gpio_pin_write_logic@ret:
  1265                           	callstack 0
  1266   00000A                     ___fltol@exp1:
  1267                           	callstack 0
  1268   00000A                     read_prec_or_width@n:
  1269                           	callstack 0
  1270   00000A                     memcpy@s:
  1271                           	callstack 0
  1272   00000A                     sqrtf@s:
  1273                           	callstack 0
  1274                           
  1275                           ; 4 bytes @ 0x9
  1276   00000A                     	ds	1
  1277   00000B                     ?___xxtofl:
  1278                           	callstack 0
  1279   00000B                     lcd_send_4bit@lcd:
  1280                           	callstack 0
  1281   00000B                     lcd_4bit_send_enable_enable@lcd:
  1282                           	callstack 0
  1283   00000B                     fputs@fp:
  1284                           	callstack 0
  1285   00000B                     ecu_keypad_get_value@keypad:
  1286                           	callstack 0
  1287   00000B                     gpio_pin_initialize@_pin_config:
  1288                           	callstack 0
  1289   00000B                     ___xxtofl@val:
  1290                           	callstack 0
  1291   00000B                     ___fpclassifyf@u:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0xA
  1295   00000B                     	ds	1
  1296   00000C                     ??_lcd_4bit_send_enable_enable:
  1297   00000C                     lcd_send_4bit@command_data:
  1298                           	callstack 0
  1299   00000C                     fputs@c:
  1300                           	callstack 0
  1301                           
  1302                           ; 1 bytes @ 0xB
  1303   00000C                     	ds	1
  1304   00000D                     ??_gpio_pin_initialize:
  1305   00000D                     ??_lcd_send_4bit:
  1306   00000D                     lcd_4bit_send_enable_enable@ret:
  1307                           	callstack 0
  1308   00000D                     ecu_keypad_get_value@value:
  1309                           	callstack 0
  1310   00000D                     fputs@i:
  1311                           	callstack 0
  1312                           
  1313                           ; 2 bytes @ 0xC
  1314   00000D                     	ds	1
  1315   00000E                     ??_ecu_keypad_get_value:
  1316   00000E                     lcd_send_4bit@ret:
  1317                           	callstack 0
  1318   00000E                     gpio_pin_initialize@ret:
  1319                           	callstack 0
  1320   00000E                     sqrtf@i:
  1321                           	callstack 0
  1322                           
  1323                           ; 4 bytes @ 0xD
  1324   00000E                     	ds	1
  1325   00000F                     ??___xxtofl:
  1326   00000F                     lcd_4bit_send_command@lcd:
  1327                           	callstack 0
  1328   00000F                     lcd_4bit_send_char_data@lcd:
  1329                           	callstack 0
  1330   00000F                     pad@fp:
  1331                           	callstack 0
  1332   00000F                     ecu_keypad_initialize@keypad:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0xE
  1336   00000F                     	ds	1
  1337   000010                     lcd_4bit_send_command@command:
  1338                           	callstack 0
  1339   000010                     lcd_4bit_send_char_data@data:
  1340                           	callstack 0
  1341   000010                     ecu_keypad_get_value@column_val:
  1342                           	callstack 0
  1343   000010                     pad@buf:
  1344                           	callstack 0
  1345                           
  1346                           ; 2 bytes @ 0xF
  1347   000010                     	ds	1
  1348   000011                     ??_ecu_keypad_initialize:
  1349   000011                     lcd_4bit_send_command@ret:
  1350                           	callstack 0
  1351   000011                     lcd_4bit_send_char_data@ret:
  1352                           	callstack 0
  1353   000011                     ecu_keypad_get_value@clear_rows_counter:
  1354                           	callstack 0
  1355                           
  1356                           ; 1 bytes @ 0x10
  1357   000011                     	ds	1
  1358   000012                     lcd_4bit_initialize@lcd:
  1359                           	callstack 0
  1360   000012                     lcd_4bit_set_curser@lcd:
  1361                           	callstack 0
  1362   000012                     ecu_keypad_get_value@rows:
  1363                           	callstack 0
  1364   000012                     pad@p:
  1365                           	callstack 0
  1366   000012                     sqrtf@q:
  1367                           	callstack 0
  1368                           
  1369                           ; 4 bytes @ 0x11
  1370   000012                     	ds	1
  1371   000013                     ??_lcd_4bit_initialize:
  1372   000013                     lcd_4bit_set_curser@row:
  1373                           	callstack 0
  1374   000013                     ecu_keypad_initialize@rows:
  1375                           	callstack 0
  1376   000013                     ecu_keypad_get_value@columns:
  1377                           	callstack 0
  1378   000013                     ___xxtofl@sign:
  1379                           	callstack 0
  1380                           
  1381                           ; 1 bytes @ 0x12
  1382   000013                     	ds	1
  1383   000014                     ??_pad:
  1384   000014                     lcd_4bit_initialize@counter:
  1385                           	callstack 0
  1386   000014                     lcd_4bit_set_curser@column:
  1387                           	callstack 0
  1388   000014                     ecu_keypad_initialize@columns:
  1389                           	callstack 0
  1390   000014                     ___xxtofl@exp:
  1391                           	callstack 0
  1392                           
  1393                           ; 1 bytes @ 0x13
  1394   000014                     	ds	1
  1395   000015                     ??_lcd_4bit_set_curser:
  1396   000015                     lcd_4bit_initialize@ret:
  1397                           	callstack 0
  1398   000015                     pad@i:
  1399                           	callstack 0
  1400   000015                     ___xxtofl@arg:
  1401                           	callstack 0
  1402                           
  1403                           ; 4 bytes @ 0x14
  1404   000015                     	ds	1
  1405   000016                     sqrtf@t:
  1406                           	callstack 0
  1407                           
  1408                           ; 4 bytes @ 0x15
  1409   000016                     	ds	1
  1410   000017                     lcd_4bit_set_curser@ret:
  1411                           	callstack 0
  1412   000017                     dtoa@fp:
  1413                           	callstack 0
  1414                           
  1415                           ; 1 bytes @ 0x16
  1416   000017                     	ds	1
  1417   000018                     lcd_4bit_send_char_data_pos@lcd:
  1418                           	callstack 0
  1419   000018                     lcd_4bit_send_string_pos@lcd:
  1420                           	callstack 0
  1421   000018                     dtoa@d:
  1422                           	callstack 0
  1423                           
  1424                           ; 2 bytes @ 0x17
  1425   000018                     	ds	1
  1426   000019                     ?___flmul:
  1427                           	callstack 0
  1428   000019                     lcd_4bit_send_char_data_pos@row:
  1429                           	callstack 0
  1430   000019                     lcd_4bit_send_string_pos@row:
  1431                           	callstack 0
  1432   000019                     ___flmul@b:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x18
  1436   000019                     	ds	1
  1437   00001A                     lcd_4bit_send_char_data_pos@column:
  1438                           	callstack 0
  1439   00001A                     lcd_4bit_send_string_pos@column:
  1440                           	callstack 0
  1441   00001A                     _dtoa$1507:
  1442                           	callstack 0
  1443   00001A                     sqrtf@m:
  1444                           	callstack 0
  1445                           
  1446                           ; 4 bytes @ 0x19
  1447   00001A                     	ds	1
  1448   00001B                     lcd_4bit_send_char_data_pos@data:
  1449                           	callstack 0
  1450   00001B                     lcd_4bit_send_string_pos@str:
  1451                           	callstack 0
  1452                           
  1453                           ; 2 bytes @ 0x1A
  1454   00001B                     	ds	1
  1455   00001C                     lcd_4bit_send_char_data_pos@ret:
  1456                           	callstack 0
  1457   00001C                     dtoa@w:
  1458                           	callstack 0
  1459                           
  1460                           ; 2 bytes @ 0x1B
  1461   00001C                     	ds	1
  1462   00001D                     get_number_and_operartion@num:
  1463                           	callstack 0
  1464   00001D                     get_third_number_and_third_operartion@num:
  1465                           	callstack 0
  1466   00001D                     ___flmul@a:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x1C
  1470   00001D                     	ds	1
  1471   00001E                     dtoa@p:
  1472                           	callstack 0
  1473   00001E                     sqrtf@r:
  1474                           	callstack 0
  1475                           
  1476                           ; 4 bytes @ 0x1D
  1477   00001E                     	ds	1
  1478   00001F                     get_number_and_operartion@counter_num:
  1479                           	callstack 0
  1480   00001F                     get_third_number_and_third_operartion@counter_num:
  1481                           	callstack 0
  1482                           
  1483                           ; 1 bytes @ 0x1E
  1484   00001F                     	ds	1
  1485   000020                     get_number_and_operartion@lcd_counter:
  1486                           	callstack 0
  1487   000020                     get_third_number_and_third_operartion@lcd_counter:
  1488                           	callstack 0
  1489   000020                     dtoa@s:
  1490                           	callstack 0
  1491                           
  1492                           ; 1 bytes @ 0x1F
  1493   000020                     	ds	1
  1494   000021                     ??___flmul:
  1495   000021                     get_number_and_operartion@operation:
  1496                           	callstack 0
  1497   000021                     get_third_number_and_third_operartion@operation:
  1498                           	callstack 0
  1499   000021                     dtoa@i:
  1500                           	callstack 0
  1501                           
  1502                           ; 2 bytes @ 0x20
  1503   000021                     	ds	1
  1504   000022                     ??_get_number_and_operartion:
  1505   000022                     ??_get_third_number_and_third_operartion:
  1506   000022                     sqrtf@ix:
  1507                           	callstack 0
  1508                           
  1509                           ; 4 bytes @ 0x21
  1510   000022                     	ds	2
  1511   000024                     get_number_and_operartion@keypad_value:
  1512                           	callstack 0
  1513   000024                     get_third_number_and_third_operartion@keypad_value:
  1514                           	callstack 0
  1515                           
  1516                           ; 1 bytes @ 0x23
  1517   000024                     	ds	1
  1518   000025                     ___flmul@sign:
  1519                           	callstack 0
  1520                           
  1521                           ; 1 bytes @ 0x24
  1522   000025                     	ds	1
  1523   000026                     ___flmul@aexp:
  1524                           	callstack 0
  1525                           
  1526                           ; 1 bytes @ 0x25
  1527   000026                     	ds	1
  1528   000027                     ___flmul@bexp:
  1529                           	callstack 0
  1530                           
  1531                           ; 1 bytes @ 0x26
  1532   000027                     	ds	1
  1533   000028                     ___flmul@grs:
  1534                           	callstack 0
  1535                           
  1536                           ; 4 bytes @ 0x27
  1537   000028                     	ds	4
  1538   00002C                     ___flmul@prod:
  1539                           	callstack 0
  1540                           
  1541                           ; 4 bytes @ 0x2B
  1542   00002C                     	ds	4
  1543   000030                     ___flmul@temp:
  1544                           	callstack 0
  1545                           
  1546                           ; 2 bytes @ 0x2F
  1547   000030                     	ds	2
  1548   000032                     ?___fladd:
  1549                           	callstack 0
  1550   000032                     ?_scalbnf:
  1551                           	callstack 0
  1552   000032                     multiplication_operation@num1_val:
  1553                           	callstack 0
  1554   000032                     ___fladd@b:
  1555                           	callstack 0
  1556   000032                     scalbnf@x:
  1557                           	callstack 0
  1558                           
  1559                           ; 4 bytes @ 0x31
  1560   000032                     	ds	4
  1561   000036                     scalbnf@n:
  1562                           	callstack 0
  1563   000036                     multiplication_operation@num2_val:
  1564                           	callstack 0
  1565   000036                     ___fladd@a:
  1566                           	callstack 0
  1567                           
  1568                           ; 4 bytes @ 0x35
  1569   000036                     	ds	2
  1570   000038                     ??_scalbnf:
  1571                           
  1572                           ; 1 bytes @ 0x37
  1573   000038                     	ds	2
  1574   00003A                     ??___fladd:
  1575   00003A                     multiplication_operation@result:
  1576                           	callstack 0
  1577                           
  1578                           ; 1 bytes @ 0x39
  1579   00003A                     	ds	1
  1580   00003B                     
  1581                           ; 1 bytes @ 0x3A
  1582   00003B                     	ds	1
  1583   00003C                     scalbnf@u:
  1584                           	callstack 0
  1585                           
  1586                           ; 4 bytes @ 0x3B
  1587   00003C                     	ds	2
  1588   00003E                     ___fladd@signs:
  1589                           	callstack 0
  1590                           
  1591                           ; 1 bytes @ 0x3D
  1592   00003E                     	ds	1
  1593   00003F                     ___fladd@aexp:
  1594                           	callstack 0
  1595                           
  1596                           ; 1 bytes @ 0x3E
  1597   00003F                     	ds	1
  1598   000040                     ___fladd@bexp:
  1599                           	callstack 0
  1600   000040                     scalbnf@y:
  1601                           	callstack 0
  1602                           
  1603                           ; 4 bytes @ 0x3F
  1604   000040                     	ds	1
  1605   000041                     ___fladd@grs:
  1606                           	callstack 0
  1607                           
  1608                           ; 1 bytes @ 0x40
  1609   000041                     	ds	1
  1610   000042                     ?___fldiv:
  1611                           	callstack 0
  1612   000042                     sum_operation@num1_val:
  1613                           	callstack 0
  1614   000042                     ___fldiv@b:
  1615                           	callstack 0
  1616                           
  1617                           ; 4 bytes @ 0x41
  1618   000042                     	ds	4
  1619   000046                     sum_operation@num2_val:
  1620                           	callstack 0
  1621   000046                     ___fldiv@a:
  1622                           	callstack 0
  1623                           
  1624                           ; 4 bytes @ 0x45
  1625   000046                     	ds	4
  1626   00004A                     ??___fldiv:
  1627   00004A                     sum_operation@result:
  1628                           	callstack 0
  1629                           
  1630                           ; 1 bytes @ 0x49
  1631   00004A                     	ds	1
  1632   00004B                     
  1633                           ; 1 bytes @ 0x4A
  1634   00004B                     	ds	3
  1635   00004E                     ___fldiv@rem:
  1636                           	callstack 0
  1637                           
  1638                           ; 4 bytes @ 0x4D
  1639   00004E                     	ds	4
  1640   000052                     ___fldiv@sign:
  1641                           	callstack 0
  1642                           
  1643                           ; 1 bytes @ 0x51
  1644   000052                     	ds	1
  1645   000053                     ___fldiv@new_exp:
  1646                           	callstack 0
  1647                           
  1648                           ; 2 bytes @ 0x52
  1649   000053                     	ds	2
  1650   000055                     ___fldiv@grs:
  1651                           	callstack 0
  1652                           
  1653                           ; 4 bytes @ 0x54
  1654   000055                     	ds	4
  1655   000059                     ___fldiv@bexp:
  1656                           	callstack 0
  1657                           
  1658                           ; 1 bytes @ 0x58
  1659   000059                     	ds	1
  1660   00005A                     ___fldiv@aexp:
  1661                           	callstack 0
  1662                           
  1663                           ; 1 bytes @ 0x59
  1664   00005A                     	ds	1
  1665   00005B                     ?___flsub:
  1666                           	callstack 0
  1667   00005B                     ?_floorf:
  1668                           	callstack 0
  1669   00005B                     Division_operation@num1_val:
  1670                           	callstack 0
  1671   00005B                     ___flsub@b:
  1672                           	callstack 0
  1673   00005B                     floorf@x:
  1674                           	callstack 0
  1675                           
  1676                           ; 4 bytes @ 0x5A
  1677   00005B                     	ds	4
  1678   00005F                     ??_floorf:
  1679   00005F                     Division_operation@num2_val:
  1680                           	callstack 0
  1681   00005F                     ___flsub@a:
  1682                           	callstack 0
  1683                           
  1684                           ; 4 bytes @ 0x5E
  1685   00005F                     	ds	4
  1686   000063                     Division_operation@result:
  1687                           	callstack 0
  1688   000063                     subtraction_operation@num1_val:
  1689                           	callstack 0
  1690   000063                     ___flge@ff1:
  1691                           	callstack 0
  1692                           
  1693                           ; 4 bytes @ 0x62
  1694   000063                     	ds	1
  1695   000064                     
  1696                           ; 1 bytes @ 0x63
  1697   000064                     	ds	1
  1698   000065                     floorf@m:
  1699                           	callstack 0
  1700                           
  1701                           ; 4 bytes @ 0x64
  1702   000065                     	ds	2
  1703   000067                     subtraction_operation@num2_val:
  1704                           	callstack 0
  1705   000067                     ___flge@ff2:
  1706                           	callstack 0
  1707                           
  1708                           ; 4 bytes @ 0x66
  1709   000067                     	ds	2
  1710   000069                     floorf@e:
  1711                           	callstack 0
  1712                           
  1713                           ; 2 bytes @ 0x68
  1714   000069                     	ds	2
  1715   00006B                     ??___flge:
  1716   00006B                     subtraction_operation@result:
  1717                           	callstack 0
  1718   00006B                     floorf@u:
  1719                           	callstack 0
  1720                           
  1721                           ; 4 bytes @ 0x6A
  1722   00006B                     	ds	1
  1723   00006C                     
  1724                           ; 1 bytes @ 0x6B
  1725   00006C                     	ds	3
  1726   00006F                     ?_powf:
  1727                           	callstack 0
  1728   00006F                     efgtoa@fp:
  1729                           	callstack 0
  1730   00006F                     powf@x:
  1731                           	callstack 0
  1732                           
  1733                           ; 4 bytes @ 0x6E
  1734   00006F                     	ds	1
  1735   000070                     efgtoa@f:
  1736                           	callstack 0
  1737                           
  1738                           ; 4 bytes @ 0x6F
  1739   000070                     	ds	3
  1740   000073                     powf@y:
  1741                           	callstack 0
  1742                           
  1743                           ; 4 bytes @ 0x72
  1744   000073                     	ds	1
  1745   000074                     efgtoa@c:
  1746                           	callstack 0
  1747                           
  1748                           ; 1 bytes @ 0x73
  1749   000074                     	ds	1
  1750   000075                     ??_efgtoa:
  1751                           
  1752                           ; 1 bytes @ 0x74
  1753   000075                     	ds	2
  1754   000077                     ??_powf:
  1755   000077                     vfpfcnvrt@fp:
  1756                           	callstack 0
  1757                           
  1758                           ; 1 bytes @ 0x76
  1759   000077                     	ds	1
  1760   000078                     vfpfcnvrt@fmt:
  1761                           	callstack 0
  1762                           
  1763                           ; 1 bytes @ 0x77
  1764   000078                     	ds	1
  1765   000079                     vfpfcnvrt@ap:
  1766                           	callstack 0
  1767                           
  1768                           ; 1 bytes @ 0x78
  1769   000079                     	ds	1
  1770   00007A                     ??_vfpfcnvrt:
  1771                           
  1772                           ; 1 bytes @ 0x79
  1773   00007A                     	ds	2
  1774   00007C                     ?_vfprintf:
  1775                           	callstack 0
  1776   00007C                     vfprintf@fp:
  1777                           	callstack 0
  1778                           
  1779                           ; 1 bytes @ 0x7B
  1780   00007C                     	ds	1
  1781   00007D                     vfprintf@fmt:
  1782                           	callstack 0
  1783                           
  1784                           ; 1 bytes @ 0x7C
  1785   00007D                     	ds	1
  1786   00007E                     vfprintf@ap:
  1787                           	callstack 0
  1788                           
  1789                           ; 1 bytes @ 0x7D
  1790   00007E                     	ds	1
  1791   00007F                     vfprintf@cfmt:
  1792                           	callstack 0
  1793                           
  1794                           ; 1 bytes @ 0x7E
  1795   00007F                     	ds	1
  1796   000080                     
  1797                           ; 1 bytes @ 0x7F
  1798 ;;
  1799 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  1800 ;;
  1801 ;; *************** function _main *****************
  1802 ;; Defined at:
  1803 ;;		line 11 in file "newmain.c"
  1804 ;; Parameters:    Size  Location     Type
  1805 ;;		None
  1806 ;; Auto vars:     Size  Location     Type
  1807 ;;		None
  1808 ;; Return value:  Size  Location     Type
  1809 ;;                  2  635[None  ] int 
  1810 ;; Registers used:
  1811 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1812 ;; Tracked objects:
  1813 ;;		On entry : 0/0
  1814 ;;		On exit  : 0/0
  1815 ;;		Unchanged: 0/0
  1816 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1817 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1818 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1819 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1820 ;;      Totals:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1821 ;;Total ram usage:        2 bytes
  1822 ;; Hardware stack levels required when called: 10
  1823 ;; This function calls:
  1824 ;;		_Application_Initialization
  1825 ;;		_Division_operation
  1826 ;;		_convert_arr_to_float
  1827 ;;		_get_number_and_operartion
  1828 ;;		_get_third_number_and_third_operartion
  1829 ;;		_initialize_var
  1830 ;;		_lcd_4bit_send_command
  1831 ;;		_lcd_4bit_send_string_pos
  1832 ;;		_multiplication_operation
  1833 ;;		_send_the_result_to_LCD
  1834 ;;		_subtraction_operation
  1835 ;;		_sum_operation
  1836 ;; This function is called by:
  1837 ;;		Startup code after reset
  1838 ;; This function uses a non-reentrant model
  1839 ;;
  1840                           
  1841                           	psect	text0
  1842   003DF6                     __ptext0:
  1843                           	callstack 0
  1844   003DF6                     _main:
  1845                           	callstack 21
  1846   003DF6                     
  1847                           ;newmain.c: 12:     Application_Initialization();
  1848   003DF6  EC35  F03D         	call	_Application_Initialization	;wreg free
  1849   003DFA                     l12823:
  1850                           
  1851                           ;newmain.c: 16:     initialize_var();
  1852   003DFA  EC31  F036         	call	_initialize_var	;wreg free
  1853   003DFE                     
  1854                           ;newmain.c: 18:     lcd_4bit_send_command(&lcd1,0x01);
  1855   003DFE  0EF9               	movlw	low _lcd1
  1856   003E00  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1857   003E02  0E01               	movlw	1
  1858   003E04  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1859   003E06  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  1860   003E0A                     
  1861                           ;newmain.c: 19:     lcd_4bit_send_string_pos(&lcd1,2,1,"calc is ready");
  1862   003E0A  0EF9               	movlw	low _lcd1
  1863   003E0C  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  1864   003E0E  0E02               	movlw	2
  1865   003E10  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  1866   003E12  0E01               	movlw	1
  1867   003E14  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  1868   003E16  0EC5               	movlw	low STR_15
  1869   003E18  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  1870   003E1A  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  1871   003E1C  A4D8               	btfss	status,2,c
  1872   003E1E  0E10               	movlw	high __smallconst
  1873   003E20  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  1874   003E22  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  1875   003E26                     
  1876                           ;newmain.c: 20:  _delay((unsigned long)((1000)*(8000000ul/4000.0)));
  1877   003E26  0E0B               	movlw	11
  1878   003E28  0100               	movlb	0	; () banked
  1879   003E2A  6FD1               	movwf	(??_main+1)& (0+255),b
  1880   003E2C  0E26               	movlw	38
  1881   003E2E  6FD0               	movwf	??_main& (0+255),b
  1882   003E30  0E5D               	movlw	93
  1883   003E32                     u13477:
  1884   003E32  2EE8               	decfsz	wreg,f,c
  1885   003E34  D7FE               	bra	u13477
  1886   003E36  2FD0               	decfsz	??_main& (0+255),f,b
  1887   003E38  D7FC               	bra	u13477
  1888   003E3A  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  1889   003E3C  D7FA               	bra	u13477
  1890   003E3E  D000               	nop2	
  1891   003E40                     
  1892                           ;newmain.c: 21:  lcd_4bit_send_command(&lcd1,0x01);
  1893   003E40  0EF9               	movlw	low _lcd1
  1894   003E42  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  1895   003E44  0E01               	movlw	1
  1896   003E46  6E10               	movwf	lcd_4bit_send_command@command^0,c
  1897   003E48  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  1898   003E4C                     
  1899                           ;newmain.c: 23:     get_number_and_operartion(num1,&counter_num1,&lcd_counter,&operation
      +                          );
  1900   003E4C  0EF0               	movlw	low _num1
  1901   003E4E  6E1D               	movwf	get_number_and_operartion@num^0,c
  1902   003E50  0E01               	movlw	high _num1
  1903   003E52  6E1E               	movwf	(get_number_and_operartion@num+1)^0,c
  1904   003E54  0EF8               	movlw	low _counter_num1
  1905   003E56  6E1F               	movwf	get_number_and_operartion@counter_num^0,c
  1906   003E58  0EFF               	movlw	low _lcd_counter
  1907   003E5A  6E20               	movwf	get_number_and_operartion@lcd_counter^0,c
  1908   003E5C  0EF5               	movlw	low _operation
  1909   003E5E  6E21               	movwf	get_number_and_operartion@operation^0,c
  1910   003E60  EC6C  F02C         	call	_get_number_and_operartion	;wreg free
  1911   003E64                     
  1912                           ;newmain.c: 24:     convert_arr_to_float( num1,counter_num1,&num1_val);
  1913   003E64  0EF0               	movlw	low _num1
  1914   003E66  0100               	movlb	0	; () banked
  1915   003E68  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1916   003E6A  0E01               	movlw	high _num1
  1917   003E6C  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1918   003E6E  C0F8  F082         	movff	_counter_num1,convert_arr_to_float@counter_num
  1919   003E72  0EEF               	movlw	low _num1_val
  1920   003E74  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1921   003E76  EC91  F032         	call	_convert_arr_to_float	;wreg free
  1922   003E7A                     
  1923                           ;newmain.c: 26:     get_number_and_operartion(num2,&counter_num2,&lcd_counter,&operation
      +                          2);
  1924   003E7A  0EEC               	movlw	low _num2
  1925   003E7C  6E1D               	movwf	get_number_and_operartion@num^0,c
  1926   003E7E  0E01               	movlw	high _num2
  1927   003E80  6E1E               	movwf	(get_number_and_operartion@num+1)^0,c
  1928   003E82  0EF7               	movlw	low _counter_num2
  1929   003E84  6E1F               	movwf	get_number_and_operartion@counter_num^0,c
  1930   003E86  0EFF               	movlw	low _lcd_counter
  1931   003E88  6E20               	movwf	get_number_and_operartion@lcd_counter^0,c
  1932   003E8A  0EF4               	movlw	low _operation2
  1933   003E8C  6E21               	movwf	get_number_and_operartion@operation^0,c
  1934   003E8E  EC6C  F02C         	call	_get_number_and_operartion	;wreg free
  1935   003E92                     
  1936                           ;newmain.c: 27:     convert_arr_to_float( num2,counter_num2,&num2_val);
  1937   003E92  0EEC               	movlw	low _num2
  1938   003E94  0100               	movlb	0	; () banked
  1939   003E96  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1940   003E98  0E01               	movlw	high _num2
  1941   003E9A  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1942   003E9C  C0F7  F082         	movff	_counter_num2,convert_arr_to_float@counter_num
  1943   003EA0  0EEB               	movlw	low _num2_val
  1944   003EA2  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1945   003EA4  EC91  F032         	call	_convert_arr_to_float	;wreg free
  1946   003EA8                     
  1947                           ;newmain.c: 30:     if(operation2 == '='){}
  1948   003EA8  0E3D               	movlw	61
  1949   003EAA  0100               	movlb	0	; () banked
  1950   003EAC  19F4               	xorwf	_operation2& (0+255),w,b
  1951   003EAE  A4D8               	btfss	status,2,c
  1952   003EB0  EF5C  F01F         	goto	u13421
  1953   003EB4  EF5E  F01F         	goto	u13420
  1954   003EB8                     u13421:
  1955   003EB8  EF60  F01F         	goto	l12845
  1956   003EBC                     u13420:
  1957   003EBC  EF77  F01F         	goto	l12849
  1958   003EC0                     l12845:
  1959                           
  1960                           ; BSR set to: 0
  1961                           ;newmain.c: 32:     get_third_number_and_third_operartion(num3,&counter_num3,&lcd_counte
      +                          r,&operation3);
  1962   003EC0  0EE8               	movlw	low _num3
  1963   003EC2  6E1D               	movwf	get_third_number_and_third_operartion@num^0,c
  1964   003EC4  0E01               	movlw	high _num3
  1965   003EC6  6E1E               	movwf	(get_third_number_and_third_operartion@num+1)^0,c
  1966   003EC8  0EF6               	movlw	low _counter_num3
  1967   003ECA  6E1F               	movwf	get_third_number_and_third_operartion@counter_num^0,c
  1968   003ECC  0EFF               	movlw	low _lcd_counter
  1969   003ECE  6E20               	movwf	get_third_number_and_third_operartion@lcd_counter^0,c
  1970   003ED0  0EF3               	movlw	low _operation3
  1971   003ED2  6E21               	movwf	get_third_number_and_third_operartion@operation^0,c
  1972   003ED4  ECC2  F029         	call	_get_third_number_and_third_operartion	;wreg free
  1973   003ED8                     
  1974                           ;newmain.c: 33:     convert_arr_to_float( num3,counter_num3,&num3_val);
  1975   003ED8  0EE8               	movlw	low _num3
  1976   003EDA  0100               	movlb	0	; () banked
  1977   003EDC  6F80               	movwf	convert_arr_to_float@arr& (0+255),b
  1978   003EDE  0E01               	movlw	high _num3
  1979   003EE0  6F81               	movwf	(convert_arr_to_float@arr+1)& (0+255),b
  1980   003EE2  C0F6  F082         	movff	_counter_num3,convert_arr_to_float@counter_num
  1981   003EE6  0EE7               	movlw	low _num3_val
  1982   003EE8  6F83               	movwf	convert_arr_to_float@num_value& (0+255),b
  1983   003EEA  EC91  F032         	call	_convert_arr_to_float	;wreg free
  1984   003EEE                     l12849:
  1985                           
  1986                           ;newmain.c: 36:     if((operation2 == '*' || operation2 == '/') && (operation == '+' || 
      +                          operation == '-'))
  1987   003EEE  0E2A               	movlw	42
  1988   003EF0  0100               	movlb	0	; () banked
  1989   003EF2  19F4               	xorwf	_operation2& (0+255),w,b
  1990   003EF4  B4D8               	btfsc	status,2,c
  1991   003EF6  EF7F  F01F         	goto	u13431
  1992   003EFA  EF81  F01F         	goto	u13430
  1993   003EFE                     u13431:
  1994   003EFE  EF8A  F01F         	goto	l12853
  1995   003F02                     u13430:
  1996   003F02                     
  1997                           ; BSR set to: 0
  1998   003F02  0E2F               	movlw	47
  1999   003F04  19F4               	xorwf	_operation2& (0+255),w,b
  2000   003F06  A4D8               	btfss	status,2,c
  2001   003F08  EF88  F01F         	goto	u13441
  2002   003F0C  EF8A  F01F         	goto	u13440
  2003   003F10                     u13441:
  2004   003F10  EFB1  F020         	goto	l12889
  2005   003F14                     u13440:
  2006   003F14                     l12853:
  2007                           
  2008                           ; BSR set to: 0
  2009   003F14  0E2B               	movlw	43
  2010   003F16  19F5               	xorwf	_operation& (0+255),w,b
  2011   003F18  B4D8               	btfsc	status,2,c
  2012   003F1A  EF91  F01F         	goto	u13451
  2013   003F1E  EF93  F01F         	goto	u13450
  2014   003F22                     u13451:
  2015   003F22  EFCA  F01F         	goto	l12863
  2016   003F26                     u13450:
  2017   003F26                     
  2018                           ; BSR set to: 0
  2019   003F26  0E2D               	movlw	45
  2020   003F28  19F5               	xorwf	_operation& (0+255),w,b
  2021   003F2A  A4D8               	btfss	status,2,c
  2022   003F2C  EF9A  F01F         	goto	u13461
  2023   003F30  EF9C  F01F         	goto	u13460
  2024   003F34                     u13461:
  2025   003F34  EFB1  F020         	goto	l12889
  2026   003F38                     u13460:
  2027   003F38  EFCA  F01F         	goto	l12863
  2028   003F3C                     l12857:
  2029                           
  2030                           ; BSR set to: 0
  2031   003F3C  C0EB  F032         	movff	_num2_val,multiplication_operation@num1_val
  2032   003F40  C0EC  F033         	movff	_num2_val+1,multiplication_operation@num1_val+1
  2033   003F44  C0ED  F034         	movff	_num2_val+2,multiplication_operation@num1_val+2
  2034   003F48  C0EE  F035         	movff	_num2_val+3,multiplication_operation@num1_val+3
  2035   003F4C  C0E7  F036         	movff	_num3_val,multiplication_operation@num2_val
  2036   003F50  C0E8  F037         	movff	_num3_val+1,multiplication_operation@num2_val+1
  2037   003F54  C0E9  F038         	movff	_num3_val+2,multiplication_operation@num2_val+2
  2038   003F58  C0EA  F039         	movff	_num3_val+3,multiplication_operation@num2_val+3
  2039   003F5C  0EE3               	movlw	low _result
  2040   003F5E  6E3A               	movwf	multiplication_operation@result^0,c
  2041   003F60  EC12  F03C         	call	_multiplication_operation	;wreg free
  2042   003F64  EF0B  F020         	goto	l12871
  2043   003F68                     l12859:
  2044                           
  2045                           ; BSR set to: 0
  2046   003F68  C0EB  F05B         	movff	_num2_val,Division_operation@num1_val
  2047   003F6C  C0EC  F05C         	movff	_num2_val+1,Division_operation@num1_val+1
  2048   003F70  C0ED  F05D         	movff	_num2_val+2,Division_operation@num1_val+2
  2049   003F74  C0EE  F05E         	movff	_num2_val+3,Division_operation@num1_val+3
  2050   003F78  C0E7  F05F         	movff	_num3_val,Division_operation@num2_val
  2051   003F7C  C0E8  F060         	movff	_num3_val+1,Division_operation@num2_val+1
  2052   003F80  C0E9  F061         	movff	_num3_val+2,Division_operation@num2_val+2
  2053   003F84  C0EA  F062         	movff	_num3_val+3,Division_operation@num2_val+3
  2054   003F88  0EE3               	movlw	low _result
  2055   003F8A  6E63               	movwf	Division_operation@result^0,c
  2056   003F8C  EC4E  F03C         	call	_Division_operation	;wreg free
  2057   003F90  EF0B  F020         	goto	l12871
  2058   003F94                     l12863:
  2059                           
  2060                           ; BSR set to: 0
  2061   003F94  51F4               	movf	_operation2& (0+255),w,b
  2062   003F96  6FD0               	movwf	??_main& (0+255),b
  2063   003F98  6BD1               	clrf	(??_main+1)& (0+255),b
  2064                           
  2065                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2066                           ; Switch size 1, requested type "simple"
  2067                           ; Number of cases is 1, Range of values is 0 to 0
  2068                           ; switch strategies available:
  2069                           ; Name         Instructions Cycles
  2070                           ; simple_byte            4     3 (average)
  2071                           ;	Chosen strategy is simple_byte
  2072   003F9A  51D1               	movf	(??_main+1)& (0+255),w,b
  2073   003F9C  0A00               	xorlw	0	; case 0
  2074   003F9E  B4D8               	btfsc	status,2,c
  2075   003FA0  EFD4  F01F         	goto	l13281
  2076   003FA4  EF0B  F020         	goto	l12871
  2077   003FA8                     l13281:
  2078                           
  2079                           ; BSR set to: 0
  2080                           ; Switch size 1, requested type "simple"
  2081                           ; Number of cases is 2, Range of values is 42 to 47
  2082                           ; switch strategies available:
  2083                           ; Name         Instructions Cycles
  2084                           ; simple_byte            7     4 (average)
  2085                           ;	Chosen strategy is simple_byte
  2086   003FA8  51D0               	movf	??_main& (0+255),w,b
  2087   003FAA  0A2A               	xorlw	42	; case 42
  2088   003FAC  B4D8               	btfsc	status,2,c
  2089   003FAE  EF9E  F01F         	goto	l12857
  2090   003FB2  0A05               	xorlw	5	; case 47
  2091   003FB4  B4D8               	btfsc	status,2,c
  2092   003FB6  EFB4  F01F         	goto	l12859
  2093   003FBA  EF0B  F020         	goto	l12871
  2094   003FBE                     l12865:
  2095                           
  2096                           ; BSR set to: 0
  2097   003FBE  C0EF  F042         	movff	_num1_val,sum_operation@num1_val
  2098   003FC2  C0F0  F043         	movff	_num1_val+1,sum_operation@num1_val+1
  2099   003FC6  C0F1  F044         	movff	_num1_val+2,sum_operation@num1_val+2
  2100   003FCA  C0F2  F045         	movff	_num1_val+3,sum_operation@num1_val+3
  2101   003FCE  C0E3  F046         	movff	_result,sum_operation@num2_val
  2102   003FD2  C0E4  F047         	movff	_result+1,sum_operation@num2_val+1
  2103   003FD6  C0E5  F048         	movff	_result+2,sum_operation@num2_val+2
  2104   003FDA  C0E6  F049         	movff	_result+3,sum_operation@num2_val+3
  2105   003FDE  0EDF               	movlw	low _total_result
  2106   003FE0  6E4A               	movwf	sum_operation@result^0,c
  2107   003FE2  ECD6  F03B         	call	_sum_operation	;wreg free
  2108   003FE6  EF2D  F020         	goto	l12877
  2109   003FEA                     l12867:
  2110                           
  2111                           ; BSR set to: 0
  2112   003FEA  C0EF  F063         	movff	_num1_val,subtraction_operation@num1_val
  2113   003FEE  C0F0  F064         	movff	_num1_val+1,subtraction_operation@num1_val+1
  2114   003FF2  C0F1  F065         	movff	_num1_val+2,subtraction_operation@num1_val+2
  2115   003FF6  C0F2  F066         	movff	_num1_val+3,subtraction_operation@num1_val+3
  2116   003FFA  C0E3  F067         	movff	_result,subtraction_operation@num2_val
  2117   003FFE  C0E4  F068         	movff	_result+1,subtraction_operation@num2_val+1
  2118   004002  C0E5  F069         	movff	_result+2,subtraction_operation@num2_val+2
  2119   004006  C0E6  F06A         	movff	_result+3,subtraction_operation@num2_val+3
  2120   00400A  0EDF               	movlw	low _total_result
  2121   00400C  6E6B               	movwf	subtraction_operation@result^0,c
  2122   00400E  ECF4  F03B         	call	_subtraction_operation	;wreg free
  2123   004012  EF2D  F020         	goto	l12877
  2124   004016                     l12871:
  2125   004016  0100               	movlb	0	; () banked
  2126   004018  51F5               	movf	_operation& (0+255),w,b
  2127   00401A  6FD0               	movwf	??_main& (0+255),b
  2128   00401C  6BD1               	clrf	(??_main+1)& (0+255),b
  2129                           
  2130                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2131                           ; Switch size 1, requested type "simple"
  2132                           ; Number of cases is 1, Range of values is 0 to 0
  2133                           ; switch strategies available:
  2134                           ; Name         Instructions Cycles
  2135                           ; simple_byte            4     3 (average)
  2136                           ;	Chosen strategy is simple_byte
  2137   00401E  51D1               	movf	(??_main+1)& (0+255),w,b
  2138   004020  0A00               	xorlw	0	; case 0
  2139   004022  B4D8               	btfsc	status,2,c
  2140   004024  EF16  F020         	goto	l13283
  2141   004028  EF2D  F020         	goto	l12877
  2142   00402C                     l13283:
  2143                           
  2144                           ; BSR set to: 0
  2145                           ; Switch size 1, requested type "simple"
  2146                           ; Number of cases is 2, Range of values is 43 to 45
  2147                           ; switch strategies available:
  2148                           ; Name         Instructions Cycles
  2149                           ; simple_byte            7     4 (average)
  2150                           ;	Chosen strategy is simple_byte
  2151   00402C  51D0               	movf	??_main& (0+255),w,b
  2152   00402E  0A2B               	xorlw	43	; case 43
  2153   004030  B4D8               	btfsc	status,2,c
  2154   004032  EFDF  F01F         	goto	l12865
  2155   004036  0A06               	xorlw	6	; case 45
  2156   004038  B4D8               	btfsc	status,2,c
  2157   00403A  EFF5  F01F         	goto	l12867
  2158   00403E  EF2D  F020         	goto	l12877
  2159   004042                     l12873:
  2160                           
  2161                           ; BSR set to: 0
  2162   004042  C0DF  F0CC         	movff	_total_result,send_the_result_to_LCD@result
  2163   004046  C0E0  F0CD         	movff	_total_result+1,send_the_result_to_LCD@result+1
  2164   00404A  C0E1  F0CE         	movff	_total_result+2,send_the_result_to_LCD@result+2
  2165   00404E  C0E2  F0CF         	movff	_total_result+3,send_the_result_to_LCD@result+3
  2166   004052  ECAD  F033         	call	_send_the_result_to_LCD	;wreg free
  2167   004056  EF7A  F021         	goto	l12911
  2168   00405A                     l12877:
  2169   00405A  0100               	movlb	0	; () banked
  2170   00405C  51F3               	movf	_operation3& (0+255),w,b
  2171   00405E  6FD0               	movwf	??_main& (0+255),b
  2172   004060  6BD1               	clrf	(??_main+1)& (0+255),b
  2173                           
  2174                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2175                           ; Switch size 1, requested type "simple"
  2176                           ; Number of cases is 1, Range of values is 0 to 0
  2177                           ; switch strategies available:
  2178                           ; Name         Instructions Cycles
  2179                           ; simple_byte            4     3 (average)
  2180                           ;	Chosen strategy is simple_byte
  2181   004062  51D1               	movf	(??_main+1)& (0+255),w,b
  2182   004064  0A00               	xorlw	0	; case 0
  2183   004066  B4D8               	btfsc	status,2,c
  2184   004068  EF38  F020         	goto	l13285
  2185   00406C  EF7A  F021         	goto	l12911
  2186   004070                     l13285:
  2187                           
  2188                           ; BSR set to: 0
  2189                           ; Switch size 1, requested type "simple"
  2190                           ; Number of cases is 5, Range of values is 42 to 61
  2191                           ; switch strategies available:
  2192                           ; Name         Instructions Cycles
  2193                           ; simple_byte           16     9 (average)
  2194                           ;	Chosen strategy is simple_byte
  2195   004070  51D0               	movf	??_main& (0+255),w,b
  2196   004072  0A2A               	xorlw	42	; case 42
  2197   004074  B4D8               	btfsc	status,2,c
  2198   004076  EF7A  F021         	goto	l12911
  2199   00407A  0A01               	xorlw	1	; case 43
  2200   00407C  B4D8               	btfsc	status,2,c
  2201   00407E  EF7A  F021         	goto	l12911
  2202   004082  0A06               	xorlw	6	; case 45
  2203   004084  B4D8               	btfsc	status,2,c
  2204   004086  EF7A  F021         	goto	l12911
  2205   00408A  0A02               	xorlw	2	; case 47
  2206   00408C  B4D8               	btfsc	status,2,c
  2207   00408E  EF7A  F021         	goto	l12911
  2208   004092  0A12               	xorlw	18	; case 61
  2209   004094  B4D8               	btfsc	status,2,c
  2210   004096  EF21  F020         	goto	l12873
  2211   00409A  EF7A  F021         	goto	l12911
  2212   00409E                     l12879:
  2213                           
  2214                           ; BSR set to: 0
  2215   00409E  C0EF  F042         	movff	_num1_val,sum_operation@num1_val
  2216   0040A2  C0F0  F043         	movff	_num1_val+1,sum_operation@num1_val+1
  2217   0040A6  C0F1  F044         	movff	_num1_val+2,sum_operation@num1_val+2
  2218   0040AA  C0F2  F045         	movff	_num1_val+3,sum_operation@num1_val+3
  2219   0040AE  C0EB  F046         	movff	_num2_val,sum_operation@num2_val
  2220   0040B2  C0EC  F047         	movff	_num2_val+1,sum_operation@num2_val+1
  2221   0040B6  C0ED  F048         	movff	_num2_val+2,sum_operation@num2_val+2
  2222   0040BA  C0EE  F049         	movff	_num2_val+3,sum_operation@num2_val+3
  2223   0040BE  0EE3               	movlw	low _result
  2224   0040C0  6E4A               	movwf	sum_operation@result^0,c
  2225   0040C2  ECD6  F03B         	call	_sum_operation	;wreg free
  2226   0040C6  EF36  F021         	goto	l12903
  2227   0040CA                     l12881:
  2228                           
  2229                           ; BSR set to: 0
  2230   0040CA  C0EF  F063         	movff	_num1_val,subtraction_operation@num1_val
  2231   0040CE  C0F0  F064         	movff	_num1_val+1,subtraction_operation@num1_val+1
  2232   0040D2  C0F1  F065         	movff	_num1_val+2,subtraction_operation@num1_val+2
  2233   0040D6  C0F2  F066         	movff	_num1_val+3,subtraction_operation@num1_val+3
  2234   0040DA  C0EB  F067         	movff	_num2_val,subtraction_operation@num2_val
  2235   0040DE  C0EC  F068         	movff	_num2_val+1,subtraction_operation@num2_val+1
  2236   0040E2  C0ED  F069         	movff	_num2_val+2,subtraction_operation@num2_val+2
  2237   0040E6  C0EE  F06A         	movff	_num2_val+3,subtraction_operation@num2_val+3
  2238   0040EA  0EE3               	movlw	low _result
  2239   0040EC  6E6B               	movwf	subtraction_operation@result^0,c
  2240   0040EE  ECF4  F03B         	call	_subtraction_operation	;wreg free
  2241   0040F2  EF36  F021         	goto	l12903
  2242   0040F6                     l12883:
  2243                           
  2244                           ; BSR set to: 0
  2245   0040F6  C0EF  F032         	movff	_num1_val,multiplication_operation@num1_val
  2246   0040FA  C0F0  F033         	movff	_num1_val+1,multiplication_operation@num1_val+1
  2247   0040FE  C0F1  F034         	movff	_num1_val+2,multiplication_operation@num1_val+2
  2248   004102  C0F2  F035         	movff	_num1_val+3,multiplication_operation@num1_val+3
  2249   004106  C0EB  F036         	movff	_num2_val,multiplication_operation@num2_val
  2250   00410A  C0EC  F037         	movff	_num2_val+1,multiplication_operation@num2_val+1
  2251   00410E  C0ED  F038         	movff	_num2_val+2,multiplication_operation@num2_val+2
  2252   004112  C0EE  F039         	movff	_num2_val+3,multiplication_operation@num2_val+3
  2253   004116  0EE3               	movlw	low _result
  2254   004118  6E3A               	movwf	multiplication_operation@result^0,c
  2255   00411A  EC12  F03C         	call	_multiplication_operation	;wreg free
  2256   00411E  EF36  F021         	goto	l12903
  2257   004122                     l12885:
  2258                           
  2259                           ; BSR set to: 0
  2260   004122  C0EF  F05B         	movff	_num1_val,Division_operation@num1_val
  2261   004126  C0F0  F05C         	movff	_num1_val+1,Division_operation@num1_val+1
  2262   00412A  C0F1  F05D         	movff	_num1_val+2,Division_operation@num1_val+2
  2263   00412E  C0F2  F05E         	movff	_num1_val+3,Division_operation@num1_val+3
  2264   004132  C0EB  F05F         	movff	_num2_val,Division_operation@num2_val
  2265   004136  C0EC  F060         	movff	_num2_val+1,Division_operation@num2_val+1
  2266   00413A  C0ED  F061         	movff	_num2_val+2,Division_operation@num2_val+2
  2267   00413E  C0EE  F062         	movff	_num2_val+3,Division_operation@num2_val+3
  2268   004142  0EE3               	movlw	low _result
  2269   004144  6E63               	movwf	Division_operation@result^0,c
  2270   004146  EC4E  F03C         	call	_Division_operation	;wreg free
  2271   00414A  EF36  F021         	goto	l12903
  2272   00414E                     l666:
  2273                           
  2274                           ; BSR set to: 0
  2275   00414E  C0EF  F0E3         	movff	_num1_val,_result
  2276   004152  C0F0  F0E4         	movff	_num1_val+1,_result+1
  2277   004156  C0F1  F0E5         	movff	_num1_val+2,_result+2
  2278   00415A  C0F2  F0E6         	movff	_num1_val+3,_result+3
  2279   00415E  EF36  F021         	goto	l12903
  2280   004162                     l12889:
  2281                           
  2282                           ; BSR set to: 0
  2283   004162  51F5               	movf	_operation& (0+255),w,b
  2284   004164  6FD0               	movwf	??_main& (0+255),b
  2285   004166  6BD1               	clrf	(??_main+1)& (0+255),b
  2286                           
  2287                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2288                           ; Switch size 1, requested type "simple"
  2289                           ; Number of cases is 1, Range of values is 0 to 0
  2290                           ; switch strategies available:
  2291                           ; Name         Instructions Cycles
  2292                           ; simple_byte            4     3 (average)
  2293                           ;	Chosen strategy is simple_byte
  2294   004168  51D1               	movf	(??_main+1)& (0+255),w,b
  2295   00416A  0A00               	xorlw	0	; case 0
  2296   00416C  B4D8               	btfsc	status,2,c
  2297   00416E  EFBB  F020         	goto	l13287
  2298   004172  EF36  F021         	goto	l12903
  2299   004176                     l13287:
  2300                           
  2301                           ; BSR set to: 0
  2302                           ; Switch size 1, requested type "simple"
  2303                           ; Number of cases is 5, Range of values is 42 to 61
  2304                           ; switch strategies available:
  2305                           ; Name         Instructions Cycles
  2306                           ; simple_byte           16     9 (average)
  2307                           ;	Chosen strategy is simple_byte
  2308   004176  51D0               	movf	??_main& (0+255),w,b
  2309   004178  0A2A               	xorlw	42	; case 42
  2310   00417A  B4D8               	btfsc	status,2,c
  2311   00417C  EF7B  F020         	goto	l12883
  2312   004180  0A01               	xorlw	1	; case 43
  2313   004182  B4D8               	btfsc	status,2,c
  2314   004184  EF4F  F020         	goto	l12879
  2315   004188  0A06               	xorlw	6	; case 45
  2316   00418A  B4D8               	btfsc	status,2,c
  2317   00418C  EF65  F020         	goto	l12881
  2318   004190  0A02               	xorlw	2	; case 47
  2319   004192  B4D8               	btfsc	status,2,c
  2320   004194  EF91  F020         	goto	l12885
  2321   004198  0A12               	xorlw	18	; case 61
  2322   00419A  B4D8               	btfsc	status,2,c
  2323   00419C  EFA7  F020         	goto	l666
  2324   0041A0  EF36  F021         	goto	l12903
  2325   0041A4                     l12891:
  2326                           
  2327                           ; BSR set to: 0
  2328   0041A4  C0E3  F042         	movff	_result,sum_operation@num1_val
  2329   0041A8  C0E4  F043         	movff	_result+1,sum_operation@num1_val+1
  2330   0041AC  C0E5  F044         	movff	_result+2,sum_operation@num1_val+2
  2331   0041B0  C0E6  F045         	movff	_result+3,sum_operation@num1_val+3
  2332   0041B4  C0E7  F046         	movff	_num3_val,sum_operation@num2_val
  2333   0041B8  C0E8  F047         	movff	_num3_val+1,sum_operation@num2_val+1
  2334   0041BC  C0E9  F048         	movff	_num3_val+2,sum_operation@num2_val+2
  2335   0041C0  C0EA  F049         	movff	_num3_val+3,sum_operation@num2_val+3
  2336   0041C4  0EDF               	movlw	low _total_result
  2337   0041C6  6E4A               	movwf	sum_operation@result^0,c
  2338   0041C8  ECD6  F03B         	call	_sum_operation	;wreg free
  2339   0041CC  EF58  F021         	goto	l12909
  2340   0041D0                     l12893:
  2341                           
  2342                           ; BSR set to: 0
  2343   0041D0  C0E3  F063         	movff	_result,subtraction_operation@num1_val
  2344   0041D4  C0E4  F064         	movff	_result+1,subtraction_operation@num1_val+1
  2345   0041D8  C0E5  F065         	movff	_result+2,subtraction_operation@num1_val+2
  2346   0041DC  C0E6  F066         	movff	_result+3,subtraction_operation@num1_val+3
  2347   0041E0  C0E7  F067         	movff	_num3_val,subtraction_operation@num2_val
  2348   0041E4  C0E8  F068         	movff	_num3_val+1,subtraction_operation@num2_val+1
  2349   0041E8  C0E9  F069         	movff	_num3_val+2,subtraction_operation@num2_val+2
  2350   0041EC  C0EA  F06A         	movff	_num3_val+3,subtraction_operation@num2_val+3
  2351   0041F0  0EDF               	movlw	low _total_result
  2352   0041F2  6E6B               	movwf	subtraction_operation@result^0,c
  2353   0041F4  ECF4  F03B         	call	_subtraction_operation	;wreg free
  2354   0041F8  EF58  F021         	goto	l12909
  2355   0041FC                     l12895:
  2356                           
  2357                           ; BSR set to: 0
  2358   0041FC  C0E3  F032         	movff	_result,multiplication_operation@num1_val
  2359   004200  C0E4  F033         	movff	_result+1,multiplication_operation@num1_val+1
  2360   004204  C0E5  F034         	movff	_result+2,multiplication_operation@num1_val+2
  2361   004208  C0E6  F035         	movff	_result+3,multiplication_operation@num1_val+3
  2362   00420C  C0E7  F036         	movff	_num3_val,multiplication_operation@num2_val
  2363   004210  C0E8  F037         	movff	_num3_val+1,multiplication_operation@num2_val+1
  2364   004214  C0E9  F038         	movff	_num3_val+2,multiplication_operation@num2_val+2
  2365   004218  C0EA  F039         	movff	_num3_val+3,multiplication_operation@num2_val+3
  2366   00421C  0EDF               	movlw	low _total_result
  2367   00421E  6E3A               	movwf	multiplication_operation@result^0,c
  2368   004220  EC12  F03C         	call	_multiplication_operation	;wreg free
  2369   004224  EF58  F021         	goto	l12909
  2370   004228                     l12897:
  2371                           
  2372                           ; BSR set to: 0
  2373   004228  C0E3  F05B         	movff	_result,Division_operation@num1_val
  2374   00422C  C0E4  F05C         	movff	_result+1,Division_operation@num1_val+1
  2375   004230  C0E5  F05D         	movff	_result+2,Division_operation@num1_val+2
  2376   004234  C0E6  F05E         	movff	_result+3,Division_operation@num1_val+3
  2377   004238  C0E7  F05F         	movff	_num3_val,Division_operation@num2_val
  2378   00423C  C0E8  F060         	movff	_num3_val+1,Division_operation@num2_val+1
  2379   004240  C0E9  F061         	movff	_num3_val+2,Division_operation@num2_val+2
  2380   004244  C0EA  F062         	movff	_num3_val+3,Division_operation@num2_val+3
  2381   004248  0EDF               	movlw	low _total_result
  2382   00424A  6E63               	movwf	Division_operation@result^0,c
  2383   00424C  EC4E  F03C         	call	_Division_operation	;wreg free
  2384   004250  EF58  F021         	goto	l12909
  2385   004254                     l12899:
  2386                           
  2387                           ; BSR set to: 0
  2388   004254  C0E3  F0CC         	movff	_result,send_the_result_to_LCD@result
  2389   004258  C0E4  F0CD         	movff	_result+1,send_the_result_to_LCD@result+1
  2390   00425C  C0E5  F0CE         	movff	_result+2,send_the_result_to_LCD@result+2
  2391   004260  C0E6  F0CF         	movff	_result+3,send_the_result_to_LCD@result+3
  2392   004264  ECAD  F033         	call	_send_the_result_to_LCD	;wreg free
  2393   004268  EF58  F021         	goto	l12909
  2394   00426C                     l12903:
  2395   00426C  0100               	movlb	0	; () banked
  2396   00426E  51F4               	movf	_operation2& (0+255),w,b
  2397   004270  6FD0               	movwf	??_main& (0+255),b
  2398   004272  6BD1               	clrf	(??_main+1)& (0+255),b
  2399                           
  2400                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2401                           ; Switch size 1, requested type "simple"
  2402                           ; Number of cases is 1, Range of values is 0 to 0
  2403                           ; switch strategies available:
  2404                           ; Name         Instructions Cycles
  2405                           ; simple_byte            4     3 (average)
  2406                           ;	Chosen strategy is simple_byte
  2407   004274  51D1               	movf	(??_main+1)& (0+255),w,b
  2408   004276  0A00               	xorlw	0	; case 0
  2409   004278  B4D8               	btfsc	status,2,c
  2410   00427A  EF41  F021         	goto	l13289
  2411   00427E  EF58  F021         	goto	l12909
  2412   004282                     l13289:
  2413                           
  2414                           ; BSR set to: 0
  2415                           ; Switch size 1, requested type "simple"
  2416                           ; Number of cases is 5, Range of values is 42 to 61
  2417                           ; switch strategies available:
  2418                           ; Name         Instructions Cycles
  2419                           ; simple_byte           16     9 (average)
  2420                           ;	Chosen strategy is simple_byte
  2421   004282  51D0               	movf	??_main& (0+255),w,b
  2422   004284  0A2A               	xorlw	42	; case 42
  2423   004286  B4D8               	btfsc	status,2,c
  2424   004288  EFFE  F020         	goto	l12895
  2425   00428C  0A01               	xorlw	1	; case 43
  2426   00428E  B4D8               	btfsc	status,2,c
  2427   004290  EFD2  F020         	goto	l12891
  2428   004294  0A06               	xorlw	6	; case 45
  2429   004296  B4D8               	btfsc	status,2,c
  2430   004298  EFE8  F020         	goto	l12893
  2431   00429C  0A02               	xorlw	2	; case 47
  2432   00429E  B4D8               	btfsc	status,2,c
  2433   0042A0  EF14  F021         	goto	l12897
  2434   0042A4  0A12               	xorlw	18	; case 61
  2435   0042A6  B4D8               	btfsc	status,2,c
  2436   0042A8  EF2A  F021         	goto	l12899
  2437   0042AC  EF58  F021         	goto	l12909
  2438   0042B0                     l12909:
  2439   0042B0  0100               	movlb	0	; () banked
  2440   0042B2  51F3               	movf	_operation3& (0+255),w,b
  2441   0042B4  6FD0               	movwf	??_main& (0+255),b
  2442   0042B6  6BD1               	clrf	(??_main+1)& (0+255),b
  2443                           
  2444                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2445                           ; Switch size 1, requested type "simple"
  2446                           ; Number of cases is 1, Range of values is 0 to 0
  2447                           ; switch strategies available:
  2448                           ; Name         Instructions Cycles
  2449                           ; simple_byte            4     3 (average)
  2450                           ;	Chosen strategy is simple_byte
  2451   0042B8  51D1               	movf	(??_main+1)& (0+255),w,b
  2452   0042BA  0A00               	xorlw	0	; case 0
  2453   0042BC  B4D8               	btfsc	status,2,c
  2454   0042BE  EF63  F021         	goto	l13291
  2455   0042C2  EF7A  F021         	goto	l12911
  2456   0042C6                     l13291:
  2457                           
  2458                           ; BSR set to: 0
  2459                           ; Switch size 1, requested type "simple"
  2460                           ; Number of cases is 5, Range of values is 42 to 61
  2461                           ; switch strategies available:
  2462                           ; Name         Instructions Cycles
  2463                           ; simple_byte           16     9 (average)
  2464                           ;	Chosen strategy is simple_byte
  2465   0042C6  51D0               	movf	??_main& (0+255),w,b
  2466   0042C8  0A2A               	xorlw	42	; case 42
  2467   0042CA  B4D8               	btfsc	status,2,c
  2468   0042CC  EF7A  F021         	goto	l12911
  2469   0042D0  0A01               	xorlw	1	; case 43
  2470   0042D2  B4D8               	btfsc	status,2,c
  2471   0042D4  EF7A  F021         	goto	l12911
  2472   0042D8  0A06               	xorlw	6	; case 45
  2473   0042DA  B4D8               	btfsc	status,2,c
  2474   0042DC  EF7A  F021         	goto	l12911
  2475   0042E0  0A02               	xorlw	2	; case 47
  2476   0042E2  B4D8               	btfsc	status,2,c
  2477   0042E4  EF7A  F021         	goto	l12911
  2478   0042E8  0A12               	xorlw	18	; case 61
  2479   0042EA  B4D8               	btfsc	status,2,c
  2480   0042EC  EF21  F020         	goto	l12873
  2481   0042F0  EF7A  F021         	goto	l12911
  2482   0042F4                     l12911:
  2483                           
  2484                           ;newmain.c: 86:     _delay((unsigned long)((3000)*(8000000ul/4000.0)));
  2485   0042F4  0E1F               	movlw	31
  2486   0042F6  0100               	movlb	0	; () banked
  2487   0042F8  6FD1               	movwf	(??_main+1)& (0+255),b
  2488   0042FA  0E71               	movlw	113
  2489   0042FC  6FD0               	movwf	??_main& (0+255),b
  2490   0042FE  0E1E               	movlw	30
  2491   004300                     u13487:
  2492   004300  2EE8               	decfsz	wreg,f,c
  2493   004302  D7FE               	bra	u13487
  2494   004304  2FD0               	decfsz	??_main& (0+255),f,b
  2495   004306  D7FC               	bra	u13487
  2496   004308  2FD1               	decfsz	(??_main+1)& (0+255),f,b
  2497   00430A  D7FA               	bra	u13487
  2498   00430C  0000               	nop	
  2499   00430E                     
  2500                           ;newmain.c: 87:  lcd_4bit_send_command(&lcd1,0x01);
  2501   00430E  0EF9               	movlw	low _lcd1
  2502   004310  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2503   004312  0E01               	movlw	1
  2504   004314  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2505   004316  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  2506   00431A  EFFD  F01E         	goto	l12823
  2507   00431E  EF00  F000         	goto	start
  2508   004322                     __end_of_main:
  2509                           	callstack 0
  2510                           
  2511 ;; *************** function _sum_operation *****************
  2512 ;; Defined at:
  2513 ;;		line 165 in file "calculator_function/calculator_functions.c"
  2514 ;; Parameters:    Size  Location     Type
  2515 ;;  num1_val        4   65[COMRAM] float 
  2516 ;;  num2_val        4   69[COMRAM] float 
  2517 ;;  result          1   73[COMRAM] PTR float 
  2518 ;;		 -> total_result(4), result(4), 
  2519 ;; Auto vars:     Size  Location     Type
  2520 ;;		None
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  1    wreg      void 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2530 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2533 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2534 ;;Total ram usage:        9 bytes
  2535 ;; Hardware stack levels used: 1
  2536 ;; Hardware stack levels required when called: 1
  2537 ;; This function calls:
  2538 ;;		___fladd
  2539 ;; This function is called by:
  2540 ;;		_main
  2541 ;; This function uses a non-reentrant model
  2542 ;;
  2543                           
  2544                           	psect	text1
  2545   0077AC                     __ptext1:
  2546                           	callstack 0
  2547   0077AC                     _sum_operation:
  2548                           	callstack 29
  2549   0077AC                     
  2550                           ;calculator_function/calculator_functions.c: 166: *result = num1_val+num2_val;
  2551   0077AC  C042  F032         	movff	sum_operation@num1_val,___fladd@b
  2552   0077B0  C043  F033         	movff	sum_operation@num1_val+1,___fladd@b+1
  2553   0077B4  C044  F034         	movff	sum_operation@num1_val+2,___fladd@b+2
  2554   0077B8  C045  F035         	movff	sum_operation@num1_val+3,___fladd@b+3
  2555   0077BC  C046  F036         	movff	sum_operation@num2_val,___fladd@a
  2556   0077C0  C047  F037         	movff	sum_operation@num2_val+1,___fladd@a+1
  2557   0077C4  C048  F038         	movff	sum_operation@num2_val+2,___fladd@a+2
  2558   0077C8  C049  F039         	movff	sum_operation@num2_val+3,___fladd@a+3
  2559   0077CC  EC91  F021         	call	___fladd	;wreg free
  2560   0077D0  504A               	movf	sum_operation@result^0,w,c
  2561   0077D2  6ED9               	movwf	fsr2l,c
  2562   0077D4  6ADA               	clrf	fsr2h,c
  2563   0077D6  C032  FFDE         	movff	?___fladd,postinc2
  2564   0077DA  C033  FFDE         	movff	?___fladd+1,postinc2
  2565   0077DE  C034  FFDE         	movff	?___fladd+2,postinc2
  2566   0077E2  C035  FFDE         	movff	?___fladd+3,postinc2
  2567   0077E6  0012               	return		;funcret
  2568   0077E8                     __end_of_sum_operation:
  2569                           	callstack 0
  2570                           
  2571 ;; *************** function _subtraction_operation *****************
  2572 ;; Defined at:
  2573 ;;		line 175 in file "calculator_function/calculator_functions.c"
  2574 ;; Parameters:    Size  Location     Type
  2575 ;;  num1_val        4   98[COMRAM] float 
  2576 ;;  num2_val        4  102[COMRAM] float 
  2577 ;;  result          1  106[COMRAM] PTR float 
  2578 ;;		 -> total_result(4), result(4), 
  2579 ;; Auto vars:     Size  Location     Type
  2580 ;;		None
  2581 ;; Return value:  Size  Location     Type
  2582 ;;                  1    wreg      void 
  2583 ;; Registers used:
  2584 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2585 ;; Tracked objects:
  2586 ;;		On entry : 0/0
  2587 ;;		On exit  : 0/0
  2588 ;;		Unchanged: 0/0
  2589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2590 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2591 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2593 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2594 ;;Total ram usage:        9 bytes
  2595 ;; Hardware stack levels used: 1
  2596 ;; Hardware stack levels required when called: 2
  2597 ;; This function calls:
  2598 ;;		___flsub
  2599 ;; This function is called by:
  2600 ;;		_main
  2601 ;; This function uses a non-reentrant model
  2602 ;;
  2603                           
  2604                           	psect	text2
  2605   0077E8                     __ptext2:
  2606                           	callstack 0
  2607   0077E8                     _subtraction_operation:
  2608                           	callstack 28
  2609   0077E8                     
  2610                           ;calculator_function/calculator_functions.c: 176: *result = num1_val-num2_val;
  2611   0077E8  C063  F05B         	movff	subtraction_operation@num1_val,___flsub@b
  2612   0077EC  C064  F05C         	movff	subtraction_operation@num1_val+1,___flsub@b+1
  2613   0077F0  C065  F05D         	movff	subtraction_operation@num1_val+2,___flsub@b+2
  2614   0077F4  C066  F05E         	movff	subtraction_operation@num1_val+3,___flsub@b+3
  2615   0077F8  C067  F05F         	movff	subtraction_operation@num2_val,___flsub@a
  2616   0077FC  C068  F060         	movff	subtraction_operation@num2_val+1,___flsub@a+1
  2617   007800  C069  F061         	movff	subtraction_operation@num2_val+2,___flsub@a+2
  2618   007804  C06A  F062         	movff	subtraction_operation@num2_val+3,___flsub@a+3
  2619   007808  EC34  F03B         	call	___flsub	;wreg free
  2620   00780C  506B               	movf	subtraction_operation@result^0,w,c
  2621   00780E  6ED9               	movwf	fsr2l,c
  2622   007810  6ADA               	clrf	fsr2h,c
  2623   007812  C05B  FFDE         	movff	?___flsub,postinc2
  2624   007816  C05C  FFDE         	movff	?___flsub+1,postinc2
  2625   00781A  C05D  FFDE         	movff	?___flsub+2,postinc2
  2626   00781E  C05E  FFDE         	movff	?___flsub+3,postinc2
  2627   007822  0012               	return		;funcret
  2628   007824                     __end_of_subtraction_operation:
  2629                           	callstack 0
  2630                           
  2631 ;; *************** function _send_the_result_to_LCD *****************
  2632 ;; Defined at:
  2633 ;;		line 204 in file "calculator_function/calculator_functions.c"
  2634 ;; Parameters:    Size  Location     Type
  2635 ;;  result          4   76[BANK0 ] float 
  2636 ;; Auto vars:     Size  Location     Type
  2637 ;;  result_str     40   80[BANK1 ] unsigned int [20]
  2638 ;;  result_str     80    0[BANK1 ] float [20]
  2639 ;; Return value:  Size  Location     Type
  2640 ;;                  1    wreg      void 
  2641 ;; Registers used:
  2642 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2643 ;; Tracked objects:
  2644 ;;		On entry : 0/0
  2645 ;;		On exit  : 0/0
  2646 ;;		Unchanged: 0/0
  2647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2648 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2649 ;;      Locals:         0       0     122       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2650 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2651 ;;      Totals:         0       4     122       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2652 ;;Total ram usage:      126 bytes
  2653 ;; Hardware stack levels used: 1
  2654 ;; Hardware stack levels required when called: 9
  2655 ;; This function calls:
  2656 ;;		___flge
  2657 ;;		___fltol
  2658 ;;		___xxtofl
  2659 ;;		_convert_float_to_string
  2660 ;;		_convert_int_to_string
  2661 ;;		_lcd_4bit_send_command
  2662 ;;		_lcd_4bit_send_string_pos
  2663 ;; This function is called by:
  2664 ;;		_main
  2665 ;; This function uses a non-reentrant model
  2666 ;;
  2667                           
  2668                           	psect	text3
  2669   00675A                     __ptext3:
  2670                           	callstack 0
  2671   00675A                     _send_the_result_to_LCD:
  2672                           	callstack 21
  2673   00675A                     
  2674                           ;calculator_function/calculator_functions.c: 205: if(result > (uint32)result){
  2675   00675A  C0CC  F001         	movff	send_the_result_to_LCD@result,___fltol@f1
  2676   00675E  C0CD  F002         	movff	send_the_result_to_LCD@result+1,___fltol@f1+1
  2677   006762  C0CE  F003         	movff	send_the_result_to_LCD@result+2,___fltol@f1+2
  2678   006766  C0CF  F004         	movff	send_the_result_to_LCD@result+3,___fltol@f1+3
  2679   00676A  EC34  F034         	call	___fltol	;wreg free
  2680   00676E  C001  F00B         	movff	?___fltol,___xxtofl@val
  2681   006772  C002  F00C         	movff	?___fltol+1,___xxtofl@val+1
  2682   006776  6A0D               	clrf	(___xxtofl@val+2)^0,c
  2683   006778  6A0E               	clrf	(___xxtofl@val+3)^0,c
  2684   00677A  0E00               	movlw	0
  2685   00677C  ECC2  F02F         	call	___xxtofl
  2686   006780  C00B  F063         	movff	?___xxtofl,___flge@ff1
  2687   006784  C00C  F064         	movff	?___xxtofl+1,___flge@ff1+1
  2688   006788  C00D  F065         	movff	?___xxtofl+2,___flge@ff1+2
  2689   00678C  C00E  F066         	movff	?___xxtofl+3,___flge@ff1+3
  2690   006790  C0CC  F067         	movff	send_the_result_to_LCD@result,___flge@ff2
  2691   006794  C0CD  F068         	movff	send_the_result_to_LCD@result+1,___flge@ff2+1
  2692   006798  C0CE  F069         	movff	send_the_result_to_LCD@result+2,___flge@ff2+2
  2693   00679C  C0CF  F06A         	movff	send_the_result_to_LCD@result+3,___flge@ff2+3
  2694   0067A0  ECB7  F034         	call	___flge	;wreg free
  2695   0067A4  B0D8               	btfsc	status,0,c
  2696   0067A6  EFD7  F033         	goto	u13391
  2697   0067AA  EFD9  F033         	goto	u13390
  2698   0067AE                     u13391:
  2699   0067AE  EF02  F034         	goto	l12787
  2700   0067B2                     u13390:
  2701   0067B2                     
  2702                           ;calculator_function/calculator_functions.c: 206: float32 result_str[20];;calculator_fun
      +                          ction/calculator_functions.c: 207: convert_float_to_string(result,result_str);
  2703   0067B2  C0CC  F0C6         	movff	send_the_result_to_LCD@result,convert_float_to_string@value
  2704   0067B6  C0CD  F0C7         	movff	send_the_result_to_LCD@result+1,convert_float_to_string@value+1
  2705   0067BA  C0CE  F0C8         	movff	send_the_result_to_LCD@result+2,convert_float_to_string@value+2
  2706   0067BE  C0CF  F0C9         	movff	send_the_result_to_LCD@result+3,convert_float_to_string@value+3
  2707   0067C2  0E00               	movlw	low send_the_result_to_LCD@result_str
  2708   0067C4  0100               	movlb	0	; () banked
  2709   0067C6  6FCA               	movwf	convert_float_to_string@str& (0+255),b
  2710   0067C8  0E01               	movlw	high send_the_result_to_LCD@result_str
  2711   0067CA  6FCB               	movwf	(convert_float_to_string@str+1)& (0+255),b
  2712   0067CC  EC57  F03B         	call	_convert_float_to_string	;wreg free
  2713   0067D0                     
  2714                           ;calculator_function/calculator_functions.c: 208: lcd_4bit_send_command(&lcd1,0x08);
  2715   0067D0  0EF9               	movlw	low _lcd1
  2716   0067D2  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2717   0067D4  0E08               	movlw	8
  2718   0067D6  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2719   0067D8  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  2720   0067DC                     
  2721                           ;calculator_function/calculator_functions.c: 209: lcd_4bit_send_command(&lcd1,0x0C);
  2722   0067DC  0EF9               	movlw	low _lcd1
  2723   0067DE  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2724   0067E0  0E0C               	movlw	12
  2725   0067E2  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2726   0067E4  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  2727   0067E8                     
  2728                           ;calculator_function/calculator_functions.c: 210: lcd_4bit_send_string_pos(&lcd1,3,1,res
      +                          ult_str);
  2729   0067E8  0EF9               	movlw	low _lcd1
  2730   0067EA  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2731   0067EC  0E03               	movlw	3
  2732   0067EE  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  2733   0067F0  0E01               	movlw	1
  2734   0067F2  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  2735   0067F4  0E00               	movlw	low send_the_result_to_LCD@result_str
  2736   0067F6  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  2737   0067F8  0E01               	movlw	high send_the_result_to_LCD@result_str
  2738   0067FA  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2739   0067FC  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  2740                           
  2741                           ;calculator_function/calculator_functions.c: 211: }
  2742   006800  EF33  F034         	goto	l117
  2743   006804                     l12787:
  2744                           
  2745                           ;calculator_function/calculator_functions.c: 213: uint32 result_str[20];;calculator_func
      +                          tion/calculator_functions.c: 214: convert_int_to_string((uint32)result,result_str);
  2746   006804  C0CC  F001         	movff	send_the_result_to_LCD@result,___fltol@f1
  2747   006808  C0CD  F002         	movff	send_the_result_to_LCD@result+1,___fltol@f1+1
  2748   00680C  C0CE  F003         	movff	send_the_result_to_LCD@result+2,___fltol@f1+2
  2749   006810  C0CF  F004         	movff	send_the_result_to_LCD@result+3,___fltol@f1+3
  2750   006814  EC34  F034         	call	___fltol	;wreg free
  2751   006818  C001  F178         	movff	?___fltol,_send_the_result_to_LCD$2094
  2752   00681C  C002  F179         	movff	?___fltol+1,_send_the_result_to_LCD$2094+1
  2753   006820                     
  2754                           ;calculator_function/calculator_functions.c: 213: uint32 result_str[20];;calculator_func
      +                          tion/calculator_functions.c: 214: convert_int_to_string((uint32)result,result_str);
  2755   006820  C178  F0C6         	movff	_send_the_result_to_LCD$2094,convert_int_to_string@value
  2756   006824  C179  F0C7         	movff	_send_the_result_to_LCD$2094+1,convert_int_to_string@value+1
  2757   006828  0E50               	movlw	low send_the_result_to_LCD@result_str_179
  2758   00682A  0100               	movlb	0	; () banked
  2759   00682C  6FC8               	movwf	convert_int_to_string@str& (0+255),b
  2760   00682E  0E01               	movlw	high send_the_result_to_LCD@result_str_179
  2761   006830  6FC9               	movwf	(convert_int_to_string@str+1)& (0+255),b
  2762   006832  ECE4  F03A         	call	_convert_int_to_string	;wreg free
  2763   006836                     
  2764                           ;calculator_function/calculator_functions.c: 215: lcd_4bit_send_command(&lcd1,0x08);
  2765   006836  0EF9               	movlw	low _lcd1
  2766   006838  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2767   00683A  0E08               	movlw	8
  2768   00683C  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2769   00683E  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  2770   006842                     
  2771                           ;calculator_function/calculator_functions.c: 216: lcd_4bit_send_command(&lcd1,0x0C);
  2772   006842  0EF9               	movlw	low _lcd1
  2773   006844  6E0F               	movwf	lcd_4bit_send_command@lcd^0,c
  2774   006846  0E0C               	movlw	12
  2775   006848  6E10               	movwf	lcd_4bit_send_command@command^0,c
  2776   00684A  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  2777   00684E                     
  2778                           ;calculator_function/calculator_functions.c: 217: lcd_4bit_send_string_pos(&lcd1,3,1,res
      +                          ult_str);
  2779   00684E  0EF9               	movlw	low _lcd1
  2780   006850  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  2781   006852  0E03               	movlw	3
  2782   006854  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  2783   006856  0E01               	movlw	1
  2784   006858  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  2785   00685A  0E50               	movlw	low send_the_result_to_LCD@result_str_179
  2786   00685C  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  2787   00685E  0E01               	movlw	high send_the_result_to_LCD@result_str_179
  2788   006860  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  2789   006862  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  2790   006866                     l117:
  2791   006866  0012               	return		;funcret
  2792   006868                     __end_of_send_the_result_to_LCD:
  2793                           	callstack 0
  2794                           
  2795 ;; *************** function _convert_int_to_string *****************
  2796 ;; Defined at:
  2797 ;;		line 469 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  2798 ;; Parameters:    Size  Location     Type
  2799 ;;  value           2   70[BANK0 ] unsigned int 
  2800 ;;  str             2   72[BANK0 ] PTR unsigned char 
  2801 ;;		 -> send_the_result_to_LCD@result_str_179(40), 
  2802 ;; Auto vars:     Size  Location     Type
  2803 ;;  ret             1    0        unsigned char 
  2804 ;; Return value:  Size  Location     Type
  2805 ;;                  1    wreg      unsigned char 
  2806 ;; Registers used:
  2807 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2808 ;; Tracked objects:
  2809 ;;		On entry : 0/0
  2810 ;;		On exit  : 0/0
  2811 ;;		Unchanged: 0/0
  2812 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2813 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2814 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2815 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2816 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2817 ;;Total ram usage:        4 bytes
  2818 ;; Hardware stack levels used: 1
  2819 ;; Hardware stack levels required when called: 8
  2820 ;; This function calls:
  2821 ;;		_memset
  2822 ;;		_sprintf
  2823 ;; This function is called by:
  2824 ;;		_send_the_result_to_LCD
  2825 ;; This function uses a non-reentrant model
  2826 ;;
  2827                           
  2828                           	psect	text4
  2829   0075C8                     __ptext4:
  2830                           	callstack 0
  2831   0075C8                     _convert_int_to_string:
  2832                           	callstack 21
  2833   0075C8                     
  2834                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 471:     if(((void*)0) == str)
  2835   0075C8  0100               	movlb	0	; () banked
  2836   0075CA  51C8               	movf	convert_int_to_string@str& (0+255),w,b
  2837   0075CC  11C9               	iorwf	(convert_int_to_string@str+1)& (0+255),w,b
  2838   0075CE  A4D8               	btfss	status,2,c
  2839   0075D0  EFEC  F03A         	goto	u13361
  2840   0075D4  EFEE  F03A         	goto	u13360
  2841   0075D8                     u13361:
  2842   0075D8  EFF0  F03A         	goto	l12743
  2843   0075DC                     u13360:
  2844   0075DC                     
  2845                           ; BSR set to: 0
  2846                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 474:     }
  2847   0075DC  EF0B  F03B         	goto	l294
  2848   0075E0                     l12743:
  2849                           
  2850                           ; BSR set to: 0
  2851                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 476:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 477:      
      +                             memset(str,'\0',20);
  2852   0075E0  C0C8  F001         	movff	convert_int_to_string@str,memset@dest
  2853   0075E4  C0C9  F002         	movff	convert_int_to_string@str+1,memset@dest+1
  2854   0075E8  0E00               	movlw	0
  2855   0075EA  6E04               	movwf	(memset@c+1)^0,c
  2856   0075EC  0E00               	movlw	0
  2857   0075EE  6E03               	movwf	memset@c^0,c
  2858   0075F0  0E00               	movlw	0
  2859   0075F2  6E06               	movwf	(memset@n+1)^0,c
  2860   0075F4  0E14               	movlw	20
  2861   0075F6  6E05               	movwf	memset@n^0,c
  2862   0075F8  ECA6  F03C         	call	_memset	;wreg free
  2863   0075FC                     
  2864                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 478:         sprintf(str,"%i",value);
  2865   0075FC  C0C8  F0B2         	movff	convert_int_to_string@str,sprintf@s
  2866   007600  C0C9  F0B3         	movff	convert_int_to_string@str+1,sprintf@s+1
  2867   007604  0EE0               	movlw	low STR_12
  2868   007606  0100               	movlb	0	; () banked
  2869   007608  6FB4               	movwf	sprintf@fmt& (0+255),b
  2870   00760A  C0C6  F0B5         	movff	convert_int_to_string@value,?_sprintf+3
  2871   00760E  C0C7  F0B6         	movff	convert_int_to_string@value+1,?_sprintf+4
  2872   007612  EC77  F03B         	call	_sprintf	;wreg free
  2873   007616                     l294:
  2874   007616  0012               	return		;funcret
  2875   007618                     __end_of_convert_int_to_string:
  2876                           	callstack 0
  2877                           
  2878 ;; *************** function _convert_float_to_string *****************
  2879 ;; Defined at:
  2880 ;;		line 154 in file "calculator_function/calculator_functions.c"
  2881 ;; Parameters:    Size  Location     Type
  2882 ;;  value           4   70[BANK0 ] float 
  2883 ;;  str             2   74[BANK0 ] PTR unsigned char 
  2884 ;;		 -> send_the_result_to_LCD@result_str(80), 
  2885 ;; Auto vars:     Size  Location     Type
  2886 ;;		None
  2887 ;; Return value:  Size  Location     Type
  2888 ;;                  1    wreg      void 
  2889 ;; Registers used:
  2890 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2891 ;; Tracked objects:
  2892 ;;		On entry : 0/0
  2893 ;;		On exit  : 0/0
  2894 ;;		Unchanged: 0/0
  2895 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2896 ;;      Params:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2897 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2898 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2899 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2900 ;;Total ram usage:        6 bytes
  2901 ;; Hardware stack levels used: 1
  2902 ;; Hardware stack levels required when called: 8
  2903 ;; This function calls:
  2904 ;;		_memset
  2905 ;;		_sprintf
  2906 ;; This function is called by:
  2907 ;;		_send_the_result_to_LCD
  2908 ;; This function uses a non-reentrant model
  2909 ;;
  2910                           
  2911                           	psect	text5
  2912   0076AE                     __ptext5:
  2913                           	callstack 0
  2914   0076AE                     _convert_float_to_string:
  2915                           	callstack 21
  2916   0076AE                     
  2917                           ;calculator_function/calculator_functions.c: 155:     memset(str,'\0',20);
  2918   0076AE  C0CA  F001         	movff	convert_float_to_string@str,memset@dest
  2919   0076B2  C0CB  F002         	movff	convert_float_to_string@str+1,memset@dest+1
  2920   0076B6  0E00               	movlw	0
  2921   0076B8  6E04               	movwf	(memset@c+1)^0,c
  2922   0076BA  0E00               	movlw	0
  2923   0076BC  6E03               	movwf	memset@c^0,c
  2924   0076BE  0E00               	movlw	0
  2925   0076C0  6E06               	movwf	(memset@n+1)^0,c
  2926   0076C2  0E14               	movlw	20
  2927   0076C4  6E05               	movwf	memset@n^0,c
  2928   0076C6  ECA6  F03C         	call	_memset	;wreg free
  2929   0076CA                     
  2930                           ;calculator_function/calculator_functions.c: 156:     sprintf(str,"%.2f",value);
  2931   0076CA  C0CA  F0B2         	movff	convert_float_to_string@str,sprintf@s
  2932   0076CE  C0CB  F0B3         	movff	convert_float_to_string@str+1,sprintf@s+1
  2933   0076D2  0ED3               	movlw	low STR_11
  2934   0076D4  0100               	movlb	0	; () banked
  2935   0076D6  6FB4               	movwf	sprintf@fmt& (0+255),b
  2936   0076D8  C0C6  F0B5         	movff	convert_float_to_string@value,?_sprintf+3
  2937   0076DC  C0C7  F0B6         	movff	convert_float_to_string@value+1,?_sprintf+4
  2938   0076E0  C0C8  F0B7         	movff	convert_float_to_string@value+2,?_sprintf+5
  2939   0076E4  C0C9  F0B8         	movff	convert_float_to_string@value+3,?_sprintf+6
  2940   0076E8  EC77  F03B         	call	_sprintf	;wreg free
  2941   0076EC  0012               	return		;funcret
  2942   0076EE                     __end_of_convert_float_to_string:
  2943                           	callstack 0
  2944                           
  2945 ;; *************** function _sprintf *****************
  2946 ;; Defined at:
  2947 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_sprintf.c"
  2948 ;; Parameters:    Size  Location     Type
  2949 ;;  s               2   50[BANK0 ] PTR unsigned char 
  2950 ;;		 -> send_the_result_to_LCD@result_str_179(40), send_the_result_to_LCD@result_str(80), 
  2951 ;;  fmt             1   52[BANK0 ] PTR const unsigned char 
  2952 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  2953 ;; Auto vars:     Size  Location     Type
  2954 ;;  f              12   58[BANK0 ] struct _IO_FILE
  2955 ;;  ret             2    0        int 
  2956 ;;  ap              1   57[BANK0 ] PTR void [1]
  2957 ;;		 -> ?_sprintf(2), 
  2958 ;; Return value:  Size  Location     Type
  2959 ;;                  2   50[BANK0 ] int 
  2960 ;; Registers used:
  2961 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2962 ;; Tracked objects:
  2963 ;;		On entry : 0/0
  2964 ;;		On exit  : 0/0
  2965 ;;		Unchanged: 0/0
  2966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2967 ;;      Params:         0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2968 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2969 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2970 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2971 ;;Total ram usage:       20 bytes
  2972 ;; Hardware stack levels used: 1
  2973 ;; Hardware stack levels required when called: 7
  2974 ;; This function calls:
  2975 ;;		_vfprintf
  2976 ;; This function is called by:
  2977 ;;		_convert_float_to_string
  2978 ;;		_convert_int_to_string
  2979 ;;		_convert_byte_to_string
  2980 ;;		_convert_short_to_string
  2981 ;; This function uses a non-reentrant model
  2982 ;;
  2983                           
  2984                           	psect	text6
  2985   0076EE                     __ptext6:
  2986                           	callstack 0
  2987   0076EE                     _sprintf:
  2988                           	callstack 21
  2989   0076EE  0EB5               	movlw	low (?_sprintf+3)
  2990   0076F0  0100               	movlb	0	; () banked
  2991   0076F2  6FB9               	movwf	sprintf@ap& (0+255),b
  2992   0076F4  C0B2  F0BA         	movff	sprintf@s,sprintf@f
  2993   0076F8  C0B3  F0BB         	movff	sprintf@s+1,sprintf@f+1
  2994   0076FC                     
  2995                           ; BSR set to: 0
  2996   0076FC  0E00               	movlw	0
  2997   0076FE  6FBE               	movwf	(sprintf@f+4)& (0+255),b
  2998   007700  0E00               	movlw	0
  2999   007702  6FBD               	movwf	(sprintf@f+3)& (0+255),b
  3000   007704                     
  3001                           ; BSR set to: 0
  3002   007704  0E00               	movlw	0
  3003   007706  6FC5               	movwf	(sprintf@f+11)& (0+255),b
  3004   007708  0E00               	movlw	0
  3005   00770A  6FC4               	movwf	(sprintf@f+10)& (0+255),b
  3006   00770C                     
  3007                           ; BSR set to: 0
  3008   00770C  0EBA               	movlw	low sprintf@f
  3009   00770E  6E7C               	movwf	vfprintf@fp^0,c
  3010   007710  C0B4  F07D         	movff	sprintf@fmt,vfprintf@fmt
  3011   007714  0EB9               	movlw	low sprintf@ap
  3012   007716  6E7E               	movwf	vfprintf@ap^0,c
  3013   007718  ECB7  F03B         	call	_vfprintf	;wreg free
  3014   00771C  0100               	movlb	0	; () banked
  3015   00771E  51BD               	movf	(sprintf@f+3)& (0+255),w,b
  3016   007720  25B2               	addwf	sprintf@s& (0+255),w,b
  3017   007722  6ED9               	movwf	fsr2l,c
  3018   007724  51BE               	movf	(sprintf@f+4)& (0+255),w,b
  3019   007726  21B3               	addwfc	(sprintf@s+1)& (0+255),w,b
  3020   007728  6EDA               	movwf	fsr2h,c
  3021   00772A  6ADF               	clrf	indf2,c
  3022   00772C                     
  3023                           ; BSR set to: 0
  3024   00772C  0012               	return		;funcret
  3025   00772E                     __end_of_sprintf:
  3026                           	callstack 0
  3027                           
  3028 ;; *************** function _vfprintf *****************
  3029 ;; Defined at:
  3030 ;;		line 1817 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3031 ;; Parameters:    Size  Location     Type
  3032 ;;  fp              1  123[COMRAM] PTR struct _IO_FILE
  3033 ;;		 -> sprintf@f(12), 
  3034 ;;  fmt             1  124[COMRAM] PTR const unsigned char 
  3035 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  3036 ;;  ap              1  125[COMRAM] PTR PTR void 
  3037 ;;		 -> sprintf@ap(1), 
  3038 ;; Auto vars:     Size  Location     Type
  3039 ;;  cfmt            1  126[COMRAM] PTR unsigned char 
  3040 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  2  123[COMRAM] int 
  3043 ;; Registers used:
  3044 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3050 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;Total ram usage:        4 bytes
  3055 ;; Hardware stack levels used: 1
  3056 ;; Hardware stack levels required when called: 6
  3057 ;; This function calls:
  3058 ;;		_vfpfcnvrt
  3059 ;; This function is called by:
  3060 ;;		_sprintf
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text7
  3065   00776E                     __ptext7:
  3066                           	callstack 0
  3067   00776E                     _vfprintf:
  3068                           	callstack 21
  3069   00776E                     
  3070                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1817: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\source
      +                          s\c99\common\doprnt.c: 1818: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\comm
      +                          on\doprnt.c: 1820:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\
      +                          common\doprnt.c: 1822:     cfmt = (char *)fmt;
  3071   00776E  C07D  F07F         	movff	vfprintf@fmt,vfprintf@cfmt
  3072                           
  3073                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3074   007772  EFC3  F03B         	goto	l12139
  3075   007776                     l12137:
  3076                           
  3077                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1830:    vfpfcnvr
      +                          t(fp, &cfmt, ap);
  3078   007776  C07C  F077         	movff	vfprintf@fp,vfpfcnvrt@fp
  3079   00777A  0E7F               	movlw	low vfprintf@cfmt
  3080   00777C  6E78               	movwf	vfpfcnvrt@fmt^0,c
  3081   00777E  C07E  F079         	movff	vfprintf@ap,vfpfcnvrt@ap
  3082   007782  EC29  F02B         	call	_vfpfcnvrt	;wreg free
  3083   007786                     l12139:
  3084                           
  3085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1826:     while (
      +                          *cfmt) {
  3086   007786  C07F  FFF6         	movff	vfprintf@cfmt,tblptrl
  3087   00778A                     	if	1	;There is more than 1 active tblptr byte
  3088   00778A  0E10               	movlw	high __smallconst
  3089   00778C  6EF7               	movwf	tblptrh,c
  3090   00778E                     	endif
  3091   00778E                     	if	0	;tblptru may be non-zero
  3092   00778E                     	endif
  3093   00778E                     	if	0	;tblptru may be non-zero
  3094   00778E                     	endif
  3095   00778E  0008               	tblrd		*
  3096   007790  50F5               	movf	tablat,w,c
  3097   007792  0900               	iorlw	0
  3098   007794  A4D8               	btfss	status,2,c
  3099   007796  EFCF  F03B         	goto	u12461
  3100   00779A  EFD1  F03B         	goto	u12460
  3101   00779E                     u12461:
  3102   00779E  EFBB  F03B         	goto	l12137
  3103   0077A2                     u12460:
  3104   0077A2                     
  3105                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1835:  return 0;
  3106   0077A2  0E00               	movlw	0
  3107   0077A4  6E7D               	movwf	(?_vfprintf+1)^0,c
  3108   0077A6  0E00               	movlw	0
  3109   0077A8  6E7C               	movwf	?_vfprintf^0,c
  3110   0077AA  0012               	return		;funcret
  3111   0077AC                     __end_of_vfprintf:
  3112                           	callstack 0
  3113                           
  3114 ;; *************** function _vfpfcnvrt *****************
  3115 ;; Defined at:
  3116 ;;		line 1177 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3117 ;; Parameters:    Size  Location     Type
  3118 ;;  fp              1  118[COMRAM] PTR struct _IO_FILE
  3119 ;;		 -> sprintf@f(12), 
  3120 ;;  fmt             1  119[COMRAM] PTR PTR unsigned char 
  3121 ;;		 -> vfprintf@cfmt(1), 
  3122 ;;  ap              1  120[COMRAM] PTR PTR void 
  3123 ;;		 -> sprintf@ap(1), 
  3124 ;; Auto vars:     Size  Location     Type
  3125 ;;  convarg         4   44[BANK0 ] struct .
  3126 ;;  cp              1   49[BANK0 ] PTR unsigned char 
  3127 ;;		 -> STR_14(3), STR_13(3), STR_12(3), STR_11(5), 
  3128 ;;  c               1   48[BANK0 ] unsigned char 
  3129 ;;  done            1    0        _Bool 
  3130 ;; Return value:  Size  Location     Type
  3131 ;;                  1    wreg      void 
  3132 ;; Registers used:
  3133 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3134 ;; Tracked objects:
  3135 ;;		On entry : 0/0
  3136 ;;		On exit  : 0/0
  3137 ;;		Unchanged: 0/0
  3138 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3139 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3140 ;;      Locals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3141 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3142 ;;      Totals:         5       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3143 ;;Total ram usage:       11 bytes
  3144 ;; Hardware stack levels used: 1
  3145 ;; Hardware stack levels required when called: 5
  3146 ;; This function calls:
  3147 ;;		_dtoa
  3148 ;;		_efgtoa
  3149 ;;		_fputc
  3150 ;;		_read_prec_or_width
  3151 ;; This function is called by:
  3152 ;;		_vfprintf
  3153 ;; This function uses a non-reentrant model
  3154 ;;
  3155                           
  3156                           	psect	text8
  3157   005652                     __ptext8:
  3158                           	callstack 0
  3159   005652                     _vfpfcnvrt:
  3160                           	callstack 21
  3161   005652                     
  3162                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1177: vfpfcnvrt(F
      +                          ILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\c
      +                          ommon\doprnt.c: 1178: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\dopr
      +                          nt.c: 1179:     char c, *cp;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 1180:     _Bool done;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1188:  } convarg;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\co
      +                          mmon\doprnt.c: 1201:     if ((*fmt)[0] == '%') {
  3163   005652  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3164   005654  6ED9               	movwf	fsr2l,c
  3165   005656  6ADA               	clrf	fsr2h,c
  3166   005658  CFDF FFF6          	movff	indf2,tblptrl
  3167   00565C                     	if	1	;There is more than 1 active tblptr byte
  3168   00565C  0E10               	movlw	high __smallconst
  3169   00565E  6EF7               	movwf	tblptrh,c
  3170   005660                     	endif
  3171   005660                     	if	0	;tblptru may be non-zero
  3172   005660                     	endif
  3173   005660                     	if	0	;tblptru may be non-zero
  3174   005660                     	endif
  3175   005660  0008               	tblrd		*
  3176   005662  50F5               	movf	tablat,w,c
  3177   005664  0A25               	xorlw	37
  3178   005666  A4D8               	btfss	status,2,c
  3179   005668  EF38  F02B         	goto	u12411
  3180   00566C  EF3A  F02B         	goto	u12410
  3181   005670                     u12411:
  3182   005670  EF5A  F02C         	goto	l12111
  3183   005674                     u12410:
  3184   005674                     
  3185                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1202:         ++*
      +                          fmt;
  3186   005674  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3187   005676  6ED9               	movwf	fsr2l,c
  3188   005678  6ADA               	clrf	fsr2h,c
  3189   00567A  2ADF               	incf	indf2,f,c
  3190   00567C                     
  3191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1204:         fla
      +                          gs = width = 0;
  3192   00567C  0E00               	movlw	0
  3193   00567E  0100               	movlb	0	; () banked
  3194   005680  6FD3               	movwf	(_width+1)& (0+255),b
  3195   005682  0E00               	movlw	0
  3196   005684  6FD2               	movwf	_width& (0+255),b
  3197   005686  C0D2  F0D6         	movff	_width,_flags
  3198   00568A                     
  3199                           ; BSR set to: 0
  3200                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1205:         pre
      +                          c = -1;
  3201   00568A  69D4               	setf	_prec& (0+255),b
  3202   00568C  69D5               	setf	(_prec+1)& (0+255),b
  3203   00568E                     
  3204                           ; BSR set to: 0
  3205                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1265:         if 
      +                          ((*fmt)[0] == '.') {
  3206   00568E  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3207   005690  6ED9               	movwf	fsr2l,c
  3208   005692  6ADA               	clrf	fsr2h,c
  3209   005694  CFDF FFF6          	movff	indf2,tblptrl
  3210   005698                     	if	1	;There is more than 1 active tblptr byte
  3211   005698  0E10               	movlw	high __smallconst
  3212   00569A  6EF7               	movwf	tblptrh,c
  3213   00569C                     	endif
  3214   00569C                     	if	0	;tblptru may be non-zero
  3215   00569C                     	endif
  3216   00569C                     	if	0	;tblptru may be non-zero
  3217   00569C                     	endif
  3218   00569C  0008               	tblrd		*
  3219   00569E  50F5               	movf	tablat,w,c
  3220   0056A0  0A2E               	xorlw	46
  3221   0056A2  A4D8               	btfss	status,2,c
  3222   0056A4  EF56  F02B         	goto	u12421
  3223   0056A8  EF58  F02B         	goto	u12420
  3224   0056AC                     u12421:
  3225   0056AC  EF66  F02B         	goto	l12059
  3226   0056B0                     u12420:
  3227   0056B0                     
  3228                           ; BSR set to: 0
  3229                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1266:            
      +                           ++*fmt;
  3230   0056B0  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3231   0056B2  6ED9               	movwf	fsr2l,c
  3232   0056B4  6ADA               	clrf	fsr2h,c
  3233   0056B6  2ADF               	incf	indf2,f,c
  3234   0056B8                     
  3235                           ; BSR set to: 0
  3236                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1267:    prec = r
      +                          ead_prec_or_width(fmt, ap);
  3237   0056B8  C078  F007         	movff	vfpfcnvrt@fmt,read_prec_or_width@fmt
  3238   0056BC  C079  F008         	movff	vfpfcnvrt@ap,read_prec_or_width@ap
  3239   0056C0  EC56  F038         	call	_read_prec_or_width	;wreg free
  3240   0056C4  C007  F0D4         	movff	?_read_prec_or_width,_prec
  3241   0056C8  C008  F0D5         	movff	?_read_prec_or_width+1,_prec+1
  3242   0056CC                     l12059:
  3243                           
  3244                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1291:   cp = *fmt
      +                          ;
  3245   0056CC  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3246   0056CE  6ED9               	movwf	fsr2l,c
  3247   0056D0  6ADA               	clrf	fsr2h,c
  3248   0056D2  50DF               	movf	indf2,w,c
  3249   0056D4  0100               	movlb	0	; () banked
  3250   0056D6  6FB1               	movwf	vfpfcnvrt@cp& (0+255),b
  3251   0056D8                     
  3252                           ; BSR set to: 0
  3253                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1361:   if (*cp =
      +                          = 'd' || *cp == 'i') {
  3254   0056D8  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3255   0056DC                     	if	1	;There is more than 1 active tblptr byte
  3256   0056DC  0E10               	movlw	high __smallconst
  3257   0056DE  6EF7               	movwf	tblptrh,c
  3258   0056E0                     	endif
  3259   0056E0                     	if	0	;tblptru may be non-zero
  3260   0056E0                     	endif
  3261   0056E0                     	if	0	;tblptru may be non-zero
  3262   0056E0                     	endif
  3263   0056E0  0008               	tblrd		*
  3264   0056E2  50F5               	movf	tablat,w,c
  3265   0056E4  0A64               	xorlw	100
  3266   0056E6  B4D8               	btfsc	status,2,c
  3267   0056E8  EF78  F02B         	goto	u12431
  3268   0056EC  EF7A  F02B         	goto	u12430
  3269   0056F0                     u12431:
  3270   0056F0  EF88  F02B         	goto	l12065
  3271   0056F4                     u12430:
  3272   0056F4                     
  3273                           ; BSR set to: 0
  3274   0056F4  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3275   0056F8                     	if	1	;There is more than 1 active tblptr byte
  3276   0056F8  0E10               	movlw	high __smallconst
  3277   0056FA  6EF7               	movwf	tblptrh,c
  3278   0056FC                     	endif
  3279   0056FC                     	if	0	;tblptru may be non-zero
  3280   0056FC                     	endif
  3281   0056FC                     	if	0	;tblptru may be non-zero
  3282   0056FC                     	endif
  3283   0056FC  0008               	tblrd		*
  3284   0056FE  50F5               	movf	tablat,w,c
  3285   005700  0A69               	xorlw	105
  3286   005702  A4D8               	btfss	status,2,c
  3287   005704  EF86  F02B         	goto	u12441
  3288   005708  EF88  F02B         	goto	u12440
  3289   00570C                     u12441:
  3290   00570C  EFA3  F02B         	goto	l12073
  3291   005710                     u12440:
  3292   005710                     l12065:
  3293                           
  3294                           ; BSR set to: 0
  3295                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1404:    convarg.
      +                          sint = (vfpf_sint_t)(int)(*(int *)__va_arg(*(int **)ap, (int)0));
  3296   005710  5079               	movf	vfpfcnvrt@ap^0,w,c
  3297   005712  6ED9               	movwf	fsr2l,c
  3298   005714  6ADA               	clrf	fsr2h,c
  3299   005716  0E02               	movlw	2
  3300   005718  26DF               	addwf	indf2,f,c
  3301   00571A  5CDF               	subwf	indf2,w,c
  3302   00571C  6ED9               	movwf	fsr2l,c
  3303   00571E  6ADA               	clrf	fsr2h,c
  3304   005720  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3305   005724  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3306   005728                     
  3307                           ; BSR set to: 0
  3308                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1406:    *fmt = c
      +                          p+1;
  3309   005728  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3310   00572A  6ED9               	movwf	fsr2l,c
  3311   00572C  6ADA               	clrf	fsr2h,c
  3312   00572E  29B1               	incf	vfpfcnvrt@cp& (0+255),w,b
  3313   005730  6EDF               	movwf	indf2,c
  3314   005732                     
  3315                           ; BSR set to: 0
  3316                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1432:    return (
      +                          void) dtoa(fp, convarg.sint);;	Return value of _vfpfcnvrt is never used
  3317   005732  C077  F017         	movff	vfpfcnvrt@fp,dtoa@fp
  3318   005736  C0AC  F018         	movff	vfpfcnvrt@convarg,dtoa@d
  3319   00573A  C0AD  F019         	movff	vfpfcnvrt@convarg+1,dtoa@d+1
  3320   00573E  EC9C  F030         	call	_dtoa	;wreg free
  3321   005742  EF6B  F02C         	goto	l1492
  3322   005746                     l12073:
  3323                           
  3324                           ; BSR set to: 0
  3325                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1689:   cp = *fmt
      +                          ;
  3326   005746  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3327   005748  6ED9               	movwf	fsr2l,c
  3328   00574A  6ADA               	clrf	fsr2h,c
  3329   00574C  50DF               	movf	indf2,w,c
  3330   00574E  6FB1               	movwf	vfpfcnvrt@cp& (0+255),b
  3331   005750                     
  3332                           ; BSR set to: 0
  3333                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1690:   c = *cp;
  3334   005750  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3335   005754                     	if	1	;There is more than 1 active tblptr byte
  3336   005754  0E10               	movlw	high __smallconst
  3337   005756  6EF7               	movwf	tblptrh,c
  3338   005758                     	endif
  3339   005758                     	if	0	;tblptru may be non-zero
  3340   005758                     	endif
  3341   005758                     	if	0	;tblptru may be non-zero
  3342   005758                     	endif
  3343   005758  0008               	tblrd		*
  3344   00575A  CFF5 F0B0          	movff	tablat,vfpfcnvrt@c
  3345                           
  3346                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1691:   switch(c)
      +                           {
  3347   00575E  EFBC  F02B         	goto	l12085
  3348   005762                     l12077:
  3349                           
  3350                           ; BSR set to: 0
  3351                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1695:     cp++;
  3352   005762  2BB1               	incf	vfpfcnvrt@cp& (0+255),f,b
  3353                           
  3354                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1696:     break;
  3355   005764  EFD5  F02B         	goto	l12087
  3356   005768                     l12079:
  3357                           
  3358                           ; BSR set to: 0
  3359                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1721:     c = 'l'
      +                          ;
  3360   005768  0E6C               	movlw	108
  3361   00576A  6FB0               	movwf	vfpfcnvrt@c& (0+255),b
  3362                           
  3363                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1722:     break;
  3364   00576C  EFD5  F02B         	goto	l12087
  3365   005770                     l12081:
  3366                           
  3367                           ; BSR set to: 0
  3368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1724:     c = 0;
  3369   005770  0E00               	movlw	0
  3370   005772  6FB0               	movwf	vfpfcnvrt@c& (0+255),b
  3371                           
  3372                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1725:     break;
  3373   005774  EFD5  F02B         	goto	l12087
  3374   005778                     l12085:
  3375                           
  3376                           ; BSR set to: 0
  3377   005778  51B0               	movf	vfpfcnvrt@c& (0+255),w,b
  3378   00577A  6E7A               	movwf	??_vfpfcnvrt^0,c
  3379   00577C  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3380                           
  3381                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3382                           ; Switch size 1, requested type "simple"
  3383                           ; Number of cases is 1, Range of values is 0 to 0
  3384                           ; switch strategies available:
  3385                           ; Name         Instructions Cycles
  3386                           ; simple_byte            4     3 (average)
  3387                           ;	Chosen strategy is simple_byte
  3388   00577E  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3389   005780  0A00               	xorlw	0	; case 0
  3390   005782  B4D8               	btfsc	status,2,c
  3391   005784  EFC6  F02B         	goto	l13293
  3392   005788  EFB8  F02B         	goto	l12081
  3393   00578C                     l13293:
  3394                           
  3395                           ; BSR set to: 0
  3396                           ; Switch size 1, requested type "simple"
  3397                           ; Number of cases is 3, Range of values is 76 to 108
  3398                           ; switch strategies available:
  3399                           ; Name         Instructions Cycles
  3400                           ; simple_byte           10     6 (average)
  3401                           ;	Chosen strategy is simple_byte
  3402   00578C  507A               	movf	??_vfpfcnvrt^0,w,c
  3403   00578E  0A4C               	xorlw	76	; case 76
  3404   005790  B4D8               	btfsc	status,2,c
  3405   005792  EFB1  F02B         	goto	l12077
  3406   005796  0A2A               	xorlw	42	; case 102
  3407   005798  B4D8               	btfsc	status,2,c
  3408   00579A  EFB4  F02B         	goto	l12079
  3409   00579E  0A0A               	xorlw	10	; case 108
  3410   0057A0  B4D8               	btfsc	status,2,c
  3411   0057A2  EFB1  F02B         	goto	l12077
  3412   0057A6  EFB8  F02B         	goto	l12081
  3413   0057AA                     l12087:
  3414                           
  3415                           ; BSR set to: 0
  3416   0057AA  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3417   0057AE                     	if	1	;There is more than 1 active tblptr byte
  3418   0057AE  0E10               	movlw	high __smallconst
  3419   0057B0  6EF7               	movwf	tblptrh,c
  3420   0057B2                     	endif
  3421   0057B2                     	if	0	;tblptru may be non-zero
  3422   0057B2                     	endif
  3423   0057B2                     	if	0	;tblptru may be non-zero
  3424   0057B2                     	endif
  3425   0057B2  0008               	tblrd		*
  3426   0057B4  50F5               	movf	tablat,w,c
  3427   0057B6  0A66               	xorlw	102
  3428   0057B8  A4D8               	btfss	status,2,c
  3429   0057BA  EFE1  F02B         	goto	u12451
  3430   0057BE  EFE3  F02B         	goto	u12450
  3431   0057C2                     u12451:
  3432   0057C2  EF54  F02C         	goto	l12107
  3433   0057C6                     u12450:
  3434   0057C6  EF0D  F02C         	goto	l12095
  3435   0057CA                     l12089:
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1756:      convar
      +                          g.f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  3439   0057CA  5079               	movf	vfpfcnvrt@ap^0,w,c
  3440   0057CC  6ED9               	movwf	fsr2l,c
  3441   0057CE  6ADA               	clrf	fsr2h,c
  3442   0057D0  CFDF F07A          	movff	indf2,??_vfpfcnvrt
  3443   0057D4  0E04               	movlw	4
  3444   0057D6  26DF               	addwf	indf2,f,c
  3445   0057D8  507A               	movf	??_vfpfcnvrt^0,w,c
  3446   0057DA  6ED9               	movwf	fsr2l,c
  3447   0057DC  6ADA               	clrf	fsr2h,c
  3448   0057DE  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3449   0057E2  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3450   0057E6  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg+2
  3451   0057EA  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+3
  3452                           
  3453                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1757:      break;
  3454   0057EE  EF22  F02C         	goto	l12097
  3455   0057F2                     l12091:
  3456                           
  3457                           ; BSR set to: 0
  3458                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1759:      convar
      +                          g.f = (long double)(*(long double *)__va_arg(*(long double **)ap, (long double)0));
  3459   0057F2  5079               	movf	vfpfcnvrt@ap^0,w,c
  3460   0057F4  6ED9               	movwf	fsr2l,c
  3461   0057F6  6ADA               	clrf	fsr2h,c
  3462   0057F8  CFDF F07A          	movff	indf2,??_vfpfcnvrt
  3463   0057FC  0E04               	movlw	4
  3464   0057FE  26DF               	addwf	indf2,f,c
  3465   005800  507A               	movf	??_vfpfcnvrt^0,w,c
  3466   005802  6ED9               	movwf	fsr2l,c
  3467   005804  6ADA               	clrf	fsr2h,c
  3468   005806  CFDE F0AC          	movff	postinc2,vfpfcnvrt@convarg
  3469   00580A  CFDE F0AD          	movff	postinc2,vfpfcnvrt@convarg+1
  3470   00580E  CFDE F0AE          	movff	postinc2,vfpfcnvrt@convarg+2
  3471   005812  CFDE F0AF          	movff	postinc2,vfpfcnvrt@convarg+3
  3472                           
  3473                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1760:      break;
  3474   005816  EF22  F02C         	goto	l12097
  3475   00581A                     l12095:
  3476                           
  3477                           ; BSR set to: 0
  3478   00581A  51B0               	movf	vfpfcnvrt@c& (0+255),w,b
  3479   00581C  6E7A               	movwf	??_vfpfcnvrt^0,c
  3480   00581E  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3481                           
  3482                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3483                           ; Switch size 1, requested type "simple"
  3484                           ; Number of cases is 1, Range of values is 0 to 0
  3485                           ; switch strategies available:
  3486                           ; Name         Instructions Cycles
  3487                           ; simple_byte            4     3 (average)
  3488                           ;	Chosen strategy is simple_byte
  3489   005820  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3490   005822  0A00               	xorlw	0	; case 0
  3491   005824  B4D8               	btfsc	status,2,c
  3492   005826  EF17  F02C         	goto	l13295
  3493   00582A  EF22  F02C         	goto	l12097
  3494   00582E                     l13295:
  3495                           
  3496                           ; BSR set to: 0
  3497                           ; Switch size 1, requested type "simple"
  3498                           ; Number of cases is 2, Range of values is 76 to 108
  3499                           ; switch strategies available:
  3500                           ; Name         Instructions Cycles
  3501                           ; simple_byte            7     4 (average)
  3502                           ;	Chosen strategy is simple_byte
  3503   00582E  507A               	movf	??_vfpfcnvrt^0,w,c
  3504   005830  0A4C               	xorlw	76	; case 76
  3505   005832  B4D8               	btfsc	status,2,c
  3506   005834  EFF9  F02B         	goto	l12091
  3507   005838  0A20               	xorlw	32	; case 108
  3508   00583A  B4D8               	btfsc	status,2,c
  3509   00583C  EFE5  F02B         	goto	l12089
  3510   005840  EF22  F02C         	goto	l12097
  3511   005844                     l12097:
  3512                           
  3513                           ; BSR set to: 0
  3514                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1762:    *fmt = c
      +                          p+1;
  3515   005844  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3516   005846  6ED9               	movwf	fsr2l,c
  3517   005848  6ADA               	clrf	fsr2h,c
  3518   00584A  29B1               	incf	vfpfcnvrt@cp& (0+255),w,b
  3519   00584C  6EDF               	movwf	indf2,c
  3520                           
  3521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1763:    switch (
      +                          *cp) {
  3522   00584E  EF3E  F02C         	goto	l12105
  3523   005852                     l12099:
  3524                           
  3525                           ; BSR set to: 0
  3526                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1790:      return
      +                           (void) efgtoa(fp, convarg.f, *cp);;	Return value of _vfpfcnvrt is never used
  3527   005852  C077  F06F         	movff	vfpfcnvrt@fp,efgtoa@fp
  3528   005856  C0AC  F070         	movff	vfpfcnvrt@convarg,efgtoa@f
  3529   00585A  C0AD  F071         	movff	vfpfcnvrt@convarg+1,efgtoa@f+1
  3530   00585E  C0AE  F072         	movff	vfpfcnvrt@convarg+2,efgtoa@f+2
  3531   005862  C0AF  F073         	movff	vfpfcnvrt@convarg+3,efgtoa@f+3
  3532   005866  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3533   00586A                     	if	1	;There is more than 1 active tblptr byte
  3534   00586A  0E10               	movlw	high __smallconst
  3535   00586C  6EF7               	movwf	tblptrh,c
  3536   00586E                     	endif
  3537   00586E                     	if	0	;tblptru may be non-zero
  3538   00586E                     	endif
  3539   00586E                     	if	0	;tblptru may be non-zero
  3540   00586E                     	endif
  3541   00586E  0008               	tblrd		*
  3542   005870  CFF5 F074          	movff	tablat,efgtoa@c
  3543   005874  EC07  F01A         	call	_efgtoa	;wreg free
  3544   005878  EF6B  F02C         	goto	l1492
  3545   00587C                     l12105:
  3546                           
  3547                           ; BSR set to: 0
  3548   00587C  C0B1  FFF6         	movff	vfpfcnvrt@cp,tblptrl
  3549   005880                     	if	1	;There is more than 1 active tblptr byte
  3550   005880  0E10               	movlw	high __smallconst
  3551   005882  6EF7               	movwf	tblptrh,c
  3552   005884                     	endif
  3553   005884                     	if	0	;tblptru may be non-zero
  3554   005884                     	endif
  3555   005884                     	if	0	;tblptru may be non-zero
  3556   005884                     	endif
  3557   005884  0008               	tblrd		*
  3558   005886  50F5               	movf	tablat,w,c
  3559   005888  6E7A               	movwf	??_vfpfcnvrt^0,c
  3560   00588A  6A7B               	clrf	(??_vfpfcnvrt+1)^0,c
  3561                           
  3562                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3563                           ; Switch size 1, requested type "simple"
  3564                           ; Number of cases is 1, Range of values is 0 to 0
  3565                           ; switch strategies available:
  3566                           ; Name         Instructions Cycles
  3567                           ; simple_byte            4     3 (average)
  3568                           ;	Chosen strategy is simple_byte
  3569   00588C  507B               	movf	(??_vfpfcnvrt+1)^0,w,c
  3570   00588E  0A00               	xorlw	0	; case 0
  3571   005890  B4D8               	btfsc	status,2,c
  3572   005892  EF4D  F02C         	goto	l13297
  3573   005896  EF54  F02C         	goto	l12107
  3574   00589A                     l13297:
  3575                           
  3576                           ; BSR set to: 0
  3577                           ; Switch size 1, requested type "simple"
  3578                           ; Number of cases is 1, Range of values is 102 to 102
  3579                           ; switch strategies available:
  3580                           ; Name         Instructions Cycles
  3581                           ; simple_byte            4     3 (average)
  3582                           ;	Chosen strategy is simple_byte
  3583   00589A  507A               	movf	??_vfpfcnvrt^0,w,c
  3584   00589C  0A66               	xorlw	102	; case 102
  3585   00589E  B4D8               	btfsc	status,2,c
  3586   0058A0  EF29  F02C         	goto	l12099
  3587   0058A4  EF54  F02C         	goto	l12107
  3588   0058A8                     l12107:
  3589                           
  3590                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1806:         ++*
      +                          fmt;
  3591   0058A8  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3592   0058AA  6ED9               	movwf	fsr2l,c
  3593   0058AC  6ADA               	clrf	fsr2h,c
  3594   0058AE  2ADF               	incf	indf2,f,c
  3595   0058B0  EF6B  F02C         	goto	l1492
  3596   0058B4                     l12111:
  3597                           
  3598                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1811:     fputc((
      +                          int)(*fmt)[0], fp);
  3599   0058B4  5078               	movf	vfpfcnvrt@fmt^0,w,c
  3600   0058B6  6ED9               	movwf	fsr2l,c
  3601   0058B8  6ADA               	clrf	fsr2h,c
  3602   0058BA  CFDF FFF6          	movff	indf2,tblptrl
  3603   0058BE                     	if	1	;There is more than 1 active tblptr byte
  3604   0058BE  0E10               	movlw	high __smallconst
  3605   0058C0  6EF7               	movwf	tblptrh,c
  3606   0058C2                     	endif
  3607   0058C2                     	if	0	;tblptru may be non-zero
  3608   0058C2                     	endif
  3609   0058C2                     	if	0	;tblptru may be non-zero
  3610   0058C2                     	endif
  3611   0058C2  0008               	tblrd		*
  3612   0058C4  50F5               	movf	tablat,w,c
  3613   0058C6  6E01               	movwf	fputc@c^0,c
  3614   0058C8  6A02               	clrf	(fputc@c+1)^0,c
  3615   0058CA  C077  F003         	movff	vfpfcnvrt@fp,fputc@fp
  3616   0058CE  ECF7  F036         	call	_fputc	;wreg free
  3617   0058D2  EF54  F02C         	goto	l12107
  3618   0058D6                     l1492:
  3619   0058D6  0012               	return		;funcret
  3620   0058D8                     __end_of_vfpfcnvrt:
  3621                           	callstack 0
  3622                           
  3623 ;; *************** function _read_prec_or_width *****************
  3624 ;; Defined at:
  3625 ;;		line 1158 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3626 ;; Parameters:    Size  Location     Type
  3627 ;;  fmt             1    6[COMRAM] PTR PTR const unsigned c
  3628 ;;		 -> vfprintf@cfmt(1), 
  3629 ;;  ap              1    7[COMRAM] PTR PTR void [1]
  3630 ;;		 -> sprintf@ap(1), 
  3631 ;; Auto vars:     Size  Location     Type
  3632 ;;  c               1    8[COMRAM] unsigned char 
  3633 ;;  n               2    9[COMRAM] int 
  3634 ;; Return value:  Size  Location     Type
  3635 ;;                  2    6[COMRAM] int 
  3636 ;; Registers used:
  3637 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3638 ;; Tracked objects:
  3639 ;;		On entry : 0/0
  3640 ;;		On exit  : 0/0
  3641 ;;		Unchanged: 0/0
  3642 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3643 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3644 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3645 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3646 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3647 ;;Total ram usage:        5 bytes
  3648 ;; Hardware stack levels used: 1
  3649 ;; Hardware stack levels required when called: 1
  3650 ;; This function calls:
  3651 ;;		___wmul
  3652 ;; This function is called by:
  3653 ;;		_vfpfcnvrt
  3654 ;; This function uses a non-reentrant model
  3655 ;;
  3656                           
  3657                           	psect	text9
  3658   0070AC                     __ptext9:
  3659                           	callstack 0
  3660   0070AC                     _read_prec_or_width:
  3661                           	callstack 24
  3662   0070AC                     
  3663                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1159:     int n =
      +                           0;
  3664   0070AC  0E00               	movlw	0
  3665   0070AE  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3666   0070B0  0E00               	movlw	0
  3667   0070B2  6E0A               	movwf	read_prec_or_width@n^0,c
  3668   0070B4                     
  3669                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1160:     if ((*f
      +                          mt)[0] == '*') {
  3670   0070B4  5007               	movf	read_prec_or_width@fmt^0,w,c
  3671   0070B6  6ED9               	movwf	fsr2l,c
  3672   0070B8  6ADA               	clrf	fsr2h,c
  3673   0070BA  CFDF FFF6          	movff	indf2,tblptrl
  3674   0070BE                     	if	1	;There is more than 1 active tblptr byte
  3675   0070BE  0E10               	movlw	high __smallconst
  3676   0070C0  6EF7               	movwf	tblptrh,c
  3677   0070C2                     	endif
  3678   0070C2                     	if	0	;tblptru may be non-zero
  3679   0070C2                     	endif
  3680   0070C2                     	if	0	;tblptru may be non-zero
  3681   0070C2                     	endif
  3682   0070C2  0008               	tblrd		*
  3683   0070C4  50F5               	movf	tablat,w,c
  3684   0070C6  0A2A               	xorlw	42
  3685   0070C8  A4D8               	btfss	status,2,c
  3686   0070CA  EF69  F038         	goto	u5841
  3687   0070CE  EF6B  F038         	goto	u5840
  3688   0070D2                     u5841:
  3689   0070D2  EF91  F038         	goto	l5951
  3690   0070D6                     u5840:
  3691   0070D6                     
  3692                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1161:         ++*
      +                          fmt;
  3693   0070D6  5007               	movf	read_prec_or_width@fmt^0,w,c
  3694   0070D8  6ED9               	movwf	fsr2l,c
  3695   0070DA  6ADA               	clrf	fsr2h,c
  3696   0070DC  2ADF               	incf	indf2,f,c
  3697   0070DE                     
  3698                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1162:         n =
      +                           (*(int *)__va_arg(*(int **)*ap, (int)0));
  3699   0070DE  5008               	movf	read_prec_or_width@ap^0,w,c
  3700   0070E0  6ED9               	movwf	fsr2l,c
  3701   0070E2  6ADA               	clrf	fsr2h,c
  3702   0070E4  0E02               	movlw	2
  3703   0070E6  26DF               	addwf	indf2,f,c
  3704   0070E8  5CDF               	subwf	indf2,w,c
  3705   0070EA  6ED9               	movwf	fsr2l,c
  3706   0070EC  6ADA               	clrf	fsr2h,c
  3707   0070EE  CFDE F00A          	movff	postinc2,read_prec_or_width@n
  3708   0070F2  CFDE F00B          	movff	postinc2,read_prec_or_width@n+1
  3709                           
  3710                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1163:     } else 
      +                          {
  3711   0070F6  EFA4  F038         	goto	l1480
  3712   0070FA                     l5947:
  3713                           
  3714                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1166:            
      +                           n = n * 10 + c;
  3715   0070FA  C00A  F001         	movff	read_prec_or_width@n,___wmul@multiplier
  3716   0070FE  C00B  F002         	movff	read_prec_or_width@n+1,___wmul@multiplier+1
  3717   007102  0E00               	movlw	0
  3718   007104  6E04               	movwf	(___wmul@multiplicand+1)^0,c
  3719   007106  0E0A               	movlw	10
  3720   007108  6E03               	movwf	___wmul@multiplicand^0,c
  3721   00710A  EC0B  F03D         	call	___wmul	;wreg free
  3722   00710E  5009               	movf	read_prec_or_width@c^0,w,c
  3723   007110  2401               	addwf	?___wmul^0,w,c
  3724   007112  6E0A               	movwf	read_prec_or_width@n^0,c
  3725   007114  0E00               	movlw	0
  3726   007116  2002               	addwfc	(?___wmul+1)^0,w,c
  3727   007118  6E0B               	movwf	(read_prec_or_width@n+1)^0,c
  3728   00711A                     
  3729                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1167:            
      +                           ++*fmt;
  3730   00711A  5007               	movf	read_prec_or_width@fmt^0,w,c
  3731   00711C  6ED9               	movwf	fsr2l,c
  3732   00711E  6ADA               	clrf	fsr2h,c
  3733   007120  2ADF               	incf	indf2,f,c
  3734   007122                     l5951:
  3735                           
  3736                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1165:         whi
      +                          le ((c = ((unsigned)(*fmt)[0]) - '0') < 10) {
  3737   007122  5007               	movf	read_prec_or_width@fmt^0,w,c
  3738   007124  6ED9               	movwf	fsr2l,c
  3739   007126  6ADA               	clrf	fsr2h,c
  3740   007128  CFDF FFF6          	movff	indf2,tblptrl
  3741   00712C                     	if	1	;There is more than 1 active tblptr byte
  3742   00712C  0E10               	movlw	high __smallconst
  3743   00712E  6EF7               	movwf	tblptrh,c
  3744   007130                     	endif
  3745   007130                     	if	0	;tblptru may be non-zero
  3746   007130                     	endif
  3747   007130                     	if	0	;tblptru may be non-zero
  3748   007130                     	endif
  3749   007130  0008               	tblrd		*
  3750   007132  50F5               	movf	tablat,w,c
  3751   007134  0FD0               	addlw	208
  3752   007136  6E09               	movwf	read_prec_or_width@c^0,c
  3753   007138  0E09               	movlw	9
  3754   00713A  6409               	cpfsgt	read_prec_or_width@c^0,c
  3755   00713C  EFA2  F038         	goto	u5851
  3756   007140  EFA4  F038         	goto	u5850
  3757   007144                     u5851:
  3758   007144  EF7D  F038         	goto	l5947
  3759   007148                     u5850:
  3760   007148                     l1480:
  3761                           
  3762                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 1170:     return 
      +                          n;
  3763   007148  C00A  F007         	movff	read_prec_or_width@n,?_read_prec_or_width
  3764   00714C  C00B  F008         	movff	read_prec_or_width@n+1,?_read_prec_or_width+1
  3765   007150  0012               	return		;funcret
  3766   007152                     __end_of_read_prec_or_width:
  3767                           	callstack 0
  3768                           
  3769 ;; *************** function ___wmul *****************
  3770 ;; Defined at:
  3771 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\Umul16.c"
  3772 ;; Parameters:    Size  Location     Type
  3773 ;;  multiplier      2    0[COMRAM] unsigned int 
  3774 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3775 ;; Auto vars:     Size  Location     Type
  3776 ;;  product         2    4[COMRAM] unsigned int 
  3777 ;; Return value:  Size  Location     Type
  3778 ;;                  2    0[COMRAM] unsigned int 
  3779 ;; Registers used:
  3780 ;;		wreg, status,2, status,0, prodl, prodh
  3781 ;; Tracked objects:
  3782 ;;		On entry : 0/0
  3783 ;;		On exit  : 0/0
  3784 ;;		Unchanged: 0/0
  3785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3786 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3787 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3788 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3789 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3790 ;;Total ram usage:        6 bytes
  3791 ;; Hardware stack levels used: 1
  3792 ;; This function calls:
  3793 ;;		Nothing
  3794 ;; This function is called by:
  3795 ;;		_read_prec_or_width
  3796 ;; This function uses a non-reentrant model
  3797 ;;
  3798                           
  3799                           	psect	text10
  3800   007A16                     __ptext10:
  3801                           	callstack 0
  3802   007A16                     ___wmul:
  3803                           	callstack 24
  3804   007A16  5001               	movf	___wmul@multiplier^0,w,c
  3805   007A18  0203               	mulwf	___wmul@multiplicand^0,c
  3806   007A1A  CFF3 F005          	movff	prodl,___wmul@product
  3807   007A1E  CFF4 F006          	movff	prodh,___wmul@product+1
  3808   007A22  5001               	movf	___wmul@multiplier^0,w,c
  3809   007A24  0204               	mulwf	(___wmul@multiplicand+1)^0,c
  3810   007A26  50F3               	movf	243,w,c
  3811   007A28  2606               	addwf	(___wmul@product+1)^0,f,c
  3812   007A2A  5002               	movf	(___wmul@multiplier+1)^0,w,c
  3813   007A2C  0203               	mulwf	___wmul@multiplicand^0,c
  3814   007A2E  50F3               	movf	243,w,c
  3815   007A30  2606               	addwf	(___wmul@product+1)^0,f,c
  3816   007A32  C005  F001         	movff	___wmul@product,?___wmul
  3817   007A36  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3818   007A3A  0012               	return		;funcret
  3819   007A3C                     __end_of___wmul:
  3820                           	callstack 0
  3821                           
  3822 ;; *************** function _efgtoa *****************
  3823 ;; Defined at:
  3824 ;;		line 587 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  3825 ;; Parameters:    Size  Location     Type
  3826 ;;  fp              1  110[COMRAM] PTR struct _IO_FILE
  3827 ;;		 -> sprintf@f(12), 
  3828 ;;  f               4  111[COMRAM] PTR struct _IO_FILE
  3829 ;;  c               1  115[COMRAM] unsigned char 
  3830 ;; Auto vars:     Size  Location     Type
  3831 ;;  u               4   40[BANK0 ] struct flui
  3832 ;;  g               4   34[BANK0 ] struct flui
  3833 ;;  l               4   29[BANK0 ] struct flui
  3834 ;;  h               4   25[BANK0 ] struct flui
  3835 ;;  ou              4   19[BANK0 ] struct flui
  3836 ;;  n               2   38[BANK0 ] int 
  3837 ;;  i               2   23[BANK0 ] int 
  3838 ;;  w               2   17[BANK0 ] int 
  3839 ;;  e               2   15[BANK0 ] int 
  3840 ;;  m               2   13[BANK0 ] int 
  3841 ;;  d               2   11[BANK0 ] int 
  3842 ;;  t               2    4[BANK0 ] int 
  3843 ;;  p               2    2[BANK0 ] int 
  3844 ;;  ne              2    0[BANK0 ] int 
  3845 ;;  sign            1   33[BANK0 ] unsigned char 
  3846 ;;  nmode           1   10[BANK0 ] unsigned char 
  3847 ;;  mode            1    9[BANK0 ] unsigned char 
  3848 ;;  pp              1    8[BANK0 ] unsigned char 
  3849 ;;  esign           1    0        unsigned char 
  3850 ;; Return value:  Size  Location     Type
  3851 ;;                  1    wreg      void 
  3852 ;; Registers used:
  3853 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3854 ;; Tracked objects:
  3855 ;;		On entry : 0/0
  3856 ;;		On exit  : 0/0
  3857 ;;		Unchanged: 0/0
  3858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3859 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3860 ;;      Locals:         0      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3861 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3862 ;;      Totals:         8      44       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3863 ;;Total ram usage:       52 bytes
  3864 ;; Hardware stack levels used: 1
  3865 ;; Hardware stack levels required when called: 4
  3866 ;; This function calls:
  3867 ;;		___fladd
  3868 ;;		___fldiv
  3869 ;;		___fleq
  3870 ;;		___flge
  3871 ;;		___flmul
  3872 ;;		___flneg
  3873 ;;		___flsub
  3874 ;;		___fltol
  3875 ;;		___fpclassifyf
  3876 ;;		_floorf
  3877 ;;		_labs
  3878 ;;		_memcpy
  3879 ;;		_pad
  3880 ;;		_strcpy
  3881 ;; This function is called by:
  3882 ;;		_vfpfcnvrt
  3883 ;; This function uses a non-reentrant model
  3884 ;;
  3885                           
  3886                           	psect	text11
  3887   00340E                     __ptext11:
  3888                           	callstack 0
  3889   00340E                     _efgtoa:
  3890                           	callstack 21
  3891   00340E                     
  3892                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 587: static void 
      +                          efgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.45\pic\sources
      +                          \c99\common\doprnt.c: 588: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common
      +                          \doprnt.c: 589:     char mode, nmode, pp, sign, esign;;C:\Program Files\Microchip\xc8\v2
      +                          .45\pic\sources\c99\common\doprnt.c: 590:     int d, e, i, m, n, ne, p, t, w;;C:\Program
      +                           Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 591:     long double h, l;
  3893   00340E  0E00               	movlw	0
  3894   003410  0100               	movlb	0	; () banked
  3895   003412  6FA1               	movwf	efgtoa@sign& (0+255),b
  3896   003414                     
  3897                           ; BSR set to: 0
  3898                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 596:     g.f = f;
  3899   003414  C070  F0A2         	movff	efgtoa@f,efgtoa@g
  3900   003418  C071  F0A3         	movff	efgtoa@f+1,efgtoa@g+1
  3901   00341C  C072  F0A4         	movff	efgtoa@f+2,efgtoa@g+2
  3902   003420  C073  F0A5         	movff	efgtoa@f+3,efgtoa@g+3
  3903   003424                     
  3904                           ; BSR set to: 0
  3905                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 597:     if (g.f 
      +                          < 0.0) {
  3906   003424  BFA5               	btfsc	(efgtoa@g+3)& (0+255),7,b
  3907   003426  EF19  F01A         	goto	u12090
  3908   00342A  EF17  F01A         	goto	u12091
  3909   00342E                     u12091:
  3910   00342E  EF2D  F01A         	goto	l11833
  3911   003432                     u12090:
  3912   003432                     
  3913                           ; BSR set to: 0
  3914                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 598:         sign
      +                           = 1;
  3915   003432  0E01               	movlw	1
  3916   003434  6FA1               	movwf	efgtoa@sign& (0+255),b
  3917   003436                     
  3918                           ; BSR set to: 0
  3919                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 599:         g.f 
      +                          = -g.f;
  3920   003436  C0A2  F001         	movff	efgtoa@g,___flneg@f1
  3921   00343A  C0A3  F002         	movff	efgtoa@g+1,___flneg@f1+1
  3922   00343E  C0A4  F003         	movff	efgtoa@g+2,___flneg@f1+2
  3923   003442  C0A5  F004         	movff	efgtoa@g+3,___flneg@f1+3
  3924   003446  ECC2  F03C         	call	___flneg	;wreg free
  3925   00344A  C001  F0A2         	movff	?___flneg,efgtoa@g
  3926   00344E  C002  F0A3         	movff	?___flneg+1,efgtoa@g+1
  3927   003452  C003  F0A4         	movff	?___flneg+2,efgtoa@g+2
  3928   003456  C004  F0A5         	movff	?___flneg+3,efgtoa@g+3
  3929   00345A                     l11833:
  3930                           
  3931                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 603:     n = 0;
  3932   00345A  0E00               	movlw	0
  3933   00345C  0100               	movlb	0	; () banked
  3934   00345E  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  3935   003460  0E00               	movlw	0
  3936   003462  6FA6               	movwf	efgtoa@n& (0+255),b
  3937   003464                     
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 604:     w = widt
      +                          h;
  3940   003464  C0D2  F091         	movff	_width,efgtoa@w
  3941   003468  C0D3  F092         	movff	_width+1,efgtoa@w+1
  3942   00346C                     
  3943                           ; BSR set to: 0
  3944                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 605:     if (sign
  3945   00346C  51A1               	movf	efgtoa@sign& (0+255),w,b
  3946   00346E  B4D8               	btfsc	status,2,c
  3947   003470  EF3C  F01A         	goto	u12101
  3948   003474  EF3E  F01A         	goto	u12100
  3949   003478                     u12101:
  3950   003478  EF52  F01A         	goto	l11847
  3951   00347C                     u12100:
  3952   00347C                     
  3953                           ; BSR set to: 0
  3954                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 609:    ) {;C:\Pr
      +                          ogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 610:   sign = sign ? '-
      +                          ' : '+';
  3955   00347C  51A1               	movf	efgtoa@sign& (0+255),w,b
  3956   00347E  A4D8               	btfss	status,2,c
  3957   003480  EF44  F01A         	goto	u12111
  3958   003484  EF46  F01A         	goto	u12110
  3959   003488                     u12111:
  3960   003488  EF4C  F01A         	goto	l11843
  3961   00348C                     u12110:
  3962   00348C                     
  3963                           ; BSR set to: 0
  3964   00348C  0E00               	movlw	0
  3965   00348E  6F87               	movwf	(_efgtoa$1538+1)& (0+255),b
  3966   003490  0E2B               	movlw	43
  3967   003492  6F86               	movwf	_efgtoa$1538& (0+255),b
  3968   003494  EF50  F01A         	goto	l11845
  3969   003498                     l11843:
  3970                           
  3971                           ; BSR set to: 0
  3972   003498  0E00               	movlw	0
  3973   00349A  6F87               	movwf	(_efgtoa$1538+1)& (0+255),b
  3974   00349C  0E2D               	movlw	45
  3975   00349E  6F86               	movwf	_efgtoa$1538& (0+255),b
  3976   0034A0                     l11845:
  3977                           
  3978                           ; BSR set to: 0
  3979   0034A0  C086  F0A1         	movff	_efgtoa$1538,efgtoa@sign
  3980   0034A4                     l11847:
  3981                           
  3982                           ; BSR set to: 0
  3983                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 619:     if (( __
      +                          fpclassifyf(g.f) == 1 )) {
  3984   0034A4  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  3985   0034A8  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  3986   0034AC  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  3987   0034B0  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  3988   0034B4  EC39  F035         	call	___fpclassifyf	;wreg free
  3989   0034B8  0401               	decf	?___fpclassifyf^0,w,c
  3990   0034BA  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  3991   0034BC  A4D8               	btfss	status,2,c
  3992   0034BE  EF63  F01A         	goto	u12121
  3993   0034C2  EF65  F01A         	goto	u12120
  3994   0034C6                     u12121:
  3995   0034C6  EF94  F01A         	goto	l11865
  3996   0034CA                     u12120:
  3997   0034CA                     
  3998                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 620:   if (sign) 
      +                          {
  3999   0034CA  0100               	movlb	0	; () banked
  4000   0034CC  51A1               	movf	efgtoa@sign& (0+255),w,b
  4001   0034CE  B4D8               	btfsc	status,2,c
  4002   0034D0  EF6C  F01A         	goto	u12131
  4003   0034D4  EF6E  F01A         	goto	u12130
  4004   0034D8                     u12131:
  4005   0034D8  EF77  F01A         	goto	l11857
  4006   0034DC                     u12130:
  4007   0034DC                     
  4008                           ; BSR set to: 0
  4009                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 621:    dbuf[0] =
      +                           sign;
  4010   0034DC  C0A1  F200         	movff	efgtoa@sign,_dbuf
  4011   0034E0                     
  4012                           ; BSR set to: 0
  4013                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 622:    w--;
  4014   0034E0  0791               	decf	efgtoa@w& (0+255),f,b
  4015   0034E2  A0D8               	btfss	status,0,c
  4016   0034E4  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4017   0034E6                     
  4018                           ; BSR set to: 0
  4019                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 623:    n = 1;
  4020   0034E6  0E00               	movlw	0
  4021   0034E8  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  4022   0034EA  0E01               	movlw	1
  4023   0034EC  6FA6               	movwf	efgtoa@n& (0+255),b
  4024   0034EE                     l11857:
  4025                           
  4026                           ; BSR set to: 0
  4027                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 631:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 632:             strcpy(&d
      +                          buf[n], "inf");
  4028   0034EE  0E00               	movlw	low _dbuf
  4029   0034F0  25A6               	addwf	efgtoa@n& (0+255),w,b
  4030   0034F2  6E01               	movwf	strcpy@dest^0,c
  4031   0034F4  0E02               	movlw	high _dbuf
  4032   0034F6  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4033   0034F8  6E02               	movwf	(strcpy@dest+1)^0,c
  4034   0034FA  0ED8               	movlw	low STR_16
  4035   0034FC  6E03               	movwf	strcpy@src^0,c
  4036   0034FE  EC6C  F03C         	call	_strcpy	;wreg free
  4037   003502                     l11859:
  4038                           
  4039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 633:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 634:         w -= ((
      +                          sizeof("inf")/sizeof("inf"[0]))-1);
  4040   003502  0100               	movlb	0	; () banked
  4041   003504  0EFD               	movlw	253
  4042   003506  2791               	addwf	efgtoa@w& (0+255),f,b
  4043   003508  0EFF               	movlw	255
  4044   00350A  2392               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4045   00350C                     
  4046                           ; BSR set to: 0
  4047                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 635:         retu
      +                          rn (void) pad(fp, &dbuf[0], w);
  4048   00350C  C06F  F00F         	movff	efgtoa@fp,pad@fp
  4049   003510  0E00               	movlw	low _dbuf
  4050   003512  6E10               	movwf	pad@buf^0,c
  4051   003514  0E02               	movlw	high _dbuf
  4052   003516  6E11               	movwf	(pad@buf+1)^0,c
  4053   003518  C091  F012         	movff	efgtoa@w,pad@p
  4054   00351C  C092  F013         	movff	efgtoa@w+1,pad@p+1
  4055   003520  EC28  F03A         	call	_pad	;wreg free
  4056   003524  EFFA  F01E         	goto	l1435
  4057   003528                     l11865:
  4058                           
  4059                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 637:     if (( __
      +                          fpclassifyf(g.f) == 0 )) {
  4060   003528  C0A2  F001         	movff	efgtoa@g,___fpclassifyf@x
  4061   00352C  C0A3  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4062   003530  C0A4  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4063   003534  C0A5  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4064   003538  EC39  F035         	call	___fpclassifyf	;wreg free
  4065   00353C  5001               	movf	?___fpclassifyf^0,w,c
  4066   00353E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4067   003540  A4D8               	btfss	status,2,c
  4068   003542  EFA5  F01A         	goto	u12141
  4069   003546  EFA7  F01A         	goto	u12140
  4070   00354A                     u12141:
  4071   00354A  EFC5  F01A         	goto	l11883
  4072   00354E                     u12140:
  4073   00354E                     
  4074                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 638:   if (sign) 
      +                          {
  4075   00354E  0100               	movlb	0	; () banked
  4076   003550  51A1               	movf	efgtoa@sign& (0+255),w,b
  4077   003552  B4D8               	btfsc	status,2,c
  4078   003554  EFAE  F01A         	goto	u12151
  4079   003558  EFB0  F01A         	goto	u12150
  4080   00355C                     u12151:
  4081   00355C  EFB9  F01A         	goto	l11875
  4082   003560                     u12150:
  4083   003560                     
  4084                           ; BSR set to: 0
  4085                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 639:    dbuf[0] =
      +                           sign;
  4086   003560  C0A1  F200         	movff	efgtoa@sign,_dbuf
  4087   003564                     
  4088                           ; BSR set to: 0
  4089                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 640:    w--;
  4090   003564  0791               	decf	efgtoa@w& (0+255),f,b
  4091   003566  A0D8               	btfss	status,0,c
  4092   003568  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4093   00356A                     
  4094                           ; BSR set to: 0
  4095                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 641:    n = 1;
  4096   00356A  0E00               	movlw	0
  4097   00356C  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  4098   00356E  0E01               	movlw	1
  4099   003570  6FA6               	movwf	efgtoa@n& (0+255),b
  4100   003572                     l11875:
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 649:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 650:             strcpy(&d
      +                          buf[n], "nan");
  4104   003572  0E00               	movlw	low _dbuf
  4105   003574  25A6               	addwf	efgtoa@n& (0+255),w,b
  4106   003576  6E01               	movwf	strcpy@dest^0,c
  4107   003578  0E02               	movlw	high _dbuf
  4108   00357A  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4109   00357C  6E02               	movwf	(strcpy@dest+1)^0,c
  4110   00357E  0EDC               	movlw	low STR_19
  4111   003580  6E03               	movwf	strcpy@src^0,c
  4112   003582  EC6C  F03C         	call	_strcpy	;wreg free
  4113   003586  EF81  F01A         	goto	l11859
  4114   00358A                     l11883:
  4115                           
  4116                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 657:     u.f = 1.
      +                          0;
  4117   00358A  0E00               	movlw	0
  4118   00358C  0100               	movlb	0	; () banked
  4119   00358E  6FA8               	movwf	efgtoa@u& (0+255),b
  4120   003590  0E00               	movlw	0
  4121   003592  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4122   003594  0E80               	movlw	128
  4123   003596  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4124   003598  0E3F               	movlw	63
  4125   00359A  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4126                           
  4127                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 658:     e = 0;
  4128   00359C  0E00               	movlw	0
  4129   00359E  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4130   0035A0  0E00               	movlw	0
  4131   0035A2  6F8F               	movwf	efgtoa@e& (0+255),b
  4132   0035A4                     
  4133                           ; BSR set to: 0
  4134                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 659:  if (!(g.f =
      +                          = 0.0)) {
  4135   0035A4  C0A2  F001         	movff	efgtoa@g,___fleq@ff1
  4136   0035A8  C0A3  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4137   0035AC  C0A4  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4138   0035B0  C0A5  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4139   0035B4  0E00               	movlw	0
  4140   0035B6  6E05               	movwf	___fleq@ff2^0,c
  4141   0035B8  0E00               	movlw	0
  4142   0035BA  6E06               	movwf	(___fleq@ff2+1)^0,c
  4143   0035BC  0E00               	movlw	0
  4144   0035BE  6E07               	movwf	(___fleq@ff2+2)^0,c
  4145   0035C0  0E00               	movlw	0
  4146   0035C2  6E08               	movwf	(___fleq@ff2+3)^0,c
  4147   0035C4  ECAC  F037         	call	___fleq	;wreg free
  4148   0035C8  B0D8               	btfsc	status,0,c
  4149   0035CA  EFE9  F01A         	goto	u12161
  4150   0035CE  EFEB  F01A         	goto	u12160
  4151   0035D2                     u12161:
  4152   0035D2  EFCA  F01B         	goto	l1438
  4153   0035D6                     u12160:
  4154   0035D6  EFF8  F01A         	goto	l11891
  4155   0035DA                     l1440:
  4156                           
  4157                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 661:    u = ou;
  4158   0035DA  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4159   0035DE  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4160   0035E2  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4161   0035E6  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4162   0035EA                     
  4163                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 662:    ++e;
  4164   0035EA  0100               	movlb	0	; () banked
  4165   0035EC  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4166   0035EE  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4167   0035F0                     l11891:
  4168                           
  4169                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 660:   while ((la
      +                          bs((g).u-((ou.f = u.f*10.0,ou)).u) <= 1) || g.f > ou.f) {
  4170   0035F0  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4171   0035F4  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4172   0035F8  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4173   0035FC  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4174   003600  0E00               	movlw	0
  4175   003602  6E1D               	movwf	___flmul@a^0,c
  4176   003604  0E00               	movlw	0
  4177   003606  6E1E               	movwf	(___flmul@a+1)^0,c
  4178   003608  0E20               	movlw	32
  4179   00360A  6E1F               	movwf	(___flmul@a+2)^0,c
  4180   00360C  0E41               	movlw	65
  4181   00360E  6E20               	movwf	(___flmul@a+3)^0,c
  4182   003610  ECF1  F023         	call	___flmul	;wreg free
  4183   003614  C019  F093         	movff	?___flmul,efgtoa@ou
  4184   003618  C01A  F094         	movff	?___flmul+1,efgtoa@ou+1
  4185   00361C  C01B  F095         	movff	?___flmul+2,efgtoa@ou+2
  4186   003620  C01C  F096         	movff	?___flmul+3,efgtoa@ou+3
  4187   003624  0100               	movlb	0	; () banked
  4188   003626  5193               	movf	efgtoa@ou& (0+255),w,b
  4189   003628  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4190   00362A  6E01               	movwf	labs@a^0,c
  4191   00362C  5194               	movf	(efgtoa@ou+1)& (0+255),w,b
  4192   00362E  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4193   003630  6E02               	movwf	(labs@a+1)^0,c
  4194   003632  5195               	movf	(efgtoa@ou+2)& (0+255),w,b
  4195   003634  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4196   003636  6E03               	movwf	(labs@a+2)^0,c
  4197   003638  5196               	movf	(efgtoa@ou+3)& (0+255),w,b
  4198   00363A  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4199   00363C  6E04               	movwf	(labs@a+3)^0,c
  4200   00363E  ECB9  F03A         	call	_labs	;wreg free
  4201   003642  BE04               	btfsc	(?_labs+3)^0,7,c
  4202   003644  EF2F  F01B         	goto	u12171
  4203   003648  5004               	movf	(?_labs+3)^0,w,c
  4204   00364A  1003               	iorwf	(?_labs+2)^0,w,c
  4205   00364C  1002               	iorwf	(?_labs+1)^0,w,c
  4206   00364E  E109               	bnz	u12170
  4207   003650  0E02               	movlw	2
  4208   003652  5C01               	subwf	?_labs^0,w,c
  4209   003654  A0D8               	btfss	status,0,c
  4210   003656  EF2F  F01B         	goto	u12171
  4211   00365A  EF31  F01B         	goto	u12170
  4212   00365E                     u12171:
  4213   00365E  EFED  F01A         	goto	l1440
  4214   003662                     u12170:
  4215   003662  C093  F063         	movff	efgtoa@ou,___flge@ff1
  4216   003666  C094  F064         	movff	efgtoa@ou+1,___flge@ff1+1
  4217   00366A  C095  F065         	movff	efgtoa@ou+2,___flge@ff1+2
  4218   00366E  C096  F066         	movff	efgtoa@ou+3,___flge@ff1+3
  4219   003672  C0A2  F067         	movff	efgtoa@g,___flge@ff2
  4220   003676  C0A3  F068         	movff	efgtoa@g+1,___flge@ff2+1
  4221   00367A  C0A4  F069         	movff	efgtoa@g+2,___flge@ff2+2
  4222   00367E  C0A5  F06A         	movff	efgtoa@g+3,___flge@ff2+3
  4223   003682  ECB7  F034         	call	___flge	;wreg free
  4224   003686  A0D8               	btfss	status,0,c
  4225   003688  EF48  F01B         	goto	u12181
  4226   00368C  EF4A  F01B         	goto	u12180
  4227   003690                     u12181:
  4228   003690  EFED  F01A         	goto	l1440
  4229   003694                     u12180:
  4230   003694                     
  4231                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 664:   if ((labs(
      +                          (g).u-(u).u) <= 1)) {
  4232   003694  0100               	movlb	0	; () banked
  4233   003696  51A8               	movf	efgtoa@u& (0+255),w,b
  4234   003698  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4235   00369A  6E01               	movwf	labs@a^0,c
  4236   00369C  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4237   00369E  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4238   0036A0  6E02               	movwf	(labs@a+1)^0,c
  4239   0036A2  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4240   0036A4  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4241   0036A6  6E03               	movwf	(labs@a+2)^0,c
  4242   0036A8  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4243   0036AA  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4244   0036AC  6E04               	movwf	(labs@a+3)^0,c
  4245   0036AE  ECB9  F03A         	call	_labs	;wreg free
  4246   0036B2  BE04               	btfsc	(?_labs+3)^0,7,c
  4247   0036B4  EF69  F01B         	goto	u12190
  4248   0036B8  5004               	movf	(?_labs+3)^0,w,c
  4249   0036BA  1003               	iorwf	(?_labs+2)^0,w,c
  4250   0036BC  1002               	iorwf	(?_labs+1)^0,w,c
  4251   0036BE  E107               	bnz	u12191
  4252   0036C0  0E02               	movlw	2
  4253   0036C2  5C01               	subwf	?_labs^0,w,c
  4254   0036C4  B0D8               	btfsc	status,0,c
  4255   0036C6  EF67  F01B         	goto	u12191
  4256   0036CA  EF69  F01B         	goto	u12190
  4257   0036CE                     u12191:
  4258   0036CE  EFB1  F01B         	goto	l11909
  4259   0036D2                     u12190:
  4260   0036D2                     l11899:
  4261                           
  4262                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 665:    g = u;
  4263   0036D2  C0A8  F0A2         	movff	efgtoa@u,efgtoa@g
  4264   0036D6  C0A9  F0A3         	movff	efgtoa@u+1,efgtoa@g+1
  4265   0036DA  C0AA  F0A4         	movff	efgtoa@u+2,efgtoa@g+2
  4266   0036DE  C0AB  F0A5         	movff	efgtoa@u+3,efgtoa@g+3
  4267                           
  4268                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 666:   }
  4269   0036E2  EFCA  F01B         	goto	l1438
  4270   0036E6                     l11901:
  4271                           
  4272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 669:     u.f = u.
      +                          f/10.0;
  4273   0036E6  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4274   0036EA  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4275   0036EE  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4276   0036F2  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4277   0036F6  0E00               	movlw	0
  4278   0036F8  6E46               	movwf	___fldiv@a^0,c
  4279   0036FA  0E00               	movlw	0
  4280   0036FC  6E47               	movwf	(___fldiv@a+1)^0,c
  4281   0036FE  0E20               	movlw	32
  4282   003700  6E48               	movwf	(___fldiv@a+2)^0,c
  4283   003702  0E41               	movlw	65
  4284   003704  6E49               	movwf	(___fldiv@a+3)^0,c
  4285   003706  ECF5  F027         	call	___fldiv	;wreg free
  4286   00370A  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4287   00370E  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4288   003712  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4289   003716  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4290   00371A                     
  4291                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 670:     --e;
  4292   00371A  0100               	movlb	0	; () banked
  4293   00371C  078F               	decf	efgtoa@e& (0+255),f,b
  4294   00371E  A0D8               	btfss	status,0,c
  4295   003720  0790               	decf	(efgtoa@e+1)& (0+255),f,b
  4296   003722                     
  4297                           ; BSR set to: 0
  4298                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 671:     if ((lab
      +                          s((g).u-(u).u) <= 1)) {
  4299   003722  51A8               	movf	efgtoa@u& (0+255),w,b
  4300   003724  5DA2               	subwf	efgtoa@g& (0+255),w,b
  4301   003726  6E01               	movwf	labs@a^0,c
  4302   003728  51A9               	movf	(efgtoa@u+1)& (0+255),w,b
  4303   00372A  59A3               	subwfb	(efgtoa@g+1)& (0+255),w,b
  4304   00372C  6E02               	movwf	(labs@a+1)^0,c
  4305   00372E  51AA               	movf	(efgtoa@u+2)& (0+255),w,b
  4306   003730  59A4               	subwfb	(efgtoa@g+2)& (0+255),w,b
  4307   003732  6E03               	movwf	(labs@a+2)^0,c
  4308   003734  51AB               	movf	(efgtoa@u+3)& (0+255),w,b
  4309   003736  59A5               	subwfb	(efgtoa@g+3)& (0+255),w,b
  4310   003738  6E04               	movwf	(labs@a+3)^0,c
  4311   00373A  ECB9  F03A         	call	_labs	;wreg free
  4312   00373E  BE04               	btfsc	(?_labs+3)^0,7,c
  4313   003740  EFAF  F01B         	goto	u12200
  4314   003744  5004               	movf	(?_labs+3)^0,w,c
  4315   003746  1003               	iorwf	(?_labs+2)^0,w,c
  4316   003748  1002               	iorwf	(?_labs+1)^0,w,c
  4317   00374A  E107               	bnz	u12201
  4318   00374C  0E02               	movlw	2
  4319   00374E  5C01               	subwf	?_labs^0,w,c
  4320   003750  B0D8               	btfsc	status,0,c
  4321   003752  EFAD  F01B         	goto	u12201
  4322   003756  EFAF  F01B         	goto	u12200
  4323   00375A                     u12201:
  4324   00375A  EFB1  F01B         	goto	l11909
  4325   00375E                     u12200:
  4326   00375E  EF69  F01B         	goto	l11899
  4327   003762                     l11909:
  4328                           
  4329                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 668:    while (g.
      +                          f < u.f) {
  4330   003762  C0A2  F063         	movff	efgtoa@g,___flge@ff1
  4331   003766  C0A3  F064         	movff	efgtoa@g+1,___flge@ff1+1
  4332   00376A  C0A4  F065         	movff	efgtoa@g+2,___flge@ff1+2
  4333   00376E  C0A5  F066         	movff	efgtoa@g+3,___flge@ff1+3
  4334   003772  C0A8  F067         	movff	efgtoa@u,___flge@ff2
  4335   003776  C0A9  F068         	movff	efgtoa@u+1,___flge@ff2+1
  4336   00377A  C0AA  F069         	movff	efgtoa@u+2,___flge@ff2+2
  4337   00377E  C0AB  F06A         	movff	efgtoa@u+3,___flge@ff2+3
  4338   003782  ECB7  F034         	call	___flge	;wreg free
  4339   003786  A0D8               	btfss	status,0,c
  4340   003788  EFC8  F01B         	goto	u12211
  4341   00378C  EFCA  F01B         	goto	u12210
  4342   003790                     u12211:
  4343   003790  EF73  F01B         	goto	l11901
  4344   003794                     u12210:
  4345   003794                     l1438:
  4346                           
  4347                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 683:  mode = c;
  4348   003794  C074  F089         	movff	efgtoa@c,efgtoa@mode
  4349                           
  4350                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 685:     nmode = 
      +                          mode;
  4351   003798  C089  F08A         	movff	efgtoa@mode,efgtoa@nmode
  4352   00379C                     
  4353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 695:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 696:         p = (prec < 0)
      +                           ? 6 : prec;
  4354   00379C  0100               	movlb	0	; () banked
  4355   00379E  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  4356   0037A0  EFD4  F01B         	goto	u12221
  4357   0037A4  EFD6  F01B         	goto	u12220
  4358   0037A8                     u12221:
  4359   0037A8  EFDC  F01B         	goto	l11915
  4360   0037AC                     u12220:
  4361   0037AC                     
  4362                           ; BSR set to: 0
  4363   0037AC  C0D4  F082         	movff	_prec,efgtoa@p
  4364   0037B0  C0D5  F083         	movff	_prec+1,efgtoa@p+1
  4365   0037B4  EFE0  F01B         	goto	l11917
  4366   0037B8                     l11915:
  4367                           
  4368                           ; BSR set to: 0
  4369   0037B8  0E00               	movlw	0
  4370   0037BA  6F83               	movwf	(efgtoa@p+1)& (0+255),b
  4371   0037BC  0E06               	movlw	6
  4372   0037BE  6F82               	movwf	efgtoa@p& (0+255),b
  4373   0037C0                     l11917:
  4374                           
  4375                           ; BSR set to: 0
  4376                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 697:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 711:     m = p;
  4377   0037C0  C082  F08D         	movff	efgtoa@p,efgtoa@m
  4378   0037C4  C083  F08E         	movff	efgtoa@p+1,efgtoa@m+1
  4379   0037C8                     
  4380                           ; BSR set to: 0
  4381                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 715:  {;C:\Progra
      +                          m Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 716:         ++m;
  4382   0037C8  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4383   0037CA  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4384   0037CC                     
  4385                           ; BSR set to: 0
  4386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 717:     };C:\Pro
      +                          gram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 721:     if (nmode == 'f
      +                          ') {
  4387   0037CC  0E66               	movlw	102
  4388   0037CE  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4389   0037D0  A4D8               	btfss	status,2,c
  4390   0037D2  EFED  F01B         	goto	u12231
  4391   0037D6  EFEF  F01B         	goto	u12230
  4392   0037DA                     u12231:
  4393   0037DA  EF0F  F01C         	goto	l11931
  4394   0037DE                     u12230:
  4395   0037DE                     
  4396                           ; BSR set to: 0
  4397                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 722:         if (
      +                          e < 0) {
  4398   0037DE  BF90               	btfsc	(efgtoa@e+1)& (0+255),7,b
  4399   0037E0  EFF6  F01B         	goto	u12240
  4400   0037E4  EFF4  F01B         	goto	u12241
  4401   0037E8                     u12241:
  4402   0037E8  EF02  F01C         	goto	l11927
  4403   0037EC                     u12240:
  4404   0037EC                     
  4405                           ; BSR set to: 0
  4406                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 723:             
      +                          u.f = 1.0;
  4407   0037EC  0E00               	movlw	0
  4408   0037EE  6FA8               	movwf	efgtoa@u& (0+255),b
  4409   0037F0  0E00               	movlw	0
  4410   0037F2  6FA9               	movwf	(efgtoa@u+1)& (0+255),b
  4411   0037F4  0E80               	movlw	128
  4412   0037F6  6FAA               	movwf	(efgtoa@u+2)& (0+255),b
  4413   0037F8  0E3F               	movlw	63
  4414   0037FA  6FAB               	movwf	(efgtoa@u+3)& (0+255),b
  4415                           
  4416                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 724:             
      +                          e = 0;
  4417   0037FC  0E00               	movlw	0
  4418   0037FE  6F90               	movwf	(efgtoa@e+1)& (0+255),b
  4419   003800  0E00               	movlw	0
  4420   003802  6F8F               	movwf	efgtoa@e& (0+255),b
  4421   003804                     l11927:
  4422                           
  4423                           ; BSR set to: 0
  4424                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 726:         if (
      +                          !(mode == 'g')) {
  4425   003804  0E67               	movlw	103
  4426   003806  1989               	xorwf	efgtoa@mode& (0+255),w,b
  4427   003808  B4D8               	btfsc	status,2,c
  4428   00380A  EF09  F01C         	goto	u12251
  4429   00380E  EF0B  F01C         	goto	u12250
  4430   003812                     u12251:
  4431   003812  EF0F  F01C         	goto	l11931
  4432   003816                     u12250:
  4433   003816                     
  4434                           ; BSR set to: 0
  4435                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 727:             
      +                          m += e;
  4436   003816  518F               	movf	efgtoa@e& (0+255),w,b
  4437   003818  278D               	addwf	efgtoa@m& (0+255),f,b
  4438   00381A  5190               	movf	(efgtoa@e+1)& (0+255),w,b
  4439   00381C  238E               	addwfc	(efgtoa@m+1)& (0+255),f,b
  4440   00381E                     l11931:
  4441                           
  4442                           ; BSR set to: 0
  4443                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 733:     i = 0;
  4444   00381E  0E00               	movlw	0
  4445   003820  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4446   003822  0E00               	movlw	0
  4447   003824  6F97               	movwf	efgtoa@i& (0+255),b
  4448   003826                     
  4449                           ; BSR set to: 0
  4450                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 734:     h = g.f;
  4451   003826  C0A2  F099         	movff	efgtoa@g,efgtoa@h
  4452   00382A  C0A3  F09A         	movff	efgtoa@g+1,efgtoa@h+1
  4453   00382E  C0A4  F09B         	movff	efgtoa@g+2,efgtoa@h+2
  4454   003832  C0A5  F09C         	movff	efgtoa@g+3,efgtoa@h+3
  4455   003836                     
  4456                           ; BSR set to: 0
  4457                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 735:     ou = u;
  4458   003836  C0A8  F093         	movff	efgtoa@u,efgtoa@ou
  4459   00383A  C0A9  F094         	movff	efgtoa@u+1,efgtoa@ou+1
  4460   00383E  C0AA  F095         	movff	efgtoa@u+2,efgtoa@ou+2
  4461   003842  C0AB  F096         	movff	efgtoa@u+3,efgtoa@ou+3
  4462                           
  4463                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4464   003846  EFA0  F01C         	goto	l11945
  4465   00384A                     l11937:
  4466                           
  4467                           ; BSR set to: 0
  4468                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 737:         l = 
      +                          floorf(h/u.f);
  4469   00384A  C099  F042         	movff	efgtoa@h,___fldiv@b
  4470   00384E  C09A  F043         	movff	efgtoa@h+1,___fldiv@b+1
  4471   003852  C09B  F044         	movff	efgtoa@h+2,___fldiv@b+2
  4472   003856  C09C  F045         	movff	efgtoa@h+3,___fldiv@b+3
  4473   00385A  C0A8  F046         	movff	efgtoa@u,___fldiv@a
  4474   00385E  C0A9  F047         	movff	efgtoa@u+1,___fldiv@a+1
  4475   003862  C0AA  F048         	movff	efgtoa@u+2,___fldiv@a+2
  4476   003866  C0AB  F049         	movff	efgtoa@u+3,___fldiv@a+3
  4477   00386A  ECF5  F027         	call	___fldiv	;wreg free
  4478   00386E  C042  F05B         	movff	?___fldiv,floorf@x
  4479   003872  C043  F05C         	movff	?___fldiv+1,floorf@x+1
  4480   003876  C044  F05D         	movff	?___fldiv+2,floorf@x+2
  4481   00387A  C045  F05E         	movff	?___fldiv+3,floorf@x+3
  4482   00387E  ECB9  F02E         	call	_floorf	;wreg free
  4483   003882  C05B  F09D         	movff	?_floorf,efgtoa@l
  4484   003886  C05C  F09E         	movff	?_floorf+1,efgtoa@l+1
  4485   00388A  C05D  F09F         	movff	?_floorf+2,efgtoa@l+2
  4486   00388E  C05E  F0A0         	movff	?_floorf+3,efgtoa@l+3
  4487                           
  4488                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 738:         d = 
      +                          (int)l;
  4489   003892  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4490   003896  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4491   00389A  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4492   00389E  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4493   0038A2  EC34  F034         	call	___fltol	;wreg free
  4494   0038A6  C001  F08B         	movff	?___fltol,efgtoa@d
  4495   0038AA  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  4496   0038AE                     
  4497                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 739:         h -=
      +                           l*u.f;
  4498   0038AE  C099  F05B         	movff	efgtoa@h,___flsub@b
  4499   0038B2  C09A  F05C         	movff	efgtoa@h+1,___flsub@b+1
  4500   0038B6  C09B  F05D         	movff	efgtoa@h+2,___flsub@b+2
  4501   0038BA  C09C  F05E         	movff	efgtoa@h+3,___flsub@b+3
  4502   0038BE  C09D  F01D         	movff	efgtoa@l,___flmul@a
  4503   0038C2  C09E  F01E         	movff	efgtoa@l+1,___flmul@a+1
  4504   0038C6  C09F  F01F         	movff	efgtoa@l+2,___flmul@a+2
  4505   0038CA  C0A0  F020         	movff	efgtoa@l+3,___flmul@a+3
  4506   0038CE  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4507   0038D2  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4508   0038D6  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4509   0038DA  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4510   0038DE  ECF1  F023         	call	___flmul	;wreg free
  4511   0038E2  C019  F05F         	movff	?___flmul,___flsub@a
  4512   0038E6  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  4513   0038EA  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  4514   0038EE  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  4515   0038F2  EC34  F03B         	call	___flsub	;wreg free
  4516   0038F6  C05B  F099         	movff	?___flsub,efgtoa@h
  4517   0038FA  C05C  F09A         	movff	?___flsub+1,efgtoa@h+1
  4518   0038FE  C05D  F09B         	movff	?___flsub+2,efgtoa@h+2
  4519   003902  C05E  F09C         	movff	?___flsub+3,efgtoa@h+3
  4520   003906                     
  4521                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 740:         u.f 
      +                          = u.f/10.0;
  4522   003906  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4523   00390A  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4524   00390E  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4525   003912  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4526   003916  0E00               	movlw	0
  4527   003918  6E46               	movwf	___fldiv@a^0,c
  4528   00391A  0E00               	movlw	0
  4529   00391C  6E47               	movwf	(___fldiv@a+1)^0,c
  4530   00391E  0E20               	movlw	32
  4531   003920  6E48               	movwf	(___fldiv@a+2)^0,c
  4532   003922  0E41               	movlw	65
  4533   003924  6E49               	movwf	(___fldiv@a+3)^0,c
  4534   003926  ECF5  F027         	call	___fldiv	;wreg free
  4535   00392A  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4536   00392E  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4537   003932  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4538   003936  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4539   00393A                     
  4540                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 741:         ++i;
  4541   00393A  0100               	movlb	0	; () banked
  4542   00393C  4B97               	infsnz	efgtoa@i& (0+255),f,b
  4543   00393E  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  4544   003940                     l11945:
  4545                           
  4546                           ; BSR set to: 0
  4547                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 736:     while (i
      +                           < m) {
  4548   003940  518D               	movf	efgtoa@m& (0+255),w,b
  4549   003942  5D97               	subwf	efgtoa@i& (0+255),w,b
  4550   003944  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4551   003946  0A80               	xorlw	128
  4552   003948  6E75               	movwf	??_efgtoa^0,c
  4553   00394A  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  4554   00394C  0A80               	xorlw	128
  4555   00394E  5875               	subwfb	??_efgtoa^0,w,c
  4556   003950  A0D8               	btfss	status,0,c
  4557   003952  EFAD  F01C         	goto	u12261
  4558   003956  EFAF  F01C         	goto	u12260
  4559   00395A                     u12261:
  4560   00395A  EF25  F01C         	goto	l11937
  4561   00395E                     u12260:
  4562   00395E                     
  4563                           ; BSR set to: 0
  4564                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 745:     l = u.f*
      +                          5.0;
  4565   00395E  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4566   003962  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4567   003966  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4568   00396A  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4569   00396E  0E00               	movlw	0
  4570   003970  6E1D               	movwf	___flmul@a^0,c
  4571   003972  0E00               	movlw	0
  4572   003974  6E1E               	movwf	(___flmul@a+1)^0,c
  4573   003976  0EA0               	movlw	160
  4574   003978  6E1F               	movwf	(___flmul@a+2)^0,c
  4575   00397A  0E40               	movlw	64
  4576   00397C  6E20               	movwf	(___flmul@a+3)^0,c
  4577   00397E  ECF1  F023         	call	___flmul	;wreg free
  4578   003982  C019  F09D         	movff	?___flmul,efgtoa@l
  4579   003986  C01A  F09E         	movff	?___flmul+1,efgtoa@l+1
  4580   00398A  C01B  F09F         	movff	?___flmul+2,efgtoa@l+2
  4581   00398E  C01C  F0A0         	movff	?___flmul+3,efgtoa@l+3
  4582   003992                     
  4583                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 746:     if (h < 
      +                          l) {
  4584   003992  C099  F063         	movff	efgtoa@h,___flge@ff1
  4585   003996  C09A  F064         	movff	efgtoa@h+1,___flge@ff1+1
  4586   00399A  C09B  F065         	movff	efgtoa@h+2,___flge@ff1+2
  4587   00399E  C09C  F066         	movff	efgtoa@h+3,___flge@ff1+3
  4588   0039A2  C09D  F067         	movff	efgtoa@l,___flge@ff2
  4589   0039A6  C09E  F068         	movff	efgtoa@l+1,___flge@ff2+1
  4590   0039AA  C09F  F069         	movff	efgtoa@l+2,___flge@ff2+2
  4591   0039AE  C0A0  F06A         	movff	efgtoa@l+3,___flge@ff2+3
  4592   0039B2  ECB7  F034         	call	___flge	;wreg free
  4593   0039B6  B0D8               	btfsc	status,0,c
  4594   0039B8  EFE0  F01C         	goto	u12271
  4595   0039BC  EFE2  F01C         	goto	u12270
  4596   0039C0                     u12271:
  4597   0039C0  EFED  F01C         	goto	l11953
  4598   0039C4                     u12270:
  4599   0039C4                     
  4600                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 747:         l = 
      +                          0.0;
  4601   0039C4  0E00               	movlw	0
  4602   0039C6  0100               	movlb	0	; () banked
  4603   0039C8  6F9D               	movwf	efgtoa@l& (0+255),b
  4604   0039CA  0E00               	movlw	0
  4605   0039CC  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4606   0039CE  0E00               	movlw	0
  4607   0039D0  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4608   0039D2  0E00               	movlw	0
  4609   0039D4  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4610                           
  4611                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 748:     } else {
  4612   0039D6  EF16  F01D         	goto	l11959
  4613   0039DA                     l11953:
  4614                           
  4615                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 750:         if (
      +                          (h == l) && !(d % 2)) {
  4616   0039DA  C099  F001         	movff	efgtoa@h,___fleq@ff1
  4617   0039DE  C09A  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  4618   0039E2  C09B  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  4619   0039E6  C09C  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  4620   0039EA  C09D  F005         	movff	efgtoa@l,___fleq@ff2
  4621   0039EE  C09E  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  4622   0039F2  C09F  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  4623   0039F6  C0A0  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  4624   0039FA  ECAC  F037         	call	___fleq	;wreg free
  4625   0039FE  A0D8               	btfss	status,0,c
  4626   003A00  EF04  F01D         	goto	u12281
  4627   003A04  EF06  F01D         	goto	u12280
  4628   003A08                     u12281:
  4629   003A08  EF16  F01D         	goto	l11959
  4630   003A0C                     u12280:
  4631   003A0C  0100               	movlb	0	; () banked
  4632   003A0E  B18B               	btfsc	efgtoa@d& (0+255),0,b
  4633   003A10  EF0C  F01D         	goto	u12291
  4634   003A14  EF0E  F01D         	goto	u12290
  4635   003A18                     u12291:
  4636   003A18  EF16  F01D         	goto	l11959
  4637   003A1C                     u12290:
  4638   003A1C                     
  4639                           ; BSR set to: 0
  4640                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 751:             
      +                          l = 0.0;
  4641   003A1C  0E00               	movlw	0
  4642   003A1E  6F9D               	movwf	efgtoa@l& (0+255),b
  4643   003A20  0E00               	movlw	0
  4644   003A22  6F9E               	movwf	(efgtoa@l+1)& (0+255),b
  4645   003A24  0E00               	movlw	0
  4646   003A26  6F9F               	movwf	(efgtoa@l+2)& (0+255),b
  4647   003A28  0E00               	movlw	0
  4648   003A2A  6FA0               	movwf	(efgtoa@l+3)& (0+255),b
  4649   003A2C                     l11959:
  4650                           
  4651                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 756:     h = g.f 
      +                          + l;
  4652   003A2C  C0A2  F032         	movff	efgtoa@g,___fladd@b
  4653   003A30  C0A3  F033         	movff	efgtoa@g+1,___fladd@b+1
  4654   003A34  C0A4  F034         	movff	efgtoa@g+2,___fladd@b+2
  4655   003A38  C0A5  F035         	movff	efgtoa@g+3,___fladd@b+3
  4656   003A3C  C09D  F036         	movff	efgtoa@l,___fladd@a
  4657   003A40  C09E  F037         	movff	efgtoa@l+1,___fladd@a+1
  4658   003A44  C09F  F038         	movff	efgtoa@l+2,___fladd@a+2
  4659   003A48  C0A0  F039         	movff	efgtoa@l+3,___fladd@a+3
  4660   003A4C  EC91  F021         	call	___fladd	;wreg free
  4661   003A50  C032  F099         	movff	?___fladd,efgtoa@h
  4662   003A54  C033  F09A         	movff	?___fladd+1,efgtoa@h+1
  4663   003A58  C034  F09B         	movff	?___fladd+2,efgtoa@h+2
  4664   003A5C  C035  F09C         	movff	?___fladd+3,efgtoa@h+3
  4665   003A60                     
  4666                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 758:  if (h >= (o
      +                          u.f*10.0)) {
  4667   003A60  C099  F063         	movff	efgtoa@h,___flge@ff1
  4668   003A64  C09A  F064         	movff	efgtoa@h+1,___flge@ff1+1
  4669   003A68  C09B  F065         	movff	efgtoa@h+2,___flge@ff1+2
  4670   003A6C  C09C  F066         	movff	efgtoa@h+3,___flge@ff1+3
  4671   003A70  0E00               	movlw	0
  4672   003A72  6E1D               	movwf	___flmul@a^0,c
  4673   003A74  0E00               	movlw	0
  4674   003A76  6E1E               	movwf	(___flmul@a+1)^0,c
  4675   003A78  0E20               	movlw	32
  4676   003A7A  6E1F               	movwf	(___flmul@a+2)^0,c
  4677   003A7C  0E41               	movlw	65
  4678   003A7E  6E20               	movwf	(___flmul@a+3)^0,c
  4679   003A80  C093  F019         	movff	efgtoa@ou,___flmul@b
  4680   003A84  C094  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  4681   003A88  C095  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  4682   003A8C  C096  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  4683   003A90  ECF1  F023         	call	___flmul	;wreg free
  4684   003A94  C019  F067         	movff	?___flmul,___flge@ff2
  4685   003A98  C01A  F068         	movff	?___flmul+1,___flge@ff2+1
  4686   003A9C  C01B  F069         	movff	?___flmul+2,___flge@ff2+2
  4687   003AA0  C01C  F06A         	movff	?___flmul+3,___flge@ff2+3
  4688   003AA4  ECB7  F034         	call	___flge	;wreg free
  4689   003AA8  A0D8               	btfss	status,0,c
  4690   003AAA  EF59  F01D         	goto	u12301
  4691   003AAE  EF5B  F01D         	goto	u12300
  4692   003AB2                     u12301:
  4693   003AB2  EF84  F01D         	goto	l11971
  4694   003AB6                     u12300:
  4695   003AB6                     
  4696                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 759:   e++;
  4697   003AB6  0100               	movlb	0	; () banked
  4698   003AB8  4B8F               	infsnz	efgtoa@e& (0+255),f,b
  4699   003ABA  2B90               	incf	(efgtoa@e+1)& (0+255),f,b
  4700   003ABC                     
  4701                           ; BSR set to: 0
  4702                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 760:   ou.f *= 10
      +                          .0;
  4703   003ABC  C093  F019         	movff	efgtoa@ou,___flmul@b
  4704   003AC0  C094  F01A         	movff	efgtoa@ou+1,___flmul@b+1
  4705   003AC4  C095  F01B         	movff	efgtoa@ou+2,___flmul@b+2
  4706   003AC8  C096  F01C         	movff	efgtoa@ou+3,___flmul@b+3
  4707   003ACC  0E00               	movlw	0
  4708   003ACE  6E1D               	movwf	___flmul@a^0,c
  4709   003AD0  0E00               	movlw	0
  4710   003AD2  6E1E               	movwf	(___flmul@a+1)^0,c
  4711   003AD4  0E20               	movlw	32
  4712   003AD6  6E1F               	movwf	(___flmul@a+2)^0,c
  4713   003AD8  0E41               	movlw	65
  4714   003ADA  6E20               	movwf	(___flmul@a+3)^0,c
  4715   003ADC  ECF1  F023         	call	___flmul	;wreg free
  4716   003AE0  C019  F093         	movff	?___flmul,efgtoa@ou
  4717   003AE4  C01A  F094         	movff	?___flmul+1,efgtoa@ou+1
  4718   003AE8  C01B  F095         	movff	?___flmul+2,efgtoa@ou+2
  4719   003AEC  C01C  F096         	movff	?___flmul+3,efgtoa@ou+3
  4720   003AF0                     
  4721                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 762:   if (nmode 
      +                          == 'f') {
  4722   003AF0  0E66               	movlw	102
  4723   003AF2  0100               	movlb	0	; () banked
  4724   003AF4  198A               	xorwf	efgtoa@nmode& (0+255),w,b
  4725   003AF6  A4D8               	btfss	status,2,c
  4726   003AF8  EF80  F01D         	goto	u12311
  4727   003AFC  EF82  F01D         	goto	u12310
  4728   003B00                     u12311:
  4729   003B00  EF84  F01D         	goto	l11971
  4730   003B04                     u12310:
  4731   003B04                     
  4732                           ; BSR set to: 0
  4733                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 764:    m++;
  4734   003B04  4B8D               	infsnz	efgtoa@m& (0+255),f,b
  4735   003B06  2B8E               	incf	(efgtoa@m+1)& (0+255),f,b
  4736   003B08                     l11971:
  4737                           
  4738                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 770:     u = ou;
  4739   003B08  C093  F0A8         	movff	efgtoa@ou,efgtoa@u
  4740   003B0C  C094  F0A9         	movff	efgtoa@ou+1,efgtoa@u+1
  4741   003B10  C095  F0AA         	movff	efgtoa@ou+2,efgtoa@u+2
  4742   003B14  C096  F0AB         	movff	efgtoa@ou+3,efgtoa@u+3
  4743   003B18                     
  4744                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 774:  ne = e;
  4745   003B18  C08F  F080         	movff	efgtoa@e,efgtoa@ne
  4746   003B1C  C090  F081         	movff	efgtoa@e+1,efgtoa@ne+1
  4747   003B20                     
  4748                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 776:     pp = 0;
  4749   003B20  0E00               	movlw	0
  4750   003B22  0100               	movlb	0	; () banked
  4751   003B24  6F88               	movwf	efgtoa@pp& (0+255),b
  4752   003B26                     
  4753                           ; BSR set to: 0
  4754                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 777:     t = 0;
  4755   003B26  0E00               	movlw	0
  4756   003B28  6F85               	movwf	(efgtoa@t+1)& (0+255),b
  4757   003B2A  0E00               	movlw	0
  4758   003B2C  6F84               	movwf	efgtoa@t& (0+255),b
  4759   003B2E                     
  4760                           ; BSR set to: 0
  4761                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 778:     i = 0;
  4762   003B2E  0E00               	movlw	0
  4763   003B30  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  4764   003B32  0E00               	movlw	0
  4765   003B34  6F97               	movwf	efgtoa@i& (0+255),b
  4766                           
  4767                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4768   003B36  EF82  F01E         	goto	l12021
  4769   003B3A                     l11981:
  4770                           
  4771                           ; BSR set to: 0
  4772                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 780:         l = 
      +                          floorf(h/u.f);
  4773   003B3A  C099  F042         	movff	efgtoa@h,___fldiv@b
  4774   003B3E  C09A  F043         	movff	efgtoa@h+1,___fldiv@b+1
  4775   003B42  C09B  F044         	movff	efgtoa@h+2,___fldiv@b+2
  4776   003B46  C09C  F045         	movff	efgtoa@h+3,___fldiv@b+3
  4777   003B4A  C0A8  F046         	movff	efgtoa@u,___fldiv@a
  4778   003B4E  C0A9  F047         	movff	efgtoa@u+1,___fldiv@a+1
  4779   003B52  C0AA  F048         	movff	efgtoa@u+2,___fldiv@a+2
  4780   003B56  C0AB  F049         	movff	efgtoa@u+3,___fldiv@a+3
  4781   003B5A  ECF5  F027         	call	___fldiv	;wreg free
  4782   003B5E  C042  F05B         	movff	?___fldiv,floorf@x
  4783   003B62  C043  F05C         	movff	?___fldiv+1,floorf@x+1
  4784   003B66  C044  F05D         	movff	?___fldiv+2,floorf@x+2
  4785   003B6A  C045  F05E         	movff	?___fldiv+3,floorf@x+3
  4786   003B6E  ECB9  F02E         	call	_floorf	;wreg free
  4787   003B72  C05B  F09D         	movff	?_floorf,efgtoa@l
  4788   003B76  C05C  F09E         	movff	?_floorf+1,efgtoa@l+1
  4789   003B7A  C05D  F09F         	movff	?_floorf+2,efgtoa@l+2
  4790   003B7E  C05E  F0A0         	movff	?_floorf+3,efgtoa@l+3
  4791                           
  4792                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 781:         d = 
      +                          (int)l > 9 ? 9 : (int)l;
  4793   003B82  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4794   003B86  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4795   003B8A  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4796   003B8E  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4797   003B92  EC34  F034         	call	___fltol	;wreg free
  4798   003B96  BE02               	btfsc	(?___fltol+1)^0,7,c
  4799   003B98  EFD9  F01D         	goto	u12320
  4800   003B9C  5002               	movf	(?___fltol+1)^0,w,c
  4801   003B9E  E107               	bnz	u12321
  4802   003BA0  0E0A               	movlw	10
  4803   003BA2  5C01               	subwf	?___fltol^0,w,c
  4804   003BA4  B0D8               	btfsc	status,0,c
  4805   003BA6  EFD7  F01D         	goto	u12321
  4806   003BAA  EFD9  F01D         	goto	u12320
  4807   003BAE                     u12321:
  4808   003BAE  EFE9  F01D         	goto	l11985
  4809   003BB2                     u12320:
  4810   003BB2  C09D  F001         	movff	efgtoa@l,___fltol@f1
  4811   003BB6  C09E  F002         	movff	efgtoa@l+1,___fltol@f1+1
  4812   003BBA  C09F  F003         	movff	efgtoa@l+2,___fltol@f1+2
  4813   003BBE  C0A0  F004         	movff	efgtoa@l+3,___fltol@f1+3
  4814   003BC2  EC34  F034         	call	___fltol	;wreg free
  4815   003BC6  C001  F08B         	movff	?___fltol,efgtoa@d
  4816   003BCA  C002  F08C         	movff	?___fltol+1,efgtoa@d+1
  4817   003BCE  EFEE  F01D         	goto	l1468
  4818   003BD2                     l11985:
  4819   003BD2  0E00               	movlw	0
  4820   003BD4  0100               	movlb	0	; () banked
  4821   003BD6  6F8C               	movwf	(efgtoa@d+1)& (0+255),b
  4822   003BD8  0E09               	movlw	9
  4823   003BDA  6F8B               	movwf	efgtoa@d& (0+255),b
  4824   003BDC                     l1468:
  4825                           
  4826                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 792:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 793:             if (!pp &
      +                          & (ne < 0)) {
  4827   003BDC  0100               	movlb	0	; () banked
  4828   003BDE  5188               	movf	efgtoa@pp& (0+255),w,b
  4829   003BE0  A4D8               	btfss	status,2,c
  4830   003BE2  EFF5  F01D         	goto	u12331
  4831   003BE6  EFF7  F01D         	goto	u12330
  4832   003BEA                     u12331:
  4833   003BEA  EF1F  F01E         	goto	l12005
  4834   003BEE                     u12330:
  4835   003BEE                     
  4836                           ; BSR set to: 0
  4837   003BEE  BF81               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  4838   003BF0  EFFE  F01D         	goto	u12340
  4839   003BF4  EFFC  F01D         	goto	u12341
  4840   003BF8                     u12341:
  4841   003BF8  EF1F  F01E         	goto	l12005
  4842   003BFC                     u12340:
  4843   003BFC                     
  4844                           ; BSR set to: 0
  4845                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 794:             
      +                              dbuf[n++] = '.';
  4846   003BFC  0E00               	movlw	low _dbuf
  4847   003BFE  25A6               	addwf	efgtoa@n& (0+255),w,b
  4848   003C00  6ED9               	movwf	fsr2l,c
  4849   003C02  0E02               	movlw	high _dbuf
  4850   003C04  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4851   003C06  6EDA               	movwf	fsr2h,c
  4852   003C08  0E2E               	movlw	46
  4853   003C0A  6EDF               	movwf	indf2,c
  4854   003C0C                     
  4855                           ; BSR set to: 0
  4856   003C0C  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4857   003C0E  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4858   003C10                     
  4859                           ; BSR set to: 0
  4860                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 795:             
      +                              --w;
  4861   003C10  0791               	decf	efgtoa@w& (0+255),f,b
  4862   003C12  A0D8               	btfss	status,0,c
  4863   003C14  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4864   003C16                     
  4865                           ; BSR set to: 0
  4866                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 796:             
      +                              pp = 1;
  4867   003C16  0E01               	movlw	1
  4868   003C18  6F88               	movwf	efgtoa@pp& (0+255),b
  4869   003C1A  EF1F  F01E         	goto	l12005
  4870   003C1E                     l11997:
  4871                           
  4872                           ; BSR set to: 0
  4873                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 799:             
      +                              dbuf[n++] = '0';
  4874   003C1E  0E00               	movlw	low _dbuf
  4875   003C20  25A6               	addwf	efgtoa@n& (0+255),w,b
  4876   003C22  6ED9               	movwf	fsr2l,c
  4877   003C24  0E02               	movlw	high _dbuf
  4878   003C26  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4879   003C28  6EDA               	movwf	fsr2h,c
  4880   003C2A  0E30               	movlw	48
  4881   003C2C  6EDF               	movwf	indf2,c
  4882   003C2E                     
  4883                           ; BSR set to: 0
  4884   003C2E  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4885   003C30  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4886   003C32                     
  4887                           ; BSR set to: 0
  4888                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 800:             
      +                              --w;
  4889   003C32  0791               	decf	efgtoa@w& (0+255),f,b
  4890   003C34  A0D8               	btfss	status,0,c
  4891   003C36  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4892   003C38                     
  4893                           ; BSR set to: 0
  4894                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 801:             
      +                              --t;
  4895   003C38  0784               	decf	efgtoa@t& (0+255),f,b
  4896   003C3A  A0D8               	btfss	status,0,c
  4897   003C3C  0785               	decf	(efgtoa@t+1)& (0+255),f,b
  4898   003C3E                     l12005:
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 798:             
      +                          while (t) {
  4902   003C3E  5184               	movf	efgtoa@t& (0+255),w,b
  4903   003C40  1185               	iorwf	(efgtoa@t+1)& (0+255),w,b
  4904   003C42  A4D8               	btfss	status,2,c
  4905   003C44  EF26  F01E         	goto	u12351
  4906   003C48  EF28  F01E         	goto	u12350
  4907   003C4C                     u12351:
  4908   003C4C  EF0F  F01E         	goto	l11997
  4909   003C50                     u12350:
  4910   003C50                     
  4911                           ; BSR set to: 0
  4912                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 803:             
      +                          dbuf[n++] = (char)((int)'0' + d);
  4913   003C50  0E00               	movlw	low _dbuf
  4914   003C52  25A6               	addwf	efgtoa@n& (0+255),w,b
  4915   003C54  6ED9               	movwf	fsr2l,c
  4916   003C56  0E02               	movlw	high _dbuf
  4917   003C58  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4918   003C5A  6EDA               	movwf	fsr2h,c
  4919   003C5C  518B               	movf	efgtoa@d& (0+255),w,b
  4920   003C5E  0F30               	addlw	48
  4921   003C60  6EDF               	movwf	indf2,c
  4922   003C62                     
  4923                           ; BSR set to: 0
  4924   003C62  4BA6               	infsnz	efgtoa@n& (0+255),f,b
  4925   003C64  2BA7               	incf	(efgtoa@n+1)& (0+255),f,b
  4926   003C66                     
  4927                           ; BSR set to: 0
  4928                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 804:             
      +                          --w;
  4929   003C66  0791               	decf	efgtoa@w& (0+255),f,b
  4930   003C68  A0D8               	btfss	status,0,c
  4931   003C6A  0792               	decf	(efgtoa@w+1)& (0+255),f,b
  4932   003C6C                     
  4933                           ; BSR set to: 0
  4934                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 805:         };C:
      +                          \Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 806:         h -= l*
      +                          u.f;
  4935   003C6C  C099  F05B         	movff	efgtoa@h,___flsub@b
  4936   003C70  C09A  F05C         	movff	efgtoa@h+1,___flsub@b+1
  4937   003C74  C09B  F05D         	movff	efgtoa@h+2,___flsub@b+2
  4938   003C78  C09C  F05E         	movff	efgtoa@h+3,___flsub@b+3
  4939   003C7C  C09D  F01D         	movff	efgtoa@l,___flmul@a
  4940   003C80  C09E  F01E         	movff	efgtoa@l+1,___flmul@a+1
  4941   003C84  C09F  F01F         	movff	efgtoa@l+2,___flmul@a+2
  4942   003C88  C0A0  F020         	movff	efgtoa@l+3,___flmul@a+3
  4943   003C8C  C0A8  F019         	movff	efgtoa@u,___flmul@b
  4944   003C90  C0A9  F01A         	movff	efgtoa@u+1,___flmul@b+1
  4945   003C94  C0AA  F01B         	movff	efgtoa@u+2,___flmul@b+2
  4946   003C98  C0AB  F01C         	movff	efgtoa@u+3,___flmul@b+3
  4947   003C9C  ECF1  F023         	call	___flmul	;wreg free
  4948   003CA0  C019  F05F         	movff	?___flmul,___flsub@a
  4949   003CA4  C01A  F060         	movff	?___flmul+1,___flsub@a+1
  4950   003CA8  C01B  F061         	movff	?___flmul+2,___flsub@a+2
  4951   003CAC  C01C  F062         	movff	?___flmul+3,___flsub@a+3
  4952   003CB0  EC34  F03B         	call	___flsub	;wreg free
  4953   003CB4  C05B  F099         	movff	?___flsub,efgtoa@h
  4954   003CB8  C05C  F09A         	movff	?___flsub+1,efgtoa@h+1
  4955   003CBC  C05D  F09B         	movff	?___flsub+2,efgtoa@h+2
  4956   003CC0  C05E  F09C         	movff	?___flsub+3,efgtoa@h+3
  4957   003CC4                     
  4958                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 807:         u.f 
      +                          = u.f/10.0;
  4959   003CC4  C0A8  F042         	movff	efgtoa@u,___fldiv@b
  4960   003CC8  C0A9  F043         	movff	efgtoa@u+1,___fldiv@b+1
  4961   003CCC  C0AA  F044         	movff	efgtoa@u+2,___fldiv@b+2
  4962   003CD0  C0AB  F045         	movff	efgtoa@u+3,___fldiv@b+3
  4963   003CD4  0E00               	movlw	0
  4964   003CD6  6E46               	movwf	___fldiv@a^0,c
  4965   003CD8  0E00               	movlw	0
  4966   003CDA  6E47               	movwf	(___fldiv@a+1)^0,c
  4967   003CDC  0E20               	movlw	32
  4968   003CDE  6E48               	movwf	(___fldiv@a+2)^0,c
  4969   003CE0  0E41               	movlw	65
  4970   003CE2  6E49               	movwf	(___fldiv@a+3)^0,c
  4971   003CE4  ECF5  F027         	call	___fldiv	;wreg free
  4972   003CE8  C042  F0A8         	movff	?___fldiv,efgtoa@u
  4973   003CEC  C043  F0A9         	movff	?___fldiv+1,efgtoa@u+1
  4974   003CF0  C044  F0AA         	movff	?___fldiv+2,efgtoa@u+2
  4975   003CF4  C045  F0AB         	movff	?___fldiv+3,efgtoa@u+3
  4976   003CF8                     
  4977                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 808:         --ne
      +                          ;
  4978   003CF8  0100               	movlb	0	; () banked
  4979   003CFA  0780               	decf	efgtoa@ne& (0+255),f,b
  4980   003CFC  A0D8               	btfss	status,0,c
  4981   003CFE  0781               	decf	(efgtoa@ne+1)& (0+255),f,b
  4982   003D00                     
  4983                           ; BSR set to: 0
  4984                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 809:         ++i;
  4985   003D00  4B97               	infsnz	efgtoa@i& (0+255),f,b
  4986   003D02  2B98               	incf	(efgtoa@i+1)& (0+255),f,b
  4987   003D04                     l12021:
  4988                           
  4989                           ; BSR set to: 0
  4990                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 779:     while ((
      +                          i < m) && (n < (80 - 5))) {
  4991   003D04  518D               	movf	efgtoa@m& (0+255),w,b
  4992   003D06  5D97               	subwf	efgtoa@i& (0+255),w,b
  4993   003D08  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  4994   003D0A  0A80               	xorlw	128
  4995   003D0C  6E75               	movwf	??_efgtoa^0,c
  4996   003D0E  518E               	movf	(efgtoa@m+1)& (0+255),w,b
  4997   003D10  0A80               	xorlw	128
  4998   003D12  5875               	subwfb	??_efgtoa^0,w,c
  4999   003D14  B0D8               	btfsc	status,0,c
  5000   003D16  EF8F  F01E         	goto	u12361
  5001   003D1A  EF91  F01E         	goto	u12360
  5002   003D1E                     u12361:
  5003   003D1E  EF9F  F01E         	goto	l12025
  5004   003D22                     u12360:
  5005   003D22                     
  5006                           ; BSR set to: 0
  5007   003D22  BFA7               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5008   003D24  EF9D  F01E         	goto	u12371
  5009   003D28  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5010   003D2A  E109               	bnz	u12370
  5011   003D2C  0E4B               	movlw	75
  5012   003D2E  5DA6               	subwf	efgtoa@n& (0+255),w,b
  5013   003D30  A0D8               	btfss	status,0,c
  5014   003D32  EF9D  F01E         	goto	u12371
  5015   003D36  EF9F  F01E         	goto	u12370
  5016   003D3A                     u12371:
  5017   003D3A  EF9D  F01D         	goto	l11981
  5018   003D3E                     u12370:
  5019   003D3E                     l12025:
  5020                           
  5021                           ; BSR set to: 0
  5022                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 816:  i = sizeof(
      +                          dbuf) - 1;
  5023   003D3E  0E00               	movlw	0
  5024   003D40  6F98               	movwf	(efgtoa@i+1)& (0+255),b
  5025   003D42  0E4F               	movlw	79
  5026   003D44  6F97               	movwf	efgtoa@i& (0+255),b
  5027   003D46                     
  5028                           ; BSR set to: 0
  5029                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 817:     dbuf[i] 
      +                          = '\0';
  5030   003D46  0E00               	movlw	low _dbuf
  5031   003D48  2597               	addwf	efgtoa@i& (0+255),w,b
  5032   003D4A  6ED9               	movwf	fsr2l,c
  5033   003D4C  0E02               	movlw	high _dbuf
  5034   003D4E  2198               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5035   003D50  6EDA               	movwf	fsr2h,c
  5036   003D52  6ADF               	clrf	indf2,c
  5037   003D54                     
  5038                           ; BSR set to: 0
  5039                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 848:  memcpy(&dbu
      +                          f[i-n], &dbuf[0], (size_t)n);
  5040   003D54  0E00               	movlw	low _dbuf
  5041   003D56  6E75               	movwf	??_efgtoa^0,c
  5042   003D58  0E02               	movlw	high _dbuf
  5043   003D5A  6E76               	movwf	(??_efgtoa+1)^0,c
  5044   003D5C  51A6               	movf	efgtoa@n& (0+255),w,b
  5045   003D5E  5E75               	subwf	??_efgtoa^0,f,c
  5046   003D60  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5047   003D62  5A76               	subwfb	(??_efgtoa+1)^0,f,c
  5048   003D64  5197               	movf	efgtoa@i& (0+255),w,b
  5049   003D66  2475               	addwf	??_efgtoa^0,w,c
  5050   003D68  6E01               	movwf	memcpy@d1^0,c
  5051   003D6A  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5052   003D6C  2076               	addwfc	(??_efgtoa+1)^0,w,c
  5053   003D6E  6E02               	movwf	(memcpy@d1+1)^0,c
  5054   003D70  0E00               	movlw	low _dbuf
  5055   003D72  6E03               	movwf	memcpy@s1^0,c
  5056   003D74  0E02               	movlw	high _dbuf
  5057   003D76  6E04               	movwf	(memcpy@s1+1)^0,c
  5058   003D78  C0A6  F005         	movff	efgtoa@n,memcpy@n
  5059   003D7C  C0A7  F006         	movff	efgtoa@n+1,memcpy@n+1
  5060   003D80  EC0C  F03B         	call	_memcpy	;wreg free
  5061   003D84                     
  5062                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 849:  n = i-n;
  5063   003D84  0100               	movlb	0	; () banked
  5064   003D86  51A6               	movf	efgtoa@n& (0+255),w,b
  5065   003D88  5D97               	subwf	efgtoa@i& (0+255),w,b
  5066   003D8A  6FA6               	movwf	efgtoa@n& (0+255),b
  5067   003D8C  51A7               	movf	(efgtoa@n+1)& (0+255),w,b
  5068   003D8E  5998               	subwfb	(efgtoa@i+1)& (0+255),w,b
  5069   003D90  6FA7               	movwf	(efgtoa@n+1)& (0+255),b
  5070   003D92                     
  5071                           ; BSR set to: 0
  5072                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 850:  i = sign ==
      +                           0 ? 0 : 1;
  5073   003D92  51A1               	movf	efgtoa@sign& (0+255),w,b
  5074   003D94  A4D8               	btfss	status,2,c
  5075   003D96  EFCF  F01E         	goto	u12381
  5076   003D9A  EFD2  F01E         	goto	u12380
  5077   003D9E                     u12381:
  5078   003D9E  0E01               	movlw	1
  5079   003DA0  EFD3  F01E         	goto	u12390
  5080   003DA4                     u12380:
  5081   003DA4  0E00               	movlw	0
  5082   003DA6                     u12390:
  5083   003DA6  6F97               	movwf	efgtoa@i& (0+255),b
  5084   003DA8  6B98               	clrf	(efgtoa@i+1)& (0+255),b
  5085   003DAA                     
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 861:  if (sign) {
  5088   003DAA  51A1               	movf	efgtoa@sign& (0+255),w,b
  5089   003DAC  B4D8               	btfsc	status,2,c
  5090   003DAE  EFDB  F01E         	goto	u12401
  5091   003DB2  EFDD  F01E         	goto	u12400
  5092   003DB6                     u12401:
  5093   003DB6  EFE8  F01E         	goto	l12039
  5094   003DBA                     u12400:
  5095   003DBA                     
  5096                           ; BSR set to: 0
  5097                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 862:   dbuf[--n] 
      +                          = sign;
  5098   003DBA  07A6               	decf	efgtoa@n& (0+255),f,b
  5099   003DBC  A0D8               	btfss	status,0,c
  5100   003DBE  07A7               	decf	(efgtoa@n+1)& (0+255),f,b
  5101   003DC0  0E00               	movlw	low _dbuf
  5102   003DC2  25A6               	addwf	efgtoa@n& (0+255),w,b
  5103   003DC4  6ED9               	movwf	fsr2l,c
  5104   003DC6  0E02               	movlw	high _dbuf
  5105   003DC8  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5106   003DCA  6EDA               	movwf	fsr2h,c
  5107   003DCC  C0A1  FFDF         	movff	efgtoa@sign,indf2
  5108   003DD0                     l12039:
  5109                           
  5110                           ; BSR set to: 0
  5111                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 864:  w -= i;
  5112   003DD0  5197               	movf	efgtoa@i& (0+255),w,b
  5113   003DD2  5F91               	subwf	efgtoa@w& (0+255),f,b
  5114   003DD4  5198               	movf	(efgtoa@i+1)& (0+255),w,b
  5115   003DD6  5B92               	subwfb	(efgtoa@w+1)& (0+255),f,b
  5116   003DD8                     
  5117                           ; BSR set to: 0
  5118                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 867:     return (
      +                          void) pad(fp, &dbuf[n], w);
  5119   003DD8  C06F  F00F         	movff	efgtoa@fp,pad@fp
  5120   003DDC  0E00               	movlw	low _dbuf
  5121   003DDE  25A6               	addwf	efgtoa@n& (0+255),w,b
  5122   003DE0  6E10               	movwf	pad@buf^0,c
  5123   003DE2  0E02               	movlw	high _dbuf
  5124   003DE4  21A7               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5125   003DE6  6E11               	movwf	(pad@buf+1)^0,c
  5126   003DE8  C091  F012         	movff	efgtoa@w,pad@p
  5127   003DEC  C092  F013         	movff	efgtoa@w+1,pad@p+1
  5128   003DF0  EC28  F03A         	call	_pad	;wreg free
  5129   003DF4                     l1435:
  5130   003DF4  0012               	return		;funcret
  5131   003DF6                     __end_of_efgtoa:
  5132                           	callstack 0
  5133                           
  5134 ;; *************** function _strcpy *****************
  5135 ;; Defined at:
  5136 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\strcpy.c"
  5137 ;; Parameters:    Size  Location     Type
  5138 ;;  dest            2    0[COMRAM] PTR unsigned char 
  5139 ;;		 -> dbuf(80), 
  5140 ;;  src             1    2[COMRAM] PTR const unsigned char 
  5141 ;;		 -> STR_19(4), STR_16(4), 
  5142 ;; Auto vars:     Size  Location     Type
  5143 ;;  d               2    4[COMRAM] PTR unsigned char 
  5144 ;;		 -> dbuf(80), 
  5145 ;; Return value:  Size  Location     Type
  5146 ;;                  2    0[COMRAM] PTR unsigned char 
  5147 ;; Registers used:
  5148 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  5149 ;; Tracked objects:
  5150 ;;		On entry : 0/0
  5151 ;;		On exit  : 0/0
  5152 ;;		Unchanged: 0/0
  5153 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5154 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5155 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5156 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5157 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5158 ;;Total ram usage:        6 bytes
  5159 ;; Hardware stack levels used: 1
  5160 ;; This function calls:
  5161 ;;		Nothing
  5162 ;; This function is called by:
  5163 ;;		_efgtoa
  5164 ;; This function uses a non-reentrant model
  5165 ;;
  5166                           
  5167                           	psect	text12
  5168   0078D8                     __ptext12:
  5169                           	callstack 0
  5170   0078D8                     _strcpy:
  5171                           	callstack 24
  5172   0078D8  C001  F005         	movff	strcpy@dest,strcpy@d
  5173   0078DC  C002  F006         	movff	strcpy@dest+1,strcpy@d+1
  5174   0078E0                     l8135:
  5175   0078E0  2A03               	incf	strcpy@src^0,f,c
  5176   0078E2  0403               	decf	strcpy@src^0,w,c
  5177   0078E4  6E04               	movwf	??_strcpy^0,c
  5178   0078E6  C004  FFF6         	movff	??_strcpy,tblptrl
  5179   0078EA                     	if	1	;There is more than 1 active tblptr byte
  5180   0078EA  0E10               	movlw	high __smallconst
  5181   0078EC  6EF7               	movwf	tblptrh,c
  5182   0078EE                     	endif
  5183   0078EE                     	if	0	;tblptru may be non-zero
  5184   0078EE                     	endif
  5185   0078EE                     	if	0	;tblptru may be non-zero
  5186   0078EE                     	endif
  5187   0078EE  C005  FFD9         	movff	strcpy@d,fsr2l
  5188   0078F2  C006  FFDA         	movff	strcpy@d+1,fsr2h
  5189   0078F6  4A05               	infsnz	strcpy@d^0,f,c
  5190   0078F8  2A06               	incf	(strcpy@d+1)^0,f,c
  5191   0078FA  0008               	tblrd		*
  5192   0078FC  CFF5 FFDF          	movff	tablat,indf2
  5193   007900  50DF               	movf	indf2,w,c
  5194   007902  A4D8               	btfss	status,2,c
  5195   007904  EF86  F03C         	goto	u8061
  5196   007908  EF88  F03C         	goto	u8060
  5197   00790C                     u8061:
  5198   00790C  EF70  F03C         	goto	l8135
  5199   007910                     u8060:
  5200   007910  0012               	return		;funcret
  5201   007912                     __end_of_strcpy:
  5202                           	callstack 0
  5203                           
  5204 ;; *************** function _memcpy *****************
  5205 ;; Defined at:
  5206 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memcpy.c"
  5207 ;; Parameters:    Size  Location     Type
  5208 ;;  d1              2    0[COMRAM] PTR void 
  5209 ;;		 -> dbuf(80), 
  5210 ;;  s1              2    2[COMRAM] PTR const void 
  5211 ;;		 -> dbuf(80), 
  5212 ;;  n               2    4[COMRAM] unsigned int 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  s               2    9[COMRAM] PTR const unsigned char 
  5215 ;;		 -> dbuf(80), 
  5216 ;;  d               2    7[COMRAM] PTR unsigned char 
  5217 ;;		 -> dbuf(80), 
  5218 ;;  tmp             1    6[COMRAM] unsigned char 
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  2    0[COMRAM] PTR void 
  5221 ;; Registers used:
  5222 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5228 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5229 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5231 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5232 ;;Total ram usage:       11 bytes
  5233 ;; Hardware stack levels used: 1
  5234 ;; This function calls:
  5235 ;;		Nothing
  5236 ;; This function is called by:
  5237 ;;		_efgtoa
  5238 ;; This function uses a non-reentrant model
  5239 ;;
  5240                           
  5241                           	psect	text13
  5242   007618                     __ptext13:
  5243                           	callstack 0
  5244   007618                     _memcpy:
  5245                           	callstack 24
  5246   007618  C003  F00A         	movff	memcpy@s1,memcpy@s
  5247   00761C  C004  F00B         	movff	memcpy@s1+1,memcpy@s+1
  5248   007620  C001  F008         	movff	memcpy@d1,memcpy@d
  5249   007624  C002  F009         	movff	memcpy@d1+1,memcpy@d+1
  5250   007628  EF26  F03B         	goto	l8147
  5251   00762C                     l8139:
  5252   00762C  C00A  FFD9         	movff	memcpy@s,fsr2l
  5253   007630  C00B  FFDA         	movff	memcpy@s+1,fsr2h
  5254   007634  50DF               	movf	indf2,w,c
  5255   007636  6E07               	movwf	memcpy@tmp^0,c
  5256   007638  4A0A               	infsnz	memcpy@s^0,f,c
  5257   00763A  2A0B               	incf	(memcpy@s+1)^0,f,c
  5258   00763C  C008  FFD9         	movff	memcpy@d,fsr2l
  5259   007640  C009  FFDA         	movff	memcpy@d+1,fsr2h
  5260   007644  C007  FFDF         	movff	memcpy@tmp,indf2
  5261   007648  4A08               	infsnz	memcpy@d^0,f,c
  5262   00764A  2A09               	incf	(memcpy@d+1)^0,f,c
  5263   00764C                     l8147:
  5264   00764C  0605               	decf	memcpy@n^0,f,c
  5265   00764E  A0D8               	btfss	status,0,c
  5266   007650  0606               	decf	(memcpy@n+1)^0,f,c
  5267   007652  2805               	incf	memcpy@n^0,w,c
  5268   007654  E106               	bnz	u8071
  5269   007656  2806               	incf	(memcpy@n+1)^0,w,c
  5270   007658  A4D8               	btfss	status,2,c
  5271   00765A  EF31  F03B         	goto	u8071
  5272   00765E  EF33  F03B         	goto	u8070
  5273   007662                     u8071:
  5274   007662  EF16  F03B         	goto	l8139
  5275   007666                     u8070:
  5276   007666  0012               	return		;funcret
  5277   007668                     __end_of_memcpy:
  5278                           	callstack 0
  5279                           
  5280 ;; *************** function _labs *****************
  5281 ;; Defined at:
  5282 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\labs.c"
  5283 ;; Parameters:    Size  Location     Type
  5284 ;;  a               4    0[COMRAM] long 
  5285 ;; Auto vars:     Size  Location     Type
  5286 ;;		None
  5287 ;; Return value:  Size  Location     Type
  5288 ;;                  4    0[COMRAM] long 
  5289 ;; Registers used:
  5290 ;;		wreg, status,2, status,0
  5291 ;; Tracked objects:
  5292 ;;		On entry : 0/0
  5293 ;;		On exit  : 0/0
  5294 ;;		Unchanged: 0/0
  5295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5296 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5297 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5298 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5299 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5300 ;;Total ram usage:        8 bytes
  5301 ;; Hardware stack levels used: 1
  5302 ;; This function calls:
  5303 ;;		Nothing
  5304 ;; This function is called by:
  5305 ;;		_efgtoa
  5306 ;; This function uses a non-reentrant model
  5307 ;;
  5308                           
  5309                           	psect	text14
  5310   007572                     __ptext14:
  5311                           	callstack 0
  5312   007572                     _labs:
  5313                           	callstack 24
  5314   007572  BE04               	btfsc	(labs@a+3)^0,7,c
  5315   007574  EFBE  F03A         	goto	u5271
  5316   007578  EFC0  F03A         	goto	u5270
  5317   00757C                     u5271:
  5318   00757C  EFCA  F03A         	goto	l5605
  5319   007580                     u5270:
  5320   007580  C001  F001         	movff	labs@a,?_labs
  5321   007584  C002  F002         	movff	labs@a+1,?_labs+1
  5322   007588  C003  F003         	movff	labs@a+2,?_labs+2
  5323   00758C  C004  F004         	movff	labs@a+3,?_labs+3
  5324   007590  EFE3  F03A         	goto	l1552
  5325   007594                     l5605:
  5326   007594  C001  F005         	movff	labs@a,??_labs
  5327   007598  C002  F006         	movff	labs@a+1,??_labs+1
  5328   00759C  C003  F007         	movff	labs@a+2,??_labs+2
  5329   0075A0  C004  F008         	movff	labs@a+3,??_labs+3
  5330   0075A4  1E05               	comf	??_labs^0,f,c
  5331   0075A6  1E06               	comf	(??_labs+1)^0,f,c
  5332   0075A8  1E07               	comf	(??_labs+2)^0,f,c
  5333   0075AA  1E08               	comf	(??_labs+3)^0,f,c
  5334   0075AC  2A05               	incf	??_labs^0,f,c
  5335   0075AE  0E00               	movlw	0
  5336   0075B0  2206               	addwfc	(??_labs+1)^0,f,c
  5337   0075B2  2207               	addwfc	(??_labs+2)^0,f,c
  5338   0075B4  2208               	addwfc	(??_labs+3)^0,f,c
  5339   0075B6  C005  F001         	movff	??_labs,?_labs
  5340   0075BA  C006  F002         	movff	??_labs+1,?_labs+1
  5341   0075BE  C007  F003         	movff	??_labs+2,?_labs+2
  5342   0075C2  C008  F004         	movff	??_labs+3,?_labs+3
  5343   0075C6                     l1552:
  5344   0075C6  0012               	return		;funcret
  5345   0075C8                     __end_of_labs:
  5346                           	callstack 0
  5347                           
  5348 ;; *************** function _floorf *****************
  5349 ;; Defined at:
  5350 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\floorf.c"
  5351 ;; Parameters:    Size  Location     Type
  5352 ;;  x               4   90[COMRAM] float 
  5353 ;; Auto vars:     Size  Location     Type
  5354 ;;  u               4  106[COMRAM] struct .
  5355 ;;  m               4  100[COMRAM] unsigned long 
  5356 ;;  e               2  104[COMRAM] int 
  5357 ;; Return value:  Size  Location     Type
  5358 ;;                  4   90[COMRAM] float 
  5359 ;; Registers used:
  5360 ;;		wreg, status,2, status,0
  5361 ;; Tracked objects:
  5362 ;;		On entry : 0/0
  5363 ;;		On exit  : 0/0
  5364 ;;		Unchanged: 0/0
  5365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5366 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5367 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5368 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5369 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5370 ;;Total ram usage:       20 bytes
  5371 ;; Hardware stack levels used: 1
  5372 ;; This function calls:
  5373 ;;		Nothing
  5374 ;; This function is called by:
  5375 ;;		_efgtoa
  5376 ;; This function uses a non-reentrant model
  5377 ;;
  5378                           
  5379                           	psect	text15
  5380   005D72                     __ptext15:
  5381                           	callstack 0
  5382   005D72                     _floorf:
  5383                           	callstack 24
  5384   005D72  C1DE  F06B         	movff	floorf@F521,floorf@u
  5385   005D76  C1DF  F06C         	movff	floorf@F521+1,floorf@u+1
  5386   005D7A  C1E0  F06D         	movff	floorf@F521+2,floorf@u+2
  5387   005D7E  C1E1  F06E         	movff	floorf@F521+3,floorf@u+3
  5388   005D82  C05B  F06B         	movff	floorf@x,floorf@u
  5389   005D86  C05C  F06C         	movff	floorf@x+1,floorf@u+1
  5390   005D8A  C05D  F06D         	movff	floorf@x+2,floorf@u+2
  5391   005D8E  C05E  F06E         	movff	floorf@x+3,floorf@u+3
  5392   005D92  0E81               	movlw	129
  5393   005D94  6E5F               	movwf	??_floorf^0,c
  5394   005D96  0EFF               	movlw	255
  5395   005D98  6E60               	movwf	(??_floorf+1)^0,c
  5396   005D9A  C06B  F061         	movff	floorf@u,??_floorf+2
  5397   005D9E  C06C  F062         	movff	floorf@u+1,??_floorf+3
  5398   005DA2  C06D  F063         	movff	floorf@u+2,??_floorf+4
  5399   005DA6  C06E  F064         	movff	floorf@u+3,??_floorf+5
  5400   005DAA  0E18               	movlw	24
  5401   005DAC  EFDD  F02E         	goto	u5280
  5402   005DB0                     u5285:
  5403   005DB0  90D8               	bcf	status,0,c
  5404   005DB2  3264               	rrcf	(??_floorf+5)^0,f,c
  5405   005DB4  3263               	rrcf	(??_floorf+4)^0,f,c
  5406   005DB6  3262               	rrcf	(??_floorf+3)^0,f,c
  5407   005DB8  3261               	rrcf	(??_floorf+2)^0,f,c
  5408   005DBA                     u5280:
  5409   005DBA  2EE8               	decfsz	wreg,f,c
  5410   005DBC  EFD8  F02E         	goto	u5285
  5411   005DC0  5061               	movf	(??_floorf+2)^0,w,c
  5412   005DC2  245F               	addwf	??_floorf^0,w,c
  5413   005DC4  6E69               	movwf	floorf@e^0,c
  5414   005DC6  0E00               	movlw	0
  5415   005DC8  2060               	addwfc	(??_floorf+1)^0,w,c
  5416   005DCA  6E6A               	movwf	(floorf@e+1)^0,c
  5417   005DCC  BE6A               	btfsc	(floorf@e+1)^0,7,c
  5418   005DCE  EFF2  F02E         	goto	u5291
  5419   005DD2  506A               	movf	(floorf@e+1)^0,w,c
  5420   005DD4  E109               	bnz	u5290
  5421   005DD6  0E17               	movlw	23
  5422   005DD8  5C69               	subwf	floorf@e^0,w,c
  5423   005DDA  A0D8               	btfss	status,0,c
  5424   005DDC  EFF2  F02E         	goto	u5291
  5425   005DE0  EFF4  F02E         	goto	u5290
  5426   005DE4                     u5291:
  5427   005DE4  EFFE  F02E         	goto	l5615
  5428   005DE8                     u5290:
  5429   005DE8                     l5613:
  5430   005DE8  C05B  F05B         	movff	floorf@x,?_floorf
  5431   005DEC  C05C  F05C         	movff	floorf@x+1,?_floorf+1
  5432   005DF0  C05D  F05D         	movff	floorf@x+2,?_floorf+2
  5433   005DF4  C05E  F05E         	movff	floorf@x+3,?_floorf+3
  5434   005DF8  EFC1  F02F         	goto	l1538
  5435   005DFC                     l5615:
  5436   005DFC  BE6A               	btfsc	(floorf@e+1)^0,7,c
  5437   005DFE  EF03  F02F         	goto	u5301
  5438   005E02  EF05  F02F         	goto	u5300
  5439   005E06                     u5301:
  5440   005E06  EF75  F02F         	goto	l5625
  5441   005E0A                     u5300:
  5442   005E0A  C069  F05F         	movff	floorf@e,??_floorf
  5443   005E0E  0EFF               	movlw	255
  5444   005E10  6E60               	movwf	(??_floorf+1)^0,c
  5445   005E12  0EFF               	movlw	255
  5446   005E14  6E61               	movwf	(??_floorf+2)^0,c
  5447   005E16  0E7F               	movlw	127
  5448   005E18  6E62               	movwf	(??_floorf+3)^0,c
  5449   005E1A  0E00               	movlw	0
  5450   005E1C  6E63               	movwf	(??_floorf+4)^0,c
  5451   005E1E                     u5315:
  5452   005E1E  665F               	tstfsz	??_floorf^0,c
  5453   005E20  EF14  F02F         	goto	u5316
  5454   005E24  EF1C  F02F         	goto	u5317
  5455   005E28                     u5316:
  5456   005E28  3463               	rlcf	(??_floorf+4)^0,w,c
  5457   005E2A  3263               	rrcf	(??_floorf+4)^0,f,c
  5458   005E2C  3262               	rrcf	(??_floorf+3)^0,f,c
  5459   005E2E  3261               	rrcf	(??_floorf+2)^0,f,c
  5460   005E30  3260               	rrcf	(??_floorf+1)^0,f,c
  5461   005E32  2E5F               	decfsz	??_floorf^0,f,c
  5462   005E34  EF0F  F02F         	goto	u5315
  5463   005E38                     u5317:
  5464   005E38  C060  F065         	movff	??_floorf+1,floorf@m
  5465   005E3C  C061  F066         	movff	??_floorf+2,floorf@m+1
  5466   005E40  C062  F067         	movff	??_floorf+3,floorf@m+2
  5467   005E44  C063  F068         	movff	??_floorf+4,floorf@m+3
  5468   005E48  5065               	movf	floorf@m^0,w,c
  5469   005E4A  146B               	andwf	floorf@u^0,w,c
  5470   005E4C  6E5F               	movwf	??_floorf^0,c
  5471   005E4E  5066               	movf	(floorf@m+1)^0,w,c
  5472   005E50  146C               	andwf	(floorf@u+1)^0,w,c
  5473   005E52  6E60               	movwf	(??_floorf+1)^0,c
  5474   005E54  5067               	movf	(floorf@m+2)^0,w,c
  5475   005E56  146D               	andwf	(floorf@u+2)^0,w,c
  5476   005E58  6E61               	movwf	(??_floorf+2)^0,c
  5477   005E5A  5068               	movf	(floorf@m+3)^0,w,c
  5478   005E5C  146E               	andwf	(floorf@u+3)^0,w,c
  5479   005E5E  6E62               	movwf	(??_floorf+3)^0,c
  5480   005E60  505F               	movf	??_floorf^0,w,c
  5481   005E62  1060               	iorwf	(??_floorf+1)^0,w,c
  5482   005E64  1061               	iorwf	(??_floorf+2)^0,w,c
  5483   005E66  1062               	iorwf	(??_floorf+3)^0,w,c
  5484   005E68  A4D8               	btfss	status,2,c
  5485   005E6A  EF39  F02F         	goto	u5321
  5486   005E6E  EF3B  F02F         	goto	u5320
  5487   005E72                     u5321:
  5488   005E72  EF3D  F02F         	goto	l5621
  5489   005E76                     u5320:
  5490   005E76  EFF4  F02E         	goto	l5613
  5491   005E7A                     l5621:
  5492   005E7A  C06B  F05F         	movff	floorf@u,??_floorf
  5493   005E7E  C06C  F060         	movff	floorf@u+1,??_floorf+1
  5494   005E82  C06D  F061         	movff	floorf@u+2,??_floorf+2
  5495   005E86  C06E  F062         	movff	floorf@u+3,??_floorf+3
  5496   005E8A  0E20               	movlw	32
  5497   005E8C  EF4D  F02F         	goto	u5330
  5498   005E90                     u5335:
  5499   005E90  90D8               	bcf	status,0,c
  5500   005E92  3262               	rrcf	(??_floorf+3)^0,f,c
  5501   005E94  3261               	rrcf	(??_floorf+2)^0,f,c
  5502   005E96  3260               	rrcf	(??_floorf+1)^0,f,c
  5503   005E98  325F               	rrcf	??_floorf^0,f,c
  5504   005E9A                     u5330:
  5505   005E9A  2EE8               	decfsz	wreg,f,c
  5506   005E9C  EF48  F02F         	goto	u5335
  5507   005EA0  505F               	movf	??_floorf^0,w,c
  5508   005EA2  1060               	iorwf	(??_floorf+1)^0,w,c
  5509   005EA4  1061               	iorwf	(??_floorf+2)^0,w,c
  5510   005EA6  1062               	iorwf	(??_floorf+3)^0,w,c
  5511   005EA8  B4D8               	btfsc	status,2,c
  5512   005EAA  EF59  F02F         	goto	u5341
  5513   005EAE  EF5B  F02F         	goto	u5340
  5514   005EB2                     u5341:
  5515   005EB2  EF63  F02F         	goto	l1541
  5516   005EB6                     u5340:
  5517   005EB6  5065               	movf	floorf@m^0,w,c
  5518   005EB8  266B               	addwf	floorf@u^0,f,c
  5519   005EBA  5066               	movf	(floorf@m+1)^0,w,c
  5520   005EBC  226C               	addwfc	(floorf@u+1)^0,f,c
  5521   005EBE  5067               	movf	(floorf@m+2)^0,w,c
  5522   005EC0  226D               	addwfc	(floorf@u+2)^0,f,c
  5523   005EC2  5068               	movf	(floorf@m+3)^0,w,c
  5524   005EC4  226E               	addwfc	(floorf@u+3)^0,f,c
  5525   005EC6                     l1541:
  5526   005EC6  1C65               	comf	floorf@m^0,w,c
  5527   005EC8  6E5F               	movwf	??_floorf^0,c
  5528   005ECA  1C66               	comf	(floorf@m+1)^0,w,c
  5529   005ECC  6E60               	movwf	(??_floorf+1)^0,c
  5530   005ECE  1C67               	comf	(floorf@m+2)^0,w,c
  5531   005ED0  6E61               	movwf	(??_floorf+2)^0,c
  5532   005ED2  1C68               	comf	(floorf@m+3)^0,w,c
  5533   005ED4  6E62               	movwf	(??_floorf+3)^0,c
  5534   005ED6  505F               	movf	??_floorf^0,w,c
  5535   005ED8  166B               	andwf	floorf@u^0,f,c
  5536   005EDA  5060               	movf	(??_floorf+1)^0,w,c
  5537   005EDC  166C               	andwf	(floorf@u+1)^0,f,c
  5538   005EDE  5061               	movf	(??_floorf+2)^0,w,c
  5539   005EE0  166D               	andwf	(floorf@u+2)^0,f,c
  5540   005EE2  5062               	movf	(??_floorf+3)^0,w,c
  5541   005EE4  166E               	andwf	(floorf@u+3)^0,f,c
  5542   005EE6  EFB9  F02F         	goto	l5633
  5543   005EEA                     l5625:
  5544   005EEA  C06B  F05F         	movff	floorf@u,??_floorf
  5545   005EEE  C06C  F060         	movff	floorf@u+1,??_floorf+1
  5546   005EF2  C06D  F061         	movff	floorf@u+2,??_floorf+2
  5547   005EF6  C06E  F062         	movff	floorf@u+3,??_floorf+3
  5548   005EFA  0E20               	movlw	32
  5549   005EFC  EF85  F02F         	goto	u5350
  5550   005F00                     u5355:
  5551   005F00  90D8               	bcf	status,0,c
  5552   005F02  3262               	rrcf	(??_floorf+3)^0,f,c
  5553   005F04  3261               	rrcf	(??_floorf+2)^0,f,c
  5554   005F06  3260               	rrcf	(??_floorf+1)^0,f,c
  5555   005F08  325F               	rrcf	??_floorf^0,f,c
  5556   005F0A                     u5350:
  5557   005F0A  2EE8               	decfsz	wreg,f,c
  5558   005F0C  EF80  F02F         	goto	u5355
  5559   005F10  505F               	movf	??_floorf^0,w,c
  5560   005F12  1060               	iorwf	(??_floorf+1)^0,w,c
  5561   005F14  1061               	iorwf	(??_floorf+2)^0,w,c
  5562   005F16  1062               	iorwf	(??_floorf+3)^0,w,c
  5563   005F18  A4D8               	btfss	status,2,c
  5564   005F1A  EF91  F02F         	goto	u5361
  5565   005F1E  EF93  F02F         	goto	u5360
  5566   005F22                     u5361:
  5567   005F22  EF9D  F02F         	goto	l5629
  5568   005F26                     u5360:
  5569   005F26  0E00               	movlw	0
  5570   005F28  6E6B               	movwf	floorf@u^0,c
  5571   005F2A  0E00               	movlw	0
  5572   005F2C  6E6C               	movwf	(floorf@u+1)^0,c
  5573   005F2E  0E00               	movlw	0
  5574   005F30  6E6D               	movwf	(floorf@u+2)^0,c
  5575   005F32  0E00               	movlw	0
  5576   005F34  6E6E               	movwf	(floorf@u+3)^0,c
  5577   005F36  EFB9  F02F         	goto	l5633
  5578   005F3A                     l5629:
  5579   005F3A  90D8               	bcf	status,0,c
  5580   005F3C  346B               	rlcf	floorf@u^0,w,c
  5581   005F3E  6E5F               	movwf	??_floorf^0,c
  5582   005F40  346C               	rlcf	(floorf@u+1)^0,w,c
  5583   005F42  6E60               	movwf	(??_floorf+1)^0,c
  5584   005F44  346D               	rlcf	(floorf@u+2)^0,w,c
  5585   005F46  6E61               	movwf	(??_floorf+2)^0,c
  5586   005F48  346E               	rlcf	(floorf@u+3)^0,w,c
  5587   005F4A  6E62               	movwf	(??_floorf+3)^0,c
  5588   005F4C  505F               	movf	??_floorf^0,w,c
  5589   005F4E  1060               	iorwf	(??_floorf+1)^0,w,c
  5590   005F50  1061               	iorwf	(??_floorf+2)^0,w,c
  5591   005F52  1062               	iorwf	(??_floorf+3)^0,w,c
  5592   005F54  B4D8               	btfsc	status,2,c
  5593   005F56  EFAF  F02F         	goto	u5371
  5594   005F5A  EFB1  F02F         	goto	u5370
  5595   005F5E                     u5371:
  5596   005F5E  EFB9  F02F         	goto	l5633
  5597   005F62                     u5370:
  5598   005F62  0E00               	movlw	0
  5599   005F64  6E6B               	movwf	floorf@u^0,c
  5600   005F66  0E00               	movlw	0
  5601   005F68  6E6C               	movwf	(floorf@u+1)^0,c
  5602   005F6A  0E80               	movlw	128
  5603   005F6C  6E6D               	movwf	(floorf@u+2)^0,c
  5604   005F6E  0EBF               	movlw	191
  5605   005F70  6E6E               	movwf	(floorf@u+3)^0,c
  5606   005F72                     l5633:
  5607   005F72  C06B  F05B         	movff	floorf@u,?_floorf
  5608   005F76  C06C  F05C         	movff	floorf@u+1,?_floorf+1
  5609   005F7A  C06D  F05D         	movff	floorf@u+2,?_floorf+2
  5610   005F7E  C06E  F05E         	movff	floorf@u+3,?_floorf+3
  5611   005F82                     l1538:
  5612   005F82  0012               	return		;funcret
  5613   005F84                     __end_of_floorf:
  5614                           	callstack 0
  5615                           
  5616 ;; *************** function ___fpclassifyf *****************
  5617 ;; Defined at:
  5618 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\__fpclassifyf.c"
  5619 ;; Parameters:    Size  Location     Type
  5620 ;;  x               4    0[COMRAM] float 
  5621 ;; Auto vars:     Size  Location     Type
  5622 ;;  u               4   10[COMRAM] struct .
  5623 ;;  e               2    8[COMRAM] int 
  5624 ;; Return value:  Size  Location     Type
  5625 ;;                  2    0[COMRAM] int 
  5626 ;; Registers used:
  5627 ;;		wreg, status,2, status,0
  5628 ;; Tracked objects:
  5629 ;;		On entry : 0/0
  5630 ;;		On exit  : 0/0
  5631 ;;		Unchanged: 0/0
  5632 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5633 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5634 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5635 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5636 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5637 ;;Total ram usage:       14 bytes
  5638 ;; Hardware stack levels used: 1
  5639 ;; This function calls:
  5640 ;;		Nothing
  5641 ;; This function is called by:
  5642 ;;		_efgtoa
  5643 ;; This function uses a non-reentrant model
  5644 ;;
  5645                           
  5646                           	psect	text16
  5647   006A72                     __ptext16:
  5648                           	callstack 0
  5649   006A72                     ___fpclassifyf:
  5650                           	callstack 24
  5651   006A72  C1E2  F00B         	movff	___fpclassifyf@F465,___fpclassifyf@u
  5652   006A76  C1E3  F00C         	movff	___fpclassifyf@F465+1,___fpclassifyf@u+1
  5653   006A7A  C1E4  F00D         	movff	___fpclassifyf@F465+2,___fpclassifyf@u+2
  5654   006A7E  C1E5  F00E         	movff	___fpclassifyf@F465+3,___fpclassifyf@u+3
  5655   006A82  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  5656   006A86  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  5657   006A8A  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  5658   006A8E  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  5659   006A92  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5660   006A96  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5661   006A9A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5662   006A9E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5663   006AA2  0E18               	movlw	24
  5664   006AA4  EF59  F035         	goto	u5190
  5665   006AA8                     u5195:
  5666   006AA8  90D8               	bcf	status,0,c
  5667   006AAA  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  5668   006AAC  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  5669   006AAE  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  5670   006AB0  3205               	rrcf	??___fpclassifyf^0,f,c
  5671   006AB2                     u5190:
  5672   006AB2  2EE8               	decfsz	wreg,f,c
  5673   006AB4  EF54  F035         	goto	u5195
  5674   006AB8  5005               	movf	??___fpclassifyf^0,w,c
  5675   006ABA  6E09               	movwf	___fpclassifyf@e^0,c
  5676   006ABC  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  5677   006ABE  5009               	movf	___fpclassifyf@e^0,w,c
  5678   006AC0  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5679   006AC2  A4D8               	btfss	status,2,c
  5680   006AC4  EF66  F035         	goto	u5201
  5681   006AC8  EF68  F035         	goto	u5200
  5682   006ACC                     u5201:
  5683   006ACC  EF88  F035         	goto	l5587
  5684   006AD0                     u5200:
  5685   006AD0  90D8               	bcf	status,0,c
  5686   006AD2  340B               	rlcf	___fpclassifyf@u^0,w,c
  5687   006AD4  6E05               	movwf	??___fpclassifyf^0,c
  5688   006AD6  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  5689   006AD8  6E06               	movwf	(??___fpclassifyf+1)^0,c
  5690   006ADA  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  5691   006ADC  6E07               	movwf	(??___fpclassifyf+2)^0,c
  5692   006ADE  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  5693   006AE0  6E08               	movwf	(??___fpclassifyf+3)^0,c
  5694   006AE2  5005               	movf	??___fpclassifyf^0,w,c
  5695   006AE4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5696   006AE6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5697   006AE8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5698   006AEA  A4D8               	btfss	status,2,c
  5699   006AEC  EF7A  F035         	goto	u5211
  5700   006AF0  EF7C  F035         	goto	u5210
  5701   006AF4                     u5211:
  5702   006AF4  EF82  F035         	goto	l5583
  5703   006AF8                     u5210:
  5704   006AF8  0E00               	movlw	0
  5705   006AFA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5706   006AFC  0E02               	movlw	2
  5707   006AFE  6E01               	movwf	?___fpclassifyf^0,c
  5708   006B00  EFB7  F035         	goto	l1524
  5709   006B04                     l5583:
  5710   006B04  0E00               	movlw	0
  5711   006B06  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5712   006B08  0E03               	movlw	3
  5713   006B0A  6E01               	movwf	?___fpclassifyf^0,c
  5714   006B0C  EFB7  F035         	goto	l1524
  5715   006B10                     l5587:
  5716   006B10  2809               	incf	___fpclassifyf@e^0,w,c
  5717   006B12  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  5718   006B14  A4D8               	btfss	status,2,c
  5719   006B16  EF8F  F035         	goto	u5221
  5720   006B1A  EF91  F035         	goto	u5220
  5721   006B1E                     u5221:
  5722   006B1E  EFB3  F035         	goto	l5593
  5723   006B22                     u5220:
  5724   006B22  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  5725   006B26  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  5726   006B2A  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  5727   006B2E  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  5728   006B32  0E09               	movlw	9
  5729   006B34                     u5235:
  5730   006B34  90D8               	bcf	status,0,c
  5731   006B36  3605               	rlcf	??___fpclassifyf^0,f,c
  5732   006B38  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  5733   006B3A  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  5734   006B3C  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  5735   006B3E  2EE8               	decfsz	wreg,f,c
  5736   006B40  EF9A  F035         	goto	u5235
  5737   006B44  5005               	movf	??___fpclassifyf^0,w,c
  5738   006B46  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  5739   006B48  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  5740   006B4A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  5741   006B4C  B4D8               	btfsc	status,2,c
  5742   006B4E  EFAB  F035         	goto	u5241
  5743   006B52  EFAE  F035         	goto	u5240
  5744   006B56                     u5241:
  5745   006B56  0E01               	movlw	1
  5746   006B58  EFAF  F035         	goto	u5250
  5747   006B5C                     u5240:
  5748   006B5C  0E00               	movlw	0
  5749   006B5E                     u5250:
  5750   006B5E  6E01               	movwf	?___fpclassifyf^0,c
  5751   006B60  6A02               	clrf	(?___fpclassifyf+1)^0,c
  5752   006B62  EFB7  F035         	goto	l1524
  5753   006B66                     l5593:
  5754   006B66  0E00               	movlw	0
  5755   006B68  6E02               	movwf	(?___fpclassifyf+1)^0,c
  5756   006B6A  0E04               	movlw	4
  5757   006B6C  6E01               	movwf	?___fpclassifyf^0,c
  5758   006B6E                     l1524:
  5759   006B6E  0012               	return		;funcret
  5760   006B70                     __end_of___fpclassifyf:
  5761                           	callstack 0
  5762                           
  5763 ;; *************** function ___fltol *****************
  5764 ;; Defined at:
  5765 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fltol.c"
  5766 ;; Parameters:    Size  Location     Type
  5767 ;;  f1              4    0[COMRAM] int 
  5768 ;; Auto vars:     Size  Location     Type
  5769 ;;  exp1            1    9[COMRAM] unsigned char 
  5770 ;;  sign1           1    8[COMRAM] unsigned char 
  5771 ;; Return value:  Size  Location     Type
  5772 ;;                  4    0[COMRAM] long 
  5773 ;; Registers used:
  5774 ;;		wreg, status,2, status,0
  5775 ;; Tracked objects:
  5776 ;;		On entry : 0/0
  5777 ;;		On exit  : 0/0
  5778 ;;		Unchanged: 0/0
  5779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5780 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5781 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5782 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5783 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5784 ;;Total ram usage:       10 bytes
  5785 ;; Hardware stack levels used: 1
  5786 ;; This function calls:
  5787 ;;		Nothing
  5788 ;; This function is called by:
  5789 ;;		_send_the_result_to_LCD
  5790 ;;		_efgtoa
  5791 ;; This function uses a non-reentrant model
  5792 ;;
  5793                           
  5794                           	psect	text17
  5795   006868                     __ptext17:
  5796                           	callstack 0
  5797   006868                     ___fltol:
  5798                           	callstack 24
  5799   006868  3403               	rlcf	(___fltol@f1+2)^0,w,c
  5800   00686A  3404               	rlcf	(___fltol@f1+3)^0,w,c
  5801   00686C  6E0A               	movwf	___fltol@exp1^0,c
  5802   00686E  500A               	movf	___fltol@exp1^0,w,c
  5803   006870  A4D8               	btfss	status,2,c
  5804   006872  EF3D  F034         	goto	u5091
  5805   006876  EF3F  F034         	goto	u5090
  5806   00687A                     u5091:
  5807   00687A  EF49  F034         	goto	l5521
  5808   00687E                     u5090:
  5809   00687E                     l5517:
  5810   00687E  0E00               	movlw	0
  5811   006880  6E01               	movwf	?___fltol^0,c
  5812   006882  0E00               	movlw	0
  5813   006884  6E02               	movwf	(?___fltol+1)^0,c
  5814   006886  0E00               	movlw	0
  5815   006888  6E03               	movwf	(?___fltol+2)^0,c
  5816   00688A  0E00               	movlw	0
  5817   00688C  6E04               	movwf	(?___fltol+3)^0,c
  5818   00688E  EFB6  F034         	goto	l986
  5819   006892                     l5521:
  5820   006892  C001  F005         	movff	___fltol@f1,??___fltol
  5821   006896  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  5822   00689A  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  5823   00689E  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  5824   0068A2  0E20               	movlw	32
  5825   0068A4  EF59  F034         	goto	u5100
  5826   0068A8                     u5105:
  5827   0068A8  90D8               	bcf	status,0,c
  5828   0068AA  3208               	rrcf	(??___fltol+3)^0,f,c
  5829   0068AC  3207               	rrcf	(??___fltol+2)^0,f,c
  5830   0068AE  3206               	rrcf	(??___fltol+1)^0,f,c
  5831   0068B0  3205               	rrcf	??___fltol^0,f,c
  5832   0068B2                     u5100:
  5833   0068B2  2EE8               	decfsz	wreg,f,c
  5834   0068B4  EF54  F034         	goto	u5105
  5835   0068B8  5005               	movf	??___fltol^0,w,c
  5836   0068BA  6E09               	movwf	___fltol@sign1^0,c
  5837   0068BC  8E03               	bsf	(___fltol@f1+2)^0,7,c
  5838   0068BE  0EFF               	movlw	255
  5839   0068C0  1601               	andwf	___fltol@f1^0,f,c
  5840   0068C2  0EFF               	movlw	255
  5841   0068C4  1602               	andwf	(___fltol@f1+1)^0,f,c
  5842   0068C6  0EFF               	movlw	255
  5843   0068C8  1603               	andwf	(___fltol@f1+2)^0,f,c
  5844   0068CA  0E00               	movlw	0
  5845   0068CC  1604               	andwf	(___fltol@f1+3)^0,f,c
  5846   0068CE  0E96               	movlw	150
  5847   0068D0  5E0A               	subwf	___fltol@exp1^0,f,c
  5848   0068D2  BE0A               	btfsc	___fltol@exp1^0,7,c
  5849   0068D4  EF70  F034         	goto	u5110
  5850   0068D8  EF6E  F034         	goto	u5111
  5851   0068DC                     u5111:
  5852   0068DC  EF86  F034         	goto	l5541
  5853   0068E0                     u5110:
  5854   0068E0  500A               	movf	___fltol@exp1^0,w,c
  5855   0068E2  0A80               	xorlw	128
  5856   0068E4  0F97               	addlw	151
  5857   0068E6  B0D8               	btfsc	status,0,c
  5858   0068E8  EF78  F034         	goto	u5121
  5859   0068EC  EF7A  F034         	goto	u5120
  5860   0068F0                     u5121:
  5861   0068F0  EF7C  F034         	goto	l5537
  5862   0068F4                     u5120:
  5863   0068F4  EF3F  F034         	goto	l5517
  5864   0068F8                     l5537:
  5865   0068F8  90D8               	bcf	status,0,c
  5866   0068FA  3204               	rrcf	(___fltol@f1+3)^0,f,c
  5867   0068FC  3203               	rrcf	(___fltol@f1+2)^0,f,c
  5868   0068FE  3202               	rrcf	(___fltol@f1+1)^0,f,c
  5869   006900  3201               	rrcf	___fltol@f1^0,f,c
  5870   006902  3E0A               	incfsz	___fltol@exp1^0,f,c
  5871   006904  EF7C  F034         	goto	l5537
  5872   006908  EF9E  F034         	goto	l5551
  5873   00690C                     l5541:
  5874   00690C  0E1F               	movlw	31
  5875   00690E  640A               	cpfsgt	___fltol@exp1^0,c
  5876   006910  EF8C  F034         	goto	u5131
  5877   006914  EF8E  F034         	goto	u5130
  5878   006918                     u5131:
  5879   006918  EF96  F034         	goto	l5549
  5880   00691C                     u5130:
  5881   00691C  EF3F  F034         	goto	l5517
  5882   006920                     l5547:
  5883   006920  90D8               	bcf	status,0,c
  5884   006922  3601               	rlcf	___fltol@f1^0,f,c
  5885   006924  3602               	rlcf	(___fltol@f1+1)^0,f,c
  5886   006926  3603               	rlcf	(___fltol@f1+2)^0,f,c
  5887   006928  3604               	rlcf	(___fltol@f1+3)^0,f,c
  5888   00692A  060A               	decf	___fltol@exp1^0,f,c
  5889   00692C                     l5549:
  5890   00692C  500A               	movf	___fltol@exp1^0,w,c
  5891   00692E  A4D8               	btfss	status,2,c
  5892   006930  EF9C  F034         	goto	u5141
  5893   006934  EF9E  F034         	goto	u5140
  5894   006938                     u5141:
  5895   006938  EF90  F034         	goto	l5547
  5896   00693C                     u5140:
  5897   00693C                     l5551:
  5898   00693C  5009               	movf	___fltol@sign1^0,w,c
  5899   00693E  B4D8               	btfsc	status,2,c
  5900   006940  EFA4  F034         	goto	u5151
  5901   006944  EFA6  F034         	goto	u5150
  5902   006948                     u5151:
  5903   006948  EFAE  F034         	goto	l5555
  5904   00694C                     u5150:
  5905   00694C  1E04               	comf	(___fltol@f1+3)^0,f,c
  5906   00694E  1E03               	comf	(___fltol@f1+2)^0,f,c
  5907   006950  1E02               	comf	(___fltol@f1+1)^0,f,c
  5908   006952  6C01               	negf	___fltol@f1^0,c
  5909   006954  0E00               	movlw	0
  5910   006956  2202               	addwfc	(___fltol@f1+1)^0,f,c
  5911   006958  2203               	addwfc	(___fltol@f1+2)^0,f,c
  5912   00695A  2204               	addwfc	(___fltol@f1+3)^0,f,c
  5913   00695C                     l5555:
  5914   00695C  C001  F001         	movff	___fltol@f1,?___fltol
  5915   006960  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  5916   006964  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  5917   006968  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  5918   00696C                     l986:
  5919   00696C  0012               	return		;funcret
  5920   00696E                     __end_of___fltol:
  5921                           	callstack 0
  5922                           
  5923 ;; *************** function ___fleq *****************
  5924 ;; Defined at:
  5925 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\fleq.c"
  5926 ;; Parameters:    Size  Location     Type
  5927 ;;  ff1             4    0[COMRAM] long 
  5928 ;;  ff2             4    4[COMRAM] long 
  5929 ;; Auto vars:     Size  Location     Type
  5930 ;;		None
  5931 ;; Return value:  Size  Location     Type
  5932 ;;		None               void
  5933 ;; Registers used:
  5934 ;;		wreg, status,2, status,0
  5935 ;; Tracked objects:
  5936 ;;		On entry : 0/0
  5937 ;;		On exit  : 0/0
  5938 ;;		Unchanged: 0/0
  5939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5940 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5941 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5942 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5943 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5944 ;;Total ram usage:       12 bytes
  5945 ;; Hardware stack levels used: 1
  5946 ;; This function calls:
  5947 ;;		Nothing
  5948 ;; This function is called by:
  5949 ;;		_efgtoa
  5950 ;; This function uses a non-reentrant model
  5951 ;;
  5952                           
  5953                           	psect	text18
  5954   006F58                     __ptext18:
  5955                           	callstack 0
  5956   006F58                     ___fleq:
  5957                           	callstack 24
  5958   006F58  0E00               	movlw	0
  5959   006F5A  1401               	andwf	___fleq@ff1^0,w,c
  5960   006F5C  6E09               	movwf	??___fleq^0,c
  5961   006F5E  0E00               	movlw	0
  5962   006F60  1402               	andwf	(___fleq@ff1+1)^0,w,c
  5963   006F62  6E0A               	movwf	(??___fleq+1)^0,c
  5964   006F64  0E80               	movlw	128
  5965   006F66  1403               	andwf	(___fleq@ff1+2)^0,w,c
  5966   006F68  6E0B               	movwf	(??___fleq+2)^0,c
  5967   006F6A  0E7F               	movlw	127
  5968   006F6C  1404               	andwf	(___fleq@ff1+3)^0,w,c
  5969   006F6E  6E0C               	movwf	(??___fleq+3)^0,c
  5970   006F70  5009               	movf	??___fleq^0,w,c
  5971   006F72  100A               	iorwf	(??___fleq+1)^0,w,c
  5972   006F74  100B               	iorwf	(??___fleq+2)^0,w,c
  5973   006F76  100C               	iorwf	(??___fleq+3)^0,w,c
  5974   006F78  A4D8               	btfss	status,2,c
  5975   006F7A  EFC1  F037         	goto	u5001
  5976   006F7E  EFC3  F037         	goto	u5000
  5977   006F82                     u5001:
  5978   006F82  EFCB  F037         	goto	l5473
  5979   006F86                     u5000:
  5980   006F86  0E00               	movlw	0
  5981   006F88  6E01               	movwf	___fleq@ff1^0,c
  5982   006F8A  0E00               	movlw	0
  5983   006F8C  6E02               	movwf	(___fleq@ff1+1)^0,c
  5984   006F8E  0E00               	movlw	0
  5985   006F90  6E03               	movwf	(___fleq@ff1+2)^0,c
  5986   006F92  0E00               	movlw	0
  5987   006F94  6E04               	movwf	(___fleq@ff1+3)^0,c
  5988   006F96                     l5473:
  5989   006F96  0E00               	movlw	0
  5990   006F98  1405               	andwf	___fleq@ff2^0,w,c
  5991   006F9A  6E09               	movwf	??___fleq^0,c
  5992   006F9C  0E00               	movlw	0
  5993   006F9E  1406               	andwf	(___fleq@ff2+1)^0,w,c
  5994   006FA0  6E0A               	movwf	(??___fleq+1)^0,c
  5995   006FA2  0E80               	movlw	128
  5996   006FA4  1407               	andwf	(___fleq@ff2+2)^0,w,c
  5997   006FA6  6E0B               	movwf	(??___fleq+2)^0,c
  5998   006FA8  0E7F               	movlw	127
  5999   006FAA  1408               	andwf	(___fleq@ff2+3)^0,w,c
  6000   006FAC  6E0C               	movwf	(??___fleq+3)^0,c
  6001   006FAE  5009               	movf	??___fleq^0,w,c
  6002   006FB0  100A               	iorwf	(??___fleq+1)^0,w,c
  6003   006FB2  100B               	iorwf	(??___fleq+2)^0,w,c
  6004   006FB4  100C               	iorwf	(??___fleq+3)^0,w,c
  6005   006FB6  A4D8               	btfss	status,2,c
  6006   006FB8  EFE0  F037         	goto	u5011
  6007   006FBC  EFE2  F037         	goto	u5010
  6008   006FC0                     u5011:
  6009   006FC0  EFEA  F037         	goto	l5477
  6010   006FC4                     u5010:
  6011   006FC4  0E00               	movlw	0
  6012   006FC6  6E05               	movwf	___fleq@ff2^0,c
  6013   006FC8  0E00               	movlw	0
  6014   006FCA  6E06               	movwf	(___fleq@ff2+1)^0,c
  6015   006FCC  0E00               	movlw	0
  6016   006FCE  6E07               	movwf	(___fleq@ff2+2)^0,c
  6017   006FD0  0E00               	movlw	0
  6018   006FD2  6E08               	movwf	(___fleq@ff2+3)^0,c
  6019   006FD4                     l5477:
  6020   006FD4  5005               	movf	___fleq@ff2^0,w,c
  6021   006FD6  1801               	xorwf	___fleq@ff1^0,w,c
  6022   006FD8  E10F               	bnz	u5020
  6023   006FDA  5006               	movf	(___fleq@ff2+1)^0,w,c
  6024   006FDC  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  6025   006FDE  E10C               	bnz	u5020
  6026   006FE0  5007               	movf	(___fleq@ff2+2)^0,w,c
  6027   006FE2  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  6028   006FE4  E109               	bnz	u5020
  6029   006FE6  5008               	movf	(___fleq@ff2+3)^0,w,c
  6030   006FE8  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  6031   006FEA  B4D8               	btfsc	status,2,c
  6032   006FEC  EFFA  F037         	goto	u5021
  6033   006FF0  EFFC  F037         	goto	u5020
  6034   006FF4                     u5021:
  6035   006FF4  EFFF  F037         	goto	l5481
  6036   006FF8                     u5020:
  6037   006FF8  90D8               	bcf	status,0,c
  6038   006FFA  EF00  F038         	goto	l948
  6039   006FFE                     l5481:
  6040   006FFE  80D8               	bsf	status,0,c
  6041   007000                     l948:
  6042   007000  0012               	return		;funcret
  6043   007002                     __end_of___fleq:
  6044                           	callstack 0
  6045                           
  6046 ;; *************** function _dtoa *****************
  6047 ;; Defined at:
  6048 ;;		line 513 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  fp              1   22[COMRAM] PTR struct _IO_FILE
  6051 ;;		 -> sprintf@f(12), 
  6052 ;;  d               2   23[COMRAM] int 
  6053 ;; Auto vars:     Size  Location     Type
  6054 ;;  i               2   32[COMRAM] int 
  6055 ;;  p               2   29[COMRAM] int 
  6056 ;;  w               2   27[COMRAM] int 
  6057 ;;  s               1   31[COMRAM] unsigned char 
  6058 ;; Return value:  Size  Location     Type
  6059 ;;                  1    wreg      void 
  6060 ;; Registers used:
  6061 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6062 ;; Tracked objects:
  6063 ;;		On entry : 0/0
  6064 ;;		On exit  : 0/0
  6065 ;;		Unchanged: 0/0
  6066 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6067 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6068 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;Total ram usage:       12 bytes
  6072 ;; Hardware stack levels used: 1
  6073 ;; Hardware stack levels required when called: 4
  6074 ;; This function calls:
  6075 ;;		___awdiv
  6076 ;;		___awmod
  6077 ;;		_abs
  6078 ;;		_pad
  6079 ;; This function is called by:
  6080 ;;		_vfpfcnvrt
  6081 ;; This function uses a non-reentrant model
  6082 ;;
  6083                           
  6084                           	psect	text19
  6085   006138                     __ptext19:
  6086                           	callstack 0
  6087   006138                     _dtoa:
  6088                           	callstack 21
  6089   006138                     
  6090                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 513: static void 
      +                          dtoa(FILE *fp, vfpf_sint_t d);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\commo
      +                          n\doprnt.c: 514: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           515:  char s;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 516
      +                          :     int i, w;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 51
      +                          8:  int p;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 524:   
      +                            s = d < 0 ? 1 : 0;
  6091   006138  BE19               	btfsc	(dtoa@d+1)^0,7,c
  6092   00613A  EFA1  F030         	goto	u8081
  6093   00613E  EFA4  F030         	goto	u8080
  6094   006142                     u8081:
  6095   006142  0E01               	movlw	1
  6096   006144  EFA5  F030         	goto	u8090
  6097   006148                     u8080:
  6098   006148  0E00               	movlw	0
  6099   00614A                     u8090:
  6100   00614A  6E20               	movwf	dtoa@s^0,c
  6101                           
  6102                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 533:     p = (0 <
      +                          = prec) ? prec : 1;
  6103   00614C  0100               	movlb	0	; () banked
  6104   00614E  BFD5               	btfsc	(_prec+1)& (0+255),7,b
  6105   006150  EFAE  F030         	goto	u8100
  6106   006154  EFAC  F030         	goto	u8101
  6107   006158                     u8101:
  6108   006158  EFB4  F030         	goto	l1410
  6109   00615C                     u8100:
  6110   00615C                     
  6111                           ; BSR set to: 0
  6112   00615C  0E00               	movlw	0
  6113   00615E  6E1F               	movwf	(dtoa@p+1)^0,c
  6114   006160  0E01               	movlw	1
  6115   006162  6E1E               	movwf	dtoa@p^0,c
  6116   006164  EFB8  F030         	goto	l1412
  6117   006168                     l1410:
  6118                           
  6119                           ; BSR set to: 0
  6120   006168  C0D4  F01E         	movff	_prec,dtoa@p
  6121   00616C  C0D5  F01F         	movff	_prec+1,dtoa@p+1
  6122   006170                     l1412:
  6123                           
  6124                           ; BSR set to: 0
  6125                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 535:     w = widt
      +                          h;
  6126   006170  C0D2  F01C         	movff	_width,dtoa@w
  6127   006174  C0D3  F01D         	movff	_width+1,dtoa@w+1
  6128   006178                     
  6129                           ; BSR set to: 0
  6130                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 536:     if (s
  6131   006178  5020               	movf	dtoa@s^0,w,c
  6132   00617A  B4D8               	btfsc	status,2,c
  6133   00617C  EFC2  F030         	goto	u8111
  6134   006180  EFC4  F030         	goto	u8110
  6135   006184                     u8111:
  6136   006184  EFDB  F030         	goto	l1413
  6137   006188                     u8110:
  6138   006188                     
  6139                           ; BSR set to: 0
  6140                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 540:     ) {;C:\P
      +                          rogram Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 541:         --w;
  6141   006188  061C               	decf	dtoa@w^0,f,c
  6142   00618A  A0D8               	btfss	status,0,c
  6143   00618C  061D               	decf	(dtoa@w+1)^0,f,c
  6144   00618E                     
  6145                           ; BSR set to: 0
  6146                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 542:   s = s ? '-
      +                          ' : '+';
  6147   00618E  5020               	movf	dtoa@s^0,w,c
  6148   006190  A4D8               	btfss	status,2,c
  6149   006192  EFCD  F030         	goto	u8121
  6150   006196  EFCF  F030         	goto	u8120
  6151   00619A                     u8121:
  6152   00619A  EFD5  F030         	goto	l8161
  6153   00619E                     u8120:
  6154   00619E                     
  6155                           ; BSR set to: 0
  6156   00619E  0E00               	movlw	0
  6157   0061A0  6E1B               	movwf	(_dtoa$1507+1)^0,c
  6158   0061A2  0E2B               	movlw	43
  6159   0061A4  6E1A               	movwf	_dtoa$1507^0,c
  6160   0061A6  EFD9  F030         	goto	l8163
  6161   0061AA                     l8161:
  6162                           
  6163                           ; BSR set to: 0
  6164   0061AA  0E00               	movlw	0
  6165   0061AC  6E1B               	movwf	(_dtoa$1507+1)^0,c
  6166   0061AE  0E2D               	movlw	45
  6167   0061B0  6E1A               	movwf	_dtoa$1507^0,c
  6168   0061B2                     l8163:
  6169                           
  6170                           ; BSR set to: 0
  6171   0061B2  C01A  F020         	movff	_dtoa$1507,dtoa@s
  6172   0061B6                     l1413:
  6173                           
  6174                           ; BSR set to: 0
  6175                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 552:     i = size
      +                          of(dbuf) - 1;
  6176   0061B6  0E00               	movlw	0
  6177   0061B8  6E22               	movwf	(dtoa@i+1)^0,c
  6178   0061BA  0E4F               	movlw	79
  6179   0061BC  6E21               	movwf	dtoa@i^0,c
  6180   0061BE                     
  6181                           ; BSR set to: 0
  6182                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 553:     dbuf[i] 
      +                          = '\0';
  6183   0061BE  0E00               	movlw	0
  6184   0061C0  0102               	movlb	2	; () banked
  6185   0061C2  6F4F               	movwf	(_dbuf+79)& (0+255),b
  6186                           
  6187                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6188   0061C4  EF14  F031         	goto	l8177
  6189   0061C8                     l8167:
  6190                           
  6191                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 563:     )) {;C:\
      +                          Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 564:         --i;
  6192   0061C8  0621               	decf	dtoa@i^0,f,c
  6193   0061CA  A0D8               	btfss	status,0,c
  6194   0061CC  0622               	decf	(dtoa@i+1)^0,f,c
  6195   0061CE                     
  6196                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 565:         dbuf
      +                          [i] = (char)((int)'0' + abs(d % 10));
  6197   0061CE  0E00               	movlw	low _dbuf
  6198   0061D0  2421               	addwf	dtoa@i^0,w,c
  6199   0061D2  6ED9               	movwf	fsr2l,c
  6200   0061D4  0E02               	movlw	high _dbuf
  6201   0061D6  2022               	addwfc	(dtoa@i+1)^0,w,c
  6202   0061D8  6EDA               	movwf	fsr2h,c
  6203   0061DA  C018  F001         	movff	dtoa@d,___awmod@dividend
  6204   0061DE  C019  F002         	movff	dtoa@d+1,___awmod@dividend+1
  6205   0061E2  0E00               	movlw	0
  6206   0061E4  6E04               	movwf	(___awmod@divisor+1)^0,c
  6207   0061E6  0E0A               	movlw	10
  6208   0061E8  6E03               	movwf	___awmod@divisor^0,c
  6209   0061EA  EC54  F037         	call	___awmod	;wreg free
  6210   0061EE  C001  F007         	movff	?___awmod,abs@a
  6211   0061F2  C002  F008         	movff	?___awmod+1,abs@a+1
  6212   0061F6  ECDE  F03C         	call	_abs	;wreg free
  6213   0061FA  5007               	movf	?_abs^0,w,c
  6214   0061FC  0F30               	addlw	48
  6215   0061FE  6EDF               	movwf	indf2,c
  6216   006200                     
  6217                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 567:         --p;
  6218   006200  061E               	decf	dtoa@p^0,f,c
  6219   006202  A0D8               	btfss	status,0,c
  6220   006204  061F               	decf	(dtoa@p+1)^0,f,c
  6221   006206                     
  6222                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 571:         --w;
  6223   006206  061C               	decf	dtoa@w^0,f,c
  6224   006208  A0D8               	btfss	status,0,c
  6225   00620A  061D               	decf	(dtoa@w+1)^0,f,c
  6226   00620C                     
  6227                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 572:         d = 
      +                          d / 10;
  6228   00620C  C018  F001         	movff	dtoa@d,___awdiv@dividend
  6229   006210  C019  F002         	movff	dtoa@d+1,___awdiv@dividend+1
  6230   006214  0E00               	movlw	0
  6231   006216  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6232   006218  0E0A               	movlw	10
  6233   00621A  6E03               	movwf	___awdiv@divisor^0,c
  6234   00621C  EC95  F036         	call	___awdiv	;wreg free
  6235   006220  C001  F018         	movff	?___awdiv,dtoa@d
  6236   006224  C002  F019         	movff	?___awdiv+1,dtoa@d+1
  6237   006228                     l8177:
  6238                           
  6239                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 554:     while (!
      +                          (i < 1) && (d != 0
  6240   006228  BE22               	btfsc	(dtoa@i+1)^0,7,c
  6241   00622A  EF1F  F031         	goto	u8131
  6242   00622E  5022               	movf	(dtoa@i+1)^0,w,c
  6243   006230  E108               	bnz	u8130
  6244   006232  0421               	decf	dtoa@i^0,w,c
  6245   006234  A0D8               	btfss	status,0,c
  6246   006236  EF1F  F031         	goto	u8131
  6247   00623A  EF21  F031         	goto	u8130
  6248   00623E                     u8131:
  6249   00623E  EF37  F031         	goto	l8183
  6250   006242                     u8130:
  6251   006242  5018               	movf	dtoa@d^0,w,c
  6252   006244  1019               	iorwf	(dtoa@d+1)^0,w,c
  6253   006246  A4D8               	btfss	status,2,c
  6254   006248  EF28  F031         	goto	u8141
  6255   00624C  EF2A  F031         	goto	u8140
  6256   006250                     u8141:
  6257   006250  EFE4  F030         	goto	l8167
  6258   006254                     u8140:
  6259   006254  BE1F               	btfsc	(dtoa@p+1)^0,7,c
  6260   006256  EF37  F031         	goto	u8150
  6261   00625A  501F               	movf	(dtoa@p+1)^0,w,c
  6262   00625C  E106               	bnz	u8151
  6263   00625E  041E               	decf	dtoa@p^0,w,c
  6264   006260  B0D8               	btfsc	status,0,c
  6265   006262  EF35  F031         	goto	u8151
  6266   006266  EF37  F031         	goto	u8150
  6267   00626A                     u8151:
  6268   00626A  EFE4  F030         	goto	l8167
  6269   00626E                     u8150:
  6270   00626E                     l8183:
  6271                           
  6272                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 576:     if (s !=
      +                           0) {
  6273   00626E  5020               	movf	dtoa@s^0,w,c
  6274   006270  B4D8               	btfsc	status,2,c
  6275   006272  EF3D  F031         	goto	u8161
  6276   006276  EF3F  F031         	goto	u8160
  6277   00627A                     u8161:
  6278   00627A  EF4A  F031         	goto	l8189
  6279   00627E                     u8160:
  6280   00627E                     
  6281                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 577:         --i;
  6282   00627E  0621               	decf	dtoa@i^0,f,c
  6283   006280  A0D8               	btfss	status,0,c
  6284   006282  0622               	decf	(dtoa@i+1)^0,f,c
  6285   006284                     
  6286                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 578:         dbuf
      +                          [i] = s;
  6287   006284  0E00               	movlw	low _dbuf
  6288   006286  2421               	addwf	dtoa@i^0,w,c
  6289   006288  6ED9               	movwf	fsr2l,c
  6290   00628A  0E02               	movlw	high _dbuf
  6291   00628C  2022               	addwfc	(dtoa@i+1)^0,w,c
  6292   00628E  6EDA               	movwf	fsr2h,c
  6293   006290  C020  FFDF         	movff	dtoa@s,indf2
  6294   006294                     l8189:
  6295                           
  6296                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 582:     return (
      +                          void) pad(fp, &dbuf[i], w);
  6297   006294  C017  F00F         	movff	dtoa@fp,pad@fp
  6298   006298  0E00               	movlw	low _dbuf
  6299   00629A  2421               	addwf	dtoa@i^0,w,c
  6300   00629C  6E10               	movwf	pad@buf^0,c
  6301   00629E  0E02               	movlw	high _dbuf
  6302   0062A0  2022               	addwfc	(dtoa@i+1)^0,w,c
  6303   0062A2  6E11               	movwf	(pad@buf+1)^0,c
  6304   0062A4  C01C  F012         	movff	dtoa@w,pad@p
  6305   0062A8  C01D  F013         	movff	dtoa@w+1,pad@p+1
  6306   0062AC  EC28  F03A         	call	_pad	;wreg free
  6307   0062B0  0012               	return		;funcret
  6308   0062B2                     __end_of_dtoa:
  6309                           	callstack 0
  6310                           
  6311 ;; *************** function _pad *****************
  6312 ;; Defined at:
  6313 ;;		line 193 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c"
  6314 ;; Parameters:    Size  Location     Type
  6315 ;;  fp              1   14[COMRAM] PTR struct _IO_FILE
  6316 ;;		 -> sprintf@f(12), 
  6317 ;;  buf             2   15[COMRAM] PTR unsigned char 
  6318 ;;		 -> dbuf(80), 
  6319 ;;  p               2   17[COMRAM] int 
  6320 ;; Auto vars:     Size  Location     Type
  6321 ;;  i               2   20[COMRAM] int 
  6322 ;; Return value:  Size  Location     Type
  6323 ;;                  1    wreg      void 
  6324 ;; Registers used:
  6325 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6326 ;; Tracked objects:
  6327 ;;		On entry : 0/0
  6328 ;;		On exit  : 0/0
  6329 ;;		Unchanged: 0/0
  6330 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6331 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6332 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6333 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6334 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6335 ;;Total ram usage:        8 bytes
  6336 ;; Hardware stack levels used: 1
  6337 ;; Hardware stack levels required when called: 3
  6338 ;; This function calls:
  6339 ;;		_fputc
  6340 ;;		_fputs
  6341 ;; This function is called by:
  6342 ;;		_dtoa
  6343 ;;		_efgtoa
  6344 ;; This function uses a non-reentrant model
  6345 ;;
  6346                           
  6347                           	psect	text20
  6348   007450                     __ptext20:
  6349                           	callstack 0
  6350   007450                     _pad:
  6351                           	callstack 21
  6352   007450                     
  6353                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 193: static void 
      +                          pad(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\com
      +                          mon\doprnt.c: 194: {;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.
      +                          c: 195:     int i;;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c:
      +                           205:  if (p < 0) {
  6354   007450  BE13               	btfsc	(pad@p+1)^0,7,c
  6355   007452  EF2F  F03A         	goto	u8040
  6356   007456  EF2D  F03A         	goto	u8041
  6357   00745A                     u8041:
  6358   00745A  EF33  F03A         	goto	l1402
  6359   00745E                     u8040:
  6360   00745E                     
  6361                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 206:   p = 0;
  6362   00745E  0E00               	movlw	0
  6363   007460  6E13               	movwf	(pad@p+1)^0,c
  6364   007462  0E00               	movlw	0
  6365   007464  6E12               	movwf	pad@p^0,c
  6366   007466                     l1402:
  6367                           
  6368                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 208:     i = 0;
  6369   007466  0E00               	movlw	0
  6370   007468  6E16               	movwf	(pad@i+1)^0,c
  6371   00746A  0E00               	movlw	0
  6372   00746C  6E15               	movwf	pad@i^0,c
  6373                           
  6374                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6375   00746E  EF43  F03A         	goto	l8129
  6376   007472                     l8125:
  6377                           
  6378                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 210:         fput
      +                          c(' ', fp);
  6379   007472  0E00               	movlw	0
  6380   007474  6E02               	movwf	(fputc@c+1)^0,c
  6381   007476  0E20               	movlw	32
  6382   007478  6E01               	movwf	fputc@c^0,c
  6383   00747A  C00F  F003         	movff	pad@fp,fputc@fp
  6384   00747E  ECF7  F036         	call	_fputc	;wreg free
  6385   007482                     
  6386                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 211:         ++i;
  6387   007482  4A15               	infsnz	pad@i^0,f,c
  6388   007484  2A16               	incf	(pad@i+1)^0,f,c
  6389   007486                     l8129:
  6390                           
  6391                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 209:     while (i
      +                           < p) {
  6392   007486  5012               	movf	pad@p^0,w,c
  6393   007488  5C15               	subwf	pad@i^0,w,c
  6394   00748A  5016               	movf	(pad@i+1)^0,w,c
  6395   00748C  0A80               	xorlw	128
  6396   00748E  6E14               	movwf	??_pad^0,c
  6397   007490  5013               	movf	(pad@p+1)^0,w,c
  6398   007492  0A80               	xorlw	128
  6399   007494  5814               	subwfb	??_pad^0,w,c
  6400   007496  A0D8               	btfss	status,0,c
  6401   007498  EF50  F03A         	goto	u8051
  6402   00749C  EF52  F03A         	goto	u8050
  6403   0074A0                     u8051:
  6404   0074A0  EF39  F03A         	goto	l8125
  6405   0074A4                     u8050:
  6406   0074A4                     
  6407                           ;C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\doprnt.c: 218:         fput
      +                          s((const char *)buf, fp);
  6408   0074A4  C010  F009         	movff	pad@buf,fputs@s
  6409   0074A8  C011  F00A         	movff	pad@buf+1,fputs@s+1
  6410   0074AC  C00F  F00B         	movff	pad@fp,fputs@fp
  6411   0074B0  EC97  F03B         	call	_fputs	;wreg free
  6412   0074B4  0012               	return		;funcret
  6413   0074B6                     __end_of_pad:
  6414                           	callstack 0
  6415                           
  6416 ;; *************** function _fputs *****************
  6417 ;; Defined at:
  6418 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputs.c"
  6419 ;; Parameters:    Size  Location     Type
  6420 ;;  s               2    8[COMRAM] PTR const unsigned char 
  6421 ;;		 -> dbuf(80), 
  6422 ;;  fp              1   10[COMRAM] PTR struct _IO_FILE
  6423 ;;		 -> sprintf@f(12), 
  6424 ;; Auto vars:     Size  Location     Type
  6425 ;;  i               2   12[COMRAM] int 
  6426 ;;  c               1   11[COMRAM] unsigned char 
  6427 ;; Return value:  Size  Location     Type
  6428 ;;                  2    8[COMRAM] int 
  6429 ;; Registers used:
  6430 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6431 ;; Tracked objects:
  6432 ;;		On entry : 0/0
  6433 ;;		On exit  : 0/0
  6434 ;;		Unchanged: 0/0
  6435 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6436 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6437 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6438 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6439 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6440 ;;Total ram usage:        6 bytes
  6441 ;; Hardware stack levels used: 1
  6442 ;; Hardware stack levels required when called: 2
  6443 ;; This function calls:
  6444 ;;		_fputc
  6445 ;; This function is called by:
  6446 ;;		_pad
  6447 ;; This function uses a non-reentrant model
  6448 ;;
  6449                           
  6450                           	psect	text21
  6451   00772E                     __ptext21:
  6452                           	callstack 0
  6453   00772E                     _fputs:
  6454                           	callstack 21
  6455   00772E  0E00               	movlw	0
  6456   007730  6E0E               	movwf	(fputs@i+1)^0,c
  6457   007732  0E00               	movlw	0
  6458   007734  6E0D               	movwf	fputs@i^0,c
  6459   007736  EFA6  F03B         	goto	l8119
  6460   00773A                     l8115:
  6461   00773A  C00C  F001         	movff	fputs@c,fputc@c
  6462   00773E  6A02               	clrf	(fputc@c+1)^0,c
  6463   007740  C00B  F003         	movff	fputs@fp,fputc@fp
  6464   007744  ECF7  F036         	call	_fputc	;wreg free
  6465   007748  4A0D               	infsnz	fputs@i^0,f,c
  6466   00774A  2A0E               	incf	(fputs@i+1)^0,f,c
  6467   00774C                     l8119:
  6468   00774C  500D               	movf	fputs@i^0,w,c
  6469   00774E  2409               	addwf	fputs@s^0,w,c
  6470   007750  6ED9               	movwf	fsr2l,c
  6471   007752  500E               	movf	(fputs@i+1)^0,w,c
  6472   007754  200A               	addwfc	(fputs@s+1)^0,w,c
  6473   007756  6EDA               	movwf	fsr2h,c
  6474   007758  50DF               	movf	indf2,w,c
  6475   00775A  6E0C               	movwf	fputs@c^0,c
  6476   00775C  500C               	movf	fputs@c^0,w,c
  6477   00775E  A4D8               	btfss	status,2,c
  6478   007760  EFB4  F03B         	goto	u8031
  6479   007764  EFB6  F03B         	goto	u8030
  6480   007768                     u8031:
  6481   007768  EF9D  F03B         	goto	l8115
  6482   00776C                     u8030:
  6483   00776C  0012               	return		;funcret
  6484   00776E                     __end_of_fputs:
  6485                           	callstack 0
  6486                           
  6487 ;; *************** function _fputc *****************
  6488 ;; Defined at:
  6489 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\nf_fputc.c"
  6490 ;; Parameters:    Size  Location     Type
  6491 ;;  c               2    0[COMRAM] int 
  6492 ;;  fp              1    2[COMRAM] PTR struct _IO_FILE
  6493 ;;		 -> sprintf@f(12), 
  6494 ;; Auto vars:     Size  Location     Type
  6495 ;;		None
  6496 ;; Return value:  Size  Location     Type
  6497 ;;                  2    0[COMRAM] int 
  6498 ;; Registers used:
  6499 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  6500 ;; Tracked objects:
  6501 ;;		On entry : 0/0
  6502 ;;		On exit  : 0/0
  6503 ;;		Unchanged: 0/0
  6504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6505 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6506 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6507 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6508 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6509 ;;Total ram usage:        8 bytes
  6510 ;; Hardware stack levels used: 1
  6511 ;; Hardware stack levels required when called: 1
  6512 ;; This function calls:
  6513 ;;		_putch
  6514 ;; This function is called by:
  6515 ;;		_pad
  6516 ;;		_vfpfcnvrt
  6517 ;;		_fputs
  6518 ;; This function uses a non-reentrant model
  6519 ;;
  6520                           
  6521                           	psect	text22
  6522   006DEE                     __ptext22:
  6523                           	callstack 0
  6524   006DEE                     _fputc:
  6525                           	callstack 24
  6526   006DEE  5003               	movf	fputc@fp^0,w,c
  6527   006DF0  B4D8               	btfsc	status,2,c
  6528   006DF2  EFFD  F036         	goto	u4021
  6529   006DF6  EFFF  F036         	goto	u4020
  6530   006DFA                     u4021:
  6531   006DFA  EF07  F037         	goto	l4889
  6532   006DFE                     u4020:
  6533   006DFE  5003               	movf	fputc@fp^0,w,c
  6534   006E00  A4D8               	btfss	status,2,c
  6535   006E02  EF05  F037         	goto	u4031
  6536   006E06  EF07  F037         	goto	u4030
  6537   006E0A                     u4031:
  6538   006E0A  EF0C  F037         	goto	l4891
  6539   006E0E                     u4030:
  6540   006E0E                     l4889:
  6541   006E0E  5001               	movf	fputc@c^0,w,c
  6542   006E10  EC38  F03D         	call	_putch
  6543   006E14  EF53  F037         	goto	l1570
  6544   006E18                     l4891:
  6545   006E18  5003               	movf	fputc@fp^0,w,c
  6546   006E1A  6ED9               	movwf	fsr2l,c
  6547   006E1C  6ADA               	clrf	fsr2h,c
  6548   006E1E  0E0A               	movlw	10
  6549   006E20  26D9               	addwf	fsr2l,f,c
  6550   006E22  50DE               	movf	postinc2,w,c
  6551   006E24  10DE               	iorwf	postinc2,w,c
  6552   006E26  B4D8               	btfsc	status,2,c
  6553   006E28  EF18  F037         	goto	u4041
  6554   006E2C  EF1A  F037         	goto	u4040
  6555   006E30                     u4041:
  6556   006E30  EF33  F037         	goto	l4895
  6557   006E34                     u4040:
  6558   006E34  5003               	movf	fputc@fp^0,w,c
  6559   006E36  6ED9               	movwf	fsr2l,c
  6560   006E38  6ADA               	clrf	fsr2h,c
  6561   006E3A  0E0A               	movlw	10
  6562   006E3C  26D9               	addwf	fsr2l,f,c
  6563   006E3E  5003               	movf	fputc@fp^0,w,c
  6564   006E40  6EE1               	movwf	fsr1l,c
  6565   006E42  6AE2               	clrf	fsr1h,c
  6566   006E44  0E03               	movlw	3
  6567   006E46  26E1               	addwf	fsr1l,f,c
  6568   006E48  50DE               	movf	postinc2,w,c
  6569   006E4A  5CE6               	subwf	postinc1,w,c
  6570   006E4C  50E6               	movf	postinc1,w,c
  6571   006E4E  0A80               	xorlw	128
  6572   006E50  6E08               	movwf	(??_fputc+4)^0,c
  6573   006E52  50DE               	movf	postinc2,w,c
  6574   006E54  0A80               	xorlw	128
  6575   006E56  5808               	subwfb	(??_fputc+4)^0,w,c
  6576   006E58  B0D8               	btfsc	status,0,c
  6577   006E5A  EF31  F037         	goto	u4051
  6578   006E5E  EF33  F037         	goto	u4050
  6579   006E62                     u4051:
  6580   006E62  EF53  F037         	goto	l1570
  6581   006E66                     u4050:
  6582   006E66                     l4895:
  6583   006E66  5003               	movf	fputc@fp^0,w,c
  6584   006E68  6ED9               	movwf	fsr2l,c
  6585   006E6A  6ADA               	clrf	fsr2h,c
  6586   006E6C  0E03               	movlw	3
  6587   006E6E  26D9               	addwf	fsr2l,f,c
  6588   006E70  CFDE F004          	movff	postinc2,??_fputc
  6589   006E74  CFDD F005          	movff	postdec2,??_fputc+1
  6590   006E78  5003               	movf	fputc@fp^0,w,c
  6591   006E7A  6ED9               	movwf	fsr2l,c
  6592   006E7C  6ADA               	clrf	fsr2h,c
  6593   006E7E  CFDE F006          	movff	postinc2,??_fputc+2
  6594   006E82  CFDD F007          	movff	postdec2,??_fputc+3
  6595   006E86  5004               	movf	??_fputc^0,w,c
  6596   006E88  2406               	addwf	(??_fputc+2)^0,w,c
  6597   006E8A  6ED9               	movwf	fsr2l,c
  6598   006E8C  5005               	movf	(??_fputc+1)^0,w,c
  6599   006E8E  2007               	addwfc	(??_fputc+3)^0,w,c
  6600   006E90  6EDA               	movwf	fsr2h,c
  6601   006E92  C001  FFDF         	movff	fputc@c,indf2
  6602   006E96  5003               	movf	fputc@fp^0,w,c
  6603   006E98  6ED9               	movwf	fsr2l,c
  6604   006E9A  6ADA               	clrf	fsr2h,c
  6605   006E9C  0E03               	movlw	3
  6606   006E9E  26D9               	addwf	fsr2l,f,c
  6607   006EA0  2ADE               	incf	postinc2,f,c
  6608   006EA2  0E00               	movlw	0
  6609   006EA4  22DD               	addwfc	postdec2,f,c
  6610   006EA6                     l1570:
  6611   006EA6  0012               	return		;funcret
  6612   006EA8                     __end_of_fputc:
  6613                           	callstack 0
  6614                           
  6615 ;; *************** function _putch *****************
  6616 ;; Defined at:
  6617 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\putch.c"
  6618 ;; Parameters:    Size  Location     Type
  6619 ;;  c               1    wreg     unsigned char 
  6620 ;; Auto vars:     Size  Location     Type
  6621 ;;  c               1    0[COMRAM] unsigned char 
  6622 ;; Return value:  Size  Location     Type
  6623 ;;                  1    wreg      void 
  6624 ;; Registers used:
  6625 ;;		wreg
  6626 ;; Tracked objects:
  6627 ;;		On entry : 0/0
  6628 ;;		On exit  : 0/0
  6629 ;;		Unchanged: 0/0
  6630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6634 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6635 ;;Total ram usage:        0 bytes
  6636 ;; Hardware stack levels used: 1
  6637 ;; This function calls:
  6638 ;;		Nothing
  6639 ;; This function is called by:
  6640 ;;		_fputc
  6641 ;; This function uses a non-reentrant model
  6642 ;;
  6643                           
  6644                           	psect	text23
  6645   007A70                     __ptext23:
  6646                           	callstack 0
  6647   007A70                     _putch:
  6648                           	callstack 24
  6649   007A70  0012               	return		;funcret
  6650   007A72                     __end_of_putch:
  6651                           	callstack 0
  6652                           
  6653 ;; *************** function _abs *****************
  6654 ;; Defined at:
  6655 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\abs.c"
  6656 ;; Parameters:    Size  Location     Type
  6657 ;;  a               2    6[COMRAM] int 
  6658 ;; Auto vars:     Size  Location     Type
  6659 ;;		None
  6660 ;; Return value:  Size  Location     Type
  6661 ;;                  2    6[COMRAM] int 
  6662 ;; Registers used:
  6663 ;;		wreg, status,2, status,0
  6664 ;; Tracked objects:
  6665 ;;		On entry : 0/0
  6666 ;;		On exit  : 0/0
  6667 ;;		Unchanged: 0/0
  6668 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6669 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6670 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6671 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6672 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6673 ;;Total ram usage:        4 bytes
  6674 ;; Hardware stack levels used: 1
  6675 ;; This function calls:
  6676 ;;		Nothing
  6677 ;; This function is called by:
  6678 ;;		_dtoa
  6679 ;; This function uses a non-reentrant model
  6680 ;;
  6681                           
  6682                           	psect	text24
  6683   0079BC                     __ptext24:
  6684                           	callstack 0
  6685   0079BC                     _abs:
  6686                           	callstack 24
  6687   0079BC  BE08               	btfsc	(abs@a+1)^0,7,c
  6688   0079BE  EFE3  F03C         	goto	u5181
  6689   0079C2  EFE5  F03C         	goto	u5180
  6690   0079C6                     u5181:
  6691   0079C6  EFEB  F03C         	goto	l1529
  6692   0079CA                     u5180:
  6693   0079CA  C007  F007         	movff	abs@a,?_abs
  6694   0079CE  C008  F008         	movff	abs@a+1,?_abs+1
  6695   0079D2  EFF7  F03C         	goto	l1532
  6696   0079D6                     l1529:
  6697   0079D6  C007  F009         	movff	abs@a,??_abs
  6698   0079DA  C008  F00A         	movff	abs@a+1,??_abs+1
  6699   0079DE  1E09               	comf	??_abs^0,f,c
  6700   0079E0  1E0A               	comf	(??_abs+1)^0,f,c
  6701   0079E2  4A09               	infsnz	??_abs^0,f,c
  6702   0079E4  2A0A               	incf	(??_abs+1)^0,f,c
  6703   0079E6  C009  F007         	movff	??_abs,?_abs
  6704   0079EA  C00A  F008         	movff	??_abs+1,?_abs+1
  6705   0079EE                     l1532:
  6706   0079EE  0012               	return		;funcret
  6707   0079F0                     __end_of_abs:
  6708                           	callstack 0
  6709                           
  6710 ;; *************** function ___awmod *****************
  6711 ;; Defined at:
  6712 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awmod.c"
  6713 ;; Parameters:    Size  Location     Type
  6714 ;;  dividend        2    0[COMRAM] int 
  6715 ;;  divisor         2    2[COMRAM] int 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  sign            1    5[COMRAM] unsigned char 
  6718 ;;  counter         1    4[COMRAM] unsigned char 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  2    0[COMRAM] int 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6728 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6729 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6731 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6732 ;;Total ram usage:        6 bytes
  6733 ;; Hardware stack levels used: 1
  6734 ;; This function calls:
  6735 ;;		Nothing
  6736 ;; This function is called by:
  6737 ;;		_dtoa
  6738 ;; This function uses a non-reentrant model
  6739 ;;
  6740                           
  6741                           	psect	text25
  6742   006EA8                     __ptext25:
  6743                           	callstack 0
  6744   006EA8                     ___awmod:
  6745                           	callstack 24
  6746   006EA8  0E00               	movlw	0
  6747   006EAA  6E06               	movwf	___awmod@sign^0,c
  6748   006EAC  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  6749   006EAE  EF5D  F037         	goto	u4940
  6750   006EB2  EF5B  F037         	goto	u4941
  6751   006EB6                     u4941:
  6752   006EB6  EF63  F037         	goto	l5441
  6753   006EBA                     u4940:
  6754   006EBA  6C01               	negf	___awmod@dividend^0,c
  6755   006EBC  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6756   006EBE  B0D8               	btfsc	status,0,c
  6757   006EC0  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6758   006EC2  0E01               	movlw	1
  6759   006EC4  6E06               	movwf	___awmod@sign^0,c
  6760   006EC6                     l5441:
  6761   006EC6  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  6762   006EC8  EF6A  F037         	goto	u4950
  6763   006ECC  EF68  F037         	goto	u4951
  6764   006ED0                     u4951:
  6765   006ED0  EF6E  F037         	goto	l5445
  6766   006ED4                     u4950:
  6767   006ED4  6C03               	negf	___awmod@divisor^0,c
  6768   006ED6  1E04               	comf	(___awmod@divisor+1)^0,f,c
  6769   006ED8  B0D8               	btfsc	status,0,c
  6770   006EDA  2A04               	incf	(___awmod@divisor+1)^0,f,c
  6771   006EDC                     l5445:
  6772   006EDC  5003               	movf	___awmod@divisor^0,w,c
  6773   006EDE  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  6774   006EE0  B4D8               	btfsc	status,2,c
  6775   006EE2  EF75  F037         	goto	u4961
  6776   006EE6  EF77  F037         	goto	u4960
  6777   006EEA                     u4961:
  6778   006EEA  EF9B  F037         	goto	l5461
  6779   006EEE                     u4960:
  6780   006EEE  0E01               	movlw	1
  6781   006EF0  6E05               	movwf	___awmod@counter^0,c
  6782   006EF2  EF7F  F037         	goto	l5451
  6783   006EF6                     l5449:
  6784   006EF6  90D8               	bcf	status,0,c
  6785   006EF8  3603               	rlcf	___awmod@divisor^0,f,c
  6786   006EFA  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  6787   006EFC  2A05               	incf	___awmod@counter^0,f,c
  6788   006EFE                     l5451:
  6789   006EFE  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  6790   006F00  EF84  F037         	goto	u4971
  6791   006F04  EF86  F037         	goto	u4970
  6792   006F08                     u4971:
  6793   006F08  EF7B  F037         	goto	l5449
  6794   006F0C                     u4970:
  6795   006F0C                     l5453:
  6796   006F0C  5003               	movf	___awmod@divisor^0,w,c
  6797   006F0E  5C01               	subwf	___awmod@dividend^0,w,c
  6798   006F10  5004               	movf	(___awmod@divisor+1)^0,w,c
  6799   006F12  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  6800   006F14  A0D8               	btfss	status,0,c
  6801   006F16  EF8F  F037         	goto	u4981
  6802   006F1A  EF91  F037         	goto	u4980
  6803   006F1E                     u4981:
  6804   006F1E  EF95  F037         	goto	l5457
  6805   006F22                     u4980:
  6806   006F22  5003               	movf	___awmod@divisor^0,w,c
  6807   006F24  5E01               	subwf	___awmod@dividend^0,f,c
  6808   006F26  5004               	movf	(___awmod@divisor+1)^0,w,c
  6809   006F28  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  6810   006F2A                     l5457:
  6811   006F2A  90D8               	bcf	status,0,c
  6812   006F2C  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  6813   006F2E  3203               	rrcf	___awmod@divisor^0,f,c
  6814   006F30  2E05               	decfsz	___awmod@counter^0,f,c
  6815   006F32  EF86  F037         	goto	l5453
  6816   006F36                     l5461:
  6817   006F36  5006               	movf	___awmod@sign^0,w,c
  6818   006F38  B4D8               	btfsc	status,2,c
  6819   006F3A  EFA1  F037         	goto	u4991
  6820   006F3E  EFA3  F037         	goto	u4990
  6821   006F42                     u4991:
  6822   006F42  EFA7  F037         	goto	l5465
  6823   006F46                     u4990:
  6824   006F46  6C01               	negf	___awmod@dividend^0,c
  6825   006F48  1E02               	comf	(___awmod@dividend+1)^0,f,c
  6826   006F4A  B0D8               	btfsc	status,0,c
  6827   006F4C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  6828   006F4E                     l5465:
  6829   006F4E  C001  F001         	movff	___awmod@dividend,?___awmod
  6830   006F52  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  6831   006F56  0012               	return		;funcret
  6832   006F58                     __end_of___awmod:
  6833                           	callstack 0
  6834                           
  6835 ;; *************** function ___awdiv *****************
  6836 ;; Defined at:
  6837 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\awdiv.c"
  6838 ;; Parameters:    Size  Location     Type
  6839 ;;  dividend        2    0[COMRAM] int 
  6840 ;;  divisor         2    2[COMRAM] int 
  6841 ;; Auto vars:     Size  Location     Type
  6842 ;;  quotient        2    6[COMRAM] int 
  6843 ;;  sign            1    5[COMRAM] unsigned char 
  6844 ;;  counter         1    4[COMRAM] unsigned char 
  6845 ;; Return value:  Size  Location     Type
  6846 ;;                  2    0[COMRAM] int 
  6847 ;; Registers used:
  6848 ;;		wreg, status,2, status,0
  6849 ;; Tracked objects:
  6850 ;;		On entry : 0/0
  6851 ;;		On exit  : 0/0
  6852 ;;		Unchanged: 0/0
  6853 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6854 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6855 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6856 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6857 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6858 ;;Total ram usage:        8 bytes
  6859 ;; Hardware stack levels used: 1
  6860 ;; This function calls:
  6861 ;;		Nothing
  6862 ;; This function is called by:
  6863 ;;		_dtoa
  6864 ;; This function uses a non-reentrant model
  6865 ;;
  6866                           
  6867                           	psect	text26
  6868   006D2A                     __ptext26:
  6869                           	callstack 0
  6870   006D2A                     ___awdiv:
  6871                           	callstack 24
  6872   006D2A  0E00               	movlw	0
  6873   006D2C  6E06               	movwf	___awdiv@sign^0,c
  6874   006D2E  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  6875   006D30  EF9E  F036         	goto	u4880
  6876   006D34  EF9C  F036         	goto	u4881
  6877   006D38                     u4881:
  6878   006D38  EFA4  F036         	goto	l5397
  6879   006D3C                     u4880:
  6880   006D3C  6C03               	negf	___awdiv@divisor^0,c
  6881   006D3E  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  6882   006D40  B0D8               	btfsc	status,0,c
  6883   006D42  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  6884   006D44  0E01               	movlw	1
  6885   006D46  6E06               	movwf	___awdiv@sign^0,c
  6886   006D48                     l5397:
  6887   006D48  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  6888   006D4A  EFAB  F036         	goto	u4890
  6889   006D4E  EFA9  F036         	goto	u4891
  6890   006D52                     u4891:
  6891   006D52  EFB1  F036         	goto	l5403
  6892   006D56                     u4890:
  6893   006D56  6C01               	negf	___awdiv@dividend^0,c
  6894   006D58  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  6895   006D5A  B0D8               	btfsc	status,0,c
  6896   006D5C  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  6897   006D5E  0E01               	movlw	1
  6898   006D60  1A06               	xorwf	___awdiv@sign^0,f,c
  6899   006D62                     l5403:
  6900   006D62  0E00               	movlw	0
  6901   006D64  6E08               	movwf	(___awdiv@quotient+1)^0,c
  6902   006D66  0E00               	movlw	0
  6903   006D68  6E07               	movwf	___awdiv@quotient^0,c
  6904   006D6A  5003               	movf	___awdiv@divisor^0,w,c
  6905   006D6C  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  6906   006D6E  B4D8               	btfsc	status,2,c
  6907   006D70  EFBC  F036         	goto	u4901
  6908   006D74  EFBE  F036         	goto	u4900
  6909   006D78                     u4901:
  6910   006D78  EFE6  F036         	goto	l5425
  6911   006D7C                     u4900:
  6912   006D7C  0E01               	movlw	1
  6913   006D7E  6E05               	movwf	___awdiv@counter^0,c
  6914   006D80  EFC6  F036         	goto	l5411
  6915   006D84                     l5409:
  6916   006D84  90D8               	bcf	status,0,c
  6917   006D86  3603               	rlcf	___awdiv@divisor^0,f,c
  6918   006D88  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  6919   006D8A  2A05               	incf	___awdiv@counter^0,f,c
  6920   006D8C                     l5411:
  6921   006D8C  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  6922   006D8E  EFCB  F036         	goto	u4911
  6923   006D92  EFCD  F036         	goto	u4910
  6924   006D96                     u4911:
  6925   006D96  EFC2  F036         	goto	l5409
  6926   006D9A                     u4910:
  6927   006D9A                     l5413:
  6928   006D9A  90D8               	bcf	status,0,c
  6929   006D9C  3607               	rlcf	___awdiv@quotient^0,f,c
  6930   006D9E  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  6931   006DA0  5003               	movf	___awdiv@divisor^0,w,c
  6932   006DA2  5C01               	subwf	___awdiv@dividend^0,w,c
  6933   006DA4  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6934   006DA6  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  6935   006DA8  A0D8               	btfss	status,0,c
  6936   006DAA  EFD9  F036         	goto	u4921
  6937   006DAE  EFDB  F036         	goto	u4920
  6938   006DB2                     u4921:
  6939   006DB2  EFE0  F036         	goto	l5421
  6940   006DB6                     u4920:
  6941   006DB6  5003               	movf	___awdiv@divisor^0,w,c
  6942   006DB8  5E01               	subwf	___awdiv@dividend^0,f,c
  6943   006DBA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  6944   006DBC  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  6945   006DBE  8007               	bsf	___awdiv@quotient^0,0,c
  6946   006DC0                     l5421:
  6947   006DC0  90D8               	bcf	status,0,c
  6948   006DC2  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  6949   006DC4  3203               	rrcf	___awdiv@divisor^0,f,c
  6950   006DC6  2E05               	decfsz	___awdiv@counter^0,f,c
  6951   006DC8  EFCD  F036         	goto	l5413
  6952   006DCC                     l5425:
  6953   006DCC  5006               	movf	___awdiv@sign^0,w,c
  6954   006DCE  B4D8               	btfsc	status,2,c
  6955   006DD0  EFEC  F036         	goto	u4931
  6956   006DD4  EFEE  F036         	goto	u4930
  6957   006DD8                     u4931:
  6958   006DD8  EFF2  F036         	goto	l5429
  6959   006DDC                     u4930:
  6960   006DDC  6C07               	negf	___awdiv@quotient^0,c
  6961   006DDE  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  6962   006DE0  B0D8               	btfsc	status,0,c
  6963   006DE2  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  6964   006DE4                     l5429:
  6965   006DE4  C007  F001         	movff	___awdiv@quotient,?___awdiv
  6966   006DE8  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  6967   006DEC  0012               	return		;funcret
  6968   006DEE                     __end_of___awdiv:
  6969                           	callstack 0
  6970                           
  6971 ;; *************** function _memset *****************
  6972 ;; Defined at:
  6973 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\memset.c"
  6974 ;; Parameters:    Size  Location     Type
  6975 ;;  dest            2    0[COMRAM] PTR void 
  6976 ;;		 -> send_the_result_to_LCD@result_str_179(40), send_the_result_to_LCD@result_str(80), 
  6977 ;;  c               2    2[COMRAM] int 
  6978 ;;  n               2    4[COMRAM] unsigned int 
  6979 ;; Auto vars:     Size  Location     Type
  6980 ;;  p               2    6[COMRAM] PTR unsigned char 
  6981 ;;		 -> send_the_result_to_LCD@result_str_179(40), send_the_result_to_LCD@result_str(80), 
  6982 ;; Return value:  Size  Location     Type
  6983 ;;                  2    0[COMRAM] PTR void 
  6984 ;; Registers used:
  6985 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6986 ;; Tracked objects:
  6987 ;;		On entry : 0/0
  6988 ;;		On exit  : 0/0
  6989 ;;		Unchanged: 0/0
  6990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6991 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6992 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6994 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6995 ;;Total ram usage:        8 bytes
  6996 ;; Hardware stack levels used: 1
  6997 ;; This function calls:
  6998 ;;		Nothing
  6999 ;; This function is called by:
  7000 ;;		_convert_float_to_string
  7001 ;;		_convert_int_to_string
  7002 ;;		_convert_byte_to_string
  7003 ;;		_convert_short_to_string
  7004 ;; This function uses a non-reentrant model
  7005 ;;
  7006                           
  7007                           	psect	text27
  7008   00794C                     __ptext27:
  7009                           	callstack 0
  7010   00794C                     _memset:
  7011                           	callstack 28
  7012   00794C  C001  F007         	movff	memset@dest,memset@p
  7013   007950  C002  F008         	movff	memset@dest+1,memset@p+1
  7014   007954  EFB4  F03C         	goto	l6131
  7015   007958                     l6127:
  7016   007958  C007  FFD9         	movff	memset@p,fsr2l
  7017   00795C  C008  FFDA         	movff	memset@p+1,fsr2h
  7018   007960  C003  FFDF         	movff	memset@c,indf2
  7019   007964  4A07               	infsnz	memset@p^0,f,c
  7020   007966  2A08               	incf	(memset@p+1)^0,f,c
  7021   007968                     l6131:
  7022   007968  0605               	decf	memset@n^0,f,c
  7023   00796A  A0D8               	btfss	status,0,c
  7024   00796C  0606               	decf	(memset@n+1)^0,f,c
  7025   00796E  2805               	incf	memset@n^0,w,c
  7026   007970  E106               	bnz	u6011
  7027   007972  2806               	incf	(memset@n+1)^0,w,c
  7028   007974  A4D8               	btfss	status,2,c
  7029   007976  EFBF  F03C         	goto	u6011
  7030   00797A  EFC1  F03C         	goto	u6010
  7031   00797E                     u6011:
  7032   00797E  EFAC  F03C         	goto	l6127
  7033   007982                     u6010:
  7034   007982  0012               	return		;funcret
  7035   007984                     __end_of_memset:
  7036                           	callstack 0
  7037                           
  7038 ;; *************** function _multiplication_operation *****************
  7039 ;; Defined at:
  7040 ;;		line 185 in file "calculator_function/calculator_functions.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  num1_val        4   49[COMRAM] float 
  7043 ;;  num2_val        4   53[COMRAM] float 
  7044 ;;  result          1   57[COMRAM] PTR float 
  7045 ;;		 -> total_result(4), result(4), 
  7046 ;; Auto vars:     Size  Location     Type
  7047 ;;		None
  7048 ;; Return value:  Size  Location     Type
  7049 ;;                  1    wreg      void 
  7050 ;; Registers used:
  7051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7052 ;; Tracked objects:
  7053 ;;		On entry : 0/0
  7054 ;;		On exit  : 0/0
  7055 ;;		Unchanged: 0/0
  7056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7057 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7060 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7061 ;;Total ram usage:        9 bytes
  7062 ;; Hardware stack levels used: 1
  7063 ;; Hardware stack levels required when called: 1
  7064 ;; This function calls:
  7065 ;;		___flmul
  7066 ;; This function is called by:
  7067 ;;		_main
  7068 ;; This function uses a non-reentrant model
  7069 ;;
  7070                           
  7071                           	psect	text28
  7072   007824                     __ptext28:
  7073                           	callstack 0
  7074   007824                     _multiplication_operation:
  7075                           	callstack 29
  7076   007824                     
  7077                           ;calculator_function/calculator_functions.c: 186: *result = num1_val*num2_val;
  7078   007824  C032  F019         	movff	multiplication_operation@num1_val,___flmul@b
  7079   007828  C033  F01A         	movff	multiplication_operation@num1_val+1,___flmul@b+1
  7080   00782C  C034  F01B         	movff	multiplication_operation@num1_val+2,___flmul@b+2
  7081   007830  C035  F01C         	movff	multiplication_operation@num1_val+3,___flmul@b+3
  7082   007834  C036  F01D         	movff	multiplication_operation@num2_val,___flmul@a
  7083   007838  C037  F01E         	movff	multiplication_operation@num2_val+1,___flmul@a+1
  7084   00783C  C038  F01F         	movff	multiplication_operation@num2_val+2,___flmul@a+2
  7085   007840  C039  F020         	movff	multiplication_operation@num2_val+3,___flmul@a+3
  7086   007844  ECF1  F023         	call	___flmul	;wreg free
  7087   007848  503A               	movf	multiplication_operation@result^0,w,c
  7088   00784A  6ED9               	movwf	fsr2l,c
  7089   00784C  6ADA               	clrf	fsr2h,c
  7090   00784E  C019  FFDE         	movff	?___flmul,postinc2
  7091   007852  C01A  FFDE         	movff	?___flmul+1,postinc2
  7092   007856  C01B  FFDE         	movff	?___flmul+2,postinc2
  7093   00785A  C01C  FFDE         	movff	?___flmul+3,postinc2
  7094   00785E  0012               	return		;funcret
  7095   007860                     __end_of_multiplication_operation:
  7096                           	callstack 0
  7097                           
  7098 ;; *************** function _initialize_var *****************
  7099 ;; Defined at:
  7100 ;;		line 224 in file "calculator_function/calculator_functions.c"
  7101 ;; Parameters:    Size  Location     Type
  7102 ;;		None
  7103 ;; Auto vars:     Size  Location     Type
  7104 ;;  count           2    0[COMRAM] int 
  7105 ;; Return value:  Size  Location     Type
  7106 ;;                  1    wreg      void 
  7107 ;; Registers used:
  7108 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  7109 ;; Tracked objects:
  7110 ;;		On entry : 0/0
  7111 ;;		On exit  : 0/0
  7112 ;;		Unchanged: 0/0
  7113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7114 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7117 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7118 ;;Total ram usage:        2 bytes
  7119 ;; Hardware stack levels used: 1
  7120 ;; This function calls:
  7121 ;;		Nothing
  7122 ;; This function is called by:
  7123 ;;		_main
  7124 ;; This function uses a non-reentrant model
  7125 ;;
  7126                           
  7127                           	psect	text29
  7128   006C62                     __ptext29:
  7129                           	callstack 0
  7130   006C62                     _initialize_var:
  7131                           	callstack 30
  7132   006C62                     
  7133                           ;calculator_function/calculator_functions.c: 225:      keypad_value = 0;
  7134   006C62  0E00               	movlw	0
  7135   006C64  0100               	movlb	0	; () banked
  7136   006C66  6FDE               	movwf	_keypad_value& (0+255),b
  7137                           
  7138                           ;calculator_function/calculator_functions.c: 227:      lcd_counter = 1;
  7139   006C68  0E01               	movlw	1
  7140   006C6A  6FFF               	movwf	_lcd_counter& (0+255),b
  7141                           
  7142                           ;calculator_function/calculator_functions.c: 228:      counter_num1 = 0;
  7143   006C6C  0E00               	movlw	0
  7144   006C6E  6FF8               	movwf	_counter_num1& (0+255),b
  7145                           
  7146                           ;calculator_function/calculator_functions.c: 229:      counter_num2 = 0;
  7147   006C70  0E00               	movlw	0
  7148   006C72  6FF7               	movwf	_counter_num2& (0+255),b
  7149                           
  7150                           ;calculator_function/calculator_functions.c: 230:      counter_num3 = 0;
  7151   006C74  0E00               	movlw	0
  7152   006C76  6FF6               	movwf	_counter_num3& (0+255),b
  7153                           
  7154                           ;calculator_function/calculator_functions.c: 231:      operation = 0;
  7155   006C78  0E00               	movlw	0
  7156   006C7A  6FF5               	movwf	_operation& (0+255),b
  7157                           
  7158                           ;calculator_function/calculator_functions.c: 232:      operation2 = 0;
  7159   006C7C  0E00               	movlw	0
  7160   006C7E  6FF4               	movwf	_operation2& (0+255),b
  7161                           
  7162                           ;calculator_function/calculator_functions.c: 233:      operation3 = 0;
  7163   006C80  0E00               	movlw	0
  7164   006C82  6FF3               	movwf	_operation3& (0+255),b
  7165                           
  7166                           ;calculator_function/calculator_functions.c: 235:      for(int count = 0;count< 3;count+
      +                          +){
  7167   006C84  0E00               	movlw	0
  7168   006C86  6E02               	movwf	(initialize_var@count+1)^0,c
  7169   006C88  0E00               	movlw	0
  7170   006C8A  6E01               	movwf	initialize_var@count^0,c
  7171   006C8C                     l7139:
  7172                           
  7173                           ;calculator_function/calculator_functions.c: 236:      num1[count] = 0;
  7174   006C8C  0EF0               	movlw	low _num1
  7175   006C8E  2401               	addwf	initialize_var@count^0,w,c
  7176   006C90  6ED9               	movwf	fsr2l,c
  7177   006C92  0E01               	movlw	high _num1
  7178   006C94  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7179   006C96  6EDA               	movwf	fsr2h,c
  7180   006C98  6ADF               	clrf	indf2,c
  7181                           
  7182                           ;calculator_function/calculator_functions.c: 237:      num2[count] = 0;
  7183   006C9A  0EEC               	movlw	low _num2
  7184   006C9C  2401               	addwf	initialize_var@count^0,w,c
  7185   006C9E  6ED9               	movwf	fsr2l,c
  7186   006CA0  0E01               	movlw	high _num2
  7187   006CA2  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7188   006CA4  6EDA               	movwf	fsr2h,c
  7189   006CA6  6ADF               	clrf	indf2,c
  7190                           
  7191                           ;calculator_function/calculator_functions.c: 238:      num3[count] = 0;
  7192   006CA8  0EE8               	movlw	low _num3
  7193   006CAA  2401               	addwf	initialize_var@count^0,w,c
  7194   006CAC  6ED9               	movwf	fsr2l,c
  7195   006CAE  0E01               	movlw	high _num3
  7196   006CB0  2002               	addwfc	(initialize_var@count+1)^0,w,c
  7197   006CB2  6EDA               	movwf	fsr2h,c
  7198   006CB4  6ADF               	clrf	indf2,c
  7199   006CB6                     
  7200                           ;calculator_function/calculator_functions.c: 239:      }
  7201   006CB6  4A01               	infsnz	initialize_var@count^0,f,c
  7202   006CB8  2A02               	incf	(initialize_var@count+1)^0,f,c
  7203   006CBA  BE02               	btfsc	(initialize_var@count+1)^0,7,c
  7204   006CBC  EF69  F036         	goto	u7371
  7205   006CC0  5002               	movf	(initialize_var@count+1)^0,w,c
  7206   006CC2  E109               	bnz	u7370
  7207   006CC4  0E03               	movlw	3
  7208   006CC6  5C01               	subwf	initialize_var@count^0,w,c
  7209   006CC8  A0D8               	btfss	status,0,c
  7210   006CCA  EF69  F036         	goto	u7371
  7211   006CCE  EF6B  F036         	goto	u7370
  7212   006CD2                     u7371:
  7213   006CD2  EF46  F036         	goto	l7139
  7214   006CD6                     u7370:
  7215   006CD6                     
  7216                           ;calculator_function/calculator_functions.c: 241:      num1_val = 0;
  7217   006CD6  0E00               	movlw	0
  7218   006CD8  0100               	movlb	0	; () banked
  7219   006CDA  6FEF               	movwf	_num1_val& (0+255),b
  7220   006CDC  0E00               	movlw	0
  7221   006CDE  6FF0               	movwf	(_num1_val+1)& (0+255),b
  7222   006CE0  0E00               	movlw	0
  7223   006CE2  6FF1               	movwf	(_num1_val+2)& (0+255),b
  7224   006CE4  0E00               	movlw	0
  7225   006CE6  6FF2               	movwf	(_num1_val+3)& (0+255),b
  7226                           
  7227                           ;calculator_function/calculator_functions.c: 242:      num2_val = 0;
  7228   006CE8  0E00               	movlw	0
  7229   006CEA  6FEB               	movwf	_num2_val& (0+255),b
  7230   006CEC  0E00               	movlw	0
  7231   006CEE  6FEC               	movwf	(_num2_val+1)& (0+255),b
  7232   006CF0  0E00               	movlw	0
  7233   006CF2  6FED               	movwf	(_num2_val+2)& (0+255),b
  7234   006CF4  0E00               	movlw	0
  7235   006CF6  6FEE               	movwf	(_num2_val+3)& (0+255),b
  7236                           
  7237                           ;calculator_function/calculator_functions.c: 243:      num3_val = 0;
  7238   006CF8  0E00               	movlw	0
  7239   006CFA  6FE7               	movwf	_num3_val& (0+255),b
  7240   006CFC  0E00               	movlw	0
  7241   006CFE  6FE8               	movwf	(_num3_val+1)& (0+255),b
  7242   006D00  0E00               	movlw	0
  7243   006D02  6FE9               	movwf	(_num3_val+2)& (0+255),b
  7244   006D04  0E00               	movlw	0
  7245   006D06  6FEA               	movwf	(_num3_val+3)& (0+255),b
  7246                           
  7247                           ;calculator_function/calculator_functions.c: 245:      result = 0;
  7248   006D08  0E00               	movlw	0
  7249   006D0A  6FE3               	movwf	_result& (0+255),b
  7250   006D0C  0E00               	movlw	0
  7251   006D0E  6FE4               	movwf	(_result+1)& (0+255),b
  7252   006D10  0E00               	movlw	0
  7253   006D12  6FE5               	movwf	(_result+2)& (0+255),b
  7254   006D14  0E00               	movlw	0
  7255   006D16  6FE6               	movwf	(_result+3)& (0+255),b
  7256                           
  7257                           ;calculator_function/calculator_functions.c: 246:      total_result = 0;
  7258   006D18  0E00               	movlw	0
  7259   006D1A  6FDF               	movwf	_total_result& (0+255),b
  7260   006D1C  0E00               	movlw	0
  7261   006D1E  6FE0               	movwf	(_total_result+1)& (0+255),b
  7262   006D20  0E00               	movlw	0
  7263   006D22  6FE1               	movwf	(_total_result+2)& (0+255),b
  7264   006D24  0E00               	movlw	0
  7265   006D26  6FE2               	movwf	(_total_result+3)& (0+255),b
  7266   006D28                     
  7267                           ; BSR set to: 0
  7268   006D28  0012               	return		;funcret
  7269   006D2A                     __end_of_initialize_var:
  7270                           	callstack 0
  7271                           
  7272 ;; *************** function _get_third_number_and_third_operartion *****************
  7273 ;; Defined at:
  7274 ;;		line 72 in file "calculator_function/calculator_functions.c"
  7275 ;; Parameters:    Size  Location     Type
  7276 ;;  num             2   28[COMRAM] PTR unsigned char 
  7277 ;;		 -> num3(4), 
  7278 ;;  counter_num     1   30[COMRAM] PTR unsigned char 
  7279 ;;		 -> counter_num3(1), 
  7280 ;;  lcd_counter     1   31[COMRAM] PTR unsigned char 
  7281 ;;		 -> lcd_counter(1), 
  7282 ;;  operation       1   32[COMRAM] PTR unsigned char 
  7283 ;;		 -> operation3(1), 
  7284 ;; Auto vars:     Size  Location     Type
  7285 ;;  keypad_value    1   35[COMRAM] unsigned char 
  7286 ;; Return value:  Size  Location     Type
  7287 ;;                  1    wreg      void 
  7288 ;; Registers used:
  7289 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7290 ;; Tracked objects:
  7291 ;;		On entry : 0/0
  7292 ;;		On exit  : 0/0
  7293 ;;		Unchanged: 0/0
  7294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7295 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7296 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7297 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7298 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7299 ;;Total ram usage:        8 bytes
  7300 ;; Hardware stack levels used: 1
  7301 ;; Hardware stack levels required when called: 5
  7302 ;; This function calls:
  7303 ;;		_ecu_keypad_get_value
  7304 ;;		_lcd_4bit_send_char_data_pos
  7305 ;;		_lcd_4bit_send_string_pos
  7306 ;; This function is called by:
  7307 ;;		_main
  7308 ;; This function uses a non-reentrant model
  7309 ;;
  7310                           
  7311                           	psect	text30
  7312   005384                     __ptext30:
  7313                           	callstack 0
  7314   005384                     _get_third_number_and_third_operartion:
  7315                           	callstack 25
  7316   005384                     
  7317                           ;calculator_function/calculator_functions.c: 72: void get_third_number_and_third_operart
      +                          ion(uint8 *num,uint8 *counter_num,uint8 *lcd_counter,;calculator_function/calculator_fun
      +                          ctions.c: 73:                                            uint8 *operation);calculator_fu
      +                          nction/calculator_functions.c: 74: {;calculator_function/calculator_functions.c: 75: uin
      +                          t8 keypad_value = 0;
  7318   005384  0E00               	movlw	0
  7319   005386  6E24               	movwf	get_third_number_and_third_operartion@keypad_value^0,c
  7320   005388                     l8731:
  7321                           
  7322                           ;calculator_function/calculator_functions.c: 78:         ecu_keypad_get_value(&keypad,&k
      +                          eypad_value);
  7323   005388  0ED6               	movlw	low _keypad
  7324   00538A  6E0B               	movwf	ecu_keypad_get_value@keypad^0,c
  7325   00538C  0E01               	movlw	high _keypad
  7326   00538E  6E0C               	movwf	(ecu_keypad_get_value@keypad+1)^0,c
  7327   005390  0E24               	movlw	low get_third_number_and_third_operartion@keypad_value
  7328   005392  6E0D               	movwf	ecu_keypad_get_value@value^0,c
  7329   005394  EC25  F033         	call	_ecu_keypad_get_value	;wreg free
  7330   005398                     
  7331                           ;calculator_function/calculator_functions.c: 79:         _delay((unsigned long)((150)*(8
      +                          000000ul/4000.0)));
  7332   005398  0E02               	movlw	2
  7333   00539A  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7334   00539C  0E86               	movlw	134
  7335   00539E  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7336   0053A0  0E99               	movlw	153
  7337   0053A2                     u13497:
  7338   0053A2  2EE8               	decfsz	wreg,f,c
  7339   0053A4  D7FE               	bra	u13497
  7340   0053A6  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7341   0053A8  D7FC               	bra	u13497
  7342   0053AA  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7343   0053AC  D7FA               	bra	u13497
  7344   0053AE  0000               	nop	
  7345   0053B0                     
  7346                           ;calculator_function/calculator_functions.c: 80:         }while((keypad_value == 0) );
  7347   0053B0  5024               	movf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7348   0053B2  B4D8               	btfsc	status,2,c
  7349   0053B4  EFDE  F029         	goto	u8741
  7350   0053B8  EFE0  F029         	goto	u8740
  7351   0053BC                     u8741:
  7352   0053BC  EFC4  F029         	goto	l8731
  7353   0053C0                     u8740:
  7354   0053C0                     
  7355                           ;calculator_function/calculator_functions.c: 82:         if(keypad_value == '#'){
  7356   0053C0  0E23               	movlw	35
  7357   0053C2  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7358   0053C4  A4D8               	btfss	status,2,c
  7359   0053C6  EFE7  F029         	goto	u8751
  7360   0053CA  EFE9  F029         	goto	u8750
  7361   0053CE                     u8751:
  7362   0053CE  EF0C  F02A         	goto	l8743
  7363   0053D2                     u8750:
  7364   0053D2                     
  7365                           ;calculator_function/calculator_functions.c: 83:            (*counter_num)--;
  7366   0053D2  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7367   0053D4  6ED9               	movwf	fsr2l,c
  7368   0053D6  6ADA               	clrf	fsr2h,c
  7369   0053D8  06DF               	decf	indf2,f,c
  7370                           
  7371                           ;calculator_function/calculator_functions.c: 84:            num[*counter_num] = '\0';
  7372   0053DA  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7373   0053DC  6ED9               	movwf	fsr2l,c
  7374   0053DE  6ADA               	clrf	fsr2h,c
  7375   0053E0  50DF               	movf	indf2,w,c
  7376   0053E2  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7377   0053E4  5022               	movf	??_get_third_number_and_third_operartion^0,w,c
  7378   0053E6  241D               	addwf	get_third_number_and_third_operartion@num^0,w,c
  7379   0053E8  6ED9               	movwf	fsr2l,c
  7380   0053EA  0E00               	movlw	0
  7381   0053EC  201E               	addwfc	(get_third_number_and_third_operartion@num+1)^0,w,c
  7382   0053EE  6EDA               	movwf	fsr2h,c
  7383   0053F0  6ADF               	clrf	indf2,c
  7384                           
  7385                           ;calculator_function/calculator_functions.c: 85:            (*lcd_counter)--;
  7386   0053F2  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7387   0053F4  6ED9               	movwf	fsr2l,c
  7388   0053F6  6ADA               	clrf	fsr2h,c
  7389   0053F8  06DF               	decf	indf2,f,c
  7390   0053FA                     
  7391                           ;calculator_function/calculator_functions.c: 86:            lcd_4bit_send_char_data_pos(
      +                          &lcd1,1,*lcd_counter,' ');
  7392   0053FA  0EF9               	movlw	low _lcd1
  7393   0053FC  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7394   0053FE  0E01               	movlw	1
  7395   005400  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7396   005402  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7397   005404  6ED9               	movwf	fsr2l,c
  7398   005406  6ADA               	clrf	fsr2h,c
  7399   005408  50DF               	movf	indf2,w,c
  7400   00540A  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7401   00540C  0E20               	movlw	32
  7402   00540E  6E1B               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  7403   005410  EC30  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7404                           
  7405                           ;calculator_function/calculator_functions.c: 88:         }
  7406   005414  EFC4  F029         	goto	l8731
  7407   005418                     l8743:
  7408                           
  7409                           ;calculator_function/calculator_functions.c: 90:             if(keypad_value == '+'||key
      +                          pad_value == '-'||keypad_value == '*'||keypad_value == '/'){
  7410   005418  0E2B               	movlw	43
  7411   00541A  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7412   00541C  B4D8               	btfsc	status,2,c
  7413   00541E  EF13  F02A         	goto	u8761
  7414   005422  EF15  F02A         	goto	u8760
  7415   005426                     u8761:
  7416   005426  EF30  F02A         	goto	l8751
  7417   00542A                     u8760:
  7418   00542A  0E2D               	movlw	45
  7419   00542C  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7420   00542E  B4D8               	btfsc	status,2,c
  7421   005430  EF1C  F02A         	goto	u8771
  7422   005434  EF1E  F02A         	goto	u8770
  7423   005438                     u8771:
  7424   005438  EF30  F02A         	goto	l8751
  7425   00543C                     u8770:
  7426   00543C  0E2A               	movlw	42
  7427   00543E  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7428   005440  B4D8               	btfsc	status,2,c
  7429   005442  EF25  F02A         	goto	u8781
  7430   005446  EF27  F02A         	goto	u8780
  7431   00544A                     u8781:
  7432   00544A  EF30  F02A         	goto	l8751
  7433   00544E                     u8780:
  7434   00544E  0E2F               	movlw	47
  7435   005450  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7436   005452  A4D8               	btfss	status,2,c
  7437   005454  EF2E  F02A         	goto	u8791
  7438   005458  EF30  F02A         	goto	u8790
  7439   00545C                     u8791:
  7440   00545C  EFA4  F02A         	goto	l8765
  7441   005460                     u8790:
  7442   005460                     l8751:
  7443                           
  7444                           ;calculator_function/calculator_functions.c: 91:                 if(num[0] == 0){
  7445   005460  C01D  FFD9         	movff	get_third_number_and_third_operartion@num,fsr2l
  7446   005464  C01E  FFDA         	movff	get_third_number_and_third_operartion@num+1,fsr2h
  7447   005468  50DF               	movf	indf2,w,c
  7448   00546A  A4D8               	btfss	status,2,c
  7449   00546C  EF3A  F02A         	goto	u8801
  7450   005470  EF3C  F02A         	goto	u8800
  7451   005474                     u8801:
  7452   005474  EF70  F02A         	goto	l8759
  7453   005478                     u8800:
  7454   005478                     
  7455                           ;calculator_function/calculator_functions.c: 92:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"syntax error !");
  7456   005478  0EF9               	movlw	low _lcd1
  7457   00547A  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7458   00547C  0E04               	movlw	4
  7459   00547E  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7460   005480  0E01               	movlw	1
  7461   005482  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7462   005484  0EB6               	movlw	low STR_1
  7463   005486  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7464   005488  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7465   00548A  A4D8               	btfss	status,2,c
  7466   00548C  0E10               	movlw	high __smallconst
  7467   00548E  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7468   005490  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7469   005494                     
  7470                           ;calculator_function/calculator_functions.c: 93:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7471   005494  0E06               	movlw	6
  7472   005496  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7473   005498  0E13               	movlw	19
  7474   00549A  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7475   00549C  0EAE               	movlw	174
  7476   00549E                     u13507:
  7477   00549E  2EE8               	decfsz	wreg,f,c
  7478   0054A0  D7FE               	bra	u13507
  7479   0054A2  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7480   0054A4  D7FC               	bra	u13507
  7481   0054A6  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7482   0054A8  D7FA               	bra	u13507
  7483   0054AA                     
  7484                           ;calculator_function/calculator_functions.c: 94:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"                  ");
  7485   0054AA  0EF9               	movlw	low _lcd1
  7486   0054AC  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7487   0054AE  0E04               	movlw	4
  7488   0054B0  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7489   0054B2  0E01               	movlw	1
  7490   0054B4  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7491   0054B6  0E7A               	movlw	low (STR_8+9)
  7492   0054B8  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7493   0054BA  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7494   0054BC  A4D8               	btfss	status,2,c
  7495   0054BE  0E10               	movlw	high __smallconst
  7496   0054C0  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7497   0054C2  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7498                           
  7499                           ;calculator_function/calculator_functions.c: 95:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7500   0054C6  0E06               	movlw	6
  7501   0054C8  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7502   0054CA  0E13               	movlw	19
  7503   0054CC  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7504   0054CE  0EAE               	movlw	174
  7505   0054D0                     u13517:
  7506   0054D0  2EE8               	decfsz	wreg,f,c
  7507   0054D2  D7FE               	bra	u13517
  7508   0054D4  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7509   0054D6  D7FC               	bra	u13517
  7510   0054D8  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7511   0054DA  D7FA               	bra	u13517
  7512                           
  7513                           ;calculator_function/calculator_functions.c: 96:                 }
  7514   0054DC  EFC4  F029         	goto	l8731
  7515   0054E0                     l8759:
  7516                           
  7517                           ;calculator_function/calculator_functions.c: 98:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"hint:max 2 operation!!");
  7518   0054E0  0EF9               	movlw	low _lcd1
  7519   0054E2  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7520   0054E4  0E04               	movlw	4
  7521   0054E6  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7522   0054E8  0E01               	movlw	1
  7523   0054EA  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7524   0054EC  0E8D               	movlw	low STR_7
  7525   0054EE  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7526   0054F0  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7527   0054F2  A4D8               	btfss	status,2,c
  7528   0054F4  0E10               	movlw	high __smallconst
  7529   0054F6  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7530   0054F8  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7531   0054FC                     
  7532                           ;calculator_function/calculator_functions.c: 99:                  _delay((unsigned long)
      +                          ((500)*(8000000ul/4000.0)));
  7533   0054FC  0E06               	movlw	6
  7534   0054FE  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7535   005500  0E13               	movlw	19
  7536   005502  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7537   005504  0EAE               	movlw	174
  7538   005506                     u13527:
  7539   005506  2EE8               	decfsz	wreg,f,c
  7540   005508  D7FE               	bra	u13527
  7541   00550A  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7542   00550C  D7FC               	bra	u13527
  7543   00550E  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7544   005510  D7FA               	bra	u13527
  7545   005512                     
  7546                           ;calculator_function/calculator_functions.c: 100:                  lcd_4bit_send_string_
      +                          pos(&lcd1,4,1,"                           ");
  7547   005512  0EF9               	movlw	low _lcd1
  7548   005514  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7549   005516  0E04               	movlw	4
  7550   005518  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7551   00551A  0E01               	movlw	1
  7552   00551C  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7553   00551E  0E71               	movlw	low STR_8
  7554   005520  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7555   005522  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7556   005524  A4D8               	btfss	status,2,c
  7557   005526  0E10               	movlw	high __smallconst
  7558   005528  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7559   00552A  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7560                           
  7561                           ;calculator_function/calculator_functions.c: 101:                  _delay((unsigned long
      +                          )((500)*(8000000ul/4000.0)));
  7562   00552E  0E06               	movlw	6
  7563   005530  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7564   005532  0E13               	movlw	19
  7565   005534  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7566   005536  0EAE               	movlw	174
  7567   005538                     u13537:
  7568   005538  2EE8               	decfsz	wreg,f,c
  7569   00553A  D7FE               	bra	u13537
  7570   00553C  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7571   00553E  D7FC               	bra	u13537
  7572   005540  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7573   005542  D7FA               	bra	u13537
  7574   005544  EFC4  F029         	goto	l8731
  7575   005548                     l8765:
  7576   005548  0E3D               	movlw	61
  7577   00554A  1824               	xorwf	get_third_number_and_third_operartion@keypad_value^0,w,c
  7578   00554C  A4D8               	btfss	status,2,c
  7579   00554E  EFAB  F02A         	goto	u8811
  7580   005552  EFAD  F02A         	goto	u8810
  7581   005556                     u8811:
  7582   005556  EFC5  F02A         	goto	l8775
  7583   00555A                     u8810:
  7584   00555A                     
  7585                           ;calculator_function/calculator_functions.c: 106:                 *operation = keypad_va
      +                          lue;
  7586   00555A  5021               	movf	get_third_number_and_third_operartion@operation^0,w,c
  7587   00555C  6ED9               	movwf	fsr2l,c
  7588   00555E  6ADA               	clrf	fsr2h,c
  7589   005560  C024  FFDF         	movff	get_third_number_and_third_operartion@keypad_value,indf2
  7590   005564                     
  7591                           ;calculator_function/calculator_functions.c: 107:                 lcd_4bit_send_char_dat
      +                          a_pos(&lcd1,1,*lcd_counter,keypad_value);
  7592   005564  0EF9               	movlw	low _lcd1
  7593   005566  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7594   005568  0E01               	movlw	1
  7595   00556A  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7596   00556C  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7597   00556E  6ED9               	movwf	fsr2l,c
  7598   005570  6ADA               	clrf	fsr2h,c
  7599   005572  50DF               	movf	indf2,w,c
  7600   005574  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7601   005576  C024  F01B         	movff	get_third_number_and_third_operartion@keypad_value,lcd_4bit_send_char_data_pos@da
      +                          ta
  7602   00557A  EC30  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7603   00557E                     
  7604                           ;calculator_function/calculator_functions.c: 108:                 (*lcd_counter)++;
  7605   00557E  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7606   005580  6ED9               	movwf	fsr2l,c
  7607   005582  6ADA               	clrf	fsr2h,c
  7608   005584  2ADF               	incf	indf2,f,c
  7609                           
  7610                           ;calculator_function/calculator_functions.c: 109:                 break;
  7611   005586  EF28  F02B         	goto	l92
  7612   00558A                     l8775:
  7613                           
  7614                           ;calculator_function/calculator_functions.c: 112:                 if((*counter_num) < 4)
      +                          {
  7615   00558A  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7616   00558C  6ED9               	movwf	fsr2l,c
  7617   00558E  6ADA               	clrf	fsr2h,c
  7618   005590  0E04               	movlw	4
  7619   005592  60DF               	cpfslt	indf2,c
  7620   005594  EFCE  F02A         	goto	u8821
  7621   005598  EFD0  F02A         	goto	u8820
  7622   00559C                     u8821:
  7623   00559C  EFF4  F02A         	goto	l8785
  7624   0055A0                     u8820:
  7625   0055A0                     
  7626                           ;calculator_function/calculator_functions.c: 113:                     num[*counter_num] 
      +                          = keypad_value;
  7627   0055A0  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7628   0055A2  6ED9               	movwf	fsr2l,c
  7629   0055A4  6ADA               	clrf	fsr2h,c
  7630   0055A6  50DF               	movf	indf2,w,c
  7631   0055A8  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7632   0055AA  5022               	movf	??_get_third_number_and_third_operartion^0,w,c
  7633   0055AC  241D               	addwf	get_third_number_and_third_operartion@num^0,w,c
  7634   0055AE  6ED9               	movwf	fsr2l,c
  7635   0055B0  0E00               	movlw	0
  7636   0055B2  201E               	addwfc	(get_third_number_and_third_operartion@num+1)^0,w,c
  7637   0055B4  6EDA               	movwf	fsr2h,c
  7638   0055B6  C024  FFDF         	movff	get_third_number_and_third_operartion@keypad_value,indf2
  7639   0055BA                     
  7640                           ;calculator_function/calculator_functions.c: 114:                     lcd_4bit_send_char
      +                          _data_pos(&lcd1,1,*lcd_counter,keypad_value);
  7641   0055BA  0EF9               	movlw	low _lcd1
  7642   0055BC  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7643   0055BE  0E01               	movlw	1
  7644   0055C0  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7645   0055C2  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7646   0055C4  6ED9               	movwf	fsr2l,c
  7647   0055C6  6ADA               	clrf	fsr2h,c
  7648   0055C8  50DF               	movf	indf2,w,c
  7649   0055CA  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7650   0055CC  C024  F01B         	movff	get_third_number_and_third_operartion@keypad_value,lcd_4bit_send_char_data_pos@da
      +                          ta
  7651   0055D0  EC30  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7652   0055D4                     
  7653                           ;calculator_function/calculator_functions.c: 115:                     (*lcd_counter)++;
  7654   0055D4  5020               	movf	get_third_number_and_third_operartion@lcd_counter^0,w,c
  7655   0055D6  6ED9               	movwf	fsr2l,c
  7656   0055D8  6ADA               	clrf	fsr2h,c
  7657   0055DA  2ADF               	incf	indf2,f,c
  7658   0055DC                     
  7659                           ;calculator_function/calculator_functions.c: 116:                     (*counter_num)++;
  7660   0055DC  501F               	movf	get_third_number_and_third_operartion@counter_num^0,w,c
  7661   0055DE  6ED9               	movwf	fsr2l,c
  7662   0055E0  6ADA               	clrf	fsr2h,c
  7663   0055E2  2ADF               	incf	indf2,f,c
  7664                           
  7665                           ;calculator_function/calculator_functions.c: 117:                 }
  7666   0055E4  EFC4  F029         	goto	l8731
  7667   0055E8                     l8785:
  7668                           
  7669                           ;calculator_function/calculator_functions.c: 119:                     lcd_4bit_send_stri
      +                          ng_pos(&lcd1,4,1,"hint:max 4 digits");
  7670   0055E8  0EF9               	movlw	low _lcd1
  7671   0055EA  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7672   0055EC  0E04               	movlw	4
  7673   0055EE  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7674   0055F0  0E01               	movlw	1
  7675   0055F2  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7676   0055F4  0EA4               	movlw	low STR_3
  7677   0055F6  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7678   0055F8  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7679   0055FA  A4D8               	btfss	status,2,c
  7680   0055FC  0E10               	movlw	high __smallconst
  7681   0055FE  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7682   005600  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7683   005604                     
  7684                           ;calculator_function/calculator_functions.c: 120:                      _delay((unsigned 
      +                          long)((500)*(8000000ul/4000.0)));
  7685   005604  0E06               	movlw	6
  7686   005606  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7687   005608  0E13               	movlw	19
  7688   00560A  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7689   00560C  0EAE               	movlw	174
  7690   00560E                     u13547:
  7691   00560E  2EE8               	decfsz	wreg,f,c
  7692   005610  D7FE               	bra	u13547
  7693   005612  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7694   005614  D7FC               	bra	u13547
  7695   005616  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7696   005618  D7FA               	bra	u13547
  7697   00561A                     
  7698                           ;calculator_function/calculator_functions.c: 121:                      lcd_4bit_send_str
      +                          ing_pos(&lcd1,4,1,"                  ");
  7699   00561A  0EF9               	movlw	low _lcd1
  7700   00561C  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7701   00561E  0E04               	movlw	4
  7702   005620  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7703   005622  0E01               	movlw	1
  7704   005624  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7705   005626  0E7A               	movlw	low (STR_8+9)
  7706   005628  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7707   00562A  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7708   00562C  A4D8               	btfss	status,2,c
  7709   00562E  0E10               	movlw	high __smallconst
  7710   005630  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7711   005632  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7712                           
  7713                           ;calculator_function/calculator_functions.c: 122:                      _delay((unsigned 
      +                          long)((500)*(8000000ul/4000.0)));
  7714   005636  0E06               	movlw	6
  7715   005638  6E23               	movwf	(??_get_third_number_and_third_operartion+1)^0,c
  7716   00563A  0E13               	movlw	19
  7717   00563C  6E22               	movwf	??_get_third_number_and_third_operartion^0,c
  7718   00563E  0EAE               	movlw	174
  7719   005640                     u13557:
  7720   005640  2EE8               	decfsz	wreg,f,c
  7721   005642  D7FE               	bra	u13557
  7722   005644  2E22               	decfsz	??_get_third_number_and_third_operartion^0,f,c
  7723   005646  D7FC               	bra	u13557
  7724   005648  2E23               	decfsz	(??_get_third_number_and_third_operartion+1)^0,f,c
  7725   00564A  D7FA               	bra	u13557
  7726   00564C  EFC4  F029         	goto	l8731
  7727   005650                     l92:
  7728   005650  0012               	return		;funcret
  7729   005652                     __end_of_get_third_number_and_third_operartion:
  7730                           	callstack 0
  7731                           
  7732 ;; *************** function _get_number_and_operartion *****************
  7733 ;; Defined at:
  7734 ;;		line 17 in file "calculator_function/calculator_functions.c"
  7735 ;; Parameters:    Size  Location     Type
  7736 ;;  num             2   28[COMRAM] PTR unsigned char 
  7737 ;;		 -> num2(4), num1(4), 
  7738 ;;  counter_num     1   30[COMRAM] PTR unsigned char 
  7739 ;;		 -> counter_num2(1), counter_num1(1), 
  7740 ;;  lcd_counter     1   31[COMRAM] PTR unsigned char 
  7741 ;;		 -> lcd_counter(1), 
  7742 ;;  operation       1   32[COMRAM] PTR unsigned char 
  7743 ;;		 -> operation2(1), operation(1), 
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;  keypad_value    1   35[COMRAM] unsigned char 
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7755 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7756 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7757 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7758 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7759 ;;Total ram usage:        8 bytes
  7760 ;; Hardware stack levels used: 1
  7761 ;; Hardware stack levels required when called: 5
  7762 ;; This function calls:
  7763 ;;		_ecu_keypad_get_value
  7764 ;;		_lcd_4bit_send_char_data_pos
  7765 ;;		_lcd_4bit_send_string_pos
  7766 ;; This function is called by:
  7767 ;;		_main
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text31
  7772   0058D8                     __ptext31:
  7773                           	callstack 0
  7774   0058D8                     _get_number_and_operartion:
  7775                           	callstack 25
  7776   0058D8                     
  7777                           ;calculator_function/calculator_functions.c: 17: void get_number_and_operartion(uint8 *n
      +                          um,uint8 *counter_num,;calculator_function/calculator_functions.c: 18:                  
      +                                        uint8 *lcd_counter,uint8 *operation);calculator_function/calculator_functi
      +                          ons.c: 19: {;calculator_function/calculator_functions.c: 20: uint8 keypad_value = 0;
  7778   0058D8  0E00               	movlw	0
  7779   0058DA  6E24               	movwf	get_number_and_operartion@keypad_value^0,c
  7780   0058DC                     l8677:
  7781                           
  7782                           ;calculator_function/calculator_functions.c: 23:         ecu_keypad_get_value(&keypad,&k
      +                          eypad_value);
  7783   0058DC  0ED6               	movlw	low _keypad
  7784   0058DE  6E0B               	movwf	ecu_keypad_get_value@keypad^0,c
  7785   0058E0  0E01               	movlw	high _keypad
  7786   0058E2  6E0C               	movwf	(ecu_keypad_get_value@keypad+1)^0,c
  7787   0058E4  0E24               	movlw	low get_number_and_operartion@keypad_value
  7788   0058E6  6E0D               	movwf	ecu_keypad_get_value@value^0,c
  7789   0058E8  EC25  F033         	call	_ecu_keypad_get_value	;wreg free
  7790   0058EC                     
  7791                           ;calculator_function/calculator_functions.c: 24:         _delay((unsigned long)((150)*(8
      +                          000000ul/4000.0)));
  7792   0058EC  0E02               	movlw	2
  7793   0058EE  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7794   0058F0  0E86               	movlw	134
  7795   0058F2  6E22               	movwf	??_get_number_and_operartion^0,c
  7796   0058F4  0E99               	movlw	153
  7797   0058F6                     u13567:
  7798   0058F6  2EE8               	decfsz	wreg,f,c
  7799   0058F8  D7FE               	bra	u13567
  7800   0058FA  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7801   0058FC  D7FC               	bra	u13567
  7802   0058FE  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7803   005900  D7FA               	bra	u13567
  7804   005902  0000               	nop	
  7805   005904                     
  7806                           ;calculator_function/calculator_functions.c: 25:         }while((keypad_value == 0) );
  7807   005904  5024               	movf	get_number_and_operartion@keypad_value^0,w,c
  7808   005906  B4D8               	btfsc	status,2,c
  7809   005908  EF88  F02C         	goto	u8651
  7810   00590C  EF8A  F02C         	goto	u8650
  7811   005910                     u8651:
  7812   005910  EF6E  F02C         	goto	l8677
  7813   005914                     u8650:
  7814   005914                     
  7815                           ;calculator_function/calculator_functions.c: 27:         if(keypad_value == '#'){
  7816   005914  0E23               	movlw	35
  7817   005916  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7818   005918  A4D8               	btfss	status,2,c
  7819   00591A  EF91  F02C         	goto	u8661
  7820   00591E  EF93  F02C         	goto	u8660
  7821   005922                     u8661:
  7822   005922  EFB6  F02C         	goto	l8689
  7823   005926                     u8660:
  7824   005926                     
  7825                           ;calculator_function/calculator_functions.c: 28:            (*counter_num)--;
  7826   005926  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7827   005928  6ED9               	movwf	fsr2l,c
  7828   00592A  6ADA               	clrf	fsr2h,c
  7829   00592C  06DF               	decf	indf2,f,c
  7830                           
  7831                           ;calculator_function/calculator_functions.c: 29:            num[*counter_num] = '\0';
  7832   00592E  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  7833   005930  6ED9               	movwf	fsr2l,c
  7834   005932  6ADA               	clrf	fsr2h,c
  7835   005934  50DF               	movf	indf2,w,c
  7836   005936  6E22               	movwf	??_get_number_and_operartion^0,c
  7837   005938  5022               	movf	??_get_number_and_operartion^0,w,c
  7838   00593A  241D               	addwf	get_number_and_operartion@num^0,w,c
  7839   00593C  6ED9               	movwf	fsr2l,c
  7840   00593E  0E00               	movlw	0
  7841   005940  201E               	addwfc	(get_number_and_operartion@num+1)^0,w,c
  7842   005942  6EDA               	movwf	fsr2h,c
  7843   005944  6ADF               	clrf	indf2,c
  7844                           
  7845                           ;calculator_function/calculator_functions.c: 30:            (*lcd_counter)--;
  7846   005946  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7847   005948  6ED9               	movwf	fsr2l,c
  7848   00594A  6ADA               	clrf	fsr2h,c
  7849   00594C  06DF               	decf	indf2,f,c
  7850   00594E                     
  7851                           ;calculator_function/calculator_functions.c: 31:            lcd_4bit_send_char_data_pos(
      +                          &lcd1,1,*lcd_counter,' ');
  7852   00594E  0EF9               	movlw	low _lcd1
  7853   005950  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7854   005952  0E01               	movlw	1
  7855   005954  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7856   005956  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7857   005958  6ED9               	movwf	fsr2l,c
  7858   00595A  6ADA               	clrf	fsr2h,c
  7859   00595C  50DF               	movf	indf2,w,c
  7860   00595E  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  7861   005960  0E20               	movlw	32
  7862   005962  6E1B               	movwf	lcd_4bit_send_char_data_pos@data^0,c
  7863   005964  EC30  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  7864                           
  7865                           ;calculator_function/calculator_functions.c: 33:         }
  7866   005968  EF6E  F02C         	goto	l8677
  7867   00596C                     l8689:
  7868                           
  7869                           ;calculator_function/calculator_functions.c: 35:             if((keypad_value == '+'||ke
      +                          ypad_value == '-'||keypad_value == '*'||keypad_value == '/'||keypad_value == '=')){
  7870   00596C  0E2B               	movlw	43
  7871   00596E  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7872   005970  B4D8               	btfsc	status,2,c
  7873   005972  EFBD  F02C         	goto	u8671
  7874   005976  EFBF  F02C         	goto	u8670
  7875   00597A                     u8671:
  7876   00597A  EFE3  F02C         	goto	l8699
  7877   00597E                     u8670:
  7878   00597E  0E2D               	movlw	45
  7879   005980  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7880   005982  B4D8               	btfsc	status,2,c
  7881   005984  EFC6  F02C         	goto	u8681
  7882   005988  EFC8  F02C         	goto	u8680
  7883   00598C                     u8681:
  7884   00598C  EFE3  F02C         	goto	l8699
  7885   005990                     u8680:
  7886   005990  0E2A               	movlw	42
  7887   005992  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7888   005994  B4D8               	btfsc	status,2,c
  7889   005996  EFCF  F02C         	goto	u8691
  7890   00599A  EFD1  F02C         	goto	u8690
  7891   00599E                     u8691:
  7892   00599E  EFE3  F02C         	goto	l8699
  7893   0059A2                     u8690:
  7894   0059A2  0E2F               	movlw	47
  7895   0059A4  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7896   0059A6  B4D8               	btfsc	status,2,c
  7897   0059A8  EFD8  F02C         	goto	u8701
  7898   0059AC  EFDA  F02C         	goto	u8700
  7899   0059B0                     u8701:
  7900   0059B0  EFE3  F02C         	goto	l8699
  7901   0059B4                     u8700:
  7902   0059B4  0E3D               	movlw	61
  7903   0059B6  1824               	xorwf	get_number_and_operartion@keypad_value^0,w,c
  7904   0059B8  A4D8               	btfss	status,2,c
  7905   0059BA  EFE1  F02C         	goto	u8711
  7906   0059BE  EFE3  F02C         	goto	u8710
  7907   0059C2                     u8711:
  7908   0059C2  EF3B  F02D         	goto	l8713
  7909   0059C6                     u8710:
  7910   0059C6                     l8699:
  7911                           
  7912                           ;calculator_function/calculator_functions.c: 36:                 if(num[0] == 0){
  7913   0059C6  C01D  FFD9         	movff	get_number_and_operartion@num,fsr2l
  7914   0059CA  C01E  FFDA         	movff	get_number_and_operartion@num+1,fsr2h
  7915   0059CE  50DF               	movf	indf2,w,c
  7916   0059D0  A4D8               	btfss	status,2,c
  7917   0059D2  EFED  F02C         	goto	u8721
  7918   0059D6  EFEF  F02C         	goto	u8720
  7919   0059DA                     u8721:
  7920   0059DA  EF23  F02D         	goto	l8707
  7921   0059DE                     u8720:
  7922   0059DE                     
  7923                           ;calculator_function/calculator_functions.c: 37:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"syntax error !");
  7924   0059DE  0EF9               	movlw	low _lcd1
  7925   0059E0  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7926   0059E2  0E04               	movlw	4
  7927   0059E4  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7928   0059E6  0E01               	movlw	1
  7929   0059E8  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7930   0059EA  0EB6               	movlw	low STR_1
  7931   0059EC  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7932   0059EE  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7933   0059F0  A4D8               	btfss	status,2,c
  7934   0059F2  0E10               	movlw	high __smallconst
  7935   0059F4  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7936   0059F6  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7937   0059FA                     
  7938                           ;calculator_function/calculator_functions.c: 38:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7939   0059FA  0E06               	movlw	6
  7940   0059FC  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7941   0059FE  0E13               	movlw	19
  7942   005A00  6E22               	movwf	??_get_number_and_operartion^0,c
  7943   005A02  0EAE               	movlw	174
  7944   005A04                     u13577:
  7945   005A04  2EE8               	decfsz	wreg,f,c
  7946   005A06  D7FE               	bra	u13577
  7947   005A08  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7948   005A0A  D7FC               	bra	u13577
  7949   005A0C  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7950   005A0E  D7FA               	bra	u13577
  7951   005A10                     
  7952                           ;calculator_function/calculator_functions.c: 39:                 lcd_4bit_send_string_po
      +                          s(&lcd1,4,1,"                  ");
  7953   005A10  0EF9               	movlw	low _lcd1
  7954   005A12  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  7955   005A14  0E04               	movlw	4
  7956   005A16  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  7957   005A18  0E01               	movlw	1
  7958   005A1A  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  7959   005A1C  0E7A               	movlw	low (STR_8+9)
  7960   005A1E  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  7961   005A20  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  7962   005A22  A4D8               	btfss	status,2,c
  7963   005A24  0E10               	movlw	high __smallconst
  7964   005A26  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  7965   005A28  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  7966                           
  7967                           ;calculator_function/calculator_functions.c: 40:                 _delay((unsigned long)(
      +                          (500)*(8000000ul/4000.0)));
  7968   005A2C  0E06               	movlw	6
  7969   005A2E  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  7970   005A30  0E13               	movlw	19
  7971   005A32  6E22               	movwf	??_get_number_and_operartion^0,c
  7972   005A34  0EAE               	movlw	174
  7973   005A36                     u13587:
  7974   005A36  2EE8               	decfsz	wreg,f,c
  7975   005A38  D7FE               	bra	u13587
  7976   005A3A  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  7977   005A3C  D7FC               	bra	u13587
  7978   005A3E  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  7979   005A40  D7FA               	bra	u13587
  7980                           
  7981                           ;calculator_function/calculator_functions.c: 41:                 }
  7982   005A42  EF6E  F02C         	goto	l8677
  7983   005A46                     l8707:
  7984                           
  7985                           ;calculator_function/calculator_functions.c: 43:                 *operation = keypad_val
      +                          ue;
  7986   005A46  5021               	movf	get_number_and_operartion@operation^0,w,c
  7987   005A48  6ED9               	movwf	fsr2l,c
  7988   005A4A  6ADA               	clrf	fsr2h,c
  7989   005A4C  C024  FFDF         	movff	get_number_and_operartion@keypad_value,indf2
  7990   005A50                     
  7991                           ;calculator_function/calculator_functions.c: 44:                 lcd_4bit_send_char_data
      +                          _pos(&lcd1,1,*lcd_counter,keypad_value);
  7992   005A50  0EF9               	movlw	low _lcd1
  7993   005A52  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  7994   005A54  0E01               	movlw	1
  7995   005A56  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  7996   005A58  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  7997   005A5A  6ED9               	movwf	fsr2l,c
  7998   005A5C  6ADA               	clrf	fsr2h,c
  7999   005A5E  50DF               	movf	indf2,w,c
  8000   005A60  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  8001   005A62  C024  F01B         	movff	get_number_and_operartion@keypad_value,lcd_4bit_send_char_data_pos@data
  8002   005A66  EC30  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  8003   005A6A                     
  8004                           ;calculator_function/calculator_functions.c: 45:                 (*lcd_counter)++;
  8005   005A6A  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  8006   005A6C  6ED9               	movwf	fsr2l,c
  8007   005A6E  6ADA               	clrf	fsr2h,c
  8008   005A70  2ADF               	incf	indf2,f,c
  8009                           
  8010                           ;calculator_function/calculator_functions.c: 46:                 break;
  8011   005A72  EF9E  F02D         	goto	l72
  8012   005A76                     l8713:
  8013                           
  8014                           ;calculator_function/calculator_functions.c: 51:                 if((*counter_num) < 4){
  8015   005A76  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  8016   005A78  6ED9               	movwf	fsr2l,c
  8017   005A7A  6ADA               	clrf	fsr2h,c
  8018   005A7C  0E04               	movlw	4
  8019   005A7E  60DF               	cpfslt	indf2,c
  8020   005A80  EF44  F02D         	goto	u8731
  8021   005A84  EF46  F02D         	goto	u8730
  8022   005A88                     u8731:
  8023   005A88  EF6A  F02D         	goto	l8723
  8024   005A8C                     u8730:
  8025   005A8C                     
  8026                           ;calculator_function/calculator_functions.c: 52:                         num[*counter_nu
      +                          m] = keypad_value;
  8027   005A8C  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  8028   005A8E  6ED9               	movwf	fsr2l,c
  8029   005A90  6ADA               	clrf	fsr2h,c
  8030   005A92  50DF               	movf	indf2,w,c
  8031   005A94  6E22               	movwf	??_get_number_and_operartion^0,c
  8032   005A96  5022               	movf	??_get_number_and_operartion^0,w,c
  8033   005A98  241D               	addwf	get_number_and_operartion@num^0,w,c
  8034   005A9A  6ED9               	movwf	fsr2l,c
  8035   005A9C  0E00               	movlw	0
  8036   005A9E  201E               	addwfc	(get_number_and_operartion@num+1)^0,w,c
  8037   005AA0  6EDA               	movwf	fsr2h,c
  8038   005AA2  C024  FFDF         	movff	get_number_and_operartion@keypad_value,indf2
  8039   005AA6                     
  8040                           ;calculator_function/calculator_functions.c: 53:                         lcd_4bit_send_c
      +                          har_data_pos(&lcd1,1,*lcd_counter,keypad_value);
  8041   005AA6  0EF9               	movlw	low _lcd1
  8042   005AA8  6E18               	movwf	lcd_4bit_send_char_data_pos@lcd^0,c
  8043   005AAA  0E01               	movlw	1
  8044   005AAC  6E19               	movwf	lcd_4bit_send_char_data_pos@row^0,c
  8045   005AAE  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  8046   005AB0  6ED9               	movwf	fsr2l,c
  8047   005AB2  6ADA               	clrf	fsr2h,c
  8048   005AB4  50DF               	movf	indf2,w,c
  8049   005AB6  6E1A               	movwf	lcd_4bit_send_char_data_pos@column^0,c
  8050   005AB8  C024  F01B         	movff	get_number_and_operartion@keypad_value,lcd_4bit_send_char_data_pos@data
  8051   005ABC  EC30  F03C         	call	_lcd_4bit_send_char_data_pos	;wreg free
  8052   005AC0                     
  8053                           ;calculator_function/calculator_functions.c: 54:                         (*lcd_counter)+
      +                          +;
  8054   005AC0  5020               	movf	get_number_and_operartion@lcd_counter^0,w,c
  8055   005AC2  6ED9               	movwf	fsr2l,c
  8056   005AC4  6ADA               	clrf	fsr2h,c
  8057   005AC6  2ADF               	incf	indf2,f,c
  8058   005AC8                     
  8059                           ;calculator_function/calculator_functions.c: 55:                         (*counter_num)+
      +                          +;
  8060   005AC8  501F               	movf	get_number_and_operartion@counter_num^0,w,c
  8061   005ACA  6ED9               	movwf	fsr2l,c
  8062   005ACC  6ADA               	clrf	fsr2h,c
  8063   005ACE  2ADF               	incf	indf2,f,c
  8064                           
  8065                           ;calculator_function/calculator_functions.c: 56:                     }
  8066   005AD0  EF6E  F02C         	goto	l8677
  8067   005AD4                     l8723:
  8068                           
  8069                           ;calculator_function/calculator_functions.c: 58:                     lcd_4bit_send_strin
      +                          g_pos(&lcd1,4,1,"hint:max 4 digits");
  8070   005AD4  0EF9               	movlw	low _lcd1
  8071   005AD6  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  8072   005AD8  0E04               	movlw	4
  8073   005ADA  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  8074   005ADC  0E01               	movlw	1
  8075   005ADE  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  8076   005AE0  0EA4               	movlw	low STR_3
  8077   005AE2  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  8078   005AE4  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  8079   005AE6  A4D8               	btfss	status,2,c
  8080   005AE8  0E10               	movlw	high __smallconst
  8081   005AEA  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  8082   005AEC  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  8083   005AF0                     
  8084                           ;calculator_function/calculator_functions.c: 59:                     _delay((unsigned lo
      +                          ng)((500)*(8000000ul/4000.0)));
  8085   005AF0  0E06               	movlw	6
  8086   005AF2  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  8087   005AF4  0E13               	movlw	19
  8088   005AF6  6E22               	movwf	??_get_number_and_operartion^0,c
  8089   005AF8  0EAE               	movlw	174
  8090   005AFA                     u13597:
  8091   005AFA  2EE8               	decfsz	wreg,f,c
  8092   005AFC  D7FE               	bra	u13597
  8093   005AFE  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  8094   005B00  D7FC               	bra	u13597
  8095   005B02  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  8096   005B04  D7FA               	bra	u13597
  8097   005B06                     
  8098                           ;calculator_function/calculator_functions.c: 60:                     lcd_4bit_send_strin
      +                          g_pos(&lcd1,4,1,"                  ");
  8099   005B06  0EF9               	movlw	low _lcd1
  8100   005B08  6E18               	movwf	lcd_4bit_send_string_pos@lcd^0,c
  8101   005B0A  0E04               	movlw	4
  8102   005B0C  6E19               	movwf	lcd_4bit_send_string_pos@row^0,c
  8103   005B0E  0E01               	movlw	1
  8104   005B10  6E1A               	movwf	lcd_4bit_send_string_pos@column^0,c
  8105   005B12  0E7A               	movlw	low (STR_8+9)
  8106   005B14  6E1B               	movwf	lcd_4bit_send_string_pos@str^0,c
  8107   005B16  501B               	movf	lcd_4bit_send_string_pos@str^0,w,c
  8108   005B18  A4D8               	btfss	status,2,c
  8109   005B1A  0E10               	movlw	high __smallconst
  8110   005B1C  6E1C               	movwf	(lcd_4bit_send_string_pos@str+1)^0,c
  8111   005B1E  EC3C  F039         	call	_lcd_4bit_send_string_pos	;wreg free
  8112                           
  8113                           ;calculator_function/calculator_functions.c: 61:                     _delay((unsigned lo
      +                          ng)((500)*(8000000ul/4000.0)));
  8114   005B22  0E06               	movlw	6
  8115   005B24  6E23               	movwf	(??_get_number_and_operartion+1)^0,c
  8116   005B26  0E13               	movlw	19
  8117   005B28  6E22               	movwf	??_get_number_and_operartion^0,c
  8118   005B2A  0EAE               	movlw	174
  8119   005B2C                     u13607:
  8120   005B2C  2EE8               	decfsz	wreg,f,c
  8121   005B2E  D7FE               	bra	u13607
  8122   005B30  2E22               	decfsz	??_get_number_and_operartion^0,f,c
  8123   005B32  D7FC               	bra	u13607
  8124   005B34  2E23               	decfsz	(??_get_number_and_operartion+1)^0,f,c
  8125   005B36  D7FA               	bra	u13607
  8126   005B38  EF6E  F02C         	goto	l8677
  8127   005B3C                     l72:
  8128   005B3C  0012               	return		;funcret
  8129   005B3E                     __end_of_get_number_and_operartion:
  8130                           	callstack 0
  8131                           
  8132 ;; *************** function _lcd_4bit_send_string_pos *****************
  8133 ;; Defined at:
  8134 ;;		line 172 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8135 ;; Parameters:    Size  Location     Type
  8136 ;;  lcd             1   23[COMRAM] PTR const struct .
  8137 ;;		 -> lcd1(6), 
  8138 ;;  row             1   24[COMRAM] unsigned char 
  8139 ;;  column          1   25[COMRAM] unsigned char 
  8140 ;;  str             2   26[COMRAM] PTR unsigned char 
  8141 ;;		 -> STR_15(14), send_the_result_to_LCD@result_str_179(40), send_the_result_to_LCD@result_str(80), STR_10(19), 
  8142 ;;		 -> STR_9(18), STR_8(28), STR_7(23), STR_6(19), 
  8143 ;;		 -> STR_5(15), STR_4(19), STR_3(18), STR_2(19), 
  8144 ;;		 -> STR_1(15), 
  8145 ;; Auto vars:     Size  Location     Type
  8146 ;;  ret             1    0        unsigned char 
  8147 ;; Return value:  Size  Location     Type
  8148 ;;                  1    wreg      unsigned char 
  8149 ;; Registers used:
  8150 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8151 ;; Tracked objects:
  8152 ;;		On entry : 0/0
  8153 ;;		On exit  : 0/0
  8154 ;;		Unchanged: 0/0
  8155 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8156 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8157 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8158 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8159 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8160 ;;Total ram usage:        5 bytes
  8161 ;; Hardware stack levels used: 1
  8162 ;; Hardware stack levels required when called: 4
  8163 ;; This function calls:
  8164 ;;		_lcd_4bit_send_char_data
  8165 ;;		_lcd_4bit_set_curser
  8166 ;; This function is called by:
  8167 ;;		_get_number_and_operartion
  8168 ;;		_get_third_number_and_third_operartion
  8169 ;;		_send_the_result_to_LCD
  8170 ;;		_main
  8171 ;; This function uses a non-reentrant model
  8172 ;;
  8173                           
  8174                           	psect	text32
  8175   007278                     __ptext32:
  8176                           	callstack 0
  8177   007278                     _lcd_4bit_send_string_pos:
  8178                           	callstack 25
  8179   007278                     
  8180                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 174:     if(((void*)0) == lcd)
  8181   007278  5018               	movf	lcd_4bit_send_string_pos@lcd^0,w,c
  8182   00727A  A4D8               	btfss	status,2,c
  8183   00727C  EF42  F039         	goto	u8601
  8184   007280  EF44  F039         	goto	u8600
  8185   007284                     u8601:
  8186   007284  EF46  F039         	goto	l8649
  8187   007288                     u8600:
  8188   007288                     
  8189                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 177:     }
  8190   007288  EF81  F039         	goto	l223
  8191   00728C                     l8649:
  8192   00728C  C018  F012         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_set_curser@lcd
  8193   007290  C019  F013         	movff	lcd_4bit_send_string_pos@row,lcd_4bit_set_curser@row
  8194   007294  C01A  F014         	movff	lcd_4bit_send_string_pos@column,lcd_4bit_set_curser@column
  8195   007298  ECA9  F038         	call	_lcd_4bit_set_curser	;wreg free
  8196                           
  8197                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 181:         while(*str)
  8198   00729C  EF68  F039         	goto	l8655
  8199   0072A0                     l8651:
  8200   0072A0  C018  F00F         	movff	lcd_4bit_send_string_pos@lcd,lcd_4bit_send_char_data@lcd
  8201   0072A4  C01B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8202   0072A8  C01C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8203   0072AC  0E00               	movlw	low (__smallconst shr (0+16))
  8204   0072AE  6EF8               	movwf	tblptru,c
  8205   0072B0  0E0F               	movlw	(high __ramtop+-1)
  8206   0072B2  64F7               	cpfsgt	tblptrh,c
  8207   0072B4  D003               	bra	u8617
  8208   0072B6  0008               	tblrd		*
  8209   0072B8  50F5               	movf	tablat,w,c
  8210   0072BA  D005               	bra	u8610
  8211   0072BC                     u8617:
  8212   0072BC  CFF6 FFE9          	movff	tblptrl,fsr0l
  8213   0072C0  CFF7 FFEA          	movff	tblptrh,fsr0h
  8214   0072C4  50EF               	movf	indf0,w,c
  8215   0072C6                     u8610:
  8216   0072C6  6E10               	movwf	lcd_4bit_send_char_data@data^0,c
  8217   0072C8  EC5B  F03A         	call	_lcd_4bit_send_char_data	;wreg free
  8218   0072CC  4A1B               	infsnz	lcd_4bit_send_string_pos@str^0,f,c
  8219   0072CE  2A1C               	incf	(lcd_4bit_send_string_pos@str+1)^0,f,c
  8220   0072D0                     l8655:
  8221                           
  8222                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 181:         while(*str)
  8223   0072D0  C01B  FFF6         	movff	lcd_4bit_send_string_pos@str,tblptrl
  8224   0072D4  C01C  FFF7         	movff	lcd_4bit_send_string_pos@str+1,tblptrh
  8225   0072D8  0E00               	movlw	low (__smallconst shr (0+16))
  8226   0072DA  6EF8               	movwf	tblptru,c
  8227   0072DC  0E0F               	movlw	(high __ramtop+-1)
  8228   0072DE  64F7               	cpfsgt	tblptrh,c
  8229   0072E0  D003               	bra	u8627
  8230   0072E2  0008               	tblrd		*
  8231   0072E4  50F5               	movf	tablat,w,c
  8232   0072E6  D005               	bra	u8620
  8233   0072E8                     u8627:
  8234   0072E8  CFF6 FFE9          	movff	tblptrl,fsr0l
  8235   0072EC  CFF7 FFEA          	movff	tblptrh,fsr0h
  8236   0072F0  50EF               	movf	indf0,w,c
  8237   0072F2                     u8620:
  8238   0072F2  0900               	iorlw	0
  8239   0072F4  A4D8               	btfss	status,2,c
  8240   0072F6  EF7F  F039         	goto	u8631
  8241   0072FA  EF81  F039         	goto	u8630
  8242   0072FE                     u8631:
  8243   0072FE  EF50  F039         	goto	l8651
  8244   007302                     u8630:
  8245   007302                     l223:
  8246   007302  0012               	return		;funcret
  8247   007304                     __end_of_lcd_4bit_send_string_pos:
  8248                           	callstack 0
  8249                           
  8250 ;; *************** function _lcd_4bit_send_char_data_pos *****************
  8251 ;; Defined at:
  8252 ;;		line 125 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8253 ;; Parameters:    Size  Location     Type
  8254 ;;  lcd             1   23[COMRAM] PTR const struct .
  8255 ;;		 -> lcd1(6), 
  8256 ;;  row             1   24[COMRAM] unsigned char 
  8257 ;;  column          1   25[COMRAM] unsigned char 
  8258 ;;  data            1   26[COMRAM] unsigned char 
  8259 ;; Auto vars:     Size  Location     Type
  8260 ;;  ret             1   27[COMRAM] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      unsigned char 
  8263 ;; Registers used:
  8264 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8270 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8271 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8273 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8274 ;;Total ram usage:        5 bytes
  8275 ;; Hardware stack levels used: 1
  8276 ;; Hardware stack levels required when called: 4
  8277 ;; This function calls:
  8278 ;;		_lcd_4bit_send_char_data
  8279 ;;		_lcd_4bit_set_curser
  8280 ;; This function is called by:
  8281 ;;		_get_number_and_operartion
  8282 ;;		_get_third_number_and_third_operartion
  8283 ;;		_lcd_4bit_send_custome_char
  8284 ;; This function uses a non-reentrant model
  8285 ;;
  8286                           
  8287                           	psect	text33
  8288   007860                     __ptext33:
  8289                           	callstack 0
  8290   007860                     _lcd_4bit_send_char_data_pos:
  8291                           	callstack 25
  8292   007860                     
  8293                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 127:     if(((void*)0) == lcd)
  8294   007860  5018               	movf	lcd_4bit_send_char_data_pos@lcd^0,w,c
  8295   007862  A4D8               	btfss	status,2,c
  8296   007864  EF36  F03C         	goto	u8591
  8297   007868  EF38  F03C         	goto	u8590
  8298   00786C                     u8591:
  8299   00786C  EF3C  F03C         	goto	l8639
  8300   007870                     u8590:
  8301   007870                     
  8302                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 128:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 129:      
      +                             ret = (STD_ReturnType)0x00;
  8303   007870  0E00               	movlw	0
  8304   007872  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8305                           
  8306                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 130:     }
  8307   007874  EF4C  F03C         	goto	l8641
  8308   007878                     l8639:
  8309                           
  8310                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 132:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 133:      
      +                             ret = lcd_4bit_set_curser(lcd,row,column);
  8311   007878  C018  F012         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_set_curser@lcd
  8312   00787C  C019  F013         	movff	lcd_4bit_send_char_data_pos@row,lcd_4bit_set_curser@row
  8313   007880  C01A  F014         	movff	lcd_4bit_send_char_data_pos@column,lcd_4bit_set_curser@column
  8314   007884  ECA9  F038         	call	_lcd_4bit_set_curser	;wreg free
  8315   007888  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8316                           
  8317                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 134:         ret = lcd_4bit_send_char_data(lcd,data);
  8318   00788A  C018  F00F         	movff	lcd_4bit_send_char_data_pos@lcd,lcd_4bit_send_char_data@lcd
  8319   00788E  C01B  F010         	movff	lcd_4bit_send_char_data_pos@data,lcd_4bit_send_char_data@data
  8320   007892  EC5B  F03A         	call	_lcd_4bit_send_char_data	;wreg free
  8321   007896  6E1C               	movwf	lcd_4bit_send_char_data_pos@ret^0,c
  8322   007898                     l8641:
  8323                           
  8324                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 136:      return ret;
  8325   007898  501C               	movf	lcd_4bit_send_char_data_pos@ret^0,w,c
  8326   00789A  0012               	return		;funcret
  8327   00789C                     __end_of_lcd_4bit_send_char_data_pos:
  8328                           	callstack 0
  8329                           
  8330 ;; *************** function _lcd_4bit_set_curser *****************
  8331 ;; Defined at:
  8332 ;;		line 568 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8333 ;; Parameters:    Size  Location     Type
  8334 ;;  lcd             1   17[COMRAM] PTR const struct .
  8335 ;;		 -> lcd1(6), 
  8336 ;;  row             1   18[COMRAM] unsigned char 
  8337 ;;  column          1   19[COMRAM] unsigned char 
  8338 ;; Auto vars:     Size  Location     Type
  8339 ;;  ret             1   22[COMRAM] unsigned char 
  8340 ;; Return value:  Size  Location     Type
  8341 ;;                  1    wreg      unsigned char 
  8342 ;; Registers used:
  8343 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8344 ;; Tracked objects:
  8345 ;;		On entry : 0/0
  8346 ;;		On exit  : 0/0
  8347 ;;		Unchanged: 0/0
  8348 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8349 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8350 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8351 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8352 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8353 ;;Total ram usage:        6 bytes
  8354 ;; Hardware stack levels used: 1
  8355 ;; Hardware stack levels required when called: 3
  8356 ;; This function calls:
  8357 ;;		_lcd_4bit_send_command
  8358 ;; This function is called by:
  8359 ;;		_lcd_4bit_send_char_data_pos
  8360 ;;		_lcd_4bit_send_string_pos
  8361 ;; This function uses a non-reentrant model
  8362 ;;
  8363                           
  8364                           	psect	text34
  8365   007152                     __ptext34:
  8366                           	callstack 0
  8367   007152                     _lcd_4bit_set_curser:
  8368                           	callstack 25
  8369   007152                     
  8370                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 569: STD_ReturnType ret = (STD_ReturnType)0x01;
  8371   007152  0E01               	movlw	1
  8372   007154  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8373   007156                     
  8374                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 570: column--;
  8375   007156  0614               	decf	lcd_4bit_set_curser@column^0,f,c
  8376                           
  8377                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 571: switch(row){
  8378   007158  EFD6  F038         	goto	l8625
  8379   00715C                     l8617:
  8380   00715C  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8381   007160  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8382   007162  0F80               	addlw	128
  8383   007164  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8384   007166  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  8385   00716A  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8386   00716C  EFF3  F038         	goto	l8627
  8387   007170                     l8619:
  8388   007170  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8389   007174  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8390   007176  0FC0               	addlw	192
  8391   007178  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8392   00717A  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  8393   00717E  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8394   007180  EFF3  F038         	goto	l8627
  8395   007184                     l8621:
  8396   007184  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8397   007188  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8398   00718A  0F94               	addlw	148
  8399   00718C  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8400   00718E  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  8401   007192  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8402   007194  EFF3  F038         	goto	l8627
  8403   007198                     l8623:
  8404   007198  C012  F00F         	movff	lcd_4bit_set_curser@lcd,lcd_4bit_send_command@lcd
  8405   00719C  5014               	movf	lcd_4bit_set_curser@column^0,w,c
  8406   00719E  0FD4               	addlw	212
  8407   0071A0  6E10               	movwf	lcd_4bit_send_command@command^0,c
  8408   0071A2  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
  8409   0071A6  6E17               	movwf	lcd_4bit_set_curser@ret^0,c
  8410   0071A8  EFF3  F038         	goto	l8627
  8411   0071AC                     l8625:
  8412   0071AC  5013               	movf	lcd_4bit_set_curser@row^0,w,c
  8413   0071AE  6E15               	movwf	??_lcd_4bit_set_curser^0,c
  8414   0071B0  6A16               	clrf	(??_lcd_4bit_set_curser+1)^0,c
  8415                           
  8416                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8417                           ; Switch size 1, requested type "simple"
  8418                           ; Number of cases is 1, Range of values is 0 to 0
  8419                           ; switch strategies available:
  8420                           ; Name         Instructions Cycles
  8421                           ; simple_byte            4     3 (average)
  8422                           ;	Chosen strategy is simple_byte
  8423   0071B2  5016               	movf	(??_lcd_4bit_set_curser+1)^0,w,c
  8424   0071B4  0A00               	xorlw	0	; case 0
  8425   0071B6  B4D8               	btfsc	status,2,c
  8426   0071B8  EFE0  F038         	goto	l13299
  8427   0071BC  EFF3  F038         	goto	l8627
  8428   0071C0                     l13299:
  8429                           
  8430                           ; Switch size 1, requested type "simple"
  8431                           ; Number of cases is 4, Range of values is 1 to 4
  8432                           ; switch strategies available:
  8433                           ; Name         Instructions Cycles
  8434                           ; simple_byte           13     7 (average)
  8435                           ;	Chosen strategy is simple_byte
  8436   0071C0  5015               	movf	??_lcd_4bit_set_curser^0,w,c
  8437   0071C2  0A01               	xorlw	1	; case 1
  8438   0071C4  B4D8               	btfsc	status,2,c
  8439   0071C6  EFAE  F038         	goto	l8617
  8440   0071CA  0A03               	xorlw	3	; case 2
  8441   0071CC  B4D8               	btfsc	status,2,c
  8442   0071CE  EFB8  F038         	goto	l8619
  8443   0071D2  0A01               	xorlw	1	; case 3
  8444   0071D4  B4D8               	btfsc	status,2,c
  8445   0071D6  EFC2  F038         	goto	l8621
  8446   0071DA  0A07               	xorlw	7	; case 4
  8447   0071DC  B4D8               	btfsc	status,2,c
  8448   0071DE  EFCC  F038         	goto	l8623
  8449   0071E2  EFF3  F038         	goto	l8627
  8450   0071E6                     l8627:
  8451                           
  8452                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 583: return ret;
  8453   0071E6  5017               	movf	lcd_4bit_set_curser@ret^0,w,c
  8454   0071E8  0012               	return		;funcret
  8455   0071EA                     __end_of_lcd_4bit_set_curser:
  8456                           	callstack 0
  8457                           
  8458 ;; *************** function _lcd_4bit_send_char_data *****************
  8459 ;; Defined at:
  8460 ;;		line 94 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
  8461 ;; Parameters:    Size  Location     Type
  8462 ;;  lcd             1   14[COMRAM] PTR const struct .
  8463 ;;		 -> lcd1(6), 
  8464 ;;  data            1   15[COMRAM] unsigned char 
  8465 ;; Auto vars:     Size  Location     Type
  8466 ;;  ret             1   16[COMRAM] unsigned char 
  8467 ;; Return value:  Size  Location     Type
  8468 ;;                  1    wreg      unsigned char 
  8469 ;; Registers used:
  8470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8471 ;; Tracked objects:
  8472 ;;		On entry : 0/0
  8473 ;;		On exit  : 0/0
  8474 ;;		Unchanged: 0/0
  8475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8476 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8477 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8479 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8480 ;;Total ram usage:        3 bytes
  8481 ;; Hardware stack levels used: 1
  8482 ;; Hardware stack levels required when called: 2
  8483 ;; This function calls:
  8484 ;;		_gpio_pin_write_logic
  8485 ;;		_lcd_4bit_send_enable_enable
  8486 ;;		_lcd_send_4bit
  8487 ;; This function is called by:
  8488 ;;		_lcd_4bit_send_char_data_pos
  8489 ;;		_lcd_4bit_send_string_pos
  8490 ;;		_lcd_4bit_send_string
  8491 ;;		_lcd_4bit_send_custome_char
  8492 ;; This function uses a non-reentrant model
  8493 ;;
  8494                           
  8495                           	psect	text35
  8496   0074B6                     __ptext35:
  8497                           	callstack 0
  8498   0074B6                     _lcd_4bit_send_char_data:
  8499                           	callstack 26
  8500   0074B6                     
  8501                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 97:     if(((void*)0) == lcd)
  8502   0074B6  500F               	movf	lcd_4bit_send_char_data@lcd^0,w,c
  8503   0074B8  A4D8               	btfss	status,2,c
  8504   0074BA  EF61  F03A         	goto	u8581
  8505   0074BE  EF63  F03A         	goto	u8580
  8506   0074C2                     u8581:
  8507   0074C2  EF67  F03A         	goto	l8607
  8508   0074C6                     u8580:
  8509   0074C6                     
  8510                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 98:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 99:        
      +                           ret = (STD_ReturnType)0x00;
  8511   0074C6  0E00               	movlw	0
  8512   0074C8  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8513                           
  8514                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 100:     }
  8515   0074CA  EF88  F03A         	goto	l8609
  8516   0074CE                     l8607:
  8517                           
  8518                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 102:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 104:      
      +                             ret = gpio_pin_write_logic(&(lcd->rs),HIGH);
  8519   0074CE  C00F  F001         	movff	lcd_4bit_send_char_data@lcd,gpio_pin_write_logic@_pin_config
  8520   0074D2  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8521   0074D4  0E01               	movlw	1
  8522   0074D6  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8523   0074D8  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
  8524   0074DC  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8525                           
  8526                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 105:         ret = lcd_send_4bit(lcd,data >>4);
  8527   0074DE  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8528   0074E2  3810               	swapf	lcd_4bit_send_char_data@data^0,w,c
  8529   0074E4  0B0F               	andlw	15
  8530   0074E6  6E0C               	movwf	lcd_send_4bit@command_data^0,c
  8531   0074E8  EC82  F039         	call	_lcd_send_4bit	;wreg free
  8532   0074EC  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8533                           
  8534                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 106:         ret = lcd_4bit_send_enable_enable(lcd);
  8535   0074EE  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_enable@lcd
  8536   0074F2  EC89  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
  8537   0074F6  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8538                           
  8539                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 107:         ret = lcd_send_4bit(lcd,data);
  8540   0074F8  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_send_4bit@lcd
  8541   0074FC  C010  F00C         	movff	lcd_4bit_send_char_data@data,lcd_send_4bit@command_data
  8542   007500  EC82  F039         	call	_lcd_send_4bit	;wreg free
  8543   007504  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8544                           
  8545                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 108:         ret = lcd_4bit_send_enable_enable(lcd);
  8546   007506  C00F  F00B         	movff	lcd_4bit_send_char_data@lcd,lcd_4bit_send_enable_enable@lcd
  8547   00750A  EC89  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
  8548   00750E  6E11               	movwf	lcd_4bit_send_char_data@ret^0,c
  8549   007510                     l8609:
  8550                           
  8551                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 113:      return ret;
  8552   007510  5011               	movf	lcd_4bit_send_char_data@ret^0,w,c
  8553   007512  0012               	return		;funcret
  8554   007514                     __end_of_lcd_4bit_send_char_data:
  8555                           	callstack 0
  8556                           
  8557 ;; *************** function _ecu_keypad_get_value *****************
  8558 ;; Defined at:
  8559 ;;		line 56 in file "ECU_layer/Keypad/ecu_keypad.c"
  8560 ;; Parameters:    Size  Location     Type
  8561 ;;  keypad          2   10[COMRAM] PTR const struct .
  8562 ;;		 -> keypad(8), 
  8563 ;;  value           1   12[COMRAM] PTR unsigned char 
  8564 ;;		 -> get_third_number_and_third_operartion@keypad_value(1), get_number_and_operartion@keypad_value(1), 
  8565 ;; Auto vars:     Size  Location     Type
  8566 ;;  columns         1   18[COMRAM] unsigned char 
  8567 ;;  rows            1   17[COMRAM] unsigned char 
  8568 ;;  clear_rows_c    1   16[COMRAM] unsigned char 
  8569 ;;  column_val      1   15[COMRAM] unsigned char 
  8570 ;;  ret             1    0        unsigned char 
  8571 ;; Return value:  Size  Location     Type
  8572 ;;                  1    wreg      unsigned char 
  8573 ;; Registers used:
  8574 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8575 ;; Tracked objects:
  8576 ;;		On entry : 0/0
  8577 ;;		On exit  : 0/0
  8578 ;;		Unchanged: 0/0
  8579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8580 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8581 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8582 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8583 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8584 ;;Total ram usage:        9 bytes
  8585 ;; Hardware stack levels used: 1
  8586 ;; Hardware stack levels required when called: 1
  8587 ;; This function calls:
  8588 ;;		_gpio_pin_read_logic
  8589 ;;		_gpio_pin_write_logic
  8590 ;; This function is called by:
  8591 ;;		_get_number_and_operartion
  8592 ;;		_get_third_number_and_third_operartion
  8593 ;; This function uses a non-reentrant model
  8594 ;;
  8595                           
  8596                           	psect	text36
  8597   00664A                     __ptext36:
  8598                           	callstack 0
  8599   00664A                     _ecu_keypad_get_value:
  8600                           	callstack 28
  8601   00664A                     
  8602                           ;ECU_layer/Keypad/ecu_keypad.c: 58: uint8 rows = 0,columns = 0,clear_rows_counter = 0;
  8603   00664A  0E00               	movlw	0
  8604   00664C  6E12               	movwf	ecu_keypad_get_value@rows^0,c
  8605   00664E  0E00               	movlw	0
  8606   006650  6E13               	movwf	ecu_keypad_get_value@columns^0,c
  8607   006652  0E00               	movlw	0
  8608   006654  6E11               	movwf	ecu_keypad_get_value@clear_rows_counter^0,c
  8609                           
  8610                           ;ECU_layer/Keypad/ecu_keypad.c: 59: uint8 column_val = 0;
  8611   006656  0E00               	movlw	0
  8612   006658  6E10               	movwf	ecu_keypad_get_value@column_val^0,c
  8613   00665A                     
  8614                           ;ECU_layer/Keypad/ecu_keypad.c: 60: *value = 0;
  8615   00665A  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8616   00665C  6ED9               	movwf	fsr2l,c
  8617   00665E  6ADA               	clrf	fsr2h,c
  8618   006660  6ADF               	clrf	indf2,c
  8619   006662                     
  8620                           ;ECU_layer/Keypad/ecu_keypad.c: 61:     if(((void*)0) == keypad || ((void*)0) == value)
  8621   006662  500B               	movf	ecu_keypad_get_value@keypad^0,w,c
  8622   006664  100C               	iorwf	(ecu_keypad_get_value@keypad+1)^0,w,c
  8623   006666  B4D8               	btfsc	status,2,c
  8624   006668  EF38  F033         	goto	u6431
  8625   00666C  EF3A  F033         	goto	u6430
  8626   006670                     u6431:
  8627   006670  EF42  F033         	goto	l6425
  8628   006674                     u6430:
  8629   006674  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8630   006676  A4D8               	btfss	status,2,c
  8631   006678  EF40  F033         	goto	u6441
  8632   00667C  EF42  F033         	goto	u6440
  8633   006680                     u6441:
  8634   006680  EF44  F033         	goto	l6427
  8635   006684                     u6440:
  8636   006684                     l6425:
  8637                           
  8638                           ;ECU_layer/Keypad/ecu_keypad.c: 64:     }
  8639   006684  EFAC  F033         	goto	l382
  8640   006688                     l6427:
  8641                           
  8642                           ;ECU_layer/Keypad/ecu_keypad.c: 66:     {;ECU_layer/Keypad/ecu_keypad.c: 67:         for
      +                          (rows = 0;rows < 4 ;rows++)
  8643   006688  0E00               	movlw	0
  8644   00668A  6E12               	movwf	ecu_keypad_get_value@rows^0,c
  8645   00668C                     l6433:
  8646                           
  8647                           ;ECU_layer/Keypad/ecu_keypad.c: 68:         {;ECU_layer/Keypad/ecu_keypad.c: 69:        
      +                               for(clear_rows_counter = 0;clear_rows_counter < 4 ;clear_rows_counter++)
  8648   00668C  0E00               	movlw	0
  8649   00668E  6E11               	movwf	ecu_keypad_get_value@clear_rows_counter^0,c
  8650   006690                     l6439:
  8651                           
  8652                           ;ECU_layer/Keypad/ecu_keypad.c: 70:             {;ECU_layer/Keypad/ecu_keypad.c: 71:    
      +                                       gpio_pin_write_logic(&(keypad->keypad_rows_pins[clear_rows_counter]),LOW);
  8653   006690  5011               	movf	ecu_keypad_get_value@clear_rows_counter^0,w,c
  8654   006692  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8655   006694  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8656   006696  0E00               	movlw	0
  8657   006698  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8658   00669A  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8659   00669C  0E00               	movlw	0
  8660   00669E  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8661   0066A0  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
  8662   0066A4                     
  8663                           ;ECU_layer/Keypad/ecu_keypad.c: 72:             }
  8664   0066A4  2A11               	incf	ecu_keypad_get_value@clear_rows_counter^0,f,c
  8665   0066A6  0E03               	movlw	3
  8666   0066A8  6411               	cpfsgt	ecu_keypad_get_value@clear_rows_counter^0,c
  8667   0066AA  EF59  F033         	goto	u6451
  8668   0066AE  EF5B  F033         	goto	u6450
  8669   0066B2                     u6451:
  8670   0066B2  EF48  F033         	goto	l6439
  8671   0066B6                     u6450:
  8672   0066B6                     
  8673                           ;ECU_layer/Keypad/ecu_keypad.c: 73:             gpio_pin_write_logic(&(keypad->keypad_ro
      +                          ws_pins[rows]),HIGH);
  8674   0066B6  5012               	movf	ecu_keypad_get_value@rows^0,w,c
  8675   0066B8  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8676   0066BA  6E01               	movwf	gpio_pin_write_logic@_pin_config^0,c
  8677   0066BC  0E00               	movlw	0
  8678   0066BE  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8679   0066C0  6E02               	movwf	(gpio_pin_write_logic@_pin_config+1)^0,c
  8680   0066C2  0E01               	movlw	1
  8681   0066C4  6E03               	movwf	gpio_pin_write_logic@logic^0,c
  8682   0066C6  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
  8683   0066CA                     
  8684                           ;ECU_layer/Keypad/ecu_keypad.c: 74:             _delay((unsigned long)((10)*(8000000ul/4
      +                          000.0)));
  8685   0066CA  0E1A               	movlw	26
  8686   0066CC  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8687   0066CE  0EF8               	movlw	248
  8688   0066D0                     u13617:
  8689   0066D0  2EE8               	decfsz	wreg,f,c
  8690   0066D2  D7FE               	bra	u13617
  8691   0066D4  2E0E               	decfsz	??_ecu_keypad_get_value^0,f,c
  8692   0066D6  D7FC               	bra	u13617
  8693   0066D8  D000               	nop2	
  8694   0066DA                     
  8695                           ;ECU_layer/Keypad/ecu_keypad.c: 75:             for(columns = 0;columns < 4 ;columns++)
  8696   0066DA  0E00               	movlw	0
  8697   0066DC  6E13               	movwf	ecu_keypad_get_value@columns^0,c
  8698   0066DE                     l6455:
  8699                           
  8700                           ;ECU_layer/Keypad/ecu_keypad.c: 76:             {;ECU_layer/Keypad/ecu_keypad.c: 77:    
      +                                       gpio_pin_read_logic(&(keypad->keypad_columns_pins[columns]),&column_val);
  8701   0066DE  5013               	movf	ecu_keypad_get_value@columns^0,w,c
  8702   0066E0  240B               	addwf	ecu_keypad_get_value@keypad^0,w,c
  8703   0066E2  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8704   0066E4  0E00               	movlw	0
  8705   0066E6  200C               	addwfc	(ecu_keypad_get_value@keypad+1)^0,w,c
  8706   0066E8  6E0F               	movwf	(??_ecu_keypad_get_value+1)^0,c
  8707   0066EA  0E04               	movlw	4
  8708   0066EC  240E               	addwf	??_ecu_keypad_get_value^0,w,c
  8709   0066EE  6E01               	movwf	gpio_pin_read_logic@_pin_config^0,c
  8710   0066F0  0E00               	movlw	0
  8711   0066F2  200F               	addwfc	(??_ecu_keypad_get_value+1)^0,w,c
  8712   0066F4  6E02               	movwf	(gpio_pin_read_logic@_pin_config+1)^0,c
  8713   0066F6  0E10               	movlw	low ecu_keypad_get_value@column_val
  8714   0066F8  6E03               	movwf	gpio_pin_read_logic@logic^0,c
  8715   0066FA  EC01  F038         	call	_gpio_pin_read_logic	;wreg free
  8716   0066FE                     
  8717                           ;ECU_layer/Keypad/ecu_keypad.c: 78:                 if(HIGH == column_val)
  8718   0066FE  0410               	decf	ecu_keypad_get_value@column_val^0,w,c
  8719   006700  A4D8               	btfss	status,2,c
  8720   006702  EF85  F033         	goto	u6461
  8721   006706  EF87  F033         	goto	u6460
  8722   00670A                     u6461:
  8723   00670A  EF9A  F033         	goto	l6461
  8724   00670E                     u6460:
  8725   00670E                     
  8726                           ;ECU_layer/Keypad/ecu_keypad.c: 79:                 {;ECU_layer/Keypad/ecu_keypad.c: 80:
      +                                           *value = keypad_values[rows][columns];
  8727   00670E  5012               	movf	ecu_keypad_get_value@rows^0,w,c
  8728   006710  0D04               	mullw	4
  8729   006712  0E50               	movlw	low _keypad_values
  8730   006714  24F3               	addwf	243,w,c
  8731   006716  6E0E               	movwf	??_ecu_keypad_get_value^0,c
  8732   006718  0E02               	movlw	high _keypad_values
  8733   00671A  20F4               	addwfc	prodh,w,c
  8734   00671C  6E0F               	movwf	(??_ecu_keypad_get_value+1)^0,c
  8735   00671E  5013               	movf	ecu_keypad_get_value@columns^0,w,c
  8736   006720  240E               	addwf	??_ecu_keypad_get_value^0,w,c
  8737   006722  6ED9               	movwf	fsr2l,c
  8738   006724  0E00               	movlw	0
  8739   006726  200F               	addwfc	(??_ecu_keypad_get_value+1)^0,w,c
  8740   006728  6EDA               	movwf	fsr2h,c
  8741   00672A  500D               	movf	ecu_keypad_get_value@value^0,w,c
  8742   00672C  6EE1               	movwf	fsr1l,c
  8743   00672E  6AE2               	clrf	fsr1h,c
  8744   006730  CFDF FFE7          	movff	indf2,indf1
  8745   006734                     l6461:
  8746                           
  8747                           ;ECU_layer/Keypad/ecu_keypad.c: 84:             }
  8748   006734  2A13               	incf	ecu_keypad_get_value@columns^0,f,c
  8749   006736  0E03               	movlw	3
  8750   006738  6413               	cpfsgt	ecu_keypad_get_value@columns^0,c
  8751   00673A  EFA1  F033         	goto	u6471
  8752   00673E  EFA3  F033         	goto	u6470
  8753   006742                     u6471:
  8754   006742  EF6F  F033         	goto	l6455
  8755   006746                     u6470:
  8756   006746                     
  8757                           ;ECU_layer/Keypad/ecu_keypad.c: 86:         }
  8758   006746  2A12               	incf	ecu_keypad_get_value@rows^0,f,c
  8759   006748  0E03               	movlw	3
  8760   00674A  6412               	cpfsgt	ecu_keypad_get_value@rows^0,c
  8761   00674C  EFAA  F033         	goto	u6481
  8762   006750  EFAC  F033         	goto	u6480
  8763   006754                     u6481:
  8764   006754  EF46  F033         	goto	l6433
  8765   006758                     u6480:
  8766   006758                     l382:
  8767   006758  0012               	return		;funcret
  8768   00675A                     __end_of_ecu_keypad_get_value:
  8769                           	callstack 0
  8770                           
  8771 ;; *************** function _gpio_pin_read_logic *****************
  8772 ;; Defined at:
  8773 ;;		line 117 in file "MCAL_layer/GPIO/hal_gpio.c"
  8774 ;; Parameters:    Size  Location     Type
  8775 ;;  _pin_config     2    0[COMRAM] PTR const struct .
  8776 ;;		 -> keypad$keypad_columns_pins(4), keypad(8), 
  8777 ;;  logic           1    2[COMRAM] PTR enum E3403
  8778 ;;		 -> ecu_keypad_get_value@column_val(1), ecu_button_read_state@btn_logic(1), 
  8779 ;; Auto vars:     Size  Location     Type
  8780 ;;  ret             1    0        unsigned char 
  8781 ;; Return value:  Size  Location     Type
  8782 ;;                  1    wreg      unsigned char 
  8783 ;; Registers used:
  8784 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh
  8785 ;; Tracked objects:
  8786 ;;		On entry : 0/0
  8787 ;;		On exit  : 0/0
  8788 ;;		Unchanged: 0/0
  8789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8790 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8791 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8792 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8793 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8794 ;;Total ram usage:        8 bytes
  8795 ;; Hardware stack levels used: 1
  8796 ;; This function calls:
  8797 ;;		Nothing
  8798 ;; This function is called by:
  8799 ;;		_ecu_keypad_get_value
  8800 ;;		_ecu_button_read_state
  8801 ;; This function uses a non-reentrant model
  8802 ;;
  8803                           
  8804                           	psect	text37
  8805   007002                     __ptext37:
  8806                           	callstack 0
  8807   007002                     _gpio_pin_read_logic:
  8808                           	callstack 28
  8809   007002                     
  8810                           ;MCAL_layer/GPIO/hal_gpio.c: 120:     if(((void*)0) == _pin_config || ((void*)0) == logi
      +                          c || _pin_config->pin > 8 -1)
  8811   007002  5001               	movf	gpio_pin_read_logic@_pin_config^0,w,c
  8812   007004  1002               	iorwf	(gpio_pin_read_logic@_pin_config+1)^0,w,c
  8813   007006  B4D8               	btfsc	status,2,c
  8814   007008  EF08  F038         	goto	u6021
  8815   00700C  EF0A  F038         	goto	u6020
  8816   007010                     u6021:
  8817   007010  EF23  F038         	goto	l6153
  8818   007014                     u6020:
  8819   007014  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  8820   007016  B4D8               	btfsc	status,2,c
  8821   007018  EF10  F038         	goto	u6031
  8822   00701C  EF12  F038         	goto	u6030
  8823   007020                     u6031:
  8824   007020  EF23  F038         	goto	l6153
  8825   007024                     u6030:
  8826   007024  C001  FFD9         	movff	gpio_pin_read_logic@_pin_config,fsr2l
  8827   007028  C002  FFDA         	movff	gpio_pin_read_logic@_pin_config+1,fsr2h
  8828   00702C  30DF               	rrcf	223,w,c
  8829   00702E  32E8               	rrcf	wreg,f,c
  8830   007030  32E8               	rrcf	wreg,f,c
  8831   007032  0B07               	andlw	7
  8832   007034  6E04               	movwf	??_gpio_pin_read_logic^0,c
  8833   007036  0E07               	movlw	7
  8834   007038  6404               	cpfsgt	??_gpio_pin_read_logic^0,c
  8835   00703A  EF21  F038         	goto	u6041
  8836   00703E  EF23  F038         	goto	u6040
  8837   007042                     u6041:
  8838   007042  EF25  F038         	goto	l6155
  8839   007046                     u6040:
  8840   007046                     l6153:
  8841                           
  8842                           ;MCAL_layer/GPIO/hal_gpio.c: 123:     }
  8843   007046  EF55  F038         	goto	l526
  8844   00704A                     l6155:
  8845                           
  8846                           ;MCAL_layer/GPIO/hal_gpio.c: 125:     {;MCAL_layer/GPIO/hal_gpio.c: 126:          *logic
      +                           = ((*port_registers[_pin_config->port]>>_pin_config->pin) & (uint8)1);
  8847   00704A  5003               	movf	gpio_pin_read_logic@logic^0,w,c
  8848   00704C  6ED9               	movwf	fsr2l,c
  8849   00704E  6ADA               	clrf	fsr2h,c
  8850   007050  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  8851   007054  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  8852   007058  30E7               	rrcf	231,w,c
  8853   00705A  32E8               	rrcf	wreg,f,c
  8854   00705C  32E8               	rrcf	wreg,f,c
  8855   00705E  0B07               	andlw	7
  8856   007060  6E04               	movwf	??_gpio_pin_read_logic^0,c
  8857   007062  C001  FFE1         	movff	gpio_pin_read_logic@_pin_config,fsr1l
  8858   007066  C002  FFE2         	movff	gpio_pin_read_logic@_pin_config+1,fsr1h
  8859   00706A  50E7               	movf	231,w,c
  8860   00706C  0B07               	andlw	7
  8861   00706E  6E05               	movwf	(??_gpio_pin_read_logic+1)^0,c
  8862   007070  5005               	movf	(??_gpio_pin_read_logic+1)^0,w,c
  8863   007072  0D02               	mullw	2
  8864   007074  0EB8               	movlw	low _port_registers
  8865   007076  24F3               	addwf	243,w,c
  8866   007078  6EE1               	movwf	fsr1l,c
  8867   00707A  0E01               	movlw	high _port_registers
  8868   00707C  20F4               	addwfc	prodh,w,c
  8869   00707E  6EE2               	movwf	fsr1h,c
  8870   007080  CFE6 F006          	movff	postinc1,??_gpio_pin_read_logic+2
  8871   007084  CFE5 F007          	movff	postdec1,??_gpio_pin_read_logic+3
  8872   007088  C006  FFE1         	movff	??_gpio_pin_read_logic+2,fsr1l
  8873   00708C  C007  FFE2         	movff	??_gpio_pin_read_logic+3,fsr1h
  8874   007090  50E7               	movf	indf1,w,c
  8875   007092  6E08               	movwf	(??_gpio_pin_read_logic+4)^0,c
  8876   007094  2A04               	incf	??_gpio_pin_read_logic^0,f,c
  8877   007096  EF4F  F038         	goto	u6054
  8878   00709A                     u6055:
  8879   00709A  90D8               	bcf	status,0,c
  8880   00709C  3208               	rrcf	(??_gpio_pin_read_logic+4)^0,f,c
  8881   00709E                     u6054:
  8882   00709E  2E04               	decfsz	??_gpio_pin_read_logic^0,f,c
  8883   0070A0  EF4D  F038         	goto	u6055
  8884   0070A4  5008               	movf	(??_gpio_pin_read_logic+4)^0,w,c
  8885   0070A6  0B01               	andlw	1
  8886   0070A8  6EDF               	movwf	indf2,c
  8887   0070AA                     l526:
  8888   0070AA  0012               	return		;funcret
  8889   0070AC                     __end_of_gpio_pin_read_logic:
  8890                           	callstack 0
  8891                           
  8892 ;; *************** function _convert_arr_to_float *****************
  8893 ;; Defined at:
  8894 ;;		line 141 in file "calculator_function/calculator_functions.c"
  8895 ;; Parameters:    Size  Location     Type
  8896 ;;  arr             2    0[BANK0 ] PTR const unsigned char 
  8897 ;;		 -> num3(4), num2(4), num1(4), 
  8898 ;;  counter_num     1    2[BANK0 ] const unsigned char 
  8899 ;;  num_value       1    3[BANK0 ] PTR float 
  8900 ;;		 -> num3_val(4), num2_val(4), num1_val(4), 
  8901 ;; Auto vars:     Size  Location     Type
  8902 ;;  count           1   16[BANK0 ] unsigned char 
  8903 ;;  count_power     1   15[BANK0 ] unsigned char 
  8904 ;; Return value:  Size  Location     Type
  8905 ;;                  1    wreg      void 
  8906 ;; Registers used:
  8907 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8908 ;; Tracked objects:
  8909 ;;		On entry : 0/0
  8910 ;;		On exit  : 0/0
  8911 ;;		Unchanged: 0/0
  8912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8913 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8914 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8915 ;;      Temps:          0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8916 ;;      Totals:         0      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8917 ;;Total ram usage:       17 bytes
  8918 ;; Hardware stack levels used: 1
  8919 ;; Hardware stack levels required when called: 3
  8920 ;; This function calls:
  8921 ;;		___fladd
  8922 ;;		___flmul
  8923 ;;		___xxtofl
  8924 ;;		_powf
  8925 ;; This function is called by:
  8926 ;;		_main
  8927 ;; This function uses a non-reentrant model
  8928 ;;
  8929                           
  8930                           	psect	text38
  8931   006522                     __ptext38:
  8932                           	callstack 0
  8933   006522                     _convert_arr_to_float:
  8934                           	callstack 27
  8935   006522                     
  8936                           ;calculator_function/calculator_functions.c: 142: uint8 count = 0;
  8937   006522  0E00               	movlw	0
  8938   006524  0100               	movlb	0	; () banked
  8939   006526  6F90               	movwf	convert_arr_to_float@count& (0+255),b
  8940   006528                     
  8941                           ; BSR set to: 0
  8942                           ;calculator_function/calculator_functions.c: 143: uint8 count_power = counter_num-1;
  8943   006528  0582               	decf	convert_arr_to_float@counter_num& (0+255),w,b
  8944   00652A  6F8F               	movwf	convert_arr_to_float@count_power& (0+255),b
  8945   00652C                     
  8946                           ; BSR set to: 0
  8947   00652C  5182               	movf	convert_arr_to_float@counter_num& (0+255),w,b
  8948   00652E  A4D8               	btfss	status,2,c
  8949   006530  EF9C  F032         	goto	u13371
  8950   006534  EF9E  F032         	goto	u13370
  8951   006538                     u13371:
  8952   006538  EFA0  F032         	goto	l12757
  8953   00653C                     u13370:
  8954   00653C  EF24  F033         	goto	l97
  8955   006540                     l12757:
  8956                           
  8957                           ; BSR set to: 0
  8958                           ;calculator_function/calculator_functions.c: 145: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8959   006540  518F               	movf	convert_arr_to_float@count_power& (0+255),w,b
  8960   006542  6E0B               	movwf	___xxtofl@val^0,c
  8961   006544  6A0C               	clrf	(___xxtofl@val+1)^0,c
  8962   006546  6A0D               	clrf	(___xxtofl@val+2)^0,c
  8963   006548  6A0E               	clrf	(___xxtofl@val+3)^0,c
  8964   00654A  0E00               	movlw	0
  8965   00654C  ECC2  F02F         	call	___xxtofl
  8966   006550  C00B  F087         	movff	?___xxtofl,_convert_arr_to_float$2092
  8967   006554  C00C  F088         	movff	?___xxtofl+1,_convert_arr_to_float$2092+1
  8968   006558  C00D  F089         	movff	?___xxtofl+2,_convert_arr_to_float$2092+2
  8969   00655C  C00E  F08A         	movff	?___xxtofl+3,_convert_arr_to_float$2092+3
  8970   006560                     
  8971                           ;calculator_function/calculator_functions.c: 145: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8972   006560  C087  F073         	movff	_convert_arr_to_float$2092,powf@y
  8973   006564  C088  F074         	movff	_convert_arr_to_float$2092+1,powf@y+1
  8974   006568  C089  F075         	movff	_convert_arr_to_float$2092+2,powf@y+2
  8975   00656C  C08A  F076         	movff	_convert_arr_to_float$2092+3,powf@y+3
  8976   006570  0E00               	movlw	0
  8977   006572  6E6F               	movwf	powf@x^0,c
  8978   006574  0E00               	movlw	0
  8979   006576  6E70               	movwf	(powf@x+1)^0,c
  8980   006578  0E20               	movlw	32
  8981   00657A  6E71               	movwf	(powf@x+2)^0,c
  8982   00657C  0E41               	movlw	65
  8983   00657E  6E72               	movwf	(powf@x+3)^0,c
  8984   006580  EC72  F008         	call	_powf	;wreg free
  8985   006584  C06F  F08B         	movff	?_powf,_convert_arr_to_float$2093
  8986   006588  C070  F08C         	movff	?_powf+1,_convert_arr_to_float$2093+1
  8987   00658C  C071  F08D         	movff	?_powf+2,_convert_arr_to_float$2093+2
  8988   006590  C072  F08E         	movff	?_powf+3,_convert_arr_to_float$2093+3
  8989   006594                     
  8990                           ;calculator_function/calculator_functions.c: 145: *num_value = *num_value + (arr[count] 
      +                          - 48)* (powf(10,count_power));
  8991   006594  C08B  F01D         	movff	_convert_arr_to_float$2093,___flmul@a
  8992   006598  C08C  F01E         	movff	_convert_arr_to_float$2093+1,___flmul@a+1
  8993   00659C  C08D  F01F         	movff	_convert_arr_to_float$2093+2,___flmul@a+2
  8994   0065A0  C08E  F020         	movff	_convert_arr_to_float$2093+3,___flmul@a+3
  8995   0065A4  0100               	movlb	0	; () banked
  8996   0065A6  5190               	movf	convert_arr_to_float@count& (0+255),w,b
  8997   0065A8  2580               	addwf	convert_arr_to_float@arr& (0+255),w,b
  8998   0065AA  6ED9               	movwf	fsr2l,c
  8999   0065AC  0E00               	movlw	0
  9000   0065AE  2181               	addwfc	(convert_arr_to_float@arr+1)& (0+255),w,b
  9001   0065B0  6EDA               	movwf	fsr2h,c
  9002   0065B2  50DF               	movf	indf2,w,c
  9003   0065B4  6F84               	movwf	??_convert_arr_to_float& (0+255),b
  9004   0065B6  0ED0               	movlw	208
  9005   0065B8  2584               	addwf	??_convert_arr_to_float& (0+255),w,b
  9006   0065BA  6F85               	movwf	(??_convert_arr_to_float+1)& (0+255),b
  9007   0065BC  6B86               	clrf	(??_convert_arr_to_float+2)& (0+255),b
  9008   0065BE  0EFF               	movlw	255
  9009   0065C0  2386               	addwfc	(??_convert_arr_to_float+2)& (0+255),f,b
  9010   0065C2  C085  F00B         	movff	??_convert_arr_to_float+1,___xxtofl@val
  9011   0065C6  C086  F00C         	movff	??_convert_arr_to_float+2,___xxtofl@val+1
  9012   0065CA  0E00               	movlw	0
  9013   0065CC  BE0C               	btfsc	(___xxtofl@val+1)^0,7,c
  9014   0065CE  0EFF               	movlw	-1
  9015   0065D0  6E0D               	movwf	(___xxtofl@val+2)^0,c
  9016   0065D2  6E0E               	movwf	(___xxtofl@val+3)^0,c
  9017   0065D4  0E01               	movlw	1
  9018   0065D6  ECC2  F02F         	call	___xxtofl
  9019   0065DA  C00B  F019         	movff	?___xxtofl,___flmul@b
  9020   0065DE  C00C  F01A         	movff	?___xxtofl+1,___flmul@b+1
  9021   0065E2  C00D  F01B         	movff	?___xxtofl+2,___flmul@b+2
  9022   0065E6  C00E  F01C         	movff	?___xxtofl+3,___flmul@b+3
  9023   0065EA  ECF1  F023         	call	___flmul	;wreg free
  9024   0065EE  C019  F032         	movff	?___flmul,___fladd@b
  9025   0065F2  C01A  F033         	movff	?___flmul+1,___fladd@b+1
  9026   0065F6  C01B  F034         	movff	?___flmul+2,___fladd@b+2
  9027   0065FA  C01C  F035         	movff	?___flmul+3,___fladd@b+3
  9028   0065FE  0100               	movlb	0	; () banked
  9029   006600  5183               	movf	convert_arr_to_float@num_value& (0+255),w,b
  9030   006602  6ED9               	movwf	fsr2l,c
  9031   006604  6ADA               	clrf	fsr2h,c
  9032   006606  CFDE F036          	movff	postinc2,___fladd@a
  9033   00660A  CFDE F037          	movff	postinc2,___fladd@a+1
  9034   00660E  CFDE F038          	movff	postinc2,___fladd@a+2
  9035   006612  CFDE F039          	movff	postinc2,___fladd@a+3
  9036   006616  EC91  F021         	call	___fladd	;wreg free
  9037   00661A  0100               	movlb	0	; () banked
  9038   00661C  5183               	movf	convert_arr_to_float@num_value& (0+255),w,b
  9039   00661E  6ED9               	movwf	fsr2l,c
  9040   006620  6ADA               	clrf	fsr2h,c
  9041   006622  C032  FFDE         	movff	?___fladd,postinc2
  9042   006626  C033  FFDE         	movff	?___fladd+1,postinc2
  9043   00662A  C034  FFDE         	movff	?___fladd+2,postinc2
  9044   00662E  C035  FFDE         	movff	?___fladd+3,postinc2
  9045   006632                     
  9046                           ; BSR set to: 0
  9047                           ;calculator_function/calculator_functions.c: 146: count_power--;
  9048   006632  078F               	decf	convert_arr_to_float@count_power& (0+255),f,b
  9049   006634                     
  9050                           ; BSR set to: 0
  9051                           ;calculator_function/calculator_functions.c: 147: }
  9052   006634  2B90               	incf	convert_arr_to_float@count& (0+255),f,b
  9053   006636                     
  9054                           ; BSR set to: 0
  9055   006636  5182               	movf	convert_arr_to_float@counter_num& (0+255),w,b
  9056   006638  5D90               	subwf	convert_arr_to_float@count& (0+255),w,b
  9057   00663A  A0D8               	btfss	status,0,c
  9058   00663C  EF22  F033         	goto	u13381
  9059   006640  EF24  F033         	goto	u13380
  9060   006644                     u13381:
  9061   006644  EFA0  F032         	goto	l12757
  9062   006648                     u13380:
  9063   006648                     l97:
  9064                           
  9065                           ; BSR set to: 0
  9066   006648  0012               	return		;funcret
  9067   00664A                     __end_of_convert_arr_to_float:
  9068                           	callstack 0
  9069                           
  9070 ;; *************** function _powf *****************
  9071 ;; Defined at:
  9072 ;;		line 55 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\powf.c"
  9073 ;; Parameters:    Size  Location     Type
  9074 ;;  x               4  110[COMRAM] float 
  9075 ;;  y               4  114[COMRAM] float 
  9076 ;; Auto vars:     Size  Location     Type
  9077 ;;  s2              4  144[BANK1 ] float 
  9078 ;;  s_h             4  116[BANK1 ] struct fui
  9079 ;;  t_h             4  112[BANK1 ] struct fui
  9080 ;;  t_l             4   52[BANK1 ] float 
  9081 ;;  s_l             4   48[BANK1 ] float 
  9082 ;;  z               4  180[BANK1 ] struct fui
  9083 ;;  t               4  176[BANK1 ] struct fui
  9084 ;;  ix              4  172[BANK1 ] struct fui
  9085 ;;  j               4  168[BANK1 ] long 
  9086 ;;  k               4  164[BANK1 ] long 
  9087 ;;  p_h             4  160[BANK1 ] struct fui
  9088 ;;  is              4  152[BANK1 ] struct fui
  9089 ;;  iy              4  148[BANK1 ] long 
  9090 ;;  t1              4  140[BANK1 ] struct fui
  9091 ;;  n               4  136[BANK1 ] long 
  9092 ;;  hy              4  132[BANK1 ] struct fui
  9093 ;;  v               4  128[BANK1 ] float 
  9094 ;;  u               4  124[BANK1 ] float 
  9095 ;;  ax              4  120[BANK1 ] struct fui
  9096 ;;  p_l             4  108[BANK1 ] float 
  9097 ;;  hx              4  104[BANK1 ] struct fui
  9098 ;;  sn              4  100[BANK1 ] unsigned long 
  9099 ;;  s               4   88[BANK1 ] float 
  9100 ;;  yisint          4   84[BANK1 ] long 
  9101 ;;  r               4   80[BANK1 ] float 
  9102 ;;  w               4   68[BANK1 ] float 
  9103 ;;  y1              4   44[BANK1 ] struct fui
  9104 ;;  i               4   40[BANK1 ] long 
  9105 ;;  z_l             4   36[BANK1 ] float 
  9106 ;;  z_h             4   32[BANK1 ] float 
  9107 ;;  t2              4   28[BANK1 ] float 
  9108 ;; Return value:  Size  Location     Type
  9109 ;;                  4  110[COMRAM] float 
  9110 ;; Registers used:
  9111 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9112 ;; Tracked objects:
  9113 ;;		On entry : 0/0
  9114 ;;		On exit  : 0/0
  9115 ;;		Unchanged: 0/0
  9116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9117 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9118 ;;      Locals:         0       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9119 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9120 ;;      Totals:        17       0     184       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9121 ;;Total ram usage:      201 bytes
  9122 ;; Hardware stack levels used: 1
  9123 ;; Hardware stack levels required when called: 2
  9124 ;; This function calls:
  9125 ;;		___fladd
  9126 ;;		___fldiv
  9127 ;;		___flge
  9128 ;;		___flmul
  9129 ;;		___flneg
  9130 ;;		___flsub
  9131 ;;		___xxtofl
  9132 ;;		_scalbnf
  9133 ;;		_sqrtf
  9134 ;; This function is called by:
  9135 ;;		_convert_arr_to_float
  9136 ;; This function uses a non-reentrant model
  9137 ;;
  9138                           
  9139                           	psect	text39
  9140   0010E4                     __ptext39:
  9141                           	callstack 0
  9142   0010E4                     _powf:
  9143                           	callstack 27
  9144   0010E4  C06F  F168         	movff	powf@x,powf@hx
  9145   0010E8  C070  F169         	movff	powf@x+1,powf@hx+1
  9146   0010EC  C071  F16A         	movff	powf@x+2,powf@hx+2
  9147   0010F0  C072  F16B         	movff	powf@x+3,powf@hx+3
  9148   0010F4  C073  F184         	movff	powf@y,powf@hy
  9149   0010F8  C074  F185         	movff	powf@y+1,powf@hy+1
  9150   0010FC  C075  F186         	movff	powf@y+2,powf@hy+2
  9151   001100  C076  F187         	movff	powf@y+3,powf@hy+3
  9152   001104  0EFF               	movlw	255
  9153   001106  0101               	movlb	1	; () banked
  9154   001108  1568               	andwf	powf@hx& (0+255),w,b
  9155   00110A  6FAC               	movwf	powf@ix& (0+255),b
  9156   00110C  0EFF               	movlw	255
  9157   00110E  1569               	andwf	(powf@hx+1)& (0+255),w,b
  9158   001110  6FAD               	movwf	(powf@ix+1)& (0+255),b
  9159   001112  0EFF               	movlw	255
  9160   001114  156A               	andwf	(powf@hx+2)& (0+255),w,b
  9161   001116  6FAE               	movwf	(powf@ix+2)& (0+255),b
  9162   001118  0E7F               	movlw	127
  9163   00111A  156B               	andwf	(powf@hx+3)& (0+255),w,b
  9164   00111C  6FAF               	movwf	(powf@ix+3)& (0+255),b
  9165   00111E  0EFF               	movlw	255
  9166   001120  1584               	andwf	powf@hy& (0+255),w,b
  9167   001122  6F94               	movwf	powf@iy& (0+255),b
  9168   001124  0EFF               	movlw	255
  9169   001126  1585               	andwf	(powf@hy+1)& (0+255),w,b
  9170   001128  6F95               	movwf	(powf@iy+1)& (0+255),b
  9171   00112A  0EFF               	movlw	255
  9172   00112C  1586               	andwf	(powf@hy+2)& (0+255),w,b
  9173   00112E  6F96               	movwf	(powf@iy+2)& (0+255),b
  9174   001130  0E7F               	movlw	127
  9175   001132  1587               	andwf	(powf@hy+3)& (0+255),w,b
  9176   001134  6F97               	movwf	(powf@iy+3)& (0+255),b
  9177   001136  5194               	movf	powf@iy& (0+255),w,b
  9178   001138  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9179   00113A  1196               	iorwf	(powf@iy+2)& (0+255),w,b
  9180   00113C  1197               	iorwf	(powf@iy+3)& (0+255),w,b
  9181   00113E  A4D8               	btfss	status,2,c
  9182   001140  EFA4  F008         	goto	u12781
  9183   001144  EFA6  F008         	goto	u12780
  9184   001148                     u12781:
  9185   001148  EFB0  F008         	goto	l12319
  9186   00114C                     u12780:
  9187   00114C                     
  9188                           ; BSR set to: 1
  9189   00114C  0E00               	movlw	0
  9190   00114E  6E6F               	movwf	?_powf^0,c
  9191   001150  0E00               	movlw	0
  9192   001152  6E70               	movwf	(?_powf+1)^0,c
  9193   001154  0E80               	movlw	128
  9194   001156  6E71               	movwf	(?_powf+2)^0,c
  9195   001158  0E3F               	movlw	63
  9196   00115A  6E72               	movwf	(?_powf+3)^0,c
  9197   00115C  EF06  F01A         	goto	l1638
  9198   001160                     l12319:
  9199                           
  9200                           ; BSR set to: 1
  9201   001160  0E80               	movlw	128
  9202   001162  196A               	xorwf	(powf@hx+2)& (0+255),w,b
  9203   001164  E109               	bnz	u12791
  9204   001166  0E3F               	movlw	63
  9205   001168  196B               	xorwf	(powf@hx+3)& (0+255),w,b
  9206   00116A  1168               	iorwf	powf@hx& (0+255),w,b
  9207   00116C  1169               	iorwf	(powf@hx+1)& (0+255),w,b
  9208   00116E  A4D8               	btfss	status,2,c
  9209   001170  EFBC  F008         	goto	u12791
  9210   001174  EFBE  F008         	goto	u12790
  9211   001178                     u12791:
  9212   001178  EFC8  F008         	goto	l12325
  9213   00117C                     u12790:
  9214   00117C                     
  9215                           ; BSR set to: 1
  9216   00117C  0E00               	movlw	0
  9217   00117E  6E6F               	movwf	?_powf^0,c
  9218   001180  0E00               	movlw	0
  9219   001182  6E70               	movwf	(?_powf+1)^0,c
  9220   001184  0E80               	movlw	128
  9221   001186  6E71               	movwf	(?_powf+2)^0,c
  9222   001188  0E3F               	movlw	63
  9223   00118A  6E72               	movwf	(?_powf+3)^0,c
  9224   00118C  EF06  F01A         	goto	l1638
  9225   001190                     l12325:
  9226                           
  9227                           ; BSR set to: 1
  9228   001190  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9229   001192  EFD9  F008         	goto	u12800
  9230   001196  05AC               	decf	powf@ix& (0+255),w,b
  9231   001198  0E00               	movlw	0
  9232   00119A  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9233   00119C  0E80               	movlw	128
  9234   00119E  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9235   0011A0  0E7F               	movlw	127
  9236   0011A2  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9237   0011A4  B0D8               	btfsc	status,0,c
  9238   0011A6  EFD7  F008         	goto	u12801
  9239   0011AA  EFD9  F008         	goto	u12800
  9240   0011AE                     u12801:
  9241   0011AE  EFEA  F008         	goto	l12329
  9242   0011B2                     u12800:
  9243   0011B2                     
  9244                           ; BSR set to: 1
  9245   0011B2  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9246   0011B4  EFE8  F008         	goto	u12811
  9247   0011B8  0594               	decf	powf@iy& (0+255),w,b
  9248   0011BA  0E00               	movlw	0
  9249   0011BC  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  9250   0011BE  0E80               	movlw	128
  9251   0011C0  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  9252   0011C2  0E7F               	movlw	127
  9253   0011C4  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9254   0011C6  A0D8               	btfss	status,0,c
  9255   0011C8  EFE8  F008         	goto	u12811
  9256   0011CC  EFEA  F008         	goto	u12810
  9257   0011D0                     u12811:
  9258   0011D0  EF06  F009         	goto	l12333
  9259   0011D4                     u12810:
  9260   0011D4                     l12329:
  9261                           
  9262                           ; BSR set to: 1
  9263   0011D4  C06F  F032         	movff	powf@x,___fladd@b
  9264   0011D8  C070  F033         	movff	powf@x+1,___fladd@b+1
  9265   0011DC  C071  F034         	movff	powf@x+2,___fladd@b+2
  9266   0011E0  C072  F035         	movff	powf@x+3,___fladd@b+3
  9267   0011E4  C073  F036         	movff	powf@y,___fladd@a
  9268   0011E8  C074  F037         	movff	powf@y+1,___fladd@a+1
  9269   0011EC  C075  F038         	movff	powf@y+2,___fladd@a+2
  9270   0011F0  C076  F039         	movff	powf@y+3,___fladd@a+3
  9271   0011F4  EC91  F021         	call	___fladd	;wreg free
  9272   0011F8  C032  F06F         	movff	?___fladd,?_powf
  9273   0011FC  C033  F070         	movff	?___fladd+1,?_powf+1
  9274   001200  C034  F071         	movff	?___fladd+2,?_powf+2
  9275   001204  C035  F072         	movff	?___fladd+3,?_powf+3
  9276   001208  EF06  F01A         	goto	l1638
  9277   00120C                     l12333:
  9278                           
  9279                           ; BSR set to: 1
  9280   00120C  0E00               	movlw	0
  9281   00120E  6F54               	movwf	powf@yisint& (0+255),b
  9282   001210  0E00               	movlw	0
  9283   001212  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9284   001214  0E00               	movlw	0
  9285   001216  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9286   001218  0E00               	movlw	0
  9287   00121A  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9288   00121C                     
  9289                           ; BSR set to: 1
  9290   00121C  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9291   00121E  EF15  F009         	goto	u12820
  9292   001222  EF13  F009         	goto	u12821
  9293   001226                     u12821:
  9294   001226  EFC0  F009         	goto	l1643
  9295   00122A                     u12820:
  9296   00122A                     
  9297                           ; BSR set to: 1
  9298   00122A  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9299   00122C  EF21  F009         	goto	u12831
  9300   001230  0E80               	movlw	128
  9301   001232  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9302   001234  0E4B               	movlw	75
  9303   001236  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9304   001238  A0D8               	btfss	status,0,c
  9305   00123A  EF21  F009         	goto	u12831
  9306   00123E  EF23  F009         	goto	u12830
  9307   001242                     u12831:
  9308   001242  EF2D  F009         	goto	l12341
  9309   001246                     u12830:
  9310   001246                     
  9311                           ; BSR set to: 1
  9312   001246  0E02               	movlw	2
  9313   001248  6F54               	movwf	powf@yisint& (0+255),b
  9314   00124A  0E00               	movlw	0
  9315   00124C  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9316   00124E  0E00               	movlw	0
  9317   001250  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9318   001252  0E00               	movlw	0
  9319   001254  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9320   001256  EFC0  F009         	goto	l1643
  9321   00125A                     l12341:
  9322                           
  9323                           ; BSR set to: 1
  9324   00125A  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9325   00125C  EF39  F009         	goto	u12841
  9326   001260  0E80               	movlw	128
  9327   001262  5D96               	subwf	(powf@iy+2)& (0+255),w,b
  9328   001264  0E3F               	movlw	63
  9329   001266  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9330   001268  A0D8               	btfss	status,0,c
  9331   00126A  EF39  F009         	goto	u12841
  9332   00126E  EF3B  F009         	goto	u12840
  9333   001272                     u12841:
  9334   001272  EFC0  F009         	goto	l1643
  9335   001276                     u12840:
  9336   001276                     
  9337                           ; BSR set to: 1
  9338   001276  0E17               	movlw	23
  9339   001278  6E77               	movwf	??_powf^0,c
  9340   00127A  C194  F078         	movff	powf@iy,??_powf+1
  9341   00127E  C195  F079         	movff	powf@iy+1,??_powf+2
  9342   001282  C196  F07A         	movff	powf@iy+2,??_powf+3
  9343   001286  C197  F07B         	movff	powf@iy+3,??_powf+4
  9344   00128A                     u12855:
  9345   00128A  6677               	tstfsz	??_powf^0,c
  9346   00128C  EF4A  F009         	goto	u12856
  9347   001290  EF52  F009         	goto	u12857
  9348   001294                     u12856:
  9349   001294  347B               	rlcf	(??_powf+4)^0,w,c
  9350   001296  327B               	rrcf	(??_powf+4)^0,f,c
  9351   001298  327A               	rrcf	(??_powf+3)^0,f,c
  9352   00129A  3279               	rrcf	(??_powf+2)^0,f,c
  9353   00129C  3278               	rrcf	(??_powf+1)^0,f,c
  9354   00129E  2E77               	decfsz	??_powf^0,f,c
  9355   0012A0  EF45  F009         	goto	u12855
  9356   0012A4                     u12857:
  9357   0012A4  0E81               	movlw	129
  9358   0012A6  2478               	addwf	(??_powf+1)^0,w,c
  9359   0012A8  0101               	movlb	1	; () banked
  9360   0012AA  6FA4               	movwf	powf@k& (0+255),b
  9361   0012AC  0EFF               	movlw	255
  9362   0012AE  2079               	addwfc	(??_powf+2)^0,w,c
  9363   0012B0  6FA5               	movwf	(powf@k+1)& (0+255),b
  9364   0012B2  0EFF               	movlw	255
  9365   0012B4  207A               	addwfc	(??_powf+3)^0,w,c
  9366   0012B6  6FA6               	movwf	(powf@k+2)& (0+255),b
  9367   0012B8  0EFF               	movlw	255
  9368   0012BA  207B               	addwfc	(??_powf+4)^0,w,c
  9369   0012BC  6FA7               	movwf	(powf@k+3)& (0+255),b
  9370   0012BE  51A4               	movf	powf@k& (0+255),w,b
  9371   0012C0  0817               	sublw	23
  9372   0012C2  6E77               	movwf	??_powf^0,c
  9373   0012C4  C194  F078         	movff	powf@iy,??_powf+1
  9374   0012C8  C195  F079         	movff	powf@iy+1,??_powf+2
  9375   0012CC  C196  F07A         	movff	powf@iy+2,??_powf+3
  9376   0012D0  C197  F07B         	movff	powf@iy+3,??_powf+4
  9377   0012D4                     u12865:
  9378   0012D4  6677               	tstfsz	??_powf^0,c
  9379   0012D6  EF6F  F009         	goto	u12866
  9380   0012DA  EF77  F009         	goto	u12867
  9381   0012DE                     u12866:
  9382   0012DE  347B               	rlcf	(??_powf+4)^0,w,c
  9383   0012E0  327B               	rrcf	(??_powf+4)^0,f,c
  9384   0012E2  327A               	rrcf	(??_powf+3)^0,f,c
  9385   0012E4  3279               	rrcf	(??_powf+2)^0,f,c
  9386   0012E6  3278               	rrcf	(??_powf+1)^0,f,c
  9387   0012E8  2E77               	decfsz	??_powf^0,f,c
  9388   0012EA  EF6A  F009         	goto	u12865
  9389   0012EE                     u12867:
  9390   0012EE  C078  F1A8         	movff	??_powf+1,powf@j
  9391   0012F2  C079  F1A9         	movff	??_powf+2,powf@j+1
  9392   0012F6  C07A  F1AA         	movff	??_powf+3,powf@j+2
  9393   0012FA  C07B  F1AB         	movff	??_powf+4,powf@j+3
  9394   0012FE  0101               	movlb	1	; () banked
  9395   001300  51A4               	movf	powf@k& (0+255),w,b
  9396   001302  0817               	sublw	23
  9397   001304  6E77               	movwf	??_powf^0,c
  9398   001306  C1A8  F078         	movff	powf@j,??_powf+1
  9399   00130A  C1A9  F079         	movff	powf@j+1,??_powf+2
  9400   00130E  C1AA  F07A         	movff	powf@j+2,??_powf+3
  9401   001312  C1AB  F07B         	movff	powf@j+3,??_powf+4
  9402   001316  2A77               	incf	??_powf^0,f,c
  9403   001318  EF93  F009         	goto	u12870
  9404   00131C                     u12875:
  9405   00131C  90D8               	bcf	status,0,c
  9406   00131E  3678               	rlcf	(??_powf+1)^0,f,c
  9407   001320  3679               	rlcf	(??_powf+2)^0,f,c
  9408   001322  367A               	rlcf	(??_powf+3)^0,f,c
  9409   001324  367B               	rlcf	(??_powf+4)^0,f,c
  9410   001326                     u12870:
  9411   001326  2E77               	decfsz	??_powf^0,f,c
  9412   001328  EF8E  F009         	goto	u12875
  9413   00132C  5194               	movf	powf@iy& (0+255),w,b
  9414   00132E  1878               	xorwf	(??_powf+1)^0,w,c
  9415   001330  E10D               	bnz	u12881
  9416   001332  5195               	movf	(powf@iy+1)& (0+255),w,b
  9417   001334  1879               	xorwf	(??_powf+2)^0,w,c
  9418   001336  E10A               	bnz	u12881
  9419   001338  5196               	movf	(powf@iy+2)& (0+255),w,b
  9420   00133A  187A               	xorwf	(??_powf+3)^0,w,c
  9421   00133C  E107               	bnz	u12881
  9422   00133E  5197               	movf	(powf@iy+3)& (0+255),w,b
  9423   001340  187B               	xorwf	(??_powf+4)^0,w,c
  9424   001342  A4D8               	btfss	status,2,c
  9425   001344  EFA6  F009         	goto	u12881
  9426   001348  EFA8  F009         	goto	u12880
  9427   00134C                     u12881:
  9428   00134C  EFC0  F009         	goto	l1643
  9429   001350                     u12880:
  9430   001350                     
  9431                           ; BSR set to: 1
  9432   001350  0E01               	movlw	1
  9433   001352  15A8               	andwf	powf@j& (0+255),w,b
  9434   001354  6E77               	movwf	??_powf^0,c
  9435   001356  0E00               	movlw	0
  9436   001358  15A9               	andwf	(powf@j+1)& (0+255),w,b
  9437   00135A  6E78               	movwf	(??_powf+1)^0,c
  9438   00135C  0E00               	movlw	0
  9439   00135E  15AA               	andwf	(powf@j+2)& (0+255),w,b
  9440   001360  6E79               	movwf	(??_powf+2)^0,c
  9441   001362  0E00               	movlw	0
  9442   001364  15AB               	andwf	(powf@j+3)& (0+255),w,b
  9443   001366  6E7A               	movwf	(??_powf+3)^0,c
  9444   001368  5077               	movf	??_powf^0,w,c
  9445   00136A  0802               	sublw	2
  9446   00136C  6F54               	movwf	powf@yisint& (0+255),b
  9447   00136E  0E00               	movlw	0
  9448   001370  5478               	subfwb	(??_powf+1)^0,w,c
  9449   001372  6F55               	movwf	(powf@yisint+1)& (0+255),b
  9450   001374  0E00               	movlw	0
  9451   001376  5479               	subfwb	(??_powf+2)^0,w,c
  9452   001378  6F56               	movwf	(powf@yisint+2)& (0+255),b
  9453   00137A  0E00               	movlw	0
  9454   00137C  547A               	subfwb	(??_powf+3)^0,w,c
  9455   00137E  6F57               	movwf	(powf@yisint+3)& (0+255),b
  9456   001380                     l1643:
  9457                           
  9458                           ; BSR set to: 1
  9459   001380  0E80               	movlw	128
  9460   001382  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  9461   001384  E109               	bnz	u12891
  9462   001386  0E7F               	movlw	127
  9463   001388  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  9464   00138A  1194               	iorwf	powf@iy& (0+255),w,b
  9465   00138C  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9466   00138E  A4D8               	btfss	status,2,c
  9467   001390  EFCC  F009         	goto	u12891
  9468   001394  EFCE  F009         	goto	u12890
  9469   001398                     u12891:
  9470   001398  EF37  F00A         	goto	l12371
  9471   00139C                     u12890:
  9472   00139C                     
  9473                           ; BSR set to: 1
  9474   00139C  0E80               	movlw	128
  9475   00139E  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9476   0013A0  E109               	bnz	u12901
  9477   0013A2  0E3F               	movlw	63
  9478   0013A4  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9479   0013A6  11AC               	iorwf	powf@ix& (0+255),w,b
  9480   0013A8  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9481   0013AA  A4D8               	btfss	status,2,c
  9482   0013AC  EFDA  F009         	goto	u12901
  9483   0013B0  EFDC  F009         	goto	u12900
  9484   0013B4                     u12901:
  9485   0013B4  EFE6  F009         	goto	l12355
  9486   0013B8                     u12900:
  9487   0013B8                     
  9488                           ; BSR set to: 1
  9489   0013B8  0E00               	movlw	0
  9490   0013BA  6E6F               	movwf	?_powf^0,c
  9491   0013BC  0E00               	movlw	0
  9492   0013BE  6E70               	movwf	(?_powf+1)^0,c
  9493   0013C0  0E80               	movlw	128
  9494   0013C2  6E71               	movwf	(?_powf+2)^0,c
  9495   0013C4  0E3F               	movlw	63
  9496   0013C6  6E72               	movwf	(?_powf+3)^0,c
  9497   0013C8  EF06  F01A         	goto	l1638
  9498   0013CC                     l12355:
  9499                           
  9500                           ; BSR set to: 1
  9501   0013CC  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9502   0013CE  EFF5  F009         	goto	u12911
  9503   0013D2  05AC               	decf	powf@ix& (0+255),w,b
  9504   0013D4  0E00               	movlw	0
  9505   0013D6  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9506   0013D8  0E80               	movlw	128
  9507   0013DA  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9508   0013DC  0E3F               	movlw	63
  9509   0013DE  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9510   0013E0  A0D8               	btfss	status,0,c
  9511   0013E2  EFF5  F009         	goto	u12911
  9512   0013E6  EFF7  F009         	goto	u12910
  9513   0013EA                     u12911:
  9514   0013EA  EF12  F00A         	goto	l12363
  9515   0013EE                     u12910:
  9516   0013EE                     
  9517                           ; BSR set to: 1
  9518   0013EE  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9519   0013F0  EFFE  F009         	goto	u12920
  9520   0013F4  EFFC  F009         	goto	u12921
  9521   0013F8                     u12921:
  9522   0013F8  EF08  F00A         	goto	l1653
  9523   0013FC                     u12920:
  9524   0013FC                     
  9525                           ; BSR set to: 1
  9526   0013FC  0E00               	movlw	0
  9527   0013FE  6E6F               	movwf	?_powf^0,c
  9528   001400  0E00               	movlw	0
  9529   001402  6E70               	movwf	(?_powf+1)^0,c
  9530   001404  0E00               	movlw	0
  9531   001406  6E71               	movwf	(?_powf+2)^0,c
  9532   001408  0E00               	movlw	0
  9533   00140A  6E72               	movwf	(?_powf+3)^0,c
  9534   00140C  EF06  F01A         	goto	l1638
  9535   001410                     l1653:
  9536                           
  9537                           ; BSR set to: 1
  9538   001410  C073  F06F         	movff	powf@y,?_powf
  9539   001414  C074  F070         	movff	powf@y+1,?_powf+1
  9540   001418  C075  F071         	movff	powf@y+2,?_powf+2
  9541   00141C  C076  F072         	movff	powf@y+3,?_powf+3
  9542   001420  EF06  F01A         	goto	l1638
  9543   001424                     l12363:
  9544                           
  9545                           ; BSR set to: 1
  9546   001424  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9547   001426  EF19  F00A         	goto	u12930
  9548   00142A  EF17  F00A         	goto	u12931
  9549   00142E                     u12931:
  9550   00142E  EF2D  F00A         	goto	l12367
  9551   001432                     u12930:
  9552   001432                     
  9553                           ; BSR set to: 1
  9554   001432  C073  F001         	movff	powf@y,___flneg@f1
  9555   001436  C074  F002         	movff	powf@y+1,___flneg@f1+1
  9556   00143A  C075  F003         	movff	powf@y+2,___flneg@f1+2
  9557   00143E  C076  F004         	movff	powf@y+3,___flneg@f1+3
  9558   001442  ECC2  F03C         	call	___flneg	;wreg free
  9559   001446  C001  F06F         	movff	?___flneg,?_powf
  9560   00144A  C002  F070         	movff	?___flneg+1,?_powf+1
  9561   00144E  C003  F071         	movff	?___flneg+2,?_powf+2
  9562   001452  C004  F072         	movff	?___flneg+3,?_powf+3
  9563   001456  EF06  F01A         	goto	l1638
  9564   00145A                     l12367:
  9565                           
  9566                           ; BSR set to: 1
  9567   00145A  0E00               	movlw	0
  9568   00145C  6E6F               	movwf	?_powf^0,c
  9569   00145E  0E00               	movlw	0
  9570   001460  6E70               	movwf	(?_powf+1)^0,c
  9571   001462  0E00               	movlw	0
  9572   001464  6E71               	movwf	(?_powf+2)^0,c
  9573   001466  0E00               	movlw	0
  9574   001468  6E72               	movwf	(?_powf+3)^0,c
  9575   00146A  EF06  F01A         	goto	l1638
  9576   00146E                     l12371:
  9577                           
  9578                           ; BSR set to: 1
  9579   00146E  0E80               	movlw	128
  9580   001470  1996               	xorwf	(powf@iy+2)& (0+255),w,b
  9581   001472  E109               	bnz	u12941
  9582   001474  0E3F               	movlw	63
  9583   001476  1997               	xorwf	(powf@iy+3)& (0+255),w,b
  9584   001478  1194               	iorwf	powf@iy& (0+255),w,b
  9585   00147A  1195               	iorwf	(powf@iy+1)& (0+255),w,b
  9586   00147C  A4D8               	btfss	status,2,c
  9587   00147E  EF43  F00A         	goto	u12941
  9588   001482  EF45  F00A         	goto	u12940
  9589   001486                     u12941:
  9590   001486  EF72  F00A         	goto	l12377
  9591   00148A                     u12940:
  9592   00148A                     
  9593                           ; BSR set to: 1
  9594   00148A  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9595   00148C  EF4C  F00A         	goto	u12950
  9596   001490  EF4A  F00A         	goto	u12951
  9597   001494                     u12951:
  9598   001494  EF68  F00A         	goto	l1663
  9599   001498                     u12950:
  9600   001498                     
  9601                           ; BSR set to: 1
  9602   001498  0E00               	movlw	0
  9603   00149A  6E42               	movwf	___fldiv@b^0,c
  9604   00149C  0E00               	movlw	0
  9605   00149E  6E43               	movwf	(___fldiv@b+1)^0,c
  9606   0014A0  0E80               	movlw	128
  9607   0014A2  6E44               	movwf	(___fldiv@b+2)^0,c
  9608   0014A4  0E3F               	movlw	63
  9609   0014A6  6E45               	movwf	(___fldiv@b+3)^0,c
  9610   0014A8  C06F  F046         	movff	powf@x,___fldiv@a
  9611   0014AC  C070  F047         	movff	powf@x+1,___fldiv@a+1
  9612   0014B0  C071  F048         	movff	powf@x+2,___fldiv@a+2
  9613   0014B4  C072  F049         	movff	powf@x+3,___fldiv@a+3
  9614   0014B8  ECF5  F027         	call	___fldiv	;wreg free
  9615   0014BC  C042  F06F         	movff	?___fldiv,?_powf
  9616   0014C0  C043  F070         	movff	?___fldiv+1,?_powf+1
  9617   0014C4  C044  F071         	movff	?___fldiv+2,?_powf+2
  9618   0014C8  C045  F072         	movff	?___fldiv+3,?_powf+3
  9619   0014CC  EF06  F01A         	goto	l1638
  9620   0014D0                     l1663:
  9621                           
  9622                           ; BSR set to: 1
  9623   0014D0  C06F  F06F         	movff	powf@x,?_powf
  9624   0014D4  C070  F070         	movff	powf@x+1,?_powf+1
  9625   0014D8  C071  F071         	movff	powf@x+2,?_powf+2
  9626   0014DC  C072  F072         	movff	powf@x+3,?_powf+3
  9627   0014E0  EF06  F01A         	goto	l1638
  9628   0014E4                     l12377:
  9629                           
  9630                           ; BSR set to: 1
  9631   0014E4  0E40               	movlw	64
  9632   0014E6  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  9633   0014E8  1184               	iorwf	powf@hy& (0+255),w,b
  9634   0014EA  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9635   0014EC  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9636   0014EE  A4D8               	btfss	status,2,c
  9637   0014F0  EF7C  F00A         	goto	u12961
  9638   0014F4  EF7E  F00A         	goto	u12960
  9639   0014F8                     u12961:
  9640   0014F8  EF9A  F00A         	goto	l12383
  9641   0014FC                     u12960:
  9642   0014FC                     
  9643                           ; BSR set to: 1
  9644   0014FC  C06F  F019         	movff	powf@x,___flmul@b
  9645   001500  C070  F01A         	movff	powf@x+1,___flmul@b+1
  9646   001504  C071  F01B         	movff	powf@x+2,___flmul@b+2
  9647   001508  C072  F01C         	movff	powf@x+3,___flmul@b+3
  9648   00150C  C06F  F01D         	movff	powf@x,___flmul@a
  9649   001510  C070  F01E         	movff	powf@x+1,___flmul@a+1
  9650   001514  C071  F01F         	movff	powf@x+2,___flmul@a+2
  9651   001518  C072  F020         	movff	powf@x+3,___flmul@a+3
  9652   00151C  ECF1  F023         	call	___flmul	;wreg free
  9653   001520  C019  F06F         	movff	?___flmul,?_powf
  9654   001524  C01A  F070         	movff	?___flmul+1,?_powf+1
  9655   001528  C01B  F071         	movff	?___flmul+2,?_powf+2
  9656   00152C  C01C  F072         	movff	?___flmul+3,?_powf+3
  9657   001530  EF06  F01A         	goto	l1638
  9658   001534                     l12383:
  9659                           
  9660                           ; BSR set to: 1
  9661   001534  0E3F               	movlw	63
  9662   001536  1987               	xorwf	(powf@hy+3)& (0+255),w,b
  9663   001538  1184               	iorwf	powf@hy& (0+255),w,b
  9664   00153A  1185               	iorwf	(powf@hy+1)& (0+255),w,b
  9665   00153C  1186               	iorwf	(powf@hy+2)& (0+255),w,b
  9666   00153E  A4D8               	btfss	status,2,c
  9667   001540  EFA4  F00A         	goto	u12971
  9668   001544  EFA6  F00A         	goto	u12970
  9669   001548                     u12971:
  9670   001548  EFC1  F00A         	goto	l1667
  9671   00154C                     u12970:
  9672   00154C                     
  9673                           ; BSR set to: 1
  9674   00154C  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9675   00154E  EFAB  F00A         	goto	u12981
  9676   001552  EFAD  F00A         	goto	u12980
  9677   001556                     u12981:
  9678   001556  EFC1  F00A         	goto	l1667
  9679   00155A                     u12980:
  9680   00155A                     
  9681                           ; BSR set to: 1
  9682   00155A  C06F  F001         	movff	powf@x,sqrtf@x
  9683   00155E  C070  F002         	movff	powf@x+1,sqrtf@x+1
  9684   001562  C071  F003         	movff	powf@x+2,sqrtf@x+2
  9685   001566  C072  F004         	movff	powf@x+3,sqrtf@x+3
  9686   00156A  EC06  F026         	call	_sqrtf	;wreg free
  9687   00156E  C001  F06F         	movff	?_sqrtf,?_powf
  9688   001572  C002  F070         	movff	?_sqrtf+1,?_powf+1
  9689   001576  C003  F071         	movff	?_sqrtf+2,?_powf+2
  9690   00157A  C004  F072         	movff	?_sqrtf+3,?_powf+3
  9691   00157E  EF06  F01A         	goto	l1638
  9692   001582                     l1667:
  9693                           
  9694                           ; BSR set to: 1
  9695   001582  C1AC  F178         	movff	powf@ix,powf@ax
  9696   001586  C1AD  F179         	movff	powf@ix+1,powf@ax+1
  9697   00158A  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
  9698   00158E  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
  9699   001592                     
  9700                           ; BSR set to: 1
  9701   001592  0E80               	movlw	128
  9702   001594  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9703   001596  E10B               	bnz	u12990
  9704   001598  0E7F               	movlw	127
  9705   00159A  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9706   00159C  11AC               	iorwf	powf@ix& (0+255),w,b
  9707   00159E  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9708   0015A0  B4D8               	btfsc	status,2,c
  9709   0015A2  EFD5  F00A         	goto	u12991
  9710   0015A6  EFD7  F00A         	goto	u12990
  9711   0015AA                     u12991:
  9712   0015AA  EFF0  F00A         	goto	l1671
  9713   0015AE                     u12990:
  9714   0015AE                     
  9715                           ; BSR set to: 1
  9716   0015AE  51AC               	movf	powf@ix& (0+255),w,b
  9717   0015B0  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9718   0015B2  11AE               	iorwf	(powf@ix+2)& (0+255),w,b
  9719   0015B4  11AF               	iorwf	(powf@ix+3)& (0+255),w,b
  9720   0015B6  B4D8               	btfsc	status,2,c
  9721   0015B8  EFE0  F00A         	goto	u13001
  9722   0015BC  EFE2  F00A         	goto	u13000
  9723   0015C0                     u13001:
  9724   0015C0  EFF0  F00A         	goto	l1671
  9725   0015C4                     u13000:
  9726   0015C4                     
  9727                           ; BSR set to: 1
  9728   0015C4  0E80               	movlw	128
  9729   0015C6  19AE               	xorwf	(powf@ix+2)& (0+255),w,b
  9730   0015C8  E109               	bnz	u13011
  9731   0015CA  0E3F               	movlw	63
  9732   0015CC  19AF               	xorwf	(powf@ix+3)& (0+255),w,b
  9733   0015CE  11AC               	iorwf	powf@ix& (0+255),w,b
  9734   0015D0  11AD               	iorwf	(powf@ix+1)& (0+255),w,b
  9735   0015D2  A4D8               	btfss	status,2,c
  9736   0015D4  EFEE  F00A         	goto	u13011
  9737   0015D8  EFF0  F00A         	goto	u13010
  9738   0015DC                     u13011:
  9739   0015DC  EF79  F00B         	goto	l12415
  9740   0015E0                     u13010:
  9741   0015E0                     l1671:
  9742                           
  9743                           ; BSR set to: 1
  9744   0015E0  C178  F1B4         	movff	powf@ax,powf@z
  9745   0015E4  C179  F1B5         	movff	powf@ax+1,powf@z+1
  9746   0015E8  C17A  F1B6         	movff	powf@ax+2,powf@z+2
  9747   0015EC  C17B  F1B7         	movff	powf@ax+3,powf@z+3
  9748   0015F0                     
  9749                           ; BSR set to: 1
  9750   0015F0  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9751   0015F2  EFFF  F00A         	goto	u13020
  9752   0015F6  EFFD  F00A         	goto	u13021
  9753   0015FA                     u13021:
  9754   0015FA  EF19  F00B         	goto	l12401
  9755   0015FE                     u13020:
  9756   0015FE                     
  9757                           ; BSR set to: 1
  9758   0015FE  0E00               	movlw	0
  9759   001600  6E42               	movwf	___fldiv@b^0,c
  9760   001602  0E00               	movlw	0
  9761   001604  6E43               	movwf	(___fldiv@b+1)^0,c
  9762   001606  0E80               	movlw	128
  9763   001608  6E44               	movwf	(___fldiv@b+2)^0,c
  9764   00160A  0E3F               	movlw	63
  9765   00160C  6E45               	movwf	(___fldiv@b+3)^0,c
  9766   00160E  C1B4  F046         	movff	powf@z,___fldiv@a
  9767   001612  C1B5  F047         	movff	powf@z+1,___fldiv@a+1
  9768   001616  C1B6  F048         	movff	powf@z+2,___fldiv@a+2
  9769   00161A  C1B7  F049         	movff	powf@z+3,___fldiv@a+3
  9770   00161E  ECF5  F027         	call	___fldiv	;wreg free
  9771   001622  C042  F1B4         	movff	?___fldiv,powf@z
  9772   001626  C043  F1B5         	movff	?___fldiv+1,powf@z+1
  9773   00162A  C044  F1B6         	movff	?___fldiv+2,powf@z+2
  9774   00162E  C045  F1B7         	movff	?___fldiv+3,powf@z+3
  9775   001632                     l12401:
  9776   001632  0101               	movlb	1	; () banked
  9777   001634  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9778   001636  EF21  F00B         	goto	u13030
  9779   00163A  EF1F  F00B         	goto	u13031
  9780   00163E                     u13031:
  9781   00163E  EF6F  F00B         	goto	l12411
  9782   001642                     u13030:
  9783   001642                     
  9784                           ; BSR set to: 1
  9785   001642  0E00               	movlw	0
  9786   001644  25AC               	addwf	powf@ix& (0+255),w,b
  9787   001646  6E77               	movwf	??_powf^0,c
  9788   001648  0E00               	movlw	0
  9789   00164A  21AD               	addwfc	(powf@ix+1)& (0+255),w,b
  9790   00164C  6E78               	movwf	(??_powf+1)^0,c
  9791   00164E  0E80               	movlw	128
  9792   001650  21AE               	addwfc	(powf@ix+2)& (0+255),w,b
  9793   001652  6E79               	movwf	(??_powf+2)^0,c
  9794   001654  0EC0               	movlw	192
  9795   001656  21AF               	addwfc	(powf@ix+3)& (0+255),w,b
  9796   001658  6E7A               	movwf	(??_powf+3)^0,c
  9797   00165A  5154               	movf	powf@yisint& (0+255),w,b
  9798   00165C  1077               	iorwf	??_powf^0,w,c
  9799   00165E  6E7B               	movwf	(??_powf+4)^0,c
  9800   001660  5155               	movf	(powf@yisint+1)& (0+255),w,b
  9801   001662  1078               	iorwf	(??_powf+1)^0,w,c
  9802   001664  6E7C               	movwf	(??_powf+5)^0,c
  9803   001666  5156               	movf	(powf@yisint+2)& (0+255),w,b
  9804   001668  1079               	iorwf	(??_powf+2)^0,w,c
  9805   00166A  6E7D               	movwf	(??_powf+6)^0,c
  9806   00166C  5157               	movf	(powf@yisint+3)& (0+255),w,b
  9807   00166E  107A               	iorwf	(??_powf+3)^0,w,c
  9808   001670  6E7E               	movwf	(??_powf+7)^0,c
  9809   001672  507B               	movf	(??_powf+4)^0,w,c
  9810   001674  107C               	iorwf	(??_powf+5)^0,w,c
  9811   001676  107D               	iorwf	(??_powf+6)^0,w,c
  9812   001678  107E               	iorwf	(??_powf+7)^0,w,c
  9813   00167A  A4D8               	btfss	status,2,c
  9814   00167C  EF42  F00B         	goto	u13041
  9815   001680  EF44  F00B         	goto	u13040
  9816   001684                     u13041:
  9817   001684  EF52  F00B         	goto	l12407
  9818   001688                     u13040:
  9819   001688                     l12405:
  9820                           
  9821                           ; BSR set to: 1
  9822   001688  0E00               	movlw	0
  9823   00168A  6FE7               	movwf	(_errno+1)& (0+255),b
  9824   00168C  0E21               	movlw	33
  9825   00168E  6FE6               	movwf	_errno& (0+255),b
  9826   001690  0EFF               	movlw	255
  9827   001692  6FB4               	movwf	powf@z& (0+255),b
  9828   001694  0EFF               	movlw	255
  9829   001696  6FB5               	movwf	(powf@z+1)& (0+255),b
  9830   001698  0EFF               	movlw	255
  9831   00169A  6FB6               	movwf	(powf@z+2)& (0+255),b
  9832   00169C  0E7F               	movlw	127
  9833   00169E  6FB7               	movwf	(powf@z+3)& (0+255),b
  9834   0016A0  EF6F  F00B         	goto	l12411
  9835   0016A4                     l12407:
  9836                           
  9837                           ; BSR set to: 1
  9838   0016A4  0554               	decf	powf@yisint& (0+255),w,b
  9839   0016A6  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9840   0016A8  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9841   0016AA  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9842   0016AC  A4D8               	btfss	status,2,c
  9843   0016AE  EF5B  F00B         	goto	u13051
  9844   0016B2  EF5D  F00B         	goto	u13050
  9845   0016B6                     u13051:
  9846   0016B6  EF6F  F00B         	goto	l12411
  9847   0016BA                     u13050:
  9848   0016BA                     
  9849                           ; BSR set to: 1
  9850   0016BA  C1B4  F001         	movff	powf@z,___flneg@f1
  9851   0016BE  C1B5  F002         	movff	powf@z+1,___flneg@f1+1
  9852   0016C2  C1B6  F003         	movff	powf@z+2,___flneg@f1+2
  9853   0016C6  C1B7  F004         	movff	powf@z+3,___flneg@f1+3
  9854   0016CA  ECC2  F03C         	call	___flneg	;wreg free
  9855   0016CE  C001  F1B4         	movff	?___flneg,powf@z
  9856   0016D2  C002  F1B5         	movff	?___flneg+1,powf@z+1
  9857   0016D6  C003  F1B6         	movff	?___flneg+2,powf@z+2
  9858   0016DA  C004  F1B7         	movff	?___flneg+3,powf@z+3
  9859   0016DE                     l12411:
  9860   0016DE  C1B4  F06F         	movff	powf@z,?_powf
  9861   0016E2  C1B5  F070         	movff	powf@z+1,?_powf+1
  9862   0016E6  C1B6  F071         	movff	powf@z+2,?_powf+2
  9863   0016EA  C1B7  F072         	movff	powf@z+3,?_powf+3
  9864   0016EE  EF06  F01A         	goto	l1638
  9865   0016F2                     l12415:
  9866                           
  9867                           ; BSR set to: 1
  9868   0016F2  0E00               	movlw	0
  9869   0016F4  6F64               	movwf	powf@sn& (0+255),b
  9870   0016F6  0E00               	movlw	0
  9871   0016F8  6F65               	movwf	(powf@sn+1)& (0+255),b
  9872   0016FA  0E00               	movlw	0
  9873   0016FC  6F66               	movwf	(powf@sn+2)& (0+255),b
  9874   0016FE  0E00               	movlw	0
  9875   001700  6F67               	movwf	(powf@sn+3)& (0+255),b
  9876   001702                     
  9877                           ; BSR set to: 1
  9878   001702  BF6B               	btfsc	(powf@hx+3)& (0+255),7,b
  9879   001704  EF88  F00B         	goto	u13060
  9880   001708  EF86  F00B         	goto	u13061
  9881   00170C                     u13061:
  9882   00170C  EFA8  F00B         	goto	l12431
  9883   001710                     u13060:
  9884   001710                     
  9885                           ; BSR set to: 1
  9886   001710  5154               	movf	powf@yisint& (0+255),w,b
  9887   001712  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9888   001714  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9889   001716  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9890   001718  A4D8               	btfss	status,2,c
  9891   00171A  EF91  F00B         	goto	u13071
  9892   00171E  EF93  F00B         	goto	u13070
  9893   001722                     u13071:
  9894   001722  EF95  F00B         	goto	l12427
  9895   001726                     u13070:
  9896   001726  EF44  F00B         	goto	l12405
  9897   00172A                     l12427:
  9898                           
  9899                           ; BSR set to: 1
  9900   00172A  0554               	decf	powf@yisint& (0+255),w,b
  9901   00172C  1155               	iorwf	(powf@yisint+1)& (0+255),w,b
  9902   00172E  1156               	iorwf	(powf@yisint+2)& (0+255),w,b
  9903   001730  1157               	iorwf	(powf@yisint+3)& (0+255),w,b
  9904   001732  A4D8               	btfss	status,2,c
  9905   001734  EF9E  F00B         	goto	u13081
  9906   001738  EFA0  F00B         	goto	u13080
  9907   00173C                     u13081:
  9908   00173C  EFA8  F00B         	goto	l12431
  9909   001740                     u13080:
  9910   001740                     
  9911                           ; BSR set to: 1
  9912   001740  0E00               	movlw	0
  9913   001742  6F64               	movwf	powf@sn& (0+255),b
  9914   001744  0E00               	movlw	0
  9915   001746  6F65               	movwf	(powf@sn+1)& (0+255),b
  9916   001748  0E00               	movlw	0
  9917   00174A  6F66               	movwf	(powf@sn+2)& (0+255),b
  9918   00174C  0E80               	movlw	128
  9919   00174E  6F67               	movwf	(powf@sn+3)& (0+255),b
  9920   001750                     l12431:
  9921                           
  9922                           ; BSR set to: 1
  9923   001750  BF97               	btfsc	(powf@iy+3)& (0+255),7,b
  9924   001752  EFB7  F00B         	goto	u13091
  9925   001756  0594               	decf	powf@iy& (0+255),w,b
  9926   001758  0E00               	movlw	0
  9927   00175A  5995               	subwfb	(powf@iy+1)& (0+255),w,b
  9928   00175C  0E00               	movlw	0
  9929   00175E  5996               	subwfb	(powf@iy+2)& (0+255),w,b
  9930   001760  0E4D               	movlw	77
  9931   001762  5997               	subwfb	(powf@iy+3)& (0+255),w,b
  9932   001764  A0D8               	btfss	status,0,c
  9933   001766  EFB7  F00B         	goto	u13091
  9934   00176A  EFB9  F00B         	goto	u13090
  9935   00176E                     u13091:
  9936   00176E  EF7B  F00D         	goto	l12487
  9937   001772                     u13090:
  9938   001772                     
  9939                           ; BSR set to: 1
  9940   001772  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9941   001774  EFCB  F00B         	goto	u13100
  9942   001778  0EF8               	movlw	248
  9943   00177A  5DAC               	subwf	powf@ix& (0+255),w,b
  9944   00177C  0EFF               	movlw	255
  9945   00177E  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
  9946   001780  0E7F               	movlw	127
  9947   001782  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
  9948   001784  0E3F               	movlw	63
  9949   001786  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
  9950   001788  B0D8               	btfsc	status,0,c
  9951   00178A  EFC9  F00B         	goto	u13101
  9952   00178E  EFCB  F00B         	goto	u13100
  9953   001792                     u13101:
  9954   001792  EFEB  F00B         	goto	l12449
  9955   001796                     u13100:
  9956   001796                     
  9957                           ; BSR set to: 1
  9958   001796  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
  9959   001798  EFD2  F00B         	goto	u13110
  9960   00179C  EFD0  F00B         	goto	u13111
  9961   0017A0                     u13111:
  9962   0017A0  EFE1  F00B         	goto	l12445
  9963   0017A4                     u13110:
  9964   0017A4                     l12437:
  9965   0017A4  0E00               	movlw	0
  9966   0017A6  0101               	movlb	1	; () banked
  9967   0017A8  1164               	iorwf	powf@sn& (0+255),w,b
  9968   0017AA  6FB4               	movwf	powf@z& (0+255),b
  9969   0017AC  0E00               	movlw	0
  9970   0017AE  1165               	iorwf	(powf@sn+1)& (0+255),w,b
  9971   0017B0  6FB5               	movwf	(powf@z+1)& (0+255),b
  9972   0017B2  0E80               	movlw	128
  9973   0017B4  1166               	iorwf	(powf@sn+2)& (0+255),w,b
  9974   0017B6  6FB6               	movwf	(powf@z+2)& (0+255),b
  9975   0017B8  0E7F               	movlw	127
  9976   0017BA  1167               	iorwf	(powf@sn+3)& (0+255),w,b
  9977   0017BC  6FB7               	movwf	(powf@z+3)& (0+255),b
  9978   0017BE  EF6F  F00B         	goto	l12411
  9979   0017C2                     l12445:
  9980                           
  9981                           ; BSR set to: 1
  9982   0017C2  0E00               	movlw	0
  9983   0017C4  6E6F               	movwf	?_powf^0,c
  9984   0017C6  0E00               	movlw	0
  9985   0017C8  6E70               	movwf	(?_powf+1)^0,c
  9986   0017CA  0E00               	movlw	0
  9987   0017CC  6E71               	movwf	(?_powf+2)^0,c
  9988   0017CE  0E00               	movlw	0
  9989   0017D0  6E72               	movwf	(?_powf+3)^0,c
  9990   0017D2  EF06  F01A         	goto	l1638
  9991   0017D6                     l12449:
  9992                           
  9993                           ; BSR set to: 1
  9994   0017D6  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
  9995   0017D8  EFFB  F00B         	goto	u13121
  9996   0017DC  0E08               	movlw	8
  9997   0017DE  5DAC               	subwf	powf@ix& (0+255),w,b
  9998   0017E0  0E00               	movlw	0
  9999   0017E2  59AD               	subwfb	(powf@ix+1)& (0+255),w,b
 10000   0017E4  0E80               	movlw	128
 10001   0017E6  59AE               	subwfb	(powf@ix+2)& (0+255),w,b
 10002   0017E8  0E3F               	movlw	63
 10003   0017EA  59AF               	subwfb	(powf@ix+3)& (0+255),w,b
 10004   0017EC  A0D8               	btfss	status,0,c
 10005   0017EE  EFFB  F00B         	goto	u13121
 10006   0017F2  EFFD  F00B         	goto	u13120
 10007   0017F6                     u13121:
 10008   0017F6  EF18  F00C         	goto	l12465
 10009   0017FA                     u13120:
 10010   0017FA                     
 10011                           ; BSR set to: 1
 10012   0017FA  BF87               	btfsc	(powf@hy+3)& (0+255),7,b
 10013   0017FC  EF0A  F00C         	goto	u13131
 10014   001800  5187               	movf	(powf@hy+3)& (0+255),w,b
 10015   001802  1186               	iorwf	(powf@hy+2)& (0+255),w,b
 10016   001804  1185               	iorwf	(powf@hy+1)& (0+255),w,b
 10017   001806  E108               	bnz	u13130
 10018   001808  0584               	decf	powf@hy& (0+255),w,b
 10019   00180A  A0D8               	btfss	status,0,c
 10020   00180C  EF0A  F00C         	goto	u13131
 10021   001810  EF0C  F00C         	goto	u13130
 10022   001814                     u13131:
 10023   001814  EF0E  F00C         	goto	l12461
 10024   001818                     u13130:
 10025   001818  EFD2  F00B         	goto	l12437
 10026   00181C                     l12461:
 10027                           
 10028                           ; BSR set to: 1
 10029   00181C  0E00               	movlw	0
 10030   00181E  6E6F               	movwf	?_powf^0,c
 10031   001820  0E00               	movlw	0
 10032   001822  6E70               	movwf	(?_powf+1)^0,c
 10033   001824  0E00               	movlw	0
 10034   001826  6E71               	movwf	(?_powf+2)^0,c
 10035   001828  0E00               	movlw	0
 10036   00182A  6E72               	movwf	(?_powf+3)^0,c
 10037   00182C  EF06  F01A         	goto	l1638
 10038   001830                     l12465:
 10039                           
 10040                           ; BSR set to: 1
 10041   001830  C178  F032         	movff	powf@ax,___fladd@b
 10042   001834  C179  F033         	movff	powf@ax+1,___fladd@b+1
 10043   001838  C17A  F034         	movff	powf@ax+2,___fladd@b+2
 10044   00183C  C17B  F035         	movff	powf@ax+3,___fladd@b+3
 10045   001840  0E00               	movlw	0
 10046   001842  6E36               	movwf	___fladd@a^0,c
 10047   001844  0E00               	movlw	0
 10048   001846  6E37               	movwf	(___fladd@a+1)^0,c
 10049   001848  0E80               	movlw	128
 10050   00184A  6E38               	movwf	(___fladd@a+2)^0,c
 10051   00184C  0EBF               	movlw	191
 10052   00184E  6E39               	movwf	(___fladd@a+3)^0,c
 10053   001850  EC91  F021         	call	___fladd	;wreg free
 10054   001854  C032  F1B0         	movff	?___fladd,powf@t
 10055   001858  C033  F1B1         	movff	?___fladd+1,powf@t+1
 10056   00185C  C034  F1B2         	movff	?___fladd+2,powf@t+2
 10057   001860  C035  F1B3         	movff	?___fladd+3,powf@t+3
 10058   001864  0E00               	movlw	0
 10059   001866  6E1D               	movwf	___flmul@a^0,c
 10060   001868  0E00               	movlw	0
 10061   00186A  6E1E               	movwf	(___flmul@a+1)^0,c
 10062   00186C  0E80               	movlw	128
 10063   00186E  6E1F               	movwf	(___flmul@a+2)^0,c
 10064   001870  0E3E               	movlw	62
 10065   001872  6E20               	movwf	(___flmul@a+3)^0,c
 10066   001874  C1B0  F019         	movff	powf@t,___flmul@b
 10067   001878  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10068   00187C  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10069   001880  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10070   001884  ECF1  F023         	call	___flmul	;wreg free
 10071   001888  C019  F05F         	movff	?___flmul,___flsub@a
 10072   00188C  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10073   001890  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10074   001894  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10075   001898  0EAB               	movlw	171
 10076   00189A  6E5B               	movwf	___flsub@b^0,c
 10077   00189C  0EAA               	movlw	170
 10078   00189E  6E5C               	movwf	(___flsub@b+1)^0,c
 10079   0018A0  0EAA               	movlw	170
 10080   0018A2  6E5D               	movwf	(___flsub@b+2)^0,c
 10081   0018A4  0E3E               	movlw	62
 10082   0018A6  6E5E               	movwf	(___flsub@b+3)^0,c
 10083   0018A8  EC34  F03B         	call	___flsub	;wreg free
 10084   0018AC  C05B  F148         	movff	?___flsub,_powf$2095
 10085   0018B0  C05C  F149         	movff	?___flsub+1,_powf$2095+1
 10086   0018B4  C05D  F14A         	movff	?___flsub+2,_powf$2095+2
 10087   0018B8  C05E  F14B         	movff	?___flsub+3,_powf$2095+3
 10088   0018BC  C1B0  F01D         	movff	powf@t,___flmul@a
 10089   0018C0  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 10090   0018C4  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 10091   0018C8  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 10092   0018CC  C1B0  F019         	movff	powf@t,___flmul@b
 10093   0018D0  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10094   0018D4  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10095   0018D8  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10096   0018DC  ECF1  F023         	call	___flmul	;wreg free
 10097   0018E0  C019  F15C         	movff	?___flmul,_powf$2096
 10098   0018E4  C01A  F15D         	movff	?___flmul+1,_powf$2096+1
 10099   0018E8  C01B  F15E         	movff	?___flmul+2,_powf$2096+2
 10100   0018EC  C01C  F15F         	movff	?___flmul+3,_powf$2096+3
 10101   0018F0  C1B0  F01D         	movff	powf@t,___flmul@a
 10102   0018F4  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 10103   0018F8  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 10104   0018FC  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 10105   001900  C148  F019         	movff	_powf$2095,___flmul@b
 10106   001904  C149  F01A         	movff	_powf$2095+1,___flmul@b+1
 10107   001908  C14A  F01B         	movff	_powf$2095+2,___flmul@b+2
 10108   00190C  C14B  F01C         	movff	_powf$2095+3,___flmul@b+3
 10109   001910  ECF1  F023         	call	___flmul	;wreg free
 10110   001914  C019  F05F         	movff	?___flmul,___flsub@a
 10111   001918  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10112   00191C  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10113   001920  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10114   001924  0E00               	movlw	0
 10115   001926  6E5B               	movwf	___flsub@b^0,c
 10116   001928  0E00               	movlw	0
 10117   00192A  6E5C               	movwf	(___flsub@b+1)^0,c
 10118   00192C  0E00               	movlw	0
 10119   00192E  6E5D               	movwf	(___flsub@b+2)^0,c
 10120   001930  0E3F               	movlw	63
 10121   001932  6E5E               	movwf	(___flsub@b+3)^0,c
 10122   001934  EC34  F03B         	call	___flsub	;wreg free
 10123   001938  C05B  F14C         	movff	?___flsub,_powf$2097
 10124   00193C  C05C  F14D         	movff	?___flsub+1,_powf$2097+1
 10125   001940  C05D  F14E         	movff	?___flsub+2,_powf$2097+2
 10126   001944  C05E  F14F         	movff	?___flsub+3,_powf$2097+3
 10127   001948  C15C  F019         	movff	_powf$2096,___flmul@b
 10128   00194C  C15D  F01A         	movff	_powf$2096+1,___flmul@b+1
 10129   001950  C15E  F01B         	movff	_powf$2096+2,___flmul@b+2
 10130   001954  C15F  F01C         	movff	_powf$2096+3,___flmul@b+3
 10131   001958  C14C  F01D         	movff	_powf$2097,___flmul@a
 10132   00195C  C14D  F01E         	movff	_powf$2097+1,___flmul@a+1
 10133   001960  C14E  F01F         	movff	_powf$2097+2,___flmul@a+2
 10134   001964  C14F  F020         	movff	_powf$2097+3,___flmul@a+3
 10135   001968  ECF1  F023         	call	___flmul	;wreg free
 10136   00196C  C019  F144         	movff	?___flmul,powf@w
 10137   001970  C01A  F145         	movff	?___flmul+1,powf@w+1
 10138   001974  C01B  F146         	movff	?___flmul+2,powf@w+2
 10139   001978  C01C  F147         	movff	?___flmul+3,powf@w+3
 10140   00197C  C1B0  F019         	movff	powf@t,___flmul@b
 10141   001980  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10142   001984  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10143   001988  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10144   00198C  0E00               	movlw	0
 10145   00198E  6E1D               	movwf	___flmul@a^0,c
 10146   001990  0EAA               	movlw	170
 10147   001992  6E1E               	movwf	(___flmul@a+1)^0,c
 10148   001994  0EB8               	movlw	184
 10149   001996  6E1F               	movwf	(___flmul@a+2)^0,c
 10150   001998  0E3F               	movlw	63
 10151   00199A  6E20               	movwf	(___flmul@a+3)^0,c
 10152   00199C  ECF1  F023         	call	___flmul	;wreg free
 10153   0019A0  C019  F17C         	movff	?___flmul,powf@u
 10154   0019A4  C01A  F17D         	movff	?___flmul+1,powf@u+1
 10155   0019A8  C01B  F17E         	movff	?___flmul+2,powf@u+2
 10156   0019AC  C01C  F17F         	movff	?___flmul+3,powf@u+3
 10157   0019B0  0E70               	movlw	112
 10158   0019B2  6E1D               	movwf	___flmul@a^0,c
 10159   0019B4  0EA5               	movlw	165
 10160   0019B6  6E1E               	movwf	(___flmul@a+1)^0,c
 10161   0019B8  0EEC               	movlw	236
 10162   0019BA  6E1F               	movwf	(___flmul@a+2)^0,c
 10163   0019BC  0E36               	movlw	54
 10164   0019BE  6E20               	movwf	(___flmul@a+3)^0,c
 10165   0019C0  C1B0  F019         	movff	powf@t,___flmul@b
 10166   0019C4  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 10167   0019C8  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 10168   0019CC  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 10169   0019D0  ECF1  F023         	call	___flmul	;wreg free
 10170   0019D4  C019  F05B         	movff	?___flmul,___flsub@b
 10171   0019D8  C01A  F05C         	movff	?___flmul+1,___flsub@b+1
 10172   0019DC  C01B  F05D         	movff	?___flmul+2,___flsub@b+2
 10173   0019E0  C01C  F05E         	movff	?___flmul+3,___flsub@b+3
 10174   0019E4  0E3B               	movlw	59
 10175   0019E6  6E1D               	movwf	___flmul@a^0,c
 10176   0019E8  0EAA               	movlw	170
 10177   0019EA  6E1E               	movwf	(___flmul@a+1)^0,c
 10178   0019EC  0EB8               	movlw	184
 10179   0019EE  6E1F               	movwf	(___flmul@a+2)^0,c
 10180   0019F0  0E3F               	movlw	63
 10181   0019F2  6E20               	movwf	(___flmul@a+3)^0,c
 10182   0019F4  C144  F019         	movff	powf@w,___flmul@b
 10183   0019F8  C145  F01A         	movff	powf@w+1,___flmul@b+1
 10184   0019FC  C146  F01B         	movff	powf@w+2,___flmul@b+2
 10185   001A00  C147  F01C         	movff	powf@w+3,___flmul@b+3
 10186   001A04  ECF1  F023         	call	___flmul	;wreg free
 10187   001A08  C019  F05F         	movff	?___flmul,___flsub@a
 10188   001A0C  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10189   001A10  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10190   001A14  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10191   001A18  EC34  F03B         	call	___flsub	;wreg free
 10192   001A1C  C05B  F180         	movff	?___flsub,powf@v
 10193   001A20  C05C  F181         	movff	?___flsub+1,powf@v+1
 10194   001A24  C05D  F182         	movff	?___flsub+2,powf@v+2
 10195   001A28  C05E  F183         	movff	?___flsub+3,powf@v+3
 10196   001A2C  C17C  F032         	movff	powf@u,___fladd@b
 10197   001A30  C17D  F033         	movff	powf@u+1,___fladd@b+1
 10198   001A34  C17E  F034         	movff	powf@u+2,___fladd@b+2
 10199   001A38  C17F  F035         	movff	powf@u+3,___fladd@b+3
 10200   001A3C  C180  F036         	movff	powf@v,___fladd@a
 10201   001A40  C181  F037         	movff	powf@v+1,___fladd@a+1
 10202   001A44  C182  F038         	movff	powf@v+2,___fladd@a+2
 10203   001A48  C183  F039         	movff	powf@v+3,___fladd@a+3
 10204   001A4C  EC91  F021         	call	___fladd	;wreg free
 10205   001A50  C032  F18C         	movff	?___fladd,powf@t1
 10206   001A54  C033  F18D         	movff	?___fladd+1,powf@t1+1
 10207   001A58  C034  F18E         	movff	?___fladd+2,powf@t1+2
 10208   001A5C  C035  F18F         	movff	?___fladd+3,powf@t1+3
 10209   001A60  C18C  F198         	movff	powf@t1,powf@is
 10210   001A64  C18D  F199         	movff	powf@t1+1,powf@is+1
 10211   001A68  C18E  F19A         	movff	powf@t1+2,powf@is+2
 10212   001A6C  C18F  F19B         	movff	powf@t1+3,powf@is+3
 10213   001A70  0E00               	movlw	0
 10214   001A72  0101               	movlb	1	; () banked
 10215   001A74  1598               	andwf	powf@is& (0+255),w,b
 10216   001A76  6F8C               	movwf	powf@t1& (0+255),b
 10217   001A78  0EF0               	movlw	240
 10218   001A7A  1599               	andwf	(powf@is+1)& (0+255),w,b
 10219   001A7C  6F8D               	movwf	(powf@t1+1)& (0+255),b
 10220   001A7E  0EFF               	movlw	255
 10221   001A80  159A               	andwf	(powf@is+2)& (0+255),w,b
 10222   001A82  6F8E               	movwf	(powf@t1+2)& (0+255),b
 10223   001A84  0EFF               	movlw	255
 10224   001A86  159B               	andwf	(powf@is+3)& (0+255),w,b
 10225   001A88  6F8F               	movwf	(powf@t1+3)& (0+255),b
 10226   001A8A                     
 10227                           ; BSR set to: 1
 10228   001A8A  C17C  F05F         	movff	powf@u,___flsub@a
 10229   001A8E  C17D  F060         	movff	powf@u+1,___flsub@a+1
 10230   001A92  C17E  F061         	movff	powf@u+2,___flsub@a+2
 10231   001A96  C17F  F062         	movff	powf@u+3,___flsub@a+3
 10232   001A9A  C18C  F05B         	movff	powf@t1,___flsub@b
 10233   001A9E  C18D  F05C         	movff	powf@t1+1,___flsub@b+1
 10234   001AA2  C18E  F05D         	movff	powf@t1+2,___flsub@b+2
 10235   001AA6  C18F  F05E         	movff	powf@t1+3,___flsub@b+3
 10236   001AAA  EC34  F03B         	call	___flsub	;wreg free
 10237   001AAE  C05B  F19C         	movff	?___flsub,_powf$2098
 10238   001AB2  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 10239   001AB6  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 10240   001ABA  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 10241   001ABE  C180  F05B         	movff	powf@v,___flsub@b
 10242   001AC2  C181  F05C         	movff	powf@v+1,___flsub@b+1
 10243   001AC6  C182  F05D         	movff	powf@v+2,___flsub@b+2
 10244   001ACA  C183  F05E         	movff	powf@v+3,___flsub@b+3
 10245   001ACE  C19C  F05F         	movff	_powf$2098,___flsub@a
 10246   001AD2  C19D  F060         	movff	_powf$2098+1,___flsub@a+1
 10247   001AD6  C19E  F061         	movff	_powf$2098+2,___flsub@a+2
 10248   001ADA  C19F  F062         	movff	_powf$2098+3,___flsub@a+3
 10249   001ADE  EC34  F03B         	call	___flsub	;wreg free
 10250   001AE2  C05B  F11C         	movff	?___flsub,powf@t2
 10251   001AE6  C05C  F11D         	movff	?___flsub+1,powf@t2+1
 10252   001AEA  C05D  F11E         	movff	?___flsub+2,powf@t2+2
 10253   001AEE  C05E  F11F         	movff	?___flsub+3,powf@t2+3
 10254   001AF2  EF3D  F014         	goto	l12615
 10255   001AF6                     l12487:
 10256                           
 10257                           ; BSR set to: 1
 10258   001AF6  0E00               	movlw	0
 10259   001AF8  6F88               	movwf	powf@n& (0+255),b
 10260   001AFA  0E00               	movlw	0
 10261   001AFC  6F89               	movwf	(powf@n+1)& (0+255),b
 10262   001AFE  0E00               	movlw	0
 10263   001B00  6F8A               	movwf	(powf@n+2)& (0+255),b
 10264   001B02  0E00               	movlw	0
 10265   001B04  6F8B               	movwf	(powf@n+3)& (0+255),b
 10266   001B06                     
 10267                           ; BSR set to: 1
 10268   001B06  BFAF               	btfsc	(powf@ix+3)& (0+255),7,b
 10269   001B08  EF91  F00D         	goto	u13140
 10270   001B0C  51AF               	movf	(powf@ix+3)& (0+255),w,b
 10271   001B0E  E107               	bnz	u13141
 10272   001B10  0E80               	movlw	128
 10273   001B12  5DAE               	subwf	(powf@ix+2)& (0+255),w,b
 10274   001B14  B0D8               	btfsc	status,0,c
 10275   001B16  EF8F  F00D         	goto	u13141
 10276   001B1A  EF91  F00D         	goto	u13140
 10277   001B1E                     u13141:
 10278   001B1E  EFBC  F00D         	goto	l12497
 10279   001B22                     u13140:
 10280   001B22                     
 10281                           ; BSR set to: 1
 10282   001B22  C178  F019         	movff	powf@ax,___flmul@b
 10283   001B26  C179  F01A         	movff	powf@ax+1,___flmul@b+1
 10284   001B2A  C17A  F01B         	movff	powf@ax+2,___flmul@b+2
 10285   001B2E  C17B  F01C         	movff	powf@ax+3,___flmul@b+3
 10286   001B32  0E00               	movlw	0
 10287   001B34  6E1D               	movwf	___flmul@a^0,c
 10288   001B36  0E00               	movlw	0
 10289   001B38  6E1E               	movwf	(___flmul@a+1)^0,c
 10290   001B3A  0E80               	movlw	128
 10291   001B3C  6E1F               	movwf	(___flmul@a+2)^0,c
 10292   001B3E  0E4B               	movlw	75
 10293   001B40  6E20               	movwf	(___flmul@a+3)^0,c
 10294   001B42  ECF1  F023         	call	___flmul	;wreg free
 10295   001B46  C019  F178         	movff	?___flmul,powf@ax
 10296   001B4A  C01A  F179         	movff	?___flmul+1,powf@ax+1
 10297   001B4E  C01B  F17A         	movff	?___flmul+2,powf@ax+2
 10298   001B52  C01C  F17B         	movff	?___flmul+3,powf@ax+3
 10299   001B56  0EE8               	movlw	232
 10300   001B58  0101               	movlb	1	; () banked
 10301   001B5A  2788               	addwf	powf@n& (0+255),f,b
 10302   001B5C  0EFF               	movlw	255
 10303   001B5E  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10304   001B60  0EFF               	movlw	255
 10305   001B62  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10306   001B64  0EFF               	movlw	255
 10307   001B66  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10308   001B68                     
 10309                           ; BSR set to: 1
 10310   001B68  C178  F1AC         	movff	powf@ax,powf@ix
 10311   001B6C  C179  F1AD         	movff	powf@ax+1,powf@ix+1
 10312   001B70  C17A  F1AE         	movff	powf@ax+2,powf@ix+2
 10313   001B74  C17B  F1AF         	movff	powf@ax+3,powf@ix+3
 10314   001B78                     l12497:
 10315                           
 10316                           ; BSR set to: 1
 10317   001B78  0E17               	movlw	23
 10318   001B7A  6E77               	movwf	??_powf^0,c
 10319   001B7C  C1AC  F078         	movff	powf@ix,??_powf+1
 10320   001B80  C1AD  F079         	movff	powf@ix+1,??_powf+2
 10321   001B84  C1AE  F07A         	movff	powf@ix+2,??_powf+3
 10322   001B88  C1AF  F07B         	movff	powf@ix+3,??_powf+4
 10323   001B8C                     u13155:
 10324   001B8C  6677               	tstfsz	??_powf^0,c
 10325   001B8E  EFCB  F00D         	goto	u13156
 10326   001B92  EFD3  F00D         	goto	u13157
 10327   001B96                     u13156:
 10328   001B96  347B               	rlcf	(??_powf+4)^0,w,c
 10329   001B98  327B               	rrcf	(??_powf+4)^0,f,c
 10330   001B9A  327A               	rrcf	(??_powf+3)^0,f,c
 10331   001B9C  3279               	rrcf	(??_powf+2)^0,f,c
 10332   001B9E  3278               	rrcf	(??_powf+1)^0,f,c
 10333   001BA0  2E77               	decfsz	??_powf^0,f,c
 10334   001BA2  EFC6  F00D         	goto	u13155
 10335   001BA6                     u13157:
 10336   001BA6  0E81               	movlw	129
 10337   001BA8  2478               	addwf	(??_powf+1)^0,w,c
 10338   001BAA  6E7C               	movwf	(??_powf+5)^0,c
 10339   001BAC  0EFF               	movlw	255
 10340   001BAE  2079               	addwfc	(??_powf+2)^0,w,c
 10341   001BB0  6E7D               	movwf	(??_powf+6)^0,c
 10342   001BB2  0EFF               	movlw	255
 10343   001BB4  207A               	addwfc	(??_powf+3)^0,w,c
 10344   001BB6  6E7E               	movwf	(??_powf+7)^0,c
 10345   001BB8  0EFF               	movlw	255
 10346   001BBA  207B               	addwfc	(??_powf+4)^0,w,c
 10347   001BBC  6E7F               	movwf	(??_powf+8)^0,c
 10348   001BBE  507C               	movf	(??_powf+5)^0,w,c
 10349   001BC0  0101               	movlb	1	; () banked
 10350   001BC2  2788               	addwf	powf@n& (0+255),f,b
 10351   001BC4  507D               	movf	(??_powf+6)^0,w,c
 10352   001BC6  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10353   001BC8  507E               	movf	(??_powf+7)^0,w,c
 10354   001BCA  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10355   001BCC  507F               	movf	(??_powf+8)^0,w,c
 10356   001BCE  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10357   001BD0                     
 10358                           ; BSR set to: 1
 10359   001BD0  0EFF               	movlw	255
 10360   001BD2  15AC               	andwf	powf@ix& (0+255),w,b
 10361   001BD4  6FA8               	movwf	powf@j& (0+255),b
 10362   001BD6  0EFF               	movlw	255
 10363   001BD8  15AD               	andwf	(powf@ix+1)& (0+255),w,b
 10364   001BDA  6FA9               	movwf	(powf@j+1)& (0+255),b
 10365   001BDC  0E7F               	movlw	127
 10366   001BDE  15AE               	andwf	(powf@ix+2)& (0+255),w,b
 10367   001BE0  6FAA               	movwf	(powf@j+2)& (0+255),b
 10368   001BE2  0E00               	movlw	0
 10369   001BE4  15AF               	andwf	(powf@ix+3)& (0+255),w,b
 10370   001BE6  6FAB               	movwf	(powf@j+3)& (0+255),b
 10371   001BE8                     
 10372                           ; BSR set to: 1
 10373   001BE8  0E00               	movlw	0
 10374   001BEA  6FA4               	movwf	powf@k& (0+255),b
 10375   001BEC  0E00               	movlw	0
 10376   001BEE  6FA5               	movwf	(powf@k+1)& (0+255),b
 10377   001BF0  0E00               	movlw	0
 10378   001BF2  6FA6               	movwf	(powf@k+2)& (0+255),b
 10379   001BF4  0E00               	movlw	0
 10380   001BF6  6FA7               	movwf	(powf@k+3)& (0+255),b
 10381   001BF8                     
 10382                           ; BSR set to: 1
 10383   001BF8  0E00               	movlw	0
 10384   001BFA  11A8               	iorwf	powf@j& (0+255),w,b
 10385   001BFC  6FAC               	movwf	powf@ix& (0+255),b
 10386   001BFE  0E00               	movlw	0
 10387   001C00  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 10388   001C02  6FAD               	movwf	(powf@ix+1)& (0+255),b
 10389   001C04  0E80               	movlw	128
 10390   001C06  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 10391   001C08  6FAE               	movwf	(powf@ix+2)& (0+255),b
 10392   001C0A  0E3F               	movlw	63
 10393   001C0C  11AB               	iorwf	(powf@j+3)& (0+255),w,b
 10394   001C0E  6FAF               	movwf	(powf@ix+3)& (0+255),b
 10395   001C10                     
 10396                           ; BSR set to: 1
 10397   001C10  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10398   001C12  EF1A  F00E         	goto	u13160
 10399   001C16  51AB               	movf	(powf@j+3)& (0+255),w,b
 10400   001C18  E10B               	bnz	u13161
 10401   001C1A  0E72               	movlw	114
 10402   001C1C  5DA8               	subwf	powf@j& (0+255),w,b
 10403   001C1E  0EC4               	movlw	196
 10404   001C20  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10405   001C22  0E1C               	movlw	28
 10406   001C24  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10407   001C26  B0D8               	btfsc	status,0,c
 10408   001C28  EF18  F00E         	goto	u13161
 10409   001C2C  EF1A  F00E         	goto	u13160
 10410   001C30                     u13161:
 10411   001C30  EF1C  F00E         	goto	l12509
 10412   001C34                     u13160:
 10413   001C34  EF46  F00E         	goto	l12515
 10414   001C38                     l12509:
 10415                           
 10416                           ; BSR set to: 1
 10417   001C38  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 10418   001C3A  EF2E  F00E         	goto	u13170
 10419   001C3E  51AB               	movf	(powf@j+3)& (0+255),w,b
 10420   001C40  E10B               	bnz	u13171
 10421   001C42  0ED7               	movlw	215
 10422   001C44  5DA8               	subwf	powf@j& (0+255),w,b
 10423   001C46  0EB3               	movlw	179
 10424   001C48  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 10425   001C4A  0E5D               	movlw	93
 10426   001C4C  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 10427   001C4E  B0D8               	btfsc	status,0,c
 10428   001C50  EF2C  F00E         	goto	u13171
 10429   001C54  EF2E  F00E         	goto	u13170
 10430   001C58                     u13171:
 10431   001C58  EF38  F00E         	goto	l12513
 10432   001C5C                     u13170:
 10433   001C5C                     
 10434                           ; BSR set to: 1
 10435   001C5C  0E01               	movlw	1
 10436   001C5E  6FA4               	movwf	powf@k& (0+255),b
 10437   001C60  0E00               	movlw	0
 10438   001C62  6FA5               	movwf	(powf@k+1)& (0+255),b
 10439   001C64  0E00               	movlw	0
 10440   001C66  6FA6               	movwf	(powf@k+2)& (0+255),b
 10441   001C68  0E00               	movlw	0
 10442   001C6A  6FA7               	movwf	(powf@k+3)& (0+255),b
 10443   001C6C  EF46  F00E         	goto	l12515
 10444   001C70                     l12513:
 10445                           
 10446                           ; BSR set to: 1
 10447   001C70  0E01               	movlw	1
 10448   001C72  2788               	addwf	powf@n& (0+255),f,b
 10449   001C74  0E00               	movlw	0
 10450   001C76  2389               	addwfc	(powf@n+1)& (0+255),f,b
 10451   001C78  238A               	addwfc	(powf@n+2)& (0+255),f,b
 10452   001C7A  238B               	addwfc	(powf@n+3)& (0+255),f,b
 10453   001C7C  0E00               	movlw	0
 10454   001C7E  27AC               	addwf	powf@ix& (0+255),f,b
 10455   001C80  0E00               	movlw	0
 10456   001C82  23AD               	addwfc	(powf@ix+1)& (0+255),f,b
 10457   001C84  0E80               	movlw	128
 10458   001C86  23AE               	addwfc	(powf@ix+2)& (0+255),f,b
 10459   001C88  0EFF               	movlw	255
 10460   001C8A  23AF               	addwfc	(powf@ix+3)& (0+255),f,b
 10461   001C8C                     l12515:
 10462                           
 10463                           ; BSR set to: 1
 10464   001C8C  C1AC  F178         	movff	powf@ix,powf@ax
 10465   001C90  C1AD  F179         	movff	powf@ix+1,powf@ax+1
 10466   001C94  C1AE  F17A         	movff	powf@ix+2,powf@ax+2
 10467   001C98  C1AF  F17B         	movff	powf@ix+3,powf@ax+3
 10468   001C9C                     
 10469                           ; BSR set to: 1
 10470   001C9C  C178  F05B         	movff	powf@ax,___flsub@b
 10471   001CA0  C179  F05C         	movff	powf@ax+1,___flsub@b+1
 10472   001CA4  C17A  F05D         	movff	powf@ax+2,___flsub@b+2
 10473   001CA8  C17B  F05E         	movff	powf@ax+3,___flsub@b+3
 10474   001CAC  51A4               	movf	powf@k& (0+255),w,b
 10475   001CAE  0D04               	mullw	4
 10476   001CB0  50F3               	movf	243,w,c
 10477   001CB2  0F11               	addlw	low _bp
 10478   001CB4  6E77               	movwf	??_powf^0,c
 10479   001CB6  C077  FFF6         	movff	??_powf,tblptrl
 10480   001CBA                     	if	1	;There is more than 1 active tblptr byte
 10481   001CBA  0E10               	movlw	high __smallconst
 10482   001CBC  6EF7               	movwf	tblptrh,c
 10483   001CBE                     	endif
 10484   001CBE                     	if	0	;tblptru may be non-zero
 10485   001CBE                     	endif
 10486   001CBE                     	if	0	;tblptru may be non-zero
 10487   001CBE                     	endif
 10488   001CBE  0009               	tblrd		*+
 10489   001CC0  CFF5 F05F          	movff	tablat,___flsub@a
 10490   001CC4  0009               	tblrd		*+
 10491   001CC6  CFF5 F060          	movff	tablat,___flsub@a+1
 10492   001CCA  0009               	tblrd		*+
 10493   001CCC  CFF5 F061          	movff	tablat,___flsub@a+2
 10494   001CD0  000A               	tblrd		*-
 10495   001CD2  CFF5 F062          	movff	tablat,___flsub@a+3
 10496   001CD6  EC34  F03B         	call	___flsub	;wreg free
 10497   001CDA  C05B  F17C         	movff	?___flsub,powf@u
 10498   001CDE  C05C  F17D         	movff	?___flsub+1,powf@u+1
 10499   001CE2  C05D  F17E         	movff	?___flsub+2,powf@u+2
 10500   001CE6  C05E  F17F         	movff	?___flsub+3,powf@u+3
 10501   001CEA  0E00               	movlw	0
 10502   001CEC  6E42               	movwf	___fldiv@b^0,c
 10503   001CEE  0E00               	movlw	0
 10504   001CF0  6E43               	movwf	(___fldiv@b+1)^0,c
 10505   001CF2  0E80               	movlw	128
 10506   001CF4  6E44               	movwf	(___fldiv@b+2)^0,c
 10507   001CF6  0E3F               	movlw	63
 10508   001CF8  6E45               	movwf	(___fldiv@b+3)^0,c
 10509   001CFA  C178  F036         	movff	powf@ax,___fladd@a
 10510   001CFE  C179  F037         	movff	powf@ax+1,___fladd@a+1
 10511   001D02  C17A  F038         	movff	powf@ax+2,___fladd@a+2
 10512   001D06  C17B  F039         	movff	powf@ax+3,___fladd@a+3
 10513   001D0A  0101               	movlb	1	; () banked
 10514   001D0C  51A4               	movf	powf@k& (0+255),w,b
 10515   001D0E  0D04               	mullw	4
 10516   001D10  50F3               	movf	243,w,c
 10517   001D12  0F11               	addlw	low _bp
 10518   001D14  6E77               	movwf	??_powf^0,c
 10519   001D16  C077  FFF6         	movff	??_powf,tblptrl
 10520   001D1A                     	if	1	;There is more than 1 active tblptr byte
 10521   001D1A  0E10               	movlw	high __smallconst
 10522   001D1C  6EF7               	movwf	tblptrh,c
 10523   001D1E                     	endif
 10524   001D1E                     	if	0	;tblptru may be non-zero
 10525   001D1E                     	endif
 10526   001D1E                     	if	0	;tblptru may be non-zero
 10527   001D1E                     	endif
 10528   001D1E  0009               	tblrd		*+
 10529   001D20  CFF5 F032          	movff	tablat,___fladd@b
 10530   001D24  0009               	tblrd		*+
 10531   001D26  CFF5 F033          	movff	tablat,___fladd@b+1
 10532   001D2A  0009               	tblrd		*+
 10533   001D2C  CFF5 F034          	movff	tablat,___fladd@b+2
 10534   001D30  000A               	tblrd		*-
 10535   001D32  CFF5 F035          	movff	tablat,___fladd@b+3
 10536   001D36  EC91  F021         	call	___fladd	;wreg free
 10537   001D3A  C032  F046         	movff	?___fladd,___fldiv@a
 10538   001D3E  C033  F047         	movff	?___fladd+1,___fldiv@a+1
 10539   001D42  C034  F048         	movff	?___fladd+2,___fldiv@a+2
 10540   001D46  C035  F049         	movff	?___fladd+3,___fldiv@a+3
 10541   001D4A  ECF5  F027         	call	___fldiv	;wreg free
 10542   001D4E  C042  F180         	movff	?___fldiv,powf@v
 10543   001D52  C043  F181         	movff	?___fldiv+1,powf@v+1
 10544   001D56  C044  F182         	movff	?___fldiv+2,powf@v+2
 10545   001D5A  C045  F183         	movff	?___fldiv+3,powf@v+3
 10546   001D5E  C17C  F019         	movff	powf@u,___flmul@b
 10547   001D62  C17D  F01A         	movff	powf@u+1,___flmul@b+1
 10548   001D66  C17E  F01B         	movff	powf@u+2,___flmul@b+2
 10549   001D6A  C17F  F01C         	movff	powf@u+3,___flmul@b+3
 10550   001D6E  C180  F01D         	movff	powf@v,___flmul@a
 10551   001D72  C181  F01E         	movff	powf@v+1,___flmul@a+1
 10552   001D76  C182  F01F         	movff	powf@v+2,___flmul@a+2
 10553   001D7A  C183  F020         	movff	powf@v+3,___flmul@a+3
 10554   001D7E  ECF1  F023         	call	___flmul	;wreg free
 10555   001D82  C019  F158         	movff	?___flmul,powf@s
 10556   001D86  C01A  F159         	movff	?___flmul+1,powf@s+1
 10557   001D8A  C01B  F15A         	movff	?___flmul+2,powf@s+2
 10558   001D8E  C01C  F15B         	movff	?___flmul+3,powf@s+3
 10559   001D92  C158  F174         	movff	powf@s,powf@s_h
 10560   001D96  C159  F175         	movff	powf@s+1,powf@s_h+1
 10561   001D9A  C15A  F176         	movff	powf@s+2,powf@s_h+2
 10562   001D9E  C15B  F177         	movff	powf@s+3,powf@s_h+3
 10563   001DA2  C174  F198         	movff	powf@s_h,powf@is
 10564   001DA6  C175  F199         	movff	powf@s_h+1,powf@is+1
 10565   001DAA  C176  F19A         	movff	powf@s_h+2,powf@is+2
 10566   001DAE  C177  F19B         	movff	powf@s_h+3,powf@is+3
 10567   001DB2  0E00               	movlw	0
 10568   001DB4  0101               	movlb	1	; () banked
 10569   001DB6  1598               	andwf	powf@is& (0+255),w,b
 10570   001DB8  6F74               	movwf	powf@s_h& (0+255),b
 10571   001DBA  0EF0               	movlw	240
 10572   001DBC  1599               	andwf	(powf@is+1)& (0+255),w,b
 10573   001DBE  6F75               	movwf	(powf@s_h+1)& (0+255),b
 10574   001DC0  0EFF               	movlw	255
 10575   001DC2  159A               	andwf	(powf@is+2)& (0+255),w,b
 10576   001DC4  6F76               	movwf	(powf@s_h+2)& (0+255),b
 10577   001DC6  0EFF               	movlw	255
 10578   001DC8  159B               	andwf	(powf@is+3)& (0+255),w,b
 10579   001DCA  6F77               	movwf	(powf@s_h+3)& (0+255),b
 10580   001DCC                     
 10581                           ; BSR set to: 1
 10582   001DCC  C1AC  F077         	movff	powf@ix,??_powf
 10583   001DD0  C1AD  F078         	movff	powf@ix+1,??_powf+1
 10584   001DD4  C1AE  F079         	movff	powf@ix+2,??_powf+2
 10585   001DD8  C1AF  F07A         	movff	powf@ix+3,??_powf+3
 10586   001DDC  347A               	rlcf	(??_powf+3)^0,w,c
 10587   001DDE  327A               	rrcf	(??_powf+3)^0,f,c
 10588   001DE0  3279               	rrcf	(??_powf+2)^0,f,c
 10589   001DE2  3278               	rrcf	(??_powf+1)^0,f,c
 10590   001DE4  3277               	rrcf	??_powf^0,f,c
 10591   001DE6  0E00               	movlw	0
 10592   001DE8  1477               	andwf	??_powf^0,w,c
 10593   001DEA  6E7B               	movwf	(??_powf+4)^0,c
 10594   001DEC  0EF0               	movlw	240
 10595   001DEE  1478               	andwf	(??_powf+1)^0,w,c
 10596   001DF0  6E7C               	movwf	(??_powf+5)^0,c
 10597   001DF2  0EFF               	movlw	255
 10598   001DF4  1479               	andwf	(??_powf+2)^0,w,c
 10599   001DF6  6E7D               	movwf	(??_powf+6)^0,c
 10600   001DF8  0EFF               	movlw	255
 10601   001DFA  147A               	andwf	(??_powf+3)^0,w,c
 10602   001DFC  6E7E               	movwf	(??_powf+7)^0,c
 10603   001DFE  0E00               	movlw	0
 10604   001E00  107B               	iorwf	(??_powf+4)^0,w,c
 10605   001E02  6F98               	movwf	powf@is& (0+255),b
 10606   001E04  0E00               	movlw	0
 10607   001E06  107C               	iorwf	(??_powf+5)^0,w,c
 10608   001E08  6F99               	movwf	(powf@is+1)& (0+255),b
 10609   001E0A  0E00               	movlw	0
 10610   001E0C  107D               	iorwf	(??_powf+6)^0,w,c
 10611   001E0E  6F9A               	movwf	(powf@is+2)& (0+255),b
 10612   001E10  0E20               	movlw	32
 10613   001E12  107E               	iorwf	(??_powf+7)^0,w,c
 10614   001E14  6F9B               	movwf	(powf@is+3)& (0+255),b
 10615   001E16                     
 10616                           ; BSR set to: 1
 10617   001E16  C1A4  F077         	movff	powf@k,??_powf
 10618   001E1A  C1A5  F078         	movff	powf@k+1,??_powf+1
 10619   001E1E  C1A6  F079         	movff	powf@k+2,??_powf+2
 10620   001E22  C1A7  F07A         	movff	powf@k+3,??_powf+3
 10621   001E26  0E15               	movlw	21
 10622   001E28                     u13185:
 10623   001E28  90D8               	bcf	status,0,c
 10624   001E2A  3677               	rlcf	??_powf^0,f,c
 10625   001E2C  3678               	rlcf	(??_powf+1)^0,f,c
 10626   001E2E  3679               	rlcf	(??_powf+2)^0,f,c
 10627   001E30  367A               	rlcf	(??_powf+3)^0,f,c
 10628   001E32  2EE8               	decfsz	wreg,f,c
 10629   001E34  EF14  F00F         	goto	u13185
 10630   001E38  5198               	movf	powf@is& (0+255),w,b
 10631   001E3A  2477               	addwf	??_powf^0,w,c
 10632   001E3C  6E7B               	movwf	(??_powf+4)^0,c
 10633   001E3E  5199               	movf	(powf@is+1)& (0+255),w,b
 10634   001E40  2078               	addwfc	(??_powf+1)^0,w,c
 10635   001E42  6E7C               	movwf	(??_powf+5)^0,c
 10636   001E44  519A               	movf	(powf@is+2)& (0+255),w,b
 10637   001E46  2079               	addwfc	(??_powf+2)^0,w,c
 10638   001E48  6E7D               	movwf	(??_powf+6)^0,c
 10639   001E4A  519B               	movf	(powf@is+3)& (0+255),w,b
 10640   001E4C  207A               	addwfc	(??_powf+3)^0,w,c
 10641   001E4E  6E7E               	movwf	(??_powf+7)^0,c
 10642   001E50  0E00               	movlw	0
 10643   001E52  247B               	addwf	(??_powf+4)^0,w,c
 10644   001E54  6F70               	movwf	powf@t_h& (0+255),b
 10645   001E56  0E00               	movlw	0
 10646   001E58  207C               	addwfc	(??_powf+5)^0,w,c
 10647   001E5A  6F71               	movwf	(powf@t_h+1)& (0+255),b
 10648   001E5C  0E40               	movlw	64
 10649   001E5E  207D               	addwfc	(??_powf+6)^0,w,c
 10650   001E60  6F72               	movwf	(powf@t_h+2)& (0+255),b
 10651   001E62  0E00               	movlw	0
 10652   001E64  207E               	addwfc	(??_powf+7)^0,w,c
 10653   001E66  6F73               	movwf	(powf@t_h+3)& (0+255),b
 10654   001E68                     
 10655                           ; BSR set to: 1
 10656   001E68  51A4               	movf	powf@k& (0+255),w,b
 10657   001E6A  0D04               	mullw	4
 10658   001E6C  50F3               	movf	243,w,c
 10659   001E6E  0F11               	addlw	low _bp
 10660   001E70  6E77               	movwf	??_powf^0,c
 10661   001E72  C077  FFF6         	movff	??_powf,tblptrl
 10662   001E76                     	if	1	;There is more than 1 active tblptr byte
 10663   001E76  0E10               	movlw	high __smallconst
 10664   001E78  6EF7               	movwf	tblptrh,c
 10665   001E7A                     	endif
 10666   001E7A                     	if	0	;tblptru may be non-zero
 10667   001E7A                     	endif
 10668   001E7A                     	if	0	;tblptru may be non-zero
 10669   001E7A                     	endif
 10670   001E7A  0009               	tblrd		*+
 10671   001E7C  CFF5 F05F          	movff	tablat,___flsub@a
 10672   001E80  0009               	tblrd		*+
 10673   001E82  CFF5 F060          	movff	tablat,___flsub@a+1
 10674   001E86  0009               	tblrd		*+
 10675   001E88  CFF5 F061          	movff	tablat,___flsub@a+2
 10676   001E8C  000A               	tblrd		*-
 10677   001E8E  CFF5 F062          	movff	tablat,___flsub@a+3
 10678   001E92  C170  F05B         	movff	powf@t_h,___flsub@b
 10679   001E96  C171  F05C         	movff	powf@t_h+1,___flsub@b+1
 10680   001E9A  C172  F05D         	movff	powf@t_h+2,___flsub@b+2
 10681   001E9E  C173  F05E         	movff	powf@t_h+3,___flsub@b+3
 10682   001EA2  EC34  F03B         	call	___flsub	;wreg free
 10683   001EA6  C05B  F19C         	movff	?___flsub,_powf$2098
 10684   001EAA  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 10685   001EAE  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 10686   001EB2  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 10687   001EB6  C178  F05B         	movff	powf@ax,___flsub@b
 10688   001EBA  C179  F05C         	movff	powf@ax+1,___flsub@b+1
 10689   001EBE  C17A  F05D         	movff	powf@ax+2,___flsub@b+2
 10690   001EC2  C17B  F05E         	movff	powf@ax+3,___flsub@b+3
 10691   001EC6  C19C  F05F         	movff	_powf$2098,___flsub@a
 10692   001ECA  C19D  F060         	movff	_powf$2098+1,___flsub@a+1
 10693   001ECE  C19E  F061         	movff	_powf$2098+2,___flsub@a+2
 10694   001ED2  C19F  F062         	movff	_powf$2098+3,___flsub@a+3
 10695   001ED6  EC34  F03B         	call	___flsub	;wreg free
 10696   001EDA  C05B  F134         	movff	?___flsub,powf@t_l
 10697   001EDE  C05C  F135         	movff	?___flsub+1,powf@t_l+1
 10698   001EE2  C05D  F136         	movff	?___flsub+2,powf@t_l+2
 10699   001EE6  C05E  F137         	movff	?___flsub+3,powf@t_l+3
 10700   001EEA  C170  F01D         	movff	powf@t_h,___flmul@a
 10701   001EEE  C171  F01E         	movff	powf@t_h+1,___flmul@a+1
 10702   001EF2  C172  F01F         	movff	powf@t_h+2,___flmul@a+2
 10703   001EF6  C173  F020         	movff	powf@t_h+3,___flmul@a+3
 10704   001EFA  C174  F019         	movff	powf@s_h,___flmul@b
 10705   001EFE  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10706   001F02  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10707   001F06  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10708   001F0A  ECF1  F023         	call	___flmul	;wreg free
 10709   001F0E  C019  F05F         	movff	?___flmul,___flsub@a
 10710   001F12  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10711   001F16  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10712   001F1A  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10713   001F1E  C17C  F05B         	movff	powf@u,___flsub@b
 10714   001F22  C17D  F05C         	movff	powf@u+1,___flsub@b+1
 10715   001F26  C17E  F05D         	movff	powf@u+2,___flsub@b+2
 10716   001F2A  C17F  F05E         	movff	powf@u+3,___flsub@b+3
 10717   001F2E  EC34  F03B         	call	___flsub	;wreg free
 10718   001F32  C05B  F19C         	movff	?___flsub,_powf$2098
 10719   001F36  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 10720   001F3A  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 10721   001F3E  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 10722   001F42  C134  F01D         	movff	powf@t_l,___flmul@a
 10723   001F46  C135  F01E         	movff	powf@t_l+1,___flmul@a+1
 10724   001F4A  C136  F01F         	movff	powf@t_l+2,___flmul@a+2
 10725   001F4E  C137  F020         	movff	powf@t_l+3,___flmul@a+3
 10726   001F52  C174  F019         	movff	powf@s_h,___flmul@b
 10727   001F56  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10728   001F5A  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10729   001F5E  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10730   001F62  ECF1  F023         	call	___flmul	;wreg free
 10731   001F66  C019  F05F         	movff	?___flmul,___flsub@a
 10732   001F6A  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 10733   001F6E  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 10734   001F72  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 10735   001F76  C19C  F05B         	movff	_powf$2098,___flsub@b
 10736   001F7A  C19D  F05C         	movff	_powf$2098+1,___flsub@b+1
 10737   001F7E  C19E  F05D         	movff	_powf$2098+2,___flsub@b+2
 10738   001F82  C19F  F05E         	movff	_powf$2098+3,___flsub@b+3
 10739   001F86  EC34  F03B         	call	___flsub	;wreg free
 10740   001F8A  C05B  F15C         	movff	?___flsub,_powf$2096
 10741   001F8E  C05C  F15D         	movff	?___flsub+1,_powf$2096+1
 10742   001F92  C05D  F15E         	movff	?___flsub+2,_powf$2096+2
 10743   001F96  C05E  F15F         	movff	?___flsub+3,_powf$2096+3
 10744   001F9A  C15C  F019         	movff	_powf$2096,___flmul@b
 10745   001F9E  C15D  F01A         	movff	_powf$2096+1,___flmul@b+1
 10746   001FA2  C15E  F01B         	movff	_powf$2096+2,___flmul@b+2
 10747   001FA6  C15F  F01C         	movff	_powf$2096+3,___flmul@b+3
 10748   001FAA  C180  F01D         	movff	powf@v,___flmul@a
 10749   001FAE  C181  F01E         	movff	powf@v+1,___flmul@a+1
 10750   001FB2  C182  F01F         	movff	powf@v+2,___flmul@a+2
 10751   001FB6  C183  F020         	movff	powf@v+3,___flmul@a+3
 10752   001FBA  ECF1  F023         	call	___flmul	;wreg free
 10753   001FBE  C019  F130         	movff	?___flmul,powf@s_l
 10754   001FC2  C01A  F131         	movff	?___flmul+1,powf@s_l+1
 10755   001FC6  C01B  F132         	movff	?___flmul+2,powf@s_l+2
 10756   001FCA  C01C  F133         	movff	?___flmul+3,powf@s_l+3
 10757   001FCE  C158  F019         	movff	powf@s,___flmul@b
 10758   001FD2  C159  F01A         	movff	powf@s+1,___flmul@b+1
 10759   001FD6  C15A  F01B         	movff	powf@s+2,___flmul@b+2
 10760   001FDA  C15B  F01C         	movff	powf@s+3,___flmul@b+3
 10761   001FDE  C158  F01D         	movff	powf@s,___flmul@a
 10762   001FE2  C159  F01E         	movff	powf@s+1,___flmul@a+1
 10763   001FE6  C15A  F01F         	movff	powf@s+2,___flmul@a+2
 10764   001FEA  C15B  F020         	movff	powf@s+3,___flmul@a+3
 10765   001FEE  ECF1  F023         	call	___flmul	;wreg free
 10766   001FF2  C019  F190         	movff	?___flmul,powf@s2
 10767   001FF6  C01A  F191         	movff	?___flmul+1,powf@s2+1
 10768   001FFA  C01B  F192         	movff	?___flmul+2,powf@s2+2
 10769   001FFE  C01C  F193         	movff	?___flmul+3,powf@s2+3
 10770   002002  0E55               	movlw	85
 10771   002004  6E36               	movwf	___fladd@a^0,c
 10772   002006  0E32               	movlw	50
 10773   002008  6E37               	movwf	(___fladd@a+1)^0,c
 10774   00200A  0E6C               	movlw	108
 10775   00200C  6E38               	movwf	(___fladd@a+2)^0,c
 10776   00200E  0E3E               	movlw	62
 10777   002010  6E39               	movwf	(___fladd@a+3)^0,c
 10778   002012  0E42               	movlw	66
 10779   002014  6E1D               	movwf	___flmul@a^0,c
 10780   002016  0EF1               	movlw	241
 10781   002018  6E1E               	movwf	(___flmul@a+1)^0,c
 10782   00201A  0E53               	movlw	83
 10783   00201C  6E1F               	movwf	(___flmul@a+2)^0,c
 10784   00201E  0E3E               	movlw	62
 10785   002020  6E20               	movwf	(___flmul@a+3)^0,c
 10786   002022  C190  F019         	movff	powf@s2,___flmul@b
 10787   002026  C191  F01A         	movff	powf@s2+1,___flmul@b+1
 10788   00202A  C192  F01B         	movff	powf@s2+2,___flmul@b+2
 10789   00202E  C193  F01C         	movff	powf@s2+3,___flmul@b+3
 10790   002032  ECF1  F023         	call	___flmul	;wreg free
 10791   002036  C019  F032         	movff	?___flmul,___fladd@b
 10792   00203A  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10793   00203E  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10794   002042  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10795   002046  EC91  F021         	call	___fladd	;wreg free
 10796   00204A  C032  F148         	movff	?___fladd,_powf$2095
 10797   00204E  C033  F149         	movff	?___fladd+1,_powf$2095+1
 10798   002052  C034  F14A         	movff	?___fladd+2,_powf$2095+2
 10799   002056  C035  F14B         	movff	?___fladd+3,_powf$2095+3
 10800   00205A  0E05               	movlw	5
 10801   00205C  6E36               	movwf	___fladd@a^0,c
 10802   00205E  0EA3               	movlw	163
 10803   002060  6E37               	movwf	(___fladd@a+1)^0,c
 10804   002062  0E8B               	movlw	139
 10805   002064  6E38               	movwf	(___fladd@a+2)^0,c
 10806   002066  0E3E               	movlw	62
 10807   002068  6E39               	movwf	(___fladd@a+3)^0,c
 10808   00206A  C190  F01D         	movff	powf@s2,___flmul@a
 10809   00206E  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10810   002072  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10811   002076  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10812   00207A  C148  F019         	movff	_powf$2095,___flmul@b
 10813   00207E  C149  F01A         	movff	_powf$2095+1,___flmul@b+1
 10814   002082  C14A  F01B         	movff	_powf$2095+2,___flmul@b+2
 10815   002086  C14B  F01C         	movff	_powf$2095+3,___flmul@b+3
 10816   00208A  ECF1  F023         	call	___flmul	;wreg free
 10817   00208E  C019  F032         	movff	?___flmul,___fladd@b
 10818   002092  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10819   002096  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10820   00209A  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10821   00209E  EC91  F021         	call	___fladd	;wreg free
 10822   0020A2  C032  F15C         	movff	?___fladd,_powf$2096
 10823   0020A6  C033  F15D         	movff	?___fladd+1,_powf$2096+1
 10824   0020AA  C034  F15E         	movff	?___fladd+2,_powf$2096+2
 10825   0020AE  C035  F15F         	movff	?___fladd+3,_powf$2096+3
 10826   0020B2  0EAB               	movlw	171
 10827   0020B4  6E36               	movwf	___fladd@a^0,c
 10828   0020B6  0EAA               	movlw	170
 10829   0020B8  6E37               	movwf	(___fladd@a+1)^0,c
 10830   0020BA  0EAA               	movlw	170
 10831   0020BC  6E38               	movwf	(___fladd@a+2)^0,c
 10832   0020BE  0E3E               	movlw	62
 10833   0020C0  6E39               	movwf	(___fladd@a+3)^0,c
 10834   0020C2  C190  F01D         	movff	powf@s2,___flmul@a
 10835   0020C6  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10836   0020CA  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10837   0020CE  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10838   0020D2  C15C  F019         	movff	_powf$2096,___flmul@b
 10839   0020D6  C15D  F01A         	movff	_powf$2096+1,___flmul@b+1
 10840   0020DA  C15E  F01B         	movff	_powf$2096+2,___flmul@b+2
 10841   0020DE  C15F  F01C         	movff	_powf$2096+3,___flmul@b+3
 10842   0020E2  ECF1  F023         	call	___flmul	;wreg free
 10843   0020E6  C019  F032         	movff	?___flmul,___fladd@b
 10844   0020EA  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10845   0020EE  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10846   0020F2  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10847   0020F6  EC91  F021         	call	___fladd	;wreg free
 10848   0020FA  C032  F14C         	movff	?___fladd,_powf$2097
 10849   0020FE  C033  F14D         	movff	?___fladd+1,_powf$2097+1
 10850   002102  C034  F14E         	movff	?___fladd+2,_powf$2097+2
 10851   002106  C035  F14F         	movff	?___fladd+3,_powf$2097+3
 10852   00210A  0EB7               	movlw	183
 10853   00210C  6E36               	movwf	___fladd@a^0,c
 10854   00210E  0E6D               	movlw	109
 10855   002110  6E37               	movwf	(___fladd@a+1)^0,c
 10856   002112  0EDB               	movlw	219
 10857   002114  6E38               	movwf	(___fladd@a+2)^0,c
 10858   002116  0E3E               	movlw	62
 10859   002118  6E39               	movwf	(___fladd@a+3)^0,c
 10860   00211A  C190  F01D         	movff	powf@s2,___flmul@a
 10861   00211E  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10862   002122  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10863   002126  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10864   00212A  C14C  F019         	movff	_powf$2097,___flmul@b
 10865   00212E  C14D  F01A         	movff	_powf$2097+1,___flmul@b+1
 10866   002132  C14E  F01B         	movff	_powf$2097+2,___flmul@b+2
 10867   002136  C14F  F01C         	movff	_powf$2097+3,___flmul@b+3
 10868   00213A  ECF1  F023         	call	___flmul	;wreg free
 10869   00213E  C019  F032         	movff	?___flmul,___fladd@b
 10870   002142  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10871   002146  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10872   00214A  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10873   00214E  EC91  F021         	call	___fladd	;wreg free
 10874   002152  C032  F138         	movff	?___fladd,_powf$2099
 10875   002156  C033  F139         	movff	?___fladd+1,_powf$2099+1
 10876   00215A  C034  F13A         	movff	?___fladd+2,_powf$2099+2
 10877   00215E  C035  F13B         	movff	?___fladd+3,_powf$2099+3
 10878   002162  0E9A               	movlw	154
 10879   002164  6E36               	movwf	___fladd@a^0,c
 10880   002166  0E99               	movlw	153
 10881   002168  6E37               	movwf	(___fladd@a+1)^0,c
 10882   00216A  0E19               	movlw	25
 10883   00216C  6E38               	movwf	(___fladd@a+2)^0,c
 10884   00216E  0E3F               	movlw	63
 10885   002170  6E39               	movwf	(___fladd@a+3)^0,c
 10886   002172  C190  F01D         	movff	powf@s2,___flmul@a
 10887   002176  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10888   00217A  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10889   00217E  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10890   002182  C138  F019         	movff	_powf$2099,___flmul@b
 10891   002186  C139  F01A         	movff	_powf$2099+1,___flmul@b+1
 10892   00218A  C13A  F01B         	movff	_powf$2099+2,___flmul@b+2
 10893   00218E  C13B  F01C         	movff	_powf$2099+3,___flmul@b+3
 10894   002192  ECF1  F023         	call	___flmul	;wreg free
 10895   002196  C019  F032         	movff	?___flmul,___fladd@b
 10896   00219A  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 10897   00219E  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 10898   0021A2  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 10899   0021A6  EC91  F021         	call	___fladd	;wreg free
 10900   0021AA  C032  F100         	movff	?___fladd,_powf$2100
 10901   0021AE  C033  F101         	movff	?___fladd+1,_powf$2100+1
 10902   0021B2  C034  F102         	movff	?___fladd+2,_powf$2100+2
 10903   0021B6  C035  F103         	movff	?___fladd+3,_powf$2100+3
 10904   0021BA  C190  F01D         	movff	powf@s2,___flmul@a
 10905   0021BE  C191  F01E         	movff	powf@s2+1,___flmul@a+1
 10906   0021C2  C192  F01F         	movff	powf@s2+2,___flmul@a+2
 10907   0021C6  C193  F020         	movff	powf@s2+3,___flmul@a+3
 10908   0021CA  C190  F019         	movff	powf@s2,___flmul@b
 10909   0021CE  C191  F01A         	movff	powf@s2+1,___flmul@b+1
 10910   0021D2  C192  F01B         	movff	powf@s2+2,___flmul@b+2
 10911   0021D6  C193  F01C         	movff	powf@s2+3,___flmul@b+3
 10912   0021DA  ECF1  F023         	call	___flmul	;wreg free
 10913   0021DE  C019  F104         	movff	?___flmul,_powf$2101
 10914   0021E2  C01A  F105         	movff	?___flmul+1,_powf$2101+1
 10915   0021E6  C01B  F106         	movff	?___flmul+2,_powf$2101+2
 10916   0021EA  C01C  F107         	movff	?___flmul+3,_powf$2101+3
 10917   0021EE  C100  F019         	movff	_powf$2100,___flmul@b
 10918   0021F2  C101  F01A         	movff	_powf$2100+1,___flmul@b+1
 10919   0021F6  C102  F01B         	movff	_powf$2100+2,___flmul@b+2
 10920   0021FA  C103  F01C         	movff	_powf$2100+3,___flmul@b+3
 10921   0021FE  C104  F01D         	movff	_powf$2101,___flmul@a
 10922   002202  C105  F01E         	movff	_powf$2101+1,___flmul@a+1
 10923   002206  C106  F01F         	movff	_powf$2101+2,___flmul@a+2
 10924   00220A  C107  F020         	movff	_powf$2101+3,___flmul@a+3
 10925   00220E  ECF1  F023         	call	___flmul	;wreg free
 10926   002212  C019  F150         	movff	?___flmul,powf@r
 10927   002216  C01A  F151         	movff	?___flmul+1,powf@r+1
 10928   00221A  C01B  F152         	movff	?___flmul+2,powf@r+2
 10929   00221E  C01C  F153         	movff	?___flmul+3,powf@r+3
 10930   002222  C130  F01D         	movff	powf@s_l,___flmul@a
 10931   002226  C131  F01E         	movff	powf@s_l+1,___flmul@a+1
 10932   00222A  C132  F01F         	movff	powf@s_l+2,___flmul@a+2
 10933   00222E  C133  F020         	movff	powf@s_l+3,___flmul@a+3
 10934   002232  C158  F036         	movff	powf@s,___fladd@a
 10935   002236  C159  F037         	movff	powf@s+1,___fladd@a+1
 10936   00223A  C15A  F038         	movff	powf@s+2,___fladd@a+2
 10937   00223E  C15B  F039         	movff	powf@s+3,___fladd@a+3
 10938   002242  C174  F032         	movff	powf@s_h,___fladd@b
 10939   002246  C175  F033         	movff	powf@s_h+1,___fladd@b+1
 10940   00224A  C176  F034         	movff	powf@s_h+2,___fladd@b+2
 10941   00224E  C177  F035         	movff	powf@s_h+3,___fladd@b+3
 10942   002252  EC91  F021         	call	___fladd	;wreg free
 10943   002256  C032  F019         	movff	?___fladd,___flmul@b
 10944   00225A  C033  F01A         	movff	?___fladd+1,___flmul@b+1
 10945   00225E  C034  F01B         	movff	?___fladd+2,___flmul@b+2
 10946   002262  C035  F01C         	movff	?___fladd+3,___flmul@b+3
 10947   002266  ECF1  F023         	call	___flmul	;wreg free
 10948   00226A  C019  F160         	movff	?___flmul,_powf$2102
 10949   00226E  C01A  F161         	movff	?___flmul+1,_powf$2102+1
 10950   002272  C01B  F162         	movff	?___flmul+2,_powf$2102+2
 10951   002276  C01C  F163         	movff	?___flmul+3,_powf$2102+3
 10952   00227A  C150  F032         	movff	powf@r,___fladd@b
 10953   00227E  C151  F033         	movff	powf@r+1,___fladd@b+1
 10954   002282  C152  F034         	movff	powf@r+2,___fladd@b+2
 10955   002286  C153  F035         	movff	powf@r+3,___fladd@b+3
 10956   00228A  C160  F036         	movff	_powf$2102,___fladd@a
 10957   00228E  C161  F037         	movff	_powf$2102+1,___fladd@a+1
 10958   002292  C162  F038         	movff	_powf$2102+2,___fladd@a+2
 10959   002296  C163  F039         	movff	_powf$2102+3,___fladd@a+3
 10960   00229A  EC91  F021         	call	___fladd	;wreg free
 10961   00229E  C032  F150         	movff	?___fladd,powf@r
 10962   0022A2  C033  F151         	movff	?___fladd+1,powf@r+1
 10963   0022A6  C034  F152         	movff	?___fladd+2,powf@r+2
 10964   0022AA  C035  F153         	movff	?___fladd+3,powf@r+3
 10965   0022AE  C174  F019         	movff	powf@s_h,___flmul@b
 10966   0022B2  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 10967   0022B6  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 10968   0022BA  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 10969   0022BE  C174  F01D         	movff	powf@s_h,___flmul@a
 10970   0022C2  C175  F01E         	movff	powf@s_h+1,___flmul@a+1
 10971   0022C6  C176  F01F         	movff	powf@s_h+2,___flmul@a+2
 10972   0022CA  C177  F020         	movff	powf@s_h+3,___flmul@a+3
 10973   0022CE  ECF1  F023         	call	___flmul	;wreg free
 10974   0022D2  C019  F190         	movff	?___flmul,powf@s2
 10975   0022D6  C01A  F191         	movff	?___flmul+1,powf@s2+1
 10976   0022DA  C01B  F192         	movff	?___flmul+2,powf@s2+2
 10977   0022DE  C01C  F193         	movff	?___flmul+3,powf@s2+3
 10978   0022E2  0E00               	movlw	0
 10979   0022E4  6E36               	movwf	___fladd@a^0,c
 10980   0022E6  0E00               	movlw	0
 10981   0022E8  6E37               	movwf	(___fladd@a+1)^0,c
 10982   0022EA  0E40               	movlw	64
 10983   0022EC  6E38               	movwf	(___fladd@a+2)^0,c
 10984   0022EE  0E40               	movlw	64
 10985   0022F0  6E39               	movwf	(___fladd@a+3)^0,c
 10986   0022F2  C190  F032         	movff	powf@s2,___fladd@b
 10987   0022F6  C191  F033         	movff	powf@s2+1,___fladd@b+1
 10988   0022FA  C192  F034         	movff	powf@s2+2,___fladd@b+2
 10989   0022FE  C193  F035         	movff	powf@s2+3,___fladd@b+3
 10990   002302  EC91  F021         	call	___fladd	;wreg free
 10991   002306  C032  F160         	movff	?___fladd,_powf$2102
 10992   00230A  C033  F161         	movff	?___fladd+1,_powf$2102+1
 10993   00230E  C034  F162         	movff	?___fladd+2,_powf$2102+2
 10994   002312  C035  F163         	movff	?___fladd+3,_powf$2102+3
 10995   002316  C160  F032         	movff	_powf$2102,___fladd@b
 10996   00231A  C161  F033         	movff	_powf$2102+1,___fladd@b+1
 10997   00231E  C162  F034         	movff	_powf$2102+2,___fladd@b+2
 10998   002322  C163  F035         	movff	_powf$2102+3,___fladd@b+3
 10999   002326  C150  F036         	movff	powf@r,___fladd@a
 11000   00232A  C151  F037         	movff	powf@r+1,___fladd@a+1
 11001   00232E  C152  F038         	movff	powf@r+2,___fladd@a+2
 11002   002332  C153  F039         	movff	powf@r+3,___fladd@a+3
 11003   002336  EC91  F021         	call	___fladd	;wreg free
 11004   00233A  C032  F170         	movff	?___fladd,powf@t_h
 11005   00233E  C033  F171         	movff	?___fladd+1,powf@t_h+1
 11006   002342  C034  F172         	movff	?___fladd+2,powf@t_h+2
 11007   002346  C035  F173         	movff	?___fladd+3,powf@t_h+3
 11008   00234A  C170  F198         	movff	powf@t_h,powf@is
 11009   00234E  C171  F199         	movff	powf@t_h+1,powf@is+1
 11010   002352  C172  F19A         	movff	powf@t_h+2,powf@is+2
 11011   002356  C173  F19B         	movff	powf@t_h+3,powf@is+3
 11012   00235A  0E00               	movlw	0
 11013   00235C  0101               	movlb	1	; () banked
 11014   00235E  1598               	andwf	powf@is& (0+255),w,b
 11015   002360  6F70               	movwf	powf@t_h& (0+255),b
 11016   002362  0EF0               	movlw	240
 11017   002364  1599               	andwf	(powf@is+1)& (0+255),w,b
 11018   002366  6F71               	movwf	(powf@t_h+1)& (0+255),b
 11019   002368  0EFF               	movlw	255
 11020   00236A  159A               	andwf	(powf@is+2)& (0+255),w,b
 11021   00236C  6F72               	movwf	(powf@t_h+2)& (0+255),b
 11022   00236E  0EFF               	movlw	255
 11023   002370  159B               	andwf	(powf@is+3)& (0+255),w,b
 11024   002372  6F73               	movwf	(powf@t_h+3)& (0+255),b
 11025   002374                     
 11026                           ; BSR set to: 1
 11027   002374  0E00               	movlw	0
 11028   002376  6E36               	movwf	___fladd@a^0,c
 11029   002378  0E00               	movlw	0
 11030   00237A  6E37               	movwf	(___fladd@a+1)^0,c
 11031   00237C  0E40               	movlw	64
 11032   00237E  6E38               	movwf	(___fladd@a+2)^0,c
 11033   002380  0EC0               	movlw	192
 11034   002382  6E39               	movwf	(___fladd@a+3)^0,c
 11035   002384  C170  F032         	movff	powf@t_h,___fladd@b
 11036   002388  C171  F033         	movff	powf@t_h+1,___fladd@b+1
 11037   00238C  C172  F034         	movff	powf@t_h+2,___fladd@b+2
 11038   002390  C173  F035         	movff	powf@t_h+3,___fladd@b+3
 11039   002394  EC91  F021         	call	___fladd	;wreg free
 11040   002398  C032  F13C         	movff	?___fladd,_powf$2103
 11041   00239C  C033  F13D         	movff	?___fladd+1,_powf$2103+1
 11042   0023A0  C034  F13E         	movff	?___fladd+2,_powf$2103+2
 11043   0023A4  C035  F13F         	movff	?___fladd+3,_powf$2103+3
 11044   0023A8  C190  F05F         	movff	powf@s2,___flsub@a
 11045   0023AC  C191  F060         	movff	powf@s2+1,___flsub@a+1
 11046   0023B0  C192  F061         	movff	powf@s2+2,___flsub@a+2
 11047   0023B4  C193  F062         	movff	powf@s2+3,___flsub@a+3
 11048   0023B8  C13C  F05B         	movff	_powf$2103,___flsub@b
 11049   0023BC  C13D  F05C         	movff	_powf$2103+1,___flsub@b+1
 11050   0023C0  C13E  F05D         	movff	_powf$2103+2,___flsub@b+2
 11051   0023C4  C13F  F05E         	movff	_powf$2103+3,___flsub@b+3
 11052   0023C8  EC34  F03B         	call	___flsub	;wreg free
 11053   0023CC  C05B  F140         	movff	?___flsub,_powf$2104
 11054   0023D0  C05C  F141         	movff	?___flsub+1,_powf$2104+1
 11055   0023D4  C05D  F142         	movff	?___flsub+2,_powf$2104+2
 11056   0023D8  C05E  F143         	movff	?___flsub+3,_powf$2104+3
 11057   0023DC  C150  F05B         	movff	powf@r,___flsub@b
 11058   0023E0  C151  F05C         	movff	powf@r+1,___flsub@b+1
 11059   0023E4  C152  F05D         	movff	powf@r+2,___flsub@b+2
 11060   0023E8  C153  F05E         	movff	powf@r+3,___flsub@b+3
 11061   0023EC  C140  F05F         	movff	_powf$2104,___flsub@a
 11062   0023F0  C141  F060         	movff	_powf$2104+1,___flsub@a+1
 11063   0023F4  C142  F061         	movff	_powf$2104+2,___flsub@a+2
 11064   0023F8  C143  F062         	movff	_powf$2104+3,___flsub@a+3
 11065   0023FC  EC34  F03B         	call	___flsub	;wreg free
 11066   002400  C05B  F134         	movff	?___flsub,powf@t_l
 11067   002404  C05C  F135         	movff	?___flsub+1,powf@t_l+1
 11068   002408  C05D  F136         	movff	?___flsub+2,powf@t_l+2
 11069   00240C  C05E  F137         	movff	?___flsub+3,powf@t_l+3
 11070   002410  C174  F019         	movff	powf@s_h,___flmul@b
 11071   002414  C175  F01A         	movff	powf@s_h+1,___flmul@b+1
 11072   002418  C176  F01B         	movff	powf@s_h+2,___flmul@b+2
 11073   00241C  C177  F01C         	movff	powf@s_h+3,___flmul@b+3
 11074   002420  C170  F01D         	movff	powf@t_h,___flmul@a
 11075   002424  C171  F01E         	movff	powf@t_h+1,___flmul@a+1
 11076   002428  C172  F01F         	movff	powf@t_h+2,___flmul@a+2
 11077   00242C  C173  F020         	movff	powf@t_h+3,___flmul@a+3
 11078   002430  ECF1  F023         	call	___flmul	;wreg free
 11079   002434  C019  F17C         	movff	?___flmul,powf@u
 11080   002438  C01A  F17D         	movff	?___flmul+1,powf@u+1
 11081   00243C  C01B  F17E         	movff	?___flmul+2,powf@u+2
 11082   002440  C01C  F17F         	movff	?___flmul+3,powf@u+3
 11083   002444  C130  F01D         	movff	powf@s_l,___flmul@a
 11084   002448  C131  F01E         	movff	powf@s_l+1,___flmul@a+1
 11085   00244C  C132  F01F         	movff	powf@s_l+2,___flmul@a+2
 11086   002450  C133  F020         	movff	powf@s_l+3,___flmul@a+3
 11087   002454  C170  F019         	movff	powf@t_h,___flmul@b
 11088   002458  C171  F01A         	movff	powf@t_h+1,___flmul@b+1
 11089   00245C  C172  F01B         	movff	powf@t_h+2,___flmul@b+2
 11090   002460  C173  F01C         	movff	powf@t_h+3,___flmul@b+3
 11091   002464  ECF1  F023         	call	___flmul	;wreg free
 11092   002468  C019  F032         	movff	?___flmul,___fladd@b
 11093   00246C  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 11094   002470  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 11095   002474  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 11096   002478  C158  F01D         	movff	powf@s,___flmul@a
 11097   00247C  C159  F01E         	movff	powf@s+1,___flmul@a+1
 11098   002480  C15A  F01F         	movff	powf@s+2,___flmul@a+2
 11099   002484  C15B  F020         	movff	powf@s+3,___flmul@a+3
 11100   002488  C134  F019         	movff	powf@t_l,___flmul@b
 11101   00248C  C135  F01A         	movff	powf@t_l+1,___flmul@b+1
 11102   002490  C136  F01B         	movff	powf@t_l+2,___flmul@b+2
 11103   002494  C137  F01C         	movff	powf@t_l+3,___flmul@b+3
 11104   002498  ECF1  F023         	call	___flmul	;wreg free
 11105   00249C  C019  F036         	movff	?___flmul,___fladd@a
 11106   0024A0  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11107   0024A4  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11108   0024A8  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11109   0024AC  EC91  F021         	call	___fladd	;wreg free
 11110   0024B0  C032  F180         	movff	?___fladd,powf@v
 11111   0024B4  C033  F181         	movff	?___fladd+1,powf@v+1
 11112   0024B8  C034  F182         	movff	?___fladd+2,powf@v+2
 11113   0024BC  C035  F183         	movff	?___fladd+3,powf@v+3
 11114   0024C0  C17C  F032         	movff	powf@u,___fladd@b
 11115   0024C4  C17D  F033         	movff	powf@u+1,___fladd@b+1
 11116   0024C8  C17E  F034         	movff	powf@u+2,___fladd@b+2
 11117   0024CC  C17F  F035         	movff	powf@u+3,___fladd@b+3
 11118   0024D0  C180  F036         	movff	powf@v,___fladd@a
 11119   0024D4  C181  F037         	movff	powf@v+1,___fladd@a+1
 11120   0024D8  C182  F038         	movff	powf@v+2,___fladd@a+2
 11121   0024DC  C183  F039         	movff	powf@v+3,___fladd@a+3
 11122   0024E0  EC91  F021         	call	___fladd	;wreg free
 11123   0024E4  C032  F1A0         	movff	?___fladd,powf@p_h
 11124   0024E8  C033  F1A1         	movff	?___fladd+1,powf@p_h+1
 11125   0024EC  C034  F1A2         	movff	?___fladd+2,powf@p_h+2
 11126   0024F0  C035  F1A3         	movff	?___fladd+3,powf@p_h+3
 11127   0024F4  C1A0  F198         	movff	powf@p_h,powf@is
 11128   0024F8  C1A1  F199         	movff	powf@p_h+1,powf@is+1
 11129   0024FC  C1A2  F19A         	movff	powf@p_h+2,powf@is+2
 11130   002500  C1A3  F19B         	movff	powf@p_h+3,powf@is+3
 11131   002504  0E00               	movlw	0
 11132   002506  0101               	movlb	1	; () banked
 11133   002508  1598               	andwf	powf@is& (0+255),w,b
 11134   00250A  6FA0               	movwf	powf@p_h& (0+255),b
 11135   00250C  0EF0               	movlw	240
 11136   00250E  1599               	andwf	(powf@is+1)& (0+255),w,b
 11137   002510  6FA1               	movwf	(powf@p_h+1)& (0+255),b
 11138   002512  0EFF               	movlw	255
 11139   002514  159A               	andwf	(powf@is+2)& (0+255),w,b
 11140   002516  6FA2               	movwf	(powf@p_h+2)& (0+255),b
 11141   002518  0EFF               	movlw	255
 11142   00251A  159B               	andwf	(powf@is+3)& (0+255),w,b
 11143   00251C  6FA3               	movwf	(powf@p_h+3)& (0+255),b
 11144   00251E                     
 11145                           ; BSR set to: 1
 11146   00251E  C17C  F05F         	movff	powf@u,___flsub@a
 11147   002522  C17D  F060         	movff	powf@u+1,___flsub@a+1
 11148   002526  C17E  F061         	movff	powf@u+2,___flsub@a+2
 11149   00252A  C17F  F062         	movff	powf@u+3,___flsub@a+3
 11150   00252E  C1A0  F05B         	movff	powf@p_h,___flsub@b
 11151   002532  C1A1  F05C         	movff	powf@p_h+1,___flsub@b+1
 11152   002536  C1A2  F05D         	movff	powf@p_h+2,___flsub@b+2
 11153   00253A  C1A3  F05E         	movff	powf@p_h+3,___flsub@b+3
 11154   00253E  EC34  F03B         	call	___flsub	;wreg free
 11155   002542  C05B  F19C         	movff	?___flsub,_powf$2098
 11156   002546  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 11157   00254A  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 11158   00254E  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 11159   002552  C180  F05B         	movff	powf@v,___flsub@b
 11160   002556  C181  F05C         	movff	powf@v+1,___flsub@b+1
 11161   00255A  C182  F05D         	movff	powf@v+2,___flsub@b+2
 11162   00255E  C183  F05E         	movff	powf@v+3,___flsub@b+3
 11163   002562  C19C  F05F         	movff	_powf$2098,___flsub@a
 11164   002566  C19D  F060         	movff	_powf$2098+1,___flsub@a+1
 11165   00256A  C19E  F061         	movff	_powf$2098+2,___flsub@a+2
 11166   00256E  C19F  F062         	movff	_powf$2098+3,___flsub@a+3
 11167   002572  EC34  F03B         	call	___flsub	;wreg free
 11168   002576  C05B  F16C         	movff	?___flsub,powf@p_l
 11169   00257A  C05C  F16D         	movff	?___flsub+1,powf@p_l+1
 11170   00257E  C05D  F16E         	movff	?___flsub+2,powf@p_l+2
 11171   002582  C05E  F16F         	movff	?___flsub+3,powf@p_l+3
 11172   002586  C1A0  F019         	movff	powf@p_h,___flmul@b
 11173   00258A  C1A1  F01A         	movff	powf@p_h+1,___flmul@b+1
 11174   00258E  C1A2  F01B         	movff	powf@p_h+2,___flmul@b+2
 11175   002592  C1A3  F01C         	movff	powf@p_h+3,___flmul@b+3
 11176   002596  0E00               	movlw	0
 11177   002598  6E1D               	movwf	___flmul@a^0,c
 11178   00259A  0E40               	movlw	64
 11179   00259C  6E1E               	movwf	(___flmul@a+1)^0,c
 11180   00259E  0E76               	movlw	118
 11181   0025A0  6E1F               	movwf	(___flmul@a+2)^0,c
 11182   0025A2  0E3F               	movlw	63
 11183   0025A4  6E20               	movwf	(___flmul@a+3)^0,c
 11184   0025A6  ECF1  F023         	call	___flmul	;wreg free
 11185   0025AA  C019  F120         	movff	?___flmul,powf@z_h
 11186   0025AE  C01A  F121         	movff	?___flmul+1,powf@z_h+1
 11187   0025B2  C01B  F122         	movff	?___flmul+2,powf@z_h+2
 11188   0025B6  C01C  F123         	movff	?___flmul+3,powf@z_h+3
 11189   0025BA  0E4F               	movlw	79
 11190   0025BC  6E1D               	movwf	___flmul@a^0,c
 11191   0025BE  0E38               	movlw	56
 11192   0025C0  6E1E               	movwf	(___flmul@a+1)^0,c
 11193   0025C2  0E76               	movlw	118
 11194   0025C4  6E1F               	movwf	(___flmul@a+2)^0,c
 11195   0025C6  0E3F               	movlw	63
 11196   0025C8  6E20               	movwf	(___flmul@a+3)^0,c
 11197   0025CA  C16C  F019         	movff	powf@p_l,___flmul@b
 11198   0025CE  C16D  F01A         	movff	powf@p_l+1,___flmul@b+1
 11199   0025D2  C16E  F01B         	movff	powf@p_l+2,___flmul@b+2
 11200   0025D6  C16F  F01C         	movff	powf@p_l+3,___flmul@b+3
 11201   0025DA  ECF1  F023         	call	___flmul	;wreg free
 11202   0025DE  C019  F036         	movff	?___flmul,___fladd@a
 11203   0025E2  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11204   0025E6  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11205   0025EA  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11206   0025EE  0EC6               	movlw	198
 11207   0025F0  6E1D               	movwf	___flmul@a^0,c
 11208   0025F2  0E23               	movlw	35
 11209   0025F4  6E1E               	movwf	(___flmul@a+1)^0,c
 11210   0025F6  0EF6               	movlw	246
 11211   0025F8  6E1F               	movwf	(___flmul@a+2)^0,c
 11212   0025FA  0EB8               	movlw	184
 11213   0025FC  6E20               	movwf	(___flmul@a+3)^0,c
 11214   0025FE  C1A0  F019         	movff	powf@p_h,___flmul@b
 11215   002602  C1A1  F01A         	movff	powf@p_h+1,___flmul@b+1
 11216   002606  C1A2  F01B         	movff	powf@p_h+2,___flmul@b+2
 11217   00260A  C1A3  F01C         	movff	powf@p_h+3,___flmul@b+3
 11218   00260E  ECF1  F023         	call	___flmul	;wreg free
 11219   002612  C019  F032         	movff	?___flmul,___fladd@b
 11220   002616  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 11221   00261A  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 11222   00261E  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 11223   002622  EC91  F021         	call	___fladd	;wreg free
 11224   002626  C032  F160         	movff	?___fladd,_powf$2102
 11225   00262A  C033  F161         	movff	?___fladd+1,_powf$2102+1
 11226   00262E  C034  F162         	movff	?___fladd+2,_powf$2102+2
 11227   002632  C035  F163         	movff	?___fladd+3,_powf$2102+3
 11228   002636  C160  F032         	movff	_powf$2102,___fladd@b
 11229   00263A  C161  F033         	movff	_powf$2102+1,___fladd@b+1
 11230   00263E  C162  F034         	movff	_powf$2102+2,___fladd@b+2
 11231   002642  C163  F035         	movff	_powf$2102+3,___fladd@b+3
 11232   002646  0101               	movlb	1	; () banked
 11233   002648  51A4               	movf	powf@k& (0+255),w,b
 11234   00264A  0D04               	mullw	4
 11235   00264C  50F3               	movf	243,w,c
 11236   00264E  0F01               	addlw	low _dp_l
 11237   002650  6E77               	movwf	??_powf^0,c
 11238   002652  C077  FFF6         	movff	??_powf,tblptrl
 11239   002656                     	if	1	;There is more than 1 active tblptr byte
 11240   002656  0E10               	movlw	high __smallconst
 11241   002658  6EF7               	movwf	tblptrh,c
 11242   00265A                     	endif
 11243   00265A                     	if	0	;tblptru may be non-zero
 11244   00265A                     	endif
 11245   00265A                     	if	0	;tblptru may be non-zero
 11246   00265A                     	endif
 11247   00265A  0009               	tblrd		*+
 11248   00265C  CFF5 F036          	movff	tablat,___fladd@a
 11249   002660  0009               	tblrd		*+
 11250   002662  CFF5 F037          	movff	tablat,___fladd@a+1
 11251   002666  0009               	tblrd		*+
 11252   002668  CFF5 F038          	movff	tablat,___fladd@a+2
 11253   00266C  000A               	tblrd		*-
 11254   00266E  CFF5 F039          	movff	tablat,___fladd@a+3
 11255   002672  EC91  F021         	call	___fladd	;wreg free
 11256   002676  C032  F124         	movff	?___fladd,powf@z_l
 11257   00267A  C033  F125         	movff	?___fladd+1,powf@z_l+1
 11258   00267E  C034  F126         	movff	?___fladd+2,powf@z_l+2
 11259   002682  C035  F127         	movff	?___fladd+3,powf@z_l+3
 11260   002686  C188  F00B         	movff	powf@n,___xxtofl@val
 11261   00268A  C189  F00C         	movff	powf@n+1,___xxtofl@val+1
 11262   00268E  C18A  F00D         	movff	powf@n+2,___xxtofl@val+2
 11263   002692  C18B  F00E         	movff	powf@n+3,___xxtofl@val+3
 11264   002696  0E01               	movlw	1
 11265   002698  ECC2  F02F         	call	___xxtofl
 11266   00269C  C00B  F1B0         	movff	?___xxtofl,powf@t
 11267   0026A0  C00C  F1B1         	movff	?___xxtofl+1,powf@t+1
 11268   0026A4  C00D  F1B2         	movff	?___xxtofl+2,powf@t+2
 11269   0026A8  C00E  F1B3         	movff	?___xxtofl+3,powf@t+3
 11270   0026AC  C124  F036         	movff	powf@z_l,___fladd@a
 11271   0026B0  C125  F037         	movff	powf@z_l+1,___fladd@a+1
 11272   0026B4  C126  F038         	movff	powf@z_l+2,___fladd@a+2
 11273   0026B8  C127  F039         	movff	powf@z_l+3,___fladd@a+3
 11274   0026BC  C120  F032         	movff	powf@z_h,___fladd@b
 11275   0026C0  C121  F033         	movff	powf@z_h+1,___fladd@b+1
 11276   0026C4  C122  F034         	movff	powf@z_h+2,___fladd@b+2
 11277   0026C8  C123  F035         	movff	powf@z_h+3,___fladd@b+3
 11278   0026CC  EC91  F021         	call	___fladd	;wreg free
 11279   0026D0  C032  F160         	movff	?___fladd,_powf$2102
 11280   0026D4  C033  F161         	movff	?___fladd+1,_powf$2102+1
 11281   0026D8  C034  F162         	movff	?___fladd+2,_powf$2102+2
 11282   0026DC  C035  F163         	movff	?___fladd+3,_powf$2102+3
 11283   0026E0  0101               	movlb	1	; () banked
 11284   0026E2  51A4               	movf	powf@k& (0+255),w,b
 11285   0026E4  0D04               	mullw	4
 11286   0026E6  50F3               	movf	243,w,c
 11287   0026E8  0F09               	addlw	low _dp_h
 11288   0026EA  6E77               	movwf	??_powf^0,c
 11289   0026EC  C077  FFF6         	movff	??_powf,tblptrl
 11290   0026F0                     	if	1	;There is more than 1 active tblptr byte
 11291   0026F0  0E10               	movlw	high __smallconst
 11292   0026F2  6EF7               	movwf	tblptrh,c
 11293   0026F4                     	endif
 11294   0026F4                     	if	0	;tblptru may be non-zero
 11295   0026F4                     	endif
 11296   0026F4                     	if	0	;tblptru may be non-zero
 11297   0026F4                     	endif
 11298   0026F4  0009               	tblrd		*+
 11299   0026F6  CFF5 F036          	movff	tablat,___fladd@a
 11300   0026FA  0009               	tblrd		*+
 11301   0026FC  CFF5 F037          	movff	tablat,___fladd@a+1
 11302   002700  0009               	tblrd		*+
 11303   002702  CFF5 F038          	movff	tablat,___fladd@a+2
 11304   002706  000A               	tblrd		*-
 11305   002708  CFF5 F039          	movff	tablat,___fladd@a+3
 11306   00270C  C160  F032         	movff	_powf$2102,___fladd@b
 11307   002710  C161  F033         	movff	_powf$2102+1,___fladd@b+1
 11308   002714  C162  F034         	movff	_powf$2102+2,___fladd@b+2
 11309   002718  C163  F035         	movff	_powf$2102+3,___fladd@b+3
 11310   00271C  EC91  F021         	call	___fladd	;wreg free
 11311   002720  C032  F108         	movff	?___fladd,_powf$2105
 11312   002724  C033  F109         	movff	?___fladd+1,_powf$2105+1
 11313   002728  C034  F10A         	movff	?___fladd+2,_powf$2105+2
 11314   00272C  C035  F10B         	movff	?___fladd+3,_powf$2105+3
 11315   002730  C108  F032         	movff	_powf$2105,___fladd@b
 11316   002734  C109  F033         	movff	_powf$2105+1,___fladd@b+1
 11317   002738  C10A  F034         	movff	_powf$2105+2,___fladd@b+2
 11318   00273C  C10B  F035         	movff	_powf$2105+3,___fladd@b+3
 11319   002740  C1B0  F036         	movff	powf@t,___fladd@a
 11320   002744  C1B1  F037         	movff	powf@t+1,___fladd@a+1
 11321   002748  C1B2  F038         	movff	powf@t+2,___fladd@a+2
 11322   00274C  C1B3  F039         	movff	powf@t+3,___fladd@a+3
 11323   002750  EC91  F021         	call	___fladd	;wreg free
 11324   002754  C032  F18C         	movff	?___fladd,powf@t1
 11325   002758  C033  F18D         	movff	?___fladd+1,powf@t1+1
 11326   00275C  C034  F18E         	movff	?___fladd+2,powf@t1+2
 11327   002760  C035  F18F         	movff	?___fladd+3,powf@t1+3
 11328   002764  C18C  F198         	movff	powf@t1,powf@is
 11329   002768  C18D  F199         	movff	powf@t1+1,powf@is+1
 11330   00276C  C18E  F19A         	movff	powf@t1+2,powf@is+2
 11331   002770  C18F  F19B         	movff	powf@t1+3,powf@is+3
 11332   002774  0E00               	movlw	0
 11333   002776  0101               	movlb	1	; () banked
 11334   002778  1598               	andwf	powf@is& (0+255),w,b
 11335   00277A  6F8C               	movwf	powf@t1& (0+255),b
 11336   00277C  0EF0               	movlw	240
 11337   00277E  1599               	andwf	(powf@is+1)& (0+255),w,b
 11338   002780  6F8D               	movwf	(powf@t1+1)& (0+255),b
 11339   002782  0EFF               	movlw	255
 11340   002784  159A               	andwf	(powf@is+2)& (0+255),w,b
 11341   002786  6F8E               	movwf	(powf@t1+2)& (0+255),b
 11342   002788  0EFF               	movlw	255
 11343   00278A  159B               	andwf	(powf@is+3)& (0+255),w,b
 11344   00278C  6F8F               	movwf	(powf@t1+3)& (0+255),b
 11345   00278E                     
 11346                           ; BSR set to: 1
 11347   00278E  C1B0  F05F         	movff	powf@t,___flsub@a
 11348   002792  C1B1  F060         	movff	powf@t+1,___flsub@a+1
 11349   002796  C1B2  F061         	movff	powf@t+2,___flsub@a+2
 11350   00279A  C1B3  F062         	movff	powf@t+3,___flsub@a+3
 11351   00279E  C18C  F05B         	movff	powf@t1,___flsub@b
 11352   0027A2  C18D  F05C         	movff	powf@t1+1,___flsub@b+1
 11353   0027A6  C18E  F05D         	movff	powf@t1+2,___flsub@b+2
 11354   0027AA  C18F  F05E         	movff	powf@t1+3,___flsub@b+3
 11355   0027AE  EC34  F03B         	call	___flsub	;wreg free
 11356   0027B2  C05B  F19C         	movff	?___flsub,_powf$2098
 11357   0027B6  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 11358   0027BA  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 11359   0027BE  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 11360   0027C2  0101               	movlb	1	; () banked
 11361   0027C4  51A4               	movf	powf@k& (0+255),w,b
 11362   0027C6  0D04               	mullw	4
 11363   0027C8  50F3               	movf	243,w,c
 11364   0027CA  0F09               	addlw	low _dp_h
 11365   0027CC  6E77               	movwf	??_powf^0,c
 11366   0027CE  C077  FFF6         	movff	??_powf,tblptrl
 11367   0027D2                     	if	1	;There is more than 1 active tblptr byte
 11368   0027D2  0E10               	movlw	high __smallconst
 11369   0027D4  6EF7               	movwf	tblptrh,c
 11370   0027D6                     	endif
 11371   0027D6                     	if	0	;tblptru may be non-zero
 11372   0027D6                     	endif
 11373   0027D6                     	if	0	;tblptru may be non-zero
 11374   0027D6                     	endif
 11375   0027D6  0009               	tblrd		*+
 11376   0027D8  CFF5 F05F          	movff	tablat,___flsub@a
 11377   0027DC  0009               	tblrd		*+
 11378   0027DE  CFF5 F060          	movff	tablat,___flsub@a+1
 11379   0027E2  0009               	tblrd		*+
 11380   0027E4  CFF5 F061          	movff	tablat,___flsub@a+2
 11381   0027E8  000A               	tblrd		*-
 11382   0027EA  CFF5 F062          	movff	tablat,___flsub@a+3
 11383   0027EE  C19C  F05B         	movff	_powf$2098,___flsub@b
 11384   0027F2  C19D  F05C         	movff	_powf$2098+1,___flsub@b+1
 11385   0027F6  C19E  F05D         	movff	_powf$2098+2,___flsub@b+2
 11386   0027FA  C19F  F05E         	movff	_powf$2098+3,___flsub@b+3
 11387   0027FE  EC34  F03B         	call	___flsub	;wreg free
 11388   002802  C05B  F140         	movff	?___flsub,_powf$2104
 11389   002806  C05C  F141         	movff	?___flsub+1,_powf$2104+1
 11390   00280A  C05D  F142         	movff	?___flsub+2,_powf$2104+2
 11391   00280E  C05E  F143         	movff	?___flsub+3,_powf$2104+3
 11392   002812  C120  F05F         	movff	powf@z_h,___flsub@a
 11393   002816  C121  F060         	movff	powf@z_h+1,___flsub@a+1
 11394   00281A  C122  F061         	movff	powf@z_h+2,___flsub@a+2
 11395   00281E  C123  F062         	movff	powf@z_h+3,___flsub@a+3
 11396   002822  C140  F05B         	movff	_powf$2104,___flsub@b
 11397   002826  C141  F05C         	movff	_powf$2104+1,___flsub@b+1
 11398   00282A  C142  F05D         	movff	_powf$2104+2,___flsub@b+2
 11399   00282E  C143  F05E         	movff	_powf$2104+3,___flsub@b+3
 11400   002832  EC34  F03B         	call	___flsub	;wreg free
 11401   002836  C05B  F10C         	movff	?___flsub,_powf$2106
 11402   00283A  C05C  F10D         	movff	?___flsub+1,_powf$2106+1
 11403   00283E  C05D  F10E         	movff	?___flsub+2,_powf$2106+2
 11404   002842  C05E  F10F         	movff	?___flsub+3,_powf$2106+3
 11405   002846  C124  F05B         	movff	powf@z_l,___flsub@b
 11406   00284A  C125  F05C         	movff	powf@z_l+1,___flsub@b+1
 11407   00284E  C126  F05D         	movff	powf@z_l+2,___flsub@b+2
 11408   002852  C127  F05E         	movff	powf@z_l+3,___flsub@b+3
 11409   002856  C10C  F05F         	movff	_powf$2106,___flsub@a
 11410   00285A  C10D  F060         	movff	_powf$2106+1,___flsub@a+1
 11411   00285E  C10E  F061         	movff	_powf$2106+2,___flsub@a+2
 11412   002862  C10F  F062         	movff	_powf$2106+3,___flsub@a+3
 11413   002866  EC34  F03B         	call	___flsub	;wreg free
 11414   00286A  C05B  F11C         	movff	?___flsub,powf@t2
 11415   00286E  C05C  F11D         	movff	?___flsub+1,powf@t2+1
 11416   002872  C05D  F11E         	movff	?___flsub+2,powf@t2+2
 11417   002876  C05E  F11F         	movff	?___flsub+3,powf@t2+3
 11418   00287A                     l12615:
 11419   00287A  C073  F198         	movff	powf@y,powf@is
 11420   00287E  C074  F199         	movff	powf@y+1,powf@is+1
 11421   002882  C075  F19A         	movff	powf@y+2,powf@is+2
 11422   002886  C076  F19B         	movff	powf@y+3,powf@is+3
 11423   00288A  0E00               	movlw	0
 11424   00288C  0101               	movlb	1	; () banked
 11425   00288E  1598               	andwf	powf@is& (0+255),w,b
 11426   002890  6F2C               	movwf	powf@y1& (0+255),b
 11427   002892  0EF0               	movlw	240
 11428   002894  1599               	andwf	(powf@is+1)& (0+255),w,b
 11429   002896  6F2D               	movwf	(powf@y1+1)& (0+255),b
 11430   002898  0EFF               	movlw	255
 11431   00289A  159A               	andwf	(powf@is+2)& (0+255),w,b
 11432   00289C  6F2E               	movwf	(powf@y1+2)& (0+255),b
 11433   00289E  0EFF               	movlw	255
 11434   0028A0  159B               	andwf	(powf@is+3)& (0+255),w,b
 11435   0028A2  6F2F               	movwf	(powf@y1+3)& (0+255),b
 11436   0028A4                     
 11437                           ; BSR set to: 1
 11438   0028A4  C18C  F01D         	movff	powf@t1,___flmul@a
 11439   0028A8  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 11440   0028AC  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 11441   0028B0  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 11442   0028B4  C12C  F05F         	movff	powf@y1,___flsub@a
 11443   0028B8  C12D  F060         	movff	powf@y1+1,___flsub@a+1
 11444   0028BC  C12E  F061         	movff	powf@y1+2,___flsub@a+2
 11445   0028C0  C12F  F062         	movff	powf@y1+3,___flsub@a+3
 11446   0028C4  C073  F05B         	movff	powf@y,___flsub@b
 11447   0028C8  C074  F05C         	movff	powf@y+1,___flsub@b+1
 11448   0028CC  C075  F05D         	movff	powf@y+2,___flsub@b+2
 11449   0028D0  C076  F05E         	movff	powf@y+3,___flsub@b+3
 11450   0028D4  EC34  F03B         	call	___flsub	;wreg free
 11451   0028D8  C05B  F019         	movff	?___flsub,___flmul@b
 11452   0028DC  C05C  F01A         	movff	?___flsub+1,___flmul@b+1
 11453   0028E0  C05D  F01B         	movff	?___flsub+2,___flmul@b+2
 11454   0028E4  C05E  F01C         	movff	?___flsub+3,___flmul@b+3
 11455   0028E8  ECF1  F023         	call	___flmul	;wreg free
 11456   0028EC  C019  F110         	movff	?___flmul,_powf$2107
 11457   0028F0  C01A  F111         	movff	?___flmul+1,_powf$2107+1
 11458   0028F4  C01B  F112         	movff	?___flmul+2,_powf$2107+2
 11459   0028F8  C01C  F113         	movff	?___flmul+3,_powf$2107+3
 11460   0028FC  C110  F032         	movff	_powf$2107,___fladd@b
 11461   002900  C111  F033         	movff	_powf$2107+1,___fladd@b+1
 11462   002904  C112  F034         	movff	_powf$2107+2,___fladd@b+2
 11463   002908  C113  F035         	movff	_powf$2107+3,___fladd@b+3
 11464   00290C  C11C  F01D         	movff	powf@t2,___flmul@a
 11465   002910  C11D  F01E         	movff	powf@t2+1,___flmul@a+1
 11466   002914  C11E  F01F         	movff	powf@t2+2,___flmul@a+2
 11467   002918  C11F  F020         	movff	powf@t2+3,___flmul@a+3
 11468   00291C  C073  F019         	movff	powf@y,___flmul@b
 11469   002920  C074  F01A         	movff	powf@y+1,___flmul@b+1
 11470   002924  C075  F01B         	movff	powf@y+2,___flmul@b+2
 11471   002928  C076  F01C         	movff	powf@y+3,___flmul@b+3
 11472   00292C  ECF1  F023         	call	___flmul	;wreg free
 11473   002930  C019  F036         	movff	?___flmul,___fladd@a
 11474   002934  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 11475   002938  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 11476   00293C  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 11477   002940  EC91  F021         	call	___fladd	;wreg free
 11478   002944  C032  F16C         	movff	?___fladd,powf@p_l
 11479   002948  C033  F16D         	movff	?___fladd+1,powf@p_l+1
 11480   00294C  C034  F16E         	movff	?___fladd+2,powf@p_l+2
 11481   002950  C035  F16F         	movff	?___fladd+3,powf@p_l+3
 11482   002954  C12C  F019         	movff	powf@y1,___flmul@b
 11483   002958  C12D  F01A         	movff	powf@y1+1,___flmul@b+1
 11484   00295C  C12E  F01B         	movff	powf@y1+2,___flmul@b+2
 11485   002960  C12F  F01C         	movff	powf@y1+3,___flmul@b+3
 11486   002964  C18C  F01D         	movff	powf@t1,___flmul@a
 11487   002968  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 11488   00296C  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 11489   002970  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 11490   002974  ECF1  F023         	call	___flmul	;wreg free
 11491   002978  C019  F1A0         	movff	?___flmul,powf@p_h
 11492   00297C  C01A  F1A1         	movff	?___flmul+1,powf@p_h+1
 11493   002980  C01B  F1A2         	movff	?___flmul+2,powf@p_h+2
 11494   002984  C01C  F1A3         	movff	?___flmul+3,powf@p_h+3
 11495   002988  C1A0  F032         	movff	powf@p_h,___fladd@b
 11496   00298C  C1A1  F033         	movff	powf@p_h+1,___fladd@b+1
 11497   002990  C1A2  F034         	movff	powf@p_h+2,___fladd@b+2
 11498   002994  C1A3  F035         	movff	powf@p_h+3,___fladd@b+3
 11499   002998  C16C  F036         	movff	powf@p_l,___fladd@a
 11500   00299C  C16D  F037         	movff	powf@p_l+1,___fladd@a+1
 11501   0029A0  C16E  F038         	movff	powf@p_l+2,___fladd@a+2
 11502   0029A4  C16F  F039         	movff	powf@p_l+3,___fladd@a+3
 11503   0029A8  EC91  F021         	call	___fladd	;wreg free
 11504   0029AC  C032  F1B4         	movff	?___fladd,powf@z
 11505   0029B0  C033  F1B5         	movff	?___fladd+1,powf@z+1
 11506   0029B4  C034  F1B6         	movff	?___fladd+2,powf@z+2
 11507   0029B8  C035  F1B7         	movff	?___fladd+3,powf@z+3
 11508   0029BC  C1B4  F1A8         	movff	powf@z,powf@j
 11509   0029C0  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 11510   0029C4  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 11511   0029C8  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 11512   0029CC  0101               	movlb	1	; () banked
 11513   0029CE  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11514   0029D0  EFF6  F014         	goto	u13191
 11515   0029D4  05A8               	decf	powf@j& (0+255),w,b
 11516   0029D6  0E00               	movlw	0
 11517   0029D8  59A9               	subwfb	(powf@j+1)& (0+255),w,b
 11518   0029DA  0E00               	movlw	0
 11519   0029DC  59AA               	subwfb	(powf@j+2)& (0+255),w,b
 11520   0029DE  0E43               	movlw	67
 11521   0029E0  59AB               	subwfb	(powf@j+3)& (0+255),w,b
 11522   0029E2  A0D8               	btfss	status,0,c
 11523   0029E4  EFF6  F014         	goto	u13191
 11524   0029E8  EFF8  F014         	goto	u13190
 11525   0029EC                     u13191:
 11526   0029EC  EFFA  F014         	goto	l12637
 11527   0029F0                     u13190:
 11528   0029F0  EFD2  F00B         	goto	l12437
 11529   0029F4                     l12637:
 11530                           
 11531                           ; BSR set to: 1
 11532   0029F4  0E43               	movlw	67
 11533   0029F6  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 11534   0029F8  11A8               	iorwf	powf@j& (0+255),w,b
 11535   0029FA  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11536   0029FC  11AA               	iorwf	(powf@j+2)& (0+255),w,b
 11537   0029FE  A4D8               	btfss	status,2,c
 11538   002A00  EF04  F015         	goto	u13201
 11539   002A04  EF06  F015         	goto	u13200
 11540   002A08                     u13201:
 11541   002A08  EF45  F015         	goto	l12647
 11542   002A0C                     u13200:
 11543   002A0C                     
 11544                           ; BSR set to: 1
 11545   002A0C  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11546   002A10  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11547   002A14  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 11548   002A18  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 11549   002A1C  C1B4  F05B         	movff	powf@z,___flsub@b
 11550   002A20  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 11551   002A24  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 11552   002A28  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 11553   002A2C  EC34  F03B         	call	___flsub	;wreg free
 11554   002A30  C05B  F063         	movff	?___flsub,___flge@ff1
 11555   002A34  C05C  F064         	movff	?___flsub+1,___flge@ff1+1
 11556   002A38  C05D  F065         	movff	?___flsub+2,___flge@ff1+2
 11557   002A3C  C05E  F066         	movff	?___flsub+3,___flge@ff1+3
 11558   002A40  0E3C               	movlw	60
 11559   002A42  6E36               	movwf	___fladd@a^0,c
 11560   002A44  0EAA               	movlw	170
 11561   002A46  6E37               	movwf	(___fladd@a+1)^0,c
 11562   002A48  0E38               	movlw	56
 11563   002A4A  6E38               	movwf	(___fladd@a+2)^0,c
 11564   002A4C  0E33               	movlw	51
 11565   002A4E  6E39               	movwf	(___fladd@a+3)^0,c
 11566   002A50  C16C  F032         	movff	powf@p_l,___fladd@b
 11567   002A54  C16D  F033         	movff	powf@p_l+1,___fladd@b+1
 11568   002A58  C16E  F034         	movff	powf@p_l+2,___fladd@b+2
 11569   002A5C  C16F  F035         	movff	powf@p_l+3,___fladd@b+3
 11570   002A60  EC91  F021         	call	___fladd	;wreg free
 11571   002A64  C032  F067         	movff	?___fladd,___flge@ff2
 11572   002A68  C033  F068         	movff	?___fladd+1,___flge@ff2+1
 11573   002A6C  C034  F069         	movff	?___fladd+2,___flge@ff2+2
 11574   002A70  C035  F06A         	movff	?___fladd+3,___flge@ff2+3
 11575   002A74  ECB7  F034         	call	___flge	;wreg free
 11576   002A78  B0D8               	btfsc	status,0,c
 11577   002A7A  EF41  F015         	goto	u13211
 11578   002A7E  EF43  F015         	goto	u13210
 11579   002A82                     u13211:
 11580   002A82  EFAF  F015         	goto	l12663
 11581   002A86                     u13210:
 11582   002A86  EFD2  F00B         	goto	l12437
 11583   002A8A                     l12647:
 11584                           
 11585                           ; BSR set to: 1
 11586   002A8A  0EFF               	movlw	255
 11587   002A8C  15A8               	andwf	powf@j& (0+255),w,b
 11588   002A8E  6E77               	movwf	??_powf^0,c
 11589   002A90  0EFF               	movlw	255
 11590   002A92  15A9               	andwf	(powf@j+1)& (0+255),w,b
 11591   002A94  6E78               	movwf	(??_powf+1)^0,c
 11592   002A96  0EFF               	movlw	255
 11593   002A98  15AA               	andwf	(powf@j+2)& (0+255),w,b
 11594   002A9A  6E79               	movwf	(??_powf+2)^0,c
 11595   002A9C  0E7F               	movlw	127
 11596   002A9E  15AB               	andwf	(powf@j+3)& (0+255),w,b
 11597   002AA0  6E7A               	movwf	(??_powf+3)^0,c
 11598   002AA2  BE7A               	btfsc	(??_powf+3)^0,7,c
 11599   002AA4  EF60  F015         	goto	u13221
 11600   002AA8  0477               	decf	??_powf^0,w,c
 11601   002AAA  0E00               	movlw	0
 11602   002AAC  5878               	subwfb	(??_powf+1)^0,w,c
 11603   002AAE  0E16               	movlw	22
 11604   002AB0  5879               	subwfb	(??_powf+2)^0,w,c
 11605   002AB2  0E43               	movlw	67
 11606   002AB4  587A               	subwfb	(??_powf+3)^0,w,c
 11607   002AB6  A0D8               	btfss	status,0,c
 11608   002AB8  EF60  F015         	goto	u13221
 11609   002ABC  EF62  F015         	goto	u13220
 11610   002AC0                     u13221:
 11611   002AC0  EF6C  F015         	goto	l12655
 11612   002AC4                     u13220:
 11613   002AC4                     
 11614                           ; BSR set to: 1
 11615   002AC4  0E00               	movlw	0
 11616   002AC6  6E6F               	movwf	?_powf^0,c
 11617   002AC8  0E00               	movlw	0
 11618   002ACA  6E70               	movwf	(?_powf+1)^0,c
 11619   002ACC  0E00               	movlw	0
 11620   002ACE  6E71               	movwf	(?_powf+2)^0,c
 11621   002AD0  0E00               	movlw	0
 11622   002AD2  6E72               	movwf	(?_powf+3)^0,c
 11623   002AD4  EF06  F01A         	goto	l1638
 11624   002AD8                     l12655:
 11625                           
 11626                           ; BSR set to: 1
 11627   002AD8  0E16               	movlw	22
 11628   002ADA  19AA               	xorwf	(powf@j+2)& (0+255),w,b
 11629   002ADC  E109               	bnz	u13231
 11630   002ADE  0EC3               	movlw	195
 11631   002AE0  19AB               	xorwf	(powf@j+3)& (0+255),w,b
 11632   002AE2  11A8               	iorwf	powf@j& (0+255),w,b
 11633   002AE4  11A9               	iorwf	(powf@j+1)& (0+255),w,b
 11634   002AE6  A4D8               	btfss	status,2,c
 11635   002AE8  EF78  F015         	goto	u13231
 11636   002AEC  EF7A  F015         	goto	u13230
 11637   002AF0                     u13231:
 11638   002AF0  EFAF  F015         	goto	l12663
 11639   002AF4                     u13230:
 11640   002AF4                     
 11641                           ; BSR set to: 1
 11642   002AF4  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11643   002AF8  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11644   002AFC  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 11645   002B00  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 11646   002B04  C1B4  F05B         	movff	powf@z,___flsub@b
 11647   002B08  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 11648   002B0C  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 11649   002B10  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 11650   002B14  EC34  F03B         	call	___flsub	;wreg free
 11651   002B18  C05B  F063         	movff	?___flsub,___flge@ff1
 11652   002B1C  C05C  F064         	movff	?___flsub+1,___flge@ff1+1
 11653   002B20  C05D  F065         	movff	?___flsub+2,___flge@ff1+2
 11654   002B24  C05E  F066         	movff	?___flsub+3,___flge@ff1+3
 11655   002B28  C16C  F067         	movff	powf@p_l,___flge@ff2
 11656   002B2C  C16D  F068         	movff	powf@p_l+1,___flge@ff2+1
 11657   002B30  C16E  F069         	movff	powf@p_l+2,___flge@ff2+2
 11658   002B34  C16F  F06A         	movff	powf@p_l+3,___flge@ff2+3
 11659   002B38  ECB7  F034         	call	___flge	;wreg free
 11660   002B3C  A0D8               	btfss	status,0,c
 11661   002B3E  EFA3  F015         	goto	u13241
 11662   002B42  EFA5  F015         	goto	u13240
 11663   002B46                     u13241:
 11664   002B46  EFAF  F015         	goto	l12663
 11665   002B4A                     u13240:
 11666   002B4A  0E00               	movlw	0
 11667   002B4C  6E6F               	movwf	?_powf^0,c
 11668   002B4E  0E00               	movlw	0
 11669   002B50  6E70               	movwf	(?_powf+1)^0,c
 11670   002B52  0E00               	movlw	0
 11671   002B54  6E71               	movwf	(?_powf+2)^0,c
 11672   002B56  0E00               	movlw	0
 11673   002B58  6E72               	movwf	(?_powf+3)^0,c
 11674   002B5A  EF06  F01A         	goto	l1638
 11675   002B5E                     l12663:
 11676   002B5E  0EFF               	movlw	255
 11677   002B60  0101               	movlb	1	; () banked
 11678   002B62  15A8               	andwf	powf@j& (0+255),w,b
 11679   002B64  6F28               	movwf	powf@i& (0+255),b
 11680   002B66  0EFF               	movlw	255
 11681   002B68  15A9               	andwf	(powf@j+1)& (0+255),w,b
 11682   002B6A  6F29               	movwf	(powf@i+1)& (0+255),b
 11683   002B6C  0EFF               	movlw	255
 11684   002B6E  15AA               	andwf	(powf@j+2)& (0+255),w,b
 11685   002B70  6F2A               	movwf	(powf@i+2)& (0+255),b
 11686   002B72  0E7F               	movlw	127
 11687   002B74  15AB               	andwf	(powf@j+3)& (0+255),w,b
 11688   002B76  6F2B               	movwf	(powf@i+3)& (0+255),b
 11689   002B78  0E17               	movlw	23
 11690   002B7A  6E77               	movwf	??_powf^0,c
 11691   002B7C  C128  F078         	movff	powf@i,??_powf+1
 11692   002B80  C129  F079         	movff	powf@i+1,??_powf+2
 11693   002B84  C12A  F07A         	movff	powf@i+2,??_powf+3
 11694   002B88  C12B  F07B         	movff	powf@i+3,??_powf+4
 11695   002B8C                     u13255:
 11696   002B8C  6677               	tstfsz	??_powf^0,c
 11697   002B8E  EFCB  F015         	goto	u13256
 11698   002B92  EFD3  F015         	goto	u13257
 11699   002B96                     u13256:
 11700   002B96  347B               	rlcf	(??_powf+4)^0,w,c
 11701   002B98  327B               	rrcf	(??_powf+4)^0,f,c
 11702   002B9A  327A               	rrcf	(??_powf+3)^0,f,c
 11703   002B9C  3279               	rrcf	(??_powf+2)^0,f,c
 11704   002B9E  3278               	rrcf	(??_powf+1)^0,f,c
 11705   002BA0  2E77               	decfsz	??_powf^0,f,c
 11706   002BA2  EFC6  F015         	goto	u13255
 11707   002BA6                     u13257:
 11708   002BA6  0E81               	movlw	129
 11709   002BA8  2478               	addwf	(??_powf+1)^0,w,c
 11710   002BAA  0101               	movlb	1	; () banked
 11711   002BAC  6FA4               	movwf	powf@k& (0+255),b
 11712   002BAE  0EFF               	movlw	255
 11713   002BB0  2079               	addwfc	(??_powf+2)^0,w,c
 11714   002BB2  6FA5               	movwf	(powf@k+1)& (0+255),b
 11715   002BB4  0EFF               	movlw	255
 11716   002BB6  207A               	addwfc	(??_powf+3)^0,w,c
 11717   002BB8  6FA6               	movwf	(powf@k+2)& (0+255),b
 11718   002BBA  0EFF               	movlw	255
 11719   002BBC  207B               	addwfc	(??_powf+4)^0,w,c
 11720   002BBE  6FA7               	movwf	(powf@k+3)& (0+255),b
 11721   002BC0                     
 11722                           ; BSR set to: 1
 11723   002BC0  0E00               	movlw	0
 11724   002BC2  6F88               	movwf	powf@n& (0+255),b
 11725   002BC4  0E00               	movlw	0
 11726   002BC6  6F89               	movwf	(powf@n+1)& (0+255),b
 11727   002BC8  0E00               	movlw	0
 11728   002BCA  6F8A               	movwf	(powf@n+2)& (0+255),b
 11729   002BCC  0E00               	movlw	0
 11730   002BCE  6F8B               	movwf	(powf@n+3)& (0+255),b
 11731   002BD0                     
 11732                           ; BSR set to: 1
 11733   002BD0  BF2B               	btfsc	(powf@i+3)& (0+255),7,b
 11734   002BD2  EFF7  F015         	goto	u13261
 11735   002BD6  0528               	decf	powf@i& (0+255),w,b
 11736   002BD8  0E00               	movlw	0
 11737   002BDA  5929               	subwfb	(powf@i+1)& (0+255),w,b
 11738   002BDC  0E00               	movlw	0
 11739   002BDE  592A               	subwfb	(powf@i+2)& (0+255),w,b
 11740   002BE0  0E3F               	movlw	63
 11741   002BE2  592B               	subwfb	(powf@i+3)& (0+255),w,b
 11742   002BE4  A0D8               	btfss	status,0,c
 11743   002BE6  EFF7  F015         	goto	u13261
 11744   002BEA  EFF9  F015         	goto	u13260
 11745   002BEE                     u13261:
 11746   002BEE  EFD1  F016         	goto	l12675
 11747   002BF2                     u13260:
 11748   002BF2                     
 11749                           ; BSR set to: 1
 11750   002BF2  C1A4  F077         	movff	powf@k,??_powf
 11751   002BF6  0E01               	movlw	1
 11752   002BF8  2677               	addwf	??_powf^0,f,c
 11753   002BFA  0E00               	movlw	0
 11754   002BFC  6E78               	movwf	(??_powf+1)^0,c
 11755   002BFE  0E00               	movlw	0
 11756   002C00  6E79               	movwf	(??_powf+2)^0,c
 11757   002C02  0E80               	movlw	128
 11758   002C04  6E7A               	movwf	(??_powf+3)^0,c
 11759   002C06  0E00               	movlw	0
 11760   002C08  6E7B               	movwf	(??_powf+4)^0,c
 11761   002C0A                     u13275:
 11762   002C0A  6677               	tstfsz	??_powf^0,c
 11763   002C0C  EF0A  F016         	goto	u13276
 11764   002C10  EF12  F016         	goto	u13277
 11765   002C14                     u13276:
 11766   002C14  347B               	rlcf	(??_powf+4)^0,w,c
 11767   002C16  327B               	rrcf	(??_powf+4)^0,f,c
 11768   002C18  327A               	rrcf	(??_powf+3)^0,f,c
 11769   002C1A  3279               	rrcf	(??_powf+2)^0,f,c
 11770   002C1C  3278               	rrcf	(??_powf+1)^0,f,c
 11771   002C1E  2E77               	decfsz	??_powf^0,f,c
 11772   002C20  EF05  F016         	goto	u13275
 11773   002C24                     u13277:
 11774   002C24  0101               	movlb	1	; () banked
 11775   002C26  51A8               	movf	powf@j& (0+255),w,b
 11776   002C28  2478               	addwf	(??_powf+1)^0,w,c
 11777   002C2A  6F88               	movwf	powf@n& (0+255),b
 11778   002C2C  51A9               	movf	(powf@j+1)& (0+255),w,b
 11779   002C2E  2079               	addwfc	(??_powf+2)^0,w,c
 11780   002C30  6F89               	movwf	(powf@n+1)& (0+255),b
 11781   002C32  51AA               	movf	(powf@j+2)& (0+255),w,b
 11782   002C34  207A               	addwfc	(??_powf+3)^0,w,c
 11783   002C36  6F8A               	movwf	(powf@n+2)& (0+255),b
 11784   002C38  51AB               	movf	(powf@j+3)& (0+255),w,b
 11785   002C3A  207B               	addwfc	(??_powf+4)^0,w,c
 11786   002C3C  6F8B               	movwf	(powf@n+3)& (0+255),b
 11787   002C3E  0E81               	movlw	129
 11788   002C40  6E77               	movwf	??_powf^0,c
 11789   002C42  0EFF               	movlw	255
 11790   002C44  6E78               	movwf	(??_powf+1)^0,c
 11791   002C46  0EFF               	movlw	255
 11792   002C48  6E79               	movwf	(??_powf+2)^0,c
 11793   002C4A  0EFF               	movlw	255
 11794   002C4C  6E7A               	movwf	(??_powf+3)^0,c
 11795   002C4E  0E17               	movlw	23
 11796   002C50  6E7B               	movwf	(??_powf+4)^0,c
 11797   002C52  C188  F07C         	movff	powf@n,??_powf+5
 11798   002C56  C189  F07D         	movff	powf@n+1,??_powf+6
 11799   002C5A  C18A  F07E         	movff	powf@n+2,??_powf+7
 11800   002C5E  C18B  F07F         	movff	powf@n+3,??_powf+8
 11801   002C62                     u13285:
 11802   002C62  667B               	tstfsz	(??_powf+4)^0,c
 11803   002C64  EF36  F016         	goto	u13286
 11804   002C68  EF3E  F016         	goto	u13287
 11805   002C6C                     u13286:
 11806   002C6C  347F               	rlcf	(??_powf+8)^0,w,c
 11807   002C6E  327F               	rrcf	(??_powf+8)^0,f,c
 11808   002C70  327E               	rrcf	(??_powf+7)^0,f,c
 11809   002C72  327D               	rrcf	(??_powf+6)^0,f,c
 11810   002C74  327C               	rrcf	(??_powf+5)^0,f,c
 11811   002C76  2E7B               	decfsz	(??_powf+4)^0,f,c
 11812   002C78  EF31  F016         	goto	u13285
 11813   002C7C                     u13287:
 11814   002C7C  507C               	movf	(??_powf+5)^0,w,c
 11815   002C7E  2477               	addwf	??_powf^0,w,c
 11816   002C80  0101               	movlb	1	; () banked
 11817   002C82  6FA4               	movwf	powf@k& (0+255),b
 11818   002C84  0E00               	movlw	0
 11819   002C86  2078               	addwfc	(??_powf+1)^0,w,c
 11820   002C88  6FA5               	movwf	(powf@k+1)& (0+255),b
 11821   002C8A  0E00               	movlw	0
 11822   002C8C  2079               	addwfc	(??_powf+2)^0,w,c
 11823   002C8E  6FA6               	movwf	(powf@k+2)& (0+255),b
 11824   002C90  0E00               	movlw	0
 11825   002C92  207A               	addwfc	(??_powf+3)^0,w,c
 11826   002C94  6FA7               	movwf	(powf@k+3)& (0+255),b
 11827   002C96  C1A4  F077         	movff	powf@k,??_powf
 11828   002C9A  0EFF               	movlw	255
 11829   002C9C  6E78               	movwf	(??_powf+1)^0,c
 11830   002C9E  0EFF               	movlw	255
 11831   002CA0  6E79               	movwf	(??_powf+2)^0,c
 11832   002CA2  0E7F               	movlw	127
 11833   002CA4  6E7A               	movwf	(??_powf+3)^0,c
 11834   002CA6  0E00               	movlw	0
 11835   002CA8  6E7B               	movwf	(??_powf+4)^0,c
 11836   002CAA                     u13295:
 11837   002CAA  6677               	tstfsz	??_powf^0,c
 11838   002CAC  EF5A  F016         	goto	u13296
 11839   002CB0  EF62  F016         	goto	u13297
 11840   002CB4                     u13296:
 11841   002CB4  347B               	rlcf	(??_powf+4)^0,w,c
 11842   002CB6  327B               	rrcf	(??_powf+4)^0,f,c
 11843   002CB8  327A               	rrcf	(??_powf+3)^0,f,c
 11844   002CBA  3279               	rrcf	(??_powf+2)^0,f,c
 11845   002CBC  3278               	rrcf	(??_powf+1)^0,f,c
 11846   002CBE  2E77               	decfsz	??_powf^0,f,c
 11847   002CC0  EF55  F016         	goto	u13295
 11848   002CC4                     u13297:
 11849   002CC4  1C78               	comf	(??_powf+1)^0,w,c
 11850   002CC6  6E7C               	movwf	(??_powf+5)^0,c
 11851   002CC8  1C79               	comf	(??_powf+2)^0,w,c
 11852   002CCA  6E7D               	movwf	(??_powf+6)^0,c
 11853   002CCC  1C7A               	comf	(??_powf+3)^0,w,c
 11854   002CCE  6E7E               	movwf	(??_powf+7)^0,c
 11855   002CD0  1C7B               	comf	(??_powf+4)^0,w,c
 11856   002CD2  6E7F               	movwf	(??_powf+8)^0,c
 11857   002CD4  0101               	movlb	1	; () banked
 11858   002CD6  5188               	movf	powf@n& (0+255),w,b
 11859   002CD8  147C               	andwf	(??_powf+5)^0,w,c
 11860   002CDA  6FB0               	movwf	powf@t& (0+255),b
 11861   002CDC  5189               	movf	(powf@n+1)& (0+255),w,b
 11862   002CDE  147D               	andwf	(??_powf+6)^0,w,c
 11863   002CE0  6FB1               	movwf	(powf@t+1)& (0+255),b
 11864   002CE2  518A               	movf	(powf@n+2)& (0+255),w,b
 11865   002CE4  147E               	andwf	(??_powf+7)^0,w,c
 11866   002CE6  6FB2               	movwf	(powf@t+2)& (0+255),b
 11867   002CE8  518B               	movf	(powf@n+3)& (0+255),w,b
 11868   002CEA  147F               	andwf	(??_powf+8)^0,w,c
 11869   002CEC  6FB3               	movwf	(powf@t+3)& (0+255),b
 11870   002CEE  51A4               	movf	powf@k& (0+255),w,b
 11871   002CF0  0817               	sublw	23
 11872   002CF2  6E77               	movwf	??_powf^0,c
 11873   002CF4  0EFF               	movlw	255
 11874   002CF6  1588               	andwf	powf@n& (0+255),w,b
 11875   002CF8  6E78               	movwf	(??_powf+1)^0,c
 11876   002CFA  0EFF               	movlw	255
 11877   002CFC  1589               	andwf	(powf@n+1)& (0+255),w,b
 11878   002CFE  6E79               	movwf	(??_powf+2)^0,c
 11879   002D00  0E7F               	movlw	127
 11880   002D02  158A               	andwf	(powf@n+2)& (0+255),w,b
 11881   002D04  6E7A               	movwf	(??_powf+3)^0,c
 11882   002D06  0E00               	movlw	0
 11883   002D08  158B               	andwf	(powf@n+3)& (0+255),w,b
 11884   002D0A  6E7B               	movwf	(??_powf+4)^0,c
 11885   002D0C  0E00               	movlw	0
 11886   002D0E  1078               	iorwf	(??_powf+1)^0,w,c
 11887   002D10  6E7C               	movwf	(??_powf+5)^0,c
 11888   002D12  0E00               	movlw	0
 11889   002D14  1079               	iorwf	(??_powf+2)^0,w,c
 11890   002D16  6E7D               	movwf	(??_powf+6)^0,c
 11891   002D18  0E80               	movlw	128
 11892   002D1A  107A               	iorwf	(??_powf+3)^0,w,c
 11893   002D1C  6E7E               	movwf	(??_powf+7)^0,c
 11894   002D1E  0E00               	movlw	0
 11895   002D20  107B               	iorwf	(??_powf+4)^0,w,c
 11896   002D22  6E7F               	movwf	(??_powf+8)^0,c
 11897   002D24                     u13305:
 11898   002D24  6677               	tstfsz	??_powf^0,c
 11899   002D26  EF97  F016         	goto	u13306
 11900   002D2A  EF9F  F016         	goto	u13307
 11901   002D2E                     u13306:
 11902   002D2E  347F               	rlcf	(??_powf+8)^0,w,c
 11903   002D30  327F               	rrcf	(??_powf+8)^0,f,c
 11904   002D32  327E               	rrcf	(??_powf+7)^0,f,c
 11905   002D34  327D               	rrcf	(??_powf+6)^0,f,c
 11906   002D36  327C               	rrcf	(??_powf+5)^0,f,c
 11907   002D38  2E77               	decfsz	??_powf^0,f,c
 11908   002D3A  EF92  F016         	goto	u13305
 11909   002D3E                     u13307:
 11910   002D3E  C07C  F188         	movff	??_powf+5,powf@n
 11911   002D42  C07D  F189         	movff	??_powf+6,powf@n+1
 11912   002D46  C07E  F18A         	movff	??_powf+7,powf@n+2
 11913   002D4A  C07F  F18B         	movff	??_powf+8,powf@n+3
 11914   002D4E  0101               	movlb	1	; () banked
 11915   002D50  BFAB               	btfsc	(powf@j+3)& (0+255),7,b
 11916   002D52  EFAF  F016         	goto	u13310
 11917   002D56  EFAD  F016         	goto	u13311
 11918   002D5A                     u13311:
 11919   002D5A  EFB7  F016         	goto	l12673
 11920   002D5E                     u13310:
 11921   002D5E                     
 11922                           ; BSR set to: 1
 11923   002D5E  1F8B               	comf	(powf@n+3)& (0+255),f,b
 11924   002D60  1F8A               	comf	(powf@n+2)& (0+255),f,b
 11925   002D62  1F89               	comf	(powf@n+1)& (0+255),f,b
 11926   002D64  6D88               	negf	powf@n& (0+255),b
 11927   002D66  0E00               	movlw	0
 11928   002D68  2389               	addwfc	(powf@n+1)& (0+255),f,b
 11929   002D6A  238A               	addwfc	(powf@n+2)& (0+255),f,b
 11930   002D6C  238B               	addwfc	(powf@n+3)& (0+255),f,b
 11931   002D6E                     l12673:
 11932                           
 11933                           ; BSR set to: 1
 11934   002D6E  C1A0  F05B         	movff	powf@p_h,___flsub@b
 11935   002D72  C1A1  F05C         	movff	powf@p_h+1,___flsub@b+1
 11936   002D76  C1A2  F05D         	movff	powf@p_h+2,___flsub@b+2
 11937   002D7A  C1A3  F05E         	movff	powf@p_h+3,___flsub@b+3
 11938   002D7E  C1B0  F05F         	movff	powf@t,___flsub@a
 11939   002D82  C1B1  F060         	movff	powf@t+1,___flsub@a+1
 11940   002D86  C1B2  F061         	movff	powf@t+2,___flsub@a+2
 11941   002D8A  C1B3  F062         	movff	powf@t+3,___flsub@a+3
 11942   002D8E  EC34  F03B         	call	___flsub	;wreg free
 11943   002D92  C05B  F1A0         	movff	?___flsub,powf@p_h
 11944   002D96  C05C  F1A1         	movff	?___flsub+1,powf@p_h+1
 11945   002D9A  C05D  F1A2         	movff	?___flsub+2,powf@p_h+2
 11946   002D9E  C05E  F1A3         	movff	?___flsub+3,powf@p_h+3
 11947   002DA2                     l12675:
 11948   002DA2  C1A0  F032         	movff	powf@p_h,___fladd@b
 11949   002DA6  C1A1  F033         	movff	powf@p_h+1,___fladd@b+1
 11950   002DAA  C1A2  F034         	movff	powf@p_h+2,___fladd@b+2
 11951   002DAE  C1A3  F035         	movff	powf@p_h+3,___fladd@b+3
 11952   002DB2  C16C  F036         	movff	powf@p_l,___fladd@a
 11953   002DB6  C16D  F037         	movff	powf@p_l+1,___fladd@a+1
 11954   002DBA  C16E  F038         	movff	powf@p_l+2,___fladd@a+2
 11955   002DBE  C16F  F039         	movff	powf@p_l+3,___fladd@a+3
 11956   002DC2  EC91  F021         	call	___fladd	;wreg free
 11957   002DC6  C032  F1B0         	movff	?___fladd,powf@t
 11958   002DCA  C033  F1B1         	movff	?___fladd+1,powf@t+1
 11959   002DCE  C034  F1B2         	movff	?___fladd+2,powf@t+2
 11960   002DD2  C035  F1B3         	movff	?___fladd+3,powf@t+3
 11961   002DD6  C1B0  F198         	movff	powf@t,powf@is
 11962   002DDA  C1B1  F199         	movff	powf@t+1,powf@is+1
 11963   002DDE  C1B2  F19A         	movff	powf@t+2,powf@is+2
 11964   002DE2  C1B3  F19B         	movff	powf@t+3,powf@is+3
 11965   002DE6  0E00               	movlw	0
 11966   002DE8  0101               	movlb	1	; () banked
 11967   002DEA  1598               	andwf	powf@is& (0+255),w,b
 11968   002DEC  6FB0               	movwf	powf@t& (0+255),b
 11969   002DEE  0E80               	movlw	128
 11970   002DF0  1599               	andwf	(powf@is+1)& (0+255),w,b
 11971   002DF2  6FB1               	movwf	(powf@t+1)& (0+255),b
 11972   002DF4  0EFF               	movlw	255
 11973   002DF6  159A               	andwf	(powf@is+2)& (0+255),w,b
 11974   002DF8  6FB2               	movwf	(powf@t+2)& (0+255),b
 11975   002DFA  0EFF               	movlw	255
 11976   002DFC  159B               	andwf	(powf@is+3)& (0+255),w,b
 11977   002DFE  6FB3               	movwf	(powf@t+3)& (0+255),b
 11978   002E00                     
 11979                           ; BSR set to: 1
 11980   002E00  C1B0  F019         	movff	powf@t,___flmul@b
 11981   002E04  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 11982   002E08  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 11983   002E0C  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 11984   002E10  0E00               	movlw	0
 11985   002E12  6E1D               	movwf	___flmul@a^0,c
 11986   002E14  0E72               	movlw	114
 11987   002E16  6E1E               	movwf	(___flmul@a+1)^0,c
 11988   002E18  0E31               	movlw	49
 11989   002E1A  6E1F               	movwf	(___flmul@a+2)^0,c
 11990   002E1C  0E3F               	movlw	63
 11991   002E1E  6E20               	movwf	(___flmul@a+3)^0,c
 11992   002E20  ECF1  F023         	call	___flmul	;wreg free
 11993   002E24  C019  F17C         	movff	?___flmul,powf@u
 11994   002E28  C01A  F17D         	movff	?___flmul+1,powf@u+1
 11995   002E2C  C01B  F17E         	movff	?___flmul+2,powf@u+2
 11996   002E30  C01C  F17F         	movff	?___flmul+3,powf@u+3
 11997   002E34  C1A0  F05F         	movff	powf@p_h,___flsub@a
 11998   002E38  C1A1  F060         	movff	powf@p_h+1,___flsub@a+1
 11999   002E3C  C1A2  F061         	movff	powf@p_h+2,___flsub@a+2
 12000   002E40  C1A3  F062         	movff	powf@p_h+3,___flsub@a+3
 12001   002E44  C1B0  F05B         	movff	powf@t,___flsub@b
 12002   002E48  C1B1  F05C         	movff	powf@t+1,___flsub@b+1
 12003   002E4C  C1B2  F05D         	movff	powf@t+2,___flsub@b+2
 12004   002E50  C1B3  F05E         	movff	powf@t+3,___flsub@b+3
 12005   002E54  EC34  F03B         	call	___flsub	;wreg free
 12006   002E58  C05B  F19C         	movff	?___flsub,_powf$2098
 12007   002E5C  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 12008   002E60  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 12009   002E64  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 12010   002E68  0E18               	movlw	24
 12011   002E6A  6E1D               	movwf	___flmul@a^0,c
 12012   002E6C  0E72               	movlw	114
 12013   002E6E  6E1E               	movwf	(___flmul@a+1)^0,c
 12014   002E70  0E31               	movlw	49
 12015   002E72  6E1F               	movwf	(___flmul@a+2)^0,c
 12016   002E74  0E3F               	movlw	63
 12017   002E76  6E20               	movwf	(___flmul@a+3)^0,c
 12018   002E78  C19C  F05F         	movff	_powf$2098,___flsub@a
 12019   002E7C  C19D  F060         	movff	_powf$2098+1,___flsub@a+1
 12020   002E80  C19E  F061         	movff	_powf$2098+2,___flsub@a+2
 12021   002E84  C19F  F062         	movff	_powf$2098+3,___flsub@a+3
 12022   002E88  C16C  F05B         	movff	powf@p_l,___flsub@b
 12023   002E8C  C16D  F05C         	movff	powf@p_l+1,___flsub@b+1
 12024   002E90  C16E  F05D         	movff	powf@p_l+2,___flsub@b+2
 12025   002E94  C16F  F05E         	movff	powf@p_l+3,___flsub@b+3
 12026   002E98  EC34  F03B         	call	___flsub	;wreg free
 12027   002E9C  C05B  F019         	movff	?___flsub,___flmul@b
 12028   002EA0  C05C  F01A         	movff	?___flsub+1,___flmul@b+1
 12029   002EA4  C05D  F01B         	movff	?___flsub+2,___flmul@b+2
 12030   002EA8  C05E  F01C         	movff	?___flsub+3,___flmul@b+3
 12031   002EAC  ECF1  F023         	call	___flmul	;wreg free
 12032   002EB0  C019  F114         	movff	?___flmul,_powf$2108
 12033   002EB4  C01A  F115         	movff	?___flmul+1,_powf$2108+1
 12034   002EB8  C01B  F116         	movff	?___flmul+2,_powf$2108+2
 12035   002EBC  C01C  F117         	movff	?___flmul+3,_powf$2108+3
 12036   002EC0  C114  F032         	movff	_powf$2108,___fladd@b
 12037   002EC4  C115  F033         	movff	_powf$2108+1,___fladd@b+1
 12038   002EC8  C116  F034         	movff	_powf$2108+2,___fladd@b+2
 12039   002ECC  C117  F035         	movff	_powf$2108+3,___fladd@b+3
 12040   002ED0  0E8C               	movlw	140
 12041   002ED2  6E1D               	movwf	___flmul@a^0,c
 12042   002ED4  0EBE               	movlw	190
 12043   002ED6  6E1E               	movwf	(___flmul@a+1)^0,c
 12044   002ED8  0EBF               	movlw	191
 12045   002EDA  6E1F               	movwf	(___flmul@a+2)^0,c
 12046   002EDC  0E35               	movlw	53
 12047   002EDE  6E20               	movwf	(___flmul@a+3)^0,c
 12048   002EE0  C1B0  F019         	movff	powf@t,___flmul@b
 12049   002EE4  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 12050   002EE8  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 12051   002EEC  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 12052   002EF0  ECF1  F023         	call	___flmul	;wreg free
 12053   002EF4  C019  F036         	movff	?___flmul,___fladd@a
 12054   002EF8  C01A  F037         	movff	?___flmul+1,___fladd@a+1
 12055   002EFC  C01B  F038         	movff	?___flmul+2,___fladd@a+2
 12056   002F00  C01C  F039         	movff	?___flmul+3,___fladd@a+3
 12057   002F04  EC91  F021         	call	___fladd	;wreg free
 12058   002F08  C032  F180         	movff	?___fladd,powf@v
 12059   002F0C  C033  F181         	movff	?___fladd+1,powf@v+1
 12060   002F10  C034  F182         	movff	?___fladd+2,powf@v+2
 12061   002F14  C035  F183         	movff	?___fladd+3,powf@v+3
 12062   002F18  C17C  F032         	movff	powf@u,___fladd@b
 12063   002F1C  C17D  F033         	movff	powf@u+1,___fladd@b+1
 12064   002F20  C17E  F034         	movff	powf@u+2,___fladd@b+2
 12065   002F24  C17F  F035         	movff	powf@u+3,___fladd@b+3
 12066   002F28  C180  F036         	movff	powf@v,___fladd@a
 12067   002F2C  C181  F037         	movff	powf@v+1,___fladd@a+1
 12068   002F30  C182  F038         	movff	powf@v+2,___fladd@a+2
 12069   002F34  C183  F039         	movff	powf@v+3,___fladd@a+3
 12070   002F38  EC91  F021         	call	___fladd	;wreg free
 12071   002F3C  C032  F1B4         	movff	?___fladd,powf@z
 12072   002F40  C033  F1B5         	movff	?___fladd+1,powf@z+1
 12073   002F44  C034  F1B6         	movff	?___fladd+2,powf@z+2
 12074   002F48  C035  F1B7         	movff	?___fladd+3,powf@z+3
 12075   002F4C  C17C  F05F         	movff	powf@u,___flsub@a
 12076   002F50  C17D  F060         	movff	powf@u+1,___flsub@a+1
 12077   002F54  C17E  F061         	movff	powf@u+2,___flsub@a+2
 12078   002F58  C17F  F062         	movff	powf@u+3,___flsub@a+3
 12079   002F5C  C1B4  F05B         	movff	powf@z,___flsub@b
 12080   002F60  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 12081   002F64  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 12082   002F68  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 12083   002F6C  EC34  F03B         	call	___flsub	;wreg free
 12084   002F70  C05B  F19C         	movff	?___flsub,_powf$2098
 12085   002F74  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 12086   002F78  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 12087   002F7C  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 12088   002F80  C180  F05B         	movff	powf@v,___flsub@b
 12089   002F84  C181  F05C         	movff	powf@v+1,___flsub@b+1
 12090   002F88  C182  F05D         	movff	powf@v+2,___flsub@b+2
 12091   002F8C  C183  F05E         	movff	powf@v+3,___flsub@b+3
 12092   002F90  C19C  F05F         	movff	_powf$2098,___flsub@a
 12093   002F94  C19D  F060         	movff	_powf$2098+1,___flsub@a+1
 12094   002F98  C19E  F061         	movff	_powf$2098+2,___flsub@a+2
 12095   002F9C  C19F  F062         	movff	_powf$2098+3,___flsub@a+3
 12096   002FA0  EC34  F03B         	call	___flsub	;wreg free
 12097   002FA4  C05B  F144         	movff	?___flsub,powf@w
 12098   002FA8  C05C  F145         	movff	?___flsub+1,powf@w+1
 12099   002FAC  C05D  F146         	movff	?___flsub+2,powf@w+2
 12100   002FB0  C05E  F147         	movff	?___flsub+3,powf@w+3
 12101   002FB4  C1B4  F019         	movff	powf@z,___flmul@b
 12102   002FB8  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12103   002FBC  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12104   002FC0  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12105   002FC4  C1B4  F01D         	movff	powf@z,___flmul@a
 12106   002FC8  C1B5  F01E         	movff	powf@z+1,___flmul@a+1
 12107   002FCC  C1B6  F01F         	movff	powf@z+2,___flmul@a+2
 12108   002FD0  C1B7  F020         	movff	powf@z+3,___flmul@a+3
 12109   002FD4  ECF1  F023         	call	___flmul	;wreg free
 12110   002FD8  C019  F1B0         	movff	?___flmul,powf@t
 12111   002FDC  C01A  F1B1         	movff	?___flmul+1,powf@t+1
 12112   002FE0  C01B  F1B2         	movff	?___flmul+2,powf@t+2
 12113   002FE4  C01C  F1B3         	movff	?___flmul+3,powf@t+3
 12114   002FE8  0E0E               	movlw	14
 12115   002FEA  6E36               	movwf	___fladd@a^0,c
 12116   002FEC  0EEA               	movlw	234
 12117   002FEE  6E37               	movwf	(___fladd@a+1)^0,c
 12118   002FF0  0EDD               	movlw	221
 12119   002FF2  6E38               	movwf	(___fladd@a+2)^0,c
 12120   002FF4  0EB5               	movlw	181
 12121   002FF6  6E39               	movwf	(___fladd@a+3)^0,c
 12122   002FF8  0E4C               	movlw	76
 12123   002FFA  6E1D               	movwf	___flmul@a^0,c
 12124   002FFC  0EBB               	movlw	187
 12125   002FFE  6E1E               	movwf	(___flmul@a+1)^0,c
 12126   003000  0E31               	movlw	49
 12127   003002  6E1F               	movwf	(___flmul@a+2)^0,c
 12128   003004  0E33               	movlw	51
 12129   003006  6E20               	movwf	(___flmul@a+3)^0,c
 12130   003008  C1B0  F019         	movff	powf@t,___flmul@b
 12131   00300C  C1B1  F01A         	movff	powf@t+1,___flmul@b+1
 12132   003010  C1B2  F01B         	movff	powf@t+2,___flmul@b+2
 12133   003014  C1B3  F01C         	movff	powf@t+3,___flmul@b+3
 12134   003018  ECF1  F023         	call	___flmul	;wreg free
 12135   00301C  C019  F032         	movff	?___flmul,___fladd@b
 12136   003020  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12137   003024  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12138   003028  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12139   00302C  EC91  F021         	call	___fladd	;wreg free
 12140   003030  C032  F148         	movff	?___fladd,_powf$2095
 12141   003034  C033  F149         	movff	?___fladd+1,_powf$2095+1
 12142   003038  C034  F14A         	movff	?___fladd+2,_powf$2095+2
 12143   00303C  C035  F14B         	movff	?___fladd+3,_powf$2095+3
 12144   003040  0E55               	movlw	85
 12145   003042  6E36               	movwf	___fladd@a^0,c
 12146   003044  0EB3               	movlw	179
 12147   003046  6E37               	movwf	(___fladd@a+1)^0,c
 12148   003048  0E8A               	movlw	138
 12149   00304A  6E38               	movwf	(___fladd@a+2)^0,c
 12150   00304C  0E38               	movlw	56
 12151   00304E  6E39               	movwf	(___fladd@a+3)^0,c
 12152   003050  C1B0  F01D         	movff	powf@t,___flmul@a
 12153   003054  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12154   003058  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12155   00305C  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12156   003060  C148  F019         	movff	_powf$2095,___flmul@b
 12157   003064  C149  F01A         	movff	_powf$2095+1,___flmul@b+1
 12158   003068  C14A  F01B         	movff	_powf$2095+2,___flmul@b+2
 12159   00306C  C14B  F01C         	movff	_powf$2095+3,___flmul@b+3
 12160   003070  ECF1  F023         	call	___flmul	;wreg free
 12161   003074  C019  F032         	movff	?___flmul,___fladd@b
 12162   003078  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12163   00307C  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12164   003080  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12165   003084  EC91  F021         	call	___fladd	;wreg free
 12166   003088  C032  F15C         	movff	?___fladd,_powf$2096
 12167   00308C  C033  F15D         	movff	?___fladd+1,_powf$2096+1
 12168   003090  C034  F15E         	movff	?___fladd+2,_powf$2096+2
 12169   003094  C035  F15F         	movff	?___fladd+3,_powf$2096+3
 12170   003098  0E61               	movlw	97
 12171   00309A  6E36               	movwf	___fladd@a^0,c
 12172   00309C  0E0B               	movlw	11
 12173   00309E  6E37               	movwf	(___fladd@a+1)^0,c
 12174   0030A0  0E36               	movlw	54
 12175   0030A2  6E38               	movwf	(___fladd@a+2)^0,c
 12176   0030A4  0EBB               	movlw	187
 12177   0030A6  6E39               	movwf	(___fladd@a+3)^0,c
 12178   0030A8  C1B0  F01D         	movff	powf@t,___flmul@a
 12179   0030AC  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12180   0030B0  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12181   0030B4  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12182   0030B8  C15C  F019         	movff	_powf$2096,___flmul@b
 12183   0030BC  C15D  F01A         	movff	_powf$2096+1,___flmul@b+1
 12184   0030C0  C15E  F01B         	movff	_powf$2096+2,___flmul@b+2
 12185   0030C4  C15F  F01C         	movff	_powf$2096+3,___flmul@b+3
 12186   0030C8  ECF1  F023         	call	___flmul	;wreg free
 12187   0030CC  C019  F032         	movff	?___flmul,___fladd@b
 12188   0030D0  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12189   0030D4  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12190   0030D8  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12191   0030DC  EC91  F021         	call	___fladd	;wreg free
 12192   0030E0  C032  F14C         	movff	?___fladd,_powf$2097
 12193   0030E4  C033  F14D         	movff	?___fladd+1,_powf$2097+1
 12194   0030E8  C034  F14E         	movff	?___fladd+2,_powf$2097+2
 12195   0030EC  C035  F14F         	movff	?___fladd+3,_powf$2097+3
 12196   0030F0  0EAB               	movlw	171
 12197   0030F2  6E36               	movwf	___fladd@a^0,c
 12198   0030F4  0EAA               	movlw	170
 12199   0030F6  6E37               	movwf	(___fladd@a+1)^0,c
 12200   0030F8  0E2A               	movlw	42
 12201   0030FA  6E38               	movwf	(___fladd@a+2)^0,c
 12202   0030FC  0E3E               	movlw	62
 12203   0030FE  6E39               	movwf	(___fladd@a+3)^0,c
 12204   003100  C1B0  F01D         	movff	powf@t,___flmul@a
 12205   003104  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12206   003108  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12207   00310C  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12208   003110  C14C  F019         	movff	_powf$2097,___flmul@b
 12209   003114  C14D  F01A         	movff	_powf$2097+1,___flmul@b+1
 12210   003118  C14E  F01B         	movff	_powf$2097+2,___flmul@b+2
 12211   00311C  C14F  F01C         	movff	_powf$2097+3,___flmul@b+3
 12212   003120  ECF1  F023         	call	___flmul	;wreg free
 12213   003124  C019  F032         	movff	?___flmul,___fladd@b
 12214   003128  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12215   00312C  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12216   003130  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12217   003134  EC91  F021         	call	___fladd	;wreg free
 12218   003138  C032  F138         	movff	?___fladd,_powf$2099
 12219   00313C  C033  F139         	movff	?___fladd+1,_powf$2099+1
 12220   003140  C034  F13A         	movff	?___fladd+2,_powf$2099+2
 12221   003144  C035  F13B         	movff	?___fladd+3,_powf$2099+3
 12222   003148  C1B4  F05B         	movff	powf@z,___flsub@b
 12223   00314C  C1B5  F05C         	movff	powf@z+1,___flsub@b+1
 12224   003150  C1B6  F05D         	movff	powf@z+2,___flsub@b+2
 12225   003154  C1B7  F05E         	movff	powf@z+3,___flsub@b+3
 12226   003158  C1B0  F01D         	movff	powf@t,___flmul@a
 12227   00315C  C1B1  F01E         	movff	powf@t+1,___flmul@a+1
 12228   003160  C1B2  F01F         	movff	powf@t+2,___flmul@a+2
 12229   003164  C1B3  F020         	movff	powf@t+3,___flmul@a+3
 12230   003168  C138  F019         	movff	_powf$2099,___flmul@b
 12231   00316C  C139  F01A         	movff	_powf$2099+1,___flmul@b+1
 12232   003170  C13A  F01B         	movff	_powf$2099+2,___flmul@b+2
 12233   003174  C13B  F01C         	movff	_powf$2099+3,___flmul@b+3
 12234   003178  ECF1  F023         	call	___flmul	;wreg free
 12235   00317C  C019  F05F         	movff	?___flmul,___flsub@a
 12236   003180  C01A  F060         	movff	?___flmul+1,___flsub@a+1
 12237   003184  C01B  F061         	movff	?___flmul+2,___flsub@a+2
 12238   003188  C01C  F062         	movff	?___flmul+3,___flsub@a+3
 12239   00318C  EC34  F03B         	call	___flsub	;wreg free
 12240   003190  C05B  F18C         	movff	?___flsub,powf@t1
 12241   003194  C05C  F18D         	movff	?___flsub+1,powf@t1+1
 12242   003198  C05D  F18E         	movff	?___flsub+2,powf@t1+2
 12243   00319C  C05E  F18F         	movff	?___flsub+3,powf@t1+3
 12244   0031A0  0E00               	movlw	0
 12245   0031A2  6E36               	movwf	___fladd@a^0,c
 12246   0031A4  0E00               	movlw	0
 12247   0031A6  6E37               	movwf	(___fladd@a+1)^0,c
 12248   0031A8  0E00               	movlw	0
 12249   0031AA  6E38               	movwf	(___fladd@a+2)^0,c
 12250   0031AC  0EC0               	movlw	192
 12251   0031AE  6E39               	movwf	(___fladd@a+3)^0,c
 12252   0031B0  C18C  F032         	movff	powf@t1,___fladd@b
 12253   0031B4  C18D  F033         	movff	powf@t1+1,___fladd@b+1
 12254   0031B8  C18E  F034         	movff	powf@t1+2,___fladd@b+2
 12255   0031BC  C18F  F035         	movff	powf@t1+3,___fladd@b+3
 12256   0031C0  EC91  F021         	call	___fladd	;wreg free
 12257   0031C4  C032  F046         	movff	?___fladd,___fldiv@a
 12258   0031C8  C033  F047         	movff	?___fladd+1,___fldiv@a+1
 12259   0031CC  C034  F048         	movff	?___fladd+2,___fldiv@a+2
 12260   0031D0  C035  F049         	movff	?___fladd+3,___fldiv@a+3
 12261   0031D4  C18C  F01D         	movff	powf@t1,___flmul@a
 12262   0031D8  C18D  F01E         	movff	powf@t1+1,___flmul@a+1
 12263   0031DC  C18E  F01F         	movff	powf@t1+2,___flmul@a+2
 12264   0031E0  C18F  F020         	movff	powf@t1+3,___flmul@a+3
 12265   0031E4  C1B4  F019         	movff	powf@z,___flmul@b
 12266   0031E8  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12267   0031EC  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12268   0031F0  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12269   0031F4  ECF1  F023         	call	___flmul	;wreg free
 12270   0031F8  C019  F042         	movff	?___flmul,___fldiv@b
 12271   0031FC  C01A  F043         	movff	?___flmul+1,___fldiv@b+1
 12272   003200  C01B  F044         	movff	?___flmul+2,___fldiv@b+2
 12273   003204  C01C  F045         	movff	?___flmul+3,___fldiv@b+3
 12274   003208  ECF5  F027         	call	___fldiv	;wreg free
 12275   00320C  C042  F13C         	movff	?___fldiv,_powf$2103
 12276   003210  C043  F13D         	movff	?___fldiv+1,_powf$2103+1
 12277   003214  C044  F13E         	movff	?___fldiv+2,_powf$2103+2
 12278   003218  C045  F13F         	movff	?___fldiv+3,_powf$2103+3
 12279   00321C  C144  F036         	movff	powf@w,___fladd@a
 12280   003220  C145  F037         	movff	powf@w+1,___fladd@a+1
 12281   003224  C146  F038         	movff	powf@w+2,___fladd@a+2
 12282   003228  C147  F039         	movff	powf@w+3,___fladd@a+3
 12283   00322C  C144  F01D         	movff	powf@w,___flmul@a
 12284   003230  C145  F01E         	movff	powf@w+1,___flmul@a+1
 12285   003234  C146  F01F         	movff	powf@w+2,___flmul@a+2
 12286   003238  C147  F020         	movff	powf@w+3,___flmul@a+3
 12287   00323C  C1B4  F019         	movff	powf@z,___flmul@b
 12288   003240  C1B5  F01A         	movff	powf@z+1,___flmul@b+1
 12289   003244  C1B6  F01B         	movff	powf@z+2,___flmul@b+2
 12290   003248  C1B7  F01C         	movff	powf@z+3,___flmul@b+3
 12291   00324C  ECF1  F023         	call	___flmul	;wreg free
 12292   003250  C019  F032         	movff	?___flmul,___fladd@b
 12293   003254  C01A  F033         	movff	?___flmul+1,___fladd@b+1
 12294   003258  C01B  F034         	movff	?___flmul+2,___fladd@b+2
 12295   00325C  C01C  F035         	movff	?___flmul+3,___fladd@b+3
 12296   003260  EC91  F021         	call	___fladd	;wreg free
 12297   003264  C032  F118         	movff	?___fladd,_powf$2109
 12298   003268  C033  F119         	movff	?___fladd+1,_powf$2109+1
 12299   00326C  C034  F11A         	movff	?___fladd+2,_powf$2109+2
 12300   003270  C035  F11B         	movff	?___fladd+3,_powf$2109+3
 12301   003274  C13C  F05B         	movff	_powf$2103,___flsub@b
 12302   003278  C13D  F05C         	movff	_powf$2103+1,___flsub@b+1
 12303   00327C  C13E  F05D         	movff	_powf$2103+2,___flsub@b+2
 12304   003280  C13F  F05E         	movff	_powf$2103+3,___flsub@b+3
 12305   003284  C118  F05F         	movff	_powf$2109,___flsub@a
 12306   003288  C119  F060         	movff	_powf$2109+1,___flsub@a+1
 12307   00328C  C11A  F061         	movff	_powf$2109+2,___flsub@a+2
 12308   003290  C11B  F062         	movff	_powf$2109+3,___flsub@a+3
 12309   003294  EC34  F03B         	call	___flsub	;wreg free
 12310   003298  C05B  F150         	movff	?___flsub,powf@r
 12311   00329C  C05C  F151         	movff	?___flsub+1,powf@r+1
 12312   0032A0  C05D  F152         	movff	?___flsub+2,powf@r+2
 12313   0032A4  C05E  F153         	movff	?___flsub+3,powf@r+3
 12314   0032A8  C1B4  F05F         	movff	powf@z,___flsub@a
 12315   0032AC  C1B5  F060         	movff	powf@z+1,___flsub@a+1
 12316   0032B0  C1B6  F061         	movff	powf@z+2,___flsub@a+2
 12317   0032B4  C1B7  F062         	movff	powf@z+3,___flsub@a+3
 12318   0032B8  C150  F05B         	movff	powf@r,___flsub@b
 12319   0032BC  C151  F05C         	movff	powf@r+1,___flsub@b+1
 12320   0032C0  C152  F05D         	movff	powf@r+2,___flsub@b+2
 12321   0032C4  C153  F05E         	movff	powf@r+3,___flsub@b+3
 12322   0032C8  EC34  F03B         	call	___flsub	;wreg free
 12323   0032CC  C05B  F19C         	movff	?___flsub,_powf$2098
 12324   0032D0  C05C  F19D         	movff	?___flsub+1,_powf$2098+1
 12325   0032D4  C05D  F19E         	movff	?___flsub+2,_powf$2098+2
 12326   0032D8  C05E  F19F         	movff	?___flsub+3,_powf$2098+3
 12327   0032DC  0E00               	movlw	0
 12328   0032DE  6E5B               	movwf	___flsub@b^0,c
 12329   0032E0  0E00               	movlw	0
 12330   0032E2  6E5C               	movwf	(___flsub@b+1)^0,c
 12331   0032E4  0E80               	movlw	128
 12332   0032E6  6E5D               	movwf	(___flsub@b+2)^0,c
 12333   0032E8  0E3F               	movlw	63
 12334   0032EA  6E5E               	movwf	(___flsub@b+3)^0,c
 12335   0032EC  C19C  F05F         	movff	_powf$2098,___flsub@a
 12336   0032F0  C19D  F060         	movff	_powf$2098+1,___flsub@a+1
 12337   0032F4  C19E  F061         	movff	_powf$2098+2,___flsub@a+2
 12338   0032F8  C19F  F062         	movff	_powf$2098+3,___flsub@a+3
 12339   0032FC  EC34  F03B         	call	___flsub	;wreg free
 12340   003300  C05B  F1B4         	movff	?___flsub,powf@z
 12341   003304  C05C  F1B5         	movff	?___flsub+1,powf@z+1
 12342   003308  C05D  F1B6         	movff	?___flsub+2,powf@z+2
 12343   00330C  C05E  F1B7         	movff	?___flsub+3,powf@z+3
 12344   003310  C1B4  F1A8         	movff	powf@z,powf@j
 12345   003314  C1B5  F1A9         	movff	powf@z+1,powf@j+1
 12346   003318  C1B6  F1AA         	movff	powf@z+2,powf@j+2
 12347   00331C  C1B7  F1AB         	movff	powf@z+3,powf@j+3
 12348   003320  C188  F077         	movff	powf@n,??_powf
 12349   003324  C189  F078         	movff	powf@n+1,??_powf+1
 12350   003328  C18A  F079         	movff	powf@n+2,??_powf+2
 12351   00332C  C18B  F07A         	movff	powf@n+3,??_powf+3
 12352   003330  0E17               	movlw	23
 12353   003332                     u13325:
 12354   003332  90D8               	bcf	status,0,c
 12355   003334  3677               	rlcf	??_powf^0,f,c
 12356   003336  3678               	rlcf	(??_powf+1)^0,f,c
 12357   003338  3679               	rlcf	(??_powf+2)^0,f,c
 12358   00333A  367A               	rlcf	(??_powf+3)^0,f,c
 12359   00333C  2EE8               	decfsz	wreg,f,c
 12360   00333E  EF99  F019         	goto	u13325
 12361   003342  5077               	movf	??_powf^0,w,c
 12362   003344  0101               	movlb	1	; () banked
 12363   003346  27A8               	addwf	powf@j& (0+255),f,b
 12364   003348  5078               	movf	(??_powf+1)^0,w,c
 12365   00334A  23A9               	addwfc	(powf@j+1)& (0+255),f,b
 12366   00334C  5079               	movf	(??_powf+2)^0,w,c
 12367   00334E  23AA               	addwfc	(powf@j+2)& (0+255),f,b
 12368   003350  507A               	movf	(??_powf+3)^0,w,c
 12369   003352  23AB               	addwfc	(powf@j+3)& (0+255),f,b
 12370   003354                     
 12371                           ; BSR set to: 1
 12372   003354  0E17               	movlw	23
 12373   003356  6E77               	movwf	??_powf^0,c
 12374   003358  C1A8  F078         	movff	powf@j,??_powf+1
 12375   00335C  C1A9  F079         	movff	powf@j+1,??_powf+2
 12376   003360  C1AA  F07A         	movff	powf@j+2,??_powf+3
 12377   003364  C1AB  F07B         	movff	powf@j+3,??_powf+4
 12378   003368                     u13335:
 12379   003368  6677               	tstfsz	??_powf^0,c
 12380   00336A  EFB9  F019         	goto	u13336
 12381   00336E  EFC1  F019         	goto	u13337
 12382   003372                     u13336:
 12383   003372  347B               	rlcf	(??_powf+4)^0,w,c
 12384   003374  327B               	rrcf	(??_powf+4)^0,f,c
 12385   003376  327A               	rrcf	(??_powf+3)^0,f,c
 12386   003378  3279               	rrcf	(??_powf+2)^0,f,c
 12387   00337A  3278               	rrcf	(??_powf+1)^0,f,c
 12388   00337C  2E77               	decfsz	??_powf^0,f,c
 12389   00337E  EFB4  F019         	goto	u13335
 12390   003382                     u13337:
 12391   003382  BE7B               	btfsc	(??_powf+4)^0,7,c
 12392   003384  EFD0  F019         	goto	u13340
 12393   003388  507B               	movf	(??_powf+4)^0,w,c
 12394   00338A  107A               	iorwf	(??_powf+3)^0,w,c
 12395   00338C  1079               	iorwf	(??_powf+2)^0,w,c
 12396   00338E  E106               	bnz	u13341
 12397   003390  0478               	decf	(??_powf+1)^0,w,c
 12398   003392  B0D8               	btfsc	status,0,c
 12399   003394  EFCE  F019         	goto	u13341
 12400   003398  EFD0  F019         	goto	u13340
 12401   00339C                     u13341:
 12402   00339C  EFE8  F019         	goto	l1704
 12403   0033A0                     u13340:
 12404   0033A0  C1B4  F032         	movff	powf@z,scalbnf@x
 12405   0033A4  C1B5  F033         	movff	powf@z+1,scalbnf@x+1
 12406   0033A8  C1B6  F034         	movff	powf@z+2,scalbnf@x+2
 12407   0033AC  C1B7  F035         	movff	powf@z+3,scalbnf@x+3
 12408   0033B0  C188  F036         	movff	powf@n,scalbnf@n
 12409   0033B4  C189  F037         	movff	powf@n+1,scalbnf@n+1
 12410   0033B8  EC9F  F02D         	call	_scalbnf	;wreg free
 12411   0033BC  C032  F1B4         	movff	?_scalbnf,powf@z
 12412   0033C0  C033  F1B5         	movff	?_scalbnf+1,powf@z+1
 12413   0033C4  C034  F1B6         	movff	?_scalbnf+2,powf@z+2
 12414   0033C8  C035  F1B7         	movff	?_scalbnf+3,powf@z+3
 12415   0033CC  EFF0  F019         	goto	l12725
 12416   0033D0                     l1704:
 12417   0033D0  C1A8  F1B4         	movff	powf@j,powf@z
 12418   0033D4  C1A9  F1B5         	movff	powf@j+1,powf@z+1
 12419   0033D8  C1AA  F1B6         	movff	powf@j+2,powf@z+2
 12420   0033DC  C1AB  F1B7         	movff	powf@j+3,powf@z+3
 12421   0033E0                     l12725:
 12422   0033E0  0101               	movlb	1	; () banked
 12423   0033E2  51B4               	movf	powf@z& (0+255),w,b
 12424   0033E4  11B5               	iorwf	(powf@z+1)& (0+255),w,b
 12425   0033E6  11B6               	iorwf	(powf@z+2)& (0+255),w,b
 12426   0033E8  11B7               	iorwf	(powf@z+3)& (0+255),w,b
 12427   0033EA  B4D8               	btfsc	status,2,c
 12428   0033EC  EFFA  F019         	goto	u13351
 12429   0033F0  EFFC  F019         	goto	u13350
 12430   0033F4                     u13351:
 12431   0033F4  EF6F  F00B         	goto	l12411
 12432   0033F8                     u13350:
 12433   0033F8                     
 12434                           ; BSR set to: 1
 12435   0033F8  5164               	movf	powf@sn& (0+255),w,b
 12436   0033FA  1BB4               	xorwf	powf@z& (0+255),f,b
 12437   0033FC  5165               	movf	(powf@sn+1)& (0+255),w,b
 12438   0033FE  1BB5               	xorwf	(powf@z+1)& (0+255),f,b
 12439   003400  5166               	movf	(powf@sn+2)& (0+255),w,b
 12440   003402  1BB6               	xorwf	(powf@z+2)& (0+255),f,b
 12441   003404  5167               	movf	(powf@sn+3)& (0+255),w,b
 12442   003406  1BB7               	xorwf	(powf@z+3)& (0+255),f,b
 12443   003408  EF6F  F00B         	goto	l12411
 12444   00340C                     l1638:
 12445   00340C  0012               	return		;funcret
 12446   00340E                     __end_of_powf:
 12447                           	callstack 0
 12448                           
 12449 ;; *************** function _sqrtf *****************
 12450 ;; Defined at:
 12451 ;;		line 24 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sqrtf.c"
 12452 ;; Parameters:    Size  Location     Type
 12453 ;;  x               4    0[COMRAM] float 
 12454 ;; Auto vars:     Size  Location     Type
 12455 ;;  ix              4   33[COMRAM] struct .
 12456 ;;  r               4   29[COMRAM] unsigned long 
 12457 ;;  m               4   25[COMRAM] long 
 12458 ;;  t               4   21[COMRAM] long 
 12459 ;;  q               4   17[COMRAM] long 
 12460 ;;  i               4   13[COMRAM] long 
 12461 ;;  s               4    9[COMRAM] long 
 12462 ;;  z               4    0        float 
 12463 ;; Return value:  Size  Location     Type
 12464 ;;                  4    0[COMRAM] float 
 12465 ;; Registers used:
 12466 ;;		wreg, status,2, status,0
 12467 ;; Tracked objects:
 12468 ;;		On entry : 0/0
 12469 ;;		On exit  : 0/0
 12470 ;;		Unchanged: 0/0
 12471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12473 ;;      Locals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12474 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12475 ;;      Totals:        37       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12476 ;;Total ram usage:       37 bytes
 12477 ;; Hardware stack levels used: 1
 12478 ;; This function calls:
 12479 ;;		Nothing
 12480 ;; This function is called by:
 12481 ;;		_powf
 12482 ;; This function uses a non-reentrant model
 12483 ;;
 12484                           
 12485                           	psect	text40
 12486   004C0C                     __ptext40:
 12487                           	callstack 0
 12488   004C0C                     _sqrtf:
 12489                           	callstack 28
 12490   004C0C  C001  F022         	movff	sqrtf@x,sqrtf@ix
 12491   004C10  C002  F023         	movff	sqrtf@x+1,sqrtf@ix+1
 12492   004C14  C003  F024         	movff	sqrtf@x+2,sqrtf@ix+2
 12493   004C18  C004  F025         	movff	sqrtf@x+3,sqrtf@ix+3
 12494   004C1C  0E00               	movlw	0
 12495   004C1E  1422               	andwf	sqrtf@ix^0,w,c
 12496   004C20  6E05               	movwf	??_sqrtf^0,c
 12497   004C22  0E00               	movlw	0
 12498   004C24  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12499   004C26  6E06               	movwf	(??_sqrtf+1)^0,c
 12500   004C28  0E80               	movlw	128
 12501   004C2A  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12502   004C2C  6E07               	movwf	(??_sqrtf+2)^0,c
 12503   004C2E  0E7F               	movlw	127
 12504   004C30  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12505   004C32  6E08               	movwf	(??_sqrtf+3)^0,c
 12506   004C34  0E80               	movlw	128
 12507   004C36  1807               	xorwf	(??_sqrtf+2)^0,w,c
 12508   004C38  E109               	bnz	u12571
 12509   004C3A  0E7F               	movlw	127
 12510   004C3C  1808               	xorwf	(??_sqrtf+3)^0,w,c
 12511   004C3E  1005               	iorwf	??_sqrtf^0,w,c
 12512   004C40  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12513   004C42  A4D8               	btfss	status,2,c
 12514   004C44  EF26  F026         	goto	u12571
 12515   004C48  EF28  F026         	goto	u12570
 12516   004C4C                     u12571:
 12517   004C4C  EF58  F026         	goto	l12217
 12518   004C50                     u12570:
 12519   004C50  0EFF               	movlw	255
 12520   004C52  1422               	andwf	sqrtf@ix^0,w,c
 12521   004C54  6E05               	movwf	??_sqrtf^0,c
 12522   004C56  0EFF               	movlw	255
 12523   004C58  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12524   004C5A  6E06               	movwf	(??_sqrtf+1)^0,c
 12525   004C5C  0E7F               	movlw	127
 12526   004C5E  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12527   004C60  6E07               	movwf	(??_sqrtf+2)^0,c
 12528   004C62  0E00               	movlw	0
 12529   004C64  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12530   004C66  6E08               	movwf	(??_sqrtf+3)^0,c
 12531   004C68  5005               	movf	??_sqrtf^0,w,c
 12532   004C6A  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12533   004C6C  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12534   004C6E  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12535   004C70  A4D8               	btfss	status,2,c
 12536   004C72  EF3D  F026         	goto	u12581
 12537   004C76  EF3F  F026         	goto	u12580
 12538   004C7A                     u12581:
 12539   004C7A  EF46  F026         	goto	l12211
 12540   004C7E                     u12580:
 12541   004C7E  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12542   004C80  EF46  F026         	goto	u12590
 12543   004C84  EF44  F026         	goto	u12591
 12544   004C88                     u12591:
 12545   004C88  EF4E  F026         	goto	l12213
 12546   004C8C                     u12590:
 12547   004C8C                     l12211:
 12548   004C8C  0EFF               	movlw	255
 12549   004C8E  1222               	iorwf	sqrtf@ix^0,f,c
 12550   004C90  0EFF               	movlw	255
 12551   004C92  1223               	iorwf	(sqrtf@ix+1)^0,f,c
 12552   004C94  0E7F               	movlw	127
 12553   004C96  1224               	iorwf	(sqrtf@ix+2)^0,f,c
 12554   004C98  0E00               	movlw	0
 12555   004C9A  1225               	iorwf	(sqrtf@ix+3)^0,f,c
 12556   004C9C                     l12213:
 12557   004C9C  C022  F001         	movff	sqrtf@ix,?_sqrtf
 12558   004CA0  C023  F002         	movff	sqrtf@ix+1,?_sqrtf+1
 12559   004CA4  C024  F003         	movff	sqrtf@ix+2,?_sqrtf+2
 12560   004CA8  C025  F004         	movff	sqrtf@ix+3,?_sqrtf+3
 12561   004CAC  EFF4  F027         	goto	l1730
 12562   004CB0                     l12217:
 12563   004CB0  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12564   004CB2  EF67  F026         	goto	u12600
 12565   004CB6  5025               	movf	(sqrtf@ix+3)^0,w,c
 12566   004CB8  1024               	iorwf	(sqrtf@ix+2)^0,w,c
 12567   004CBA  1023               	iorwf	(sqrtf@ix+1)^0,w,c
 12568   004CBC  E106               	bnz	u12601
 12569   004CBE  0422               	decf	sqrtf@ix^0,w,c
 12570   004CC0  B0D8               	btfsc	status,0,c
 12571   004CC2  EF65  F026         	goto	u12601
 12572   004CC6  EF67  F026         	goto	u12600
 12573   004CCA                     u12601:
 12574   004CCA  EF9E  F026         	goto	l12233
 12575   004CCE                     u12600:
 12576   004CCE  0EFF               	movlw	255
 12577   004CD0  1422               	andwf	sqrtf@ix^0,w,c
 12578   004CD2  6E05               	movwf	??_sqrtf^0,c
 12579   004CD4  0EFF               	movlw	255
 12580   004CD6  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12581   004CD8  6E06               	movwf	(??_sqrtf+1)^0,c
 12582   004CDA  0EFF               	movlw	255
 12583   004CDC  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12584   004CDE  6E07               	movwf	(??_sqrtf+2)^0,c
 12585   004CE0  0E7F               	movlw	127
 12586   004CE2  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12587   004CE4  6E08               	movwf	(??_sqrtf+3)^0,c
 12588   004CE6  5005               	movf	??_sqrtf^0,w,c
 12589   004CE8  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12590   004CEA  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12591   004CEC  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12592   004CEE  A4D8               	btfss	status,2,c
 12593   004CF0  EF7C  F026         	goto	u12611
 12594   004CF4  EF7E  F026         	goto	u12610
 12595   004CF8                     u12611:
 12596   004CF8  EF88  F026         	goto	l12225
 12597   004CFC                     u12610:
 12598   004CFC  0E00               	movlw	0
 12599   004CFE  6E01               	movwf	?_sqrtf^0,c
 12600   004D00  0E00               	movlw	0
 12601   004D02  6E02               	movwf	(?_sqrtf+1)^0,c
 12602   004D04  0E00               	movlw	0
 12603   004D06  6E03               	movwf	(?_sqrtf+2)^0,c
 12604   004D08  0E00               	movlw	0
 12605   004D0A  6E04               	movwf	(?_sqrtf+3)^0,c
 12606   004D0C  EFF4  F027         	goto	l1730
 12607   004D10                     l12225:
 12608   004D10  BE25               	btfsc	(sqrtf@ix+3)^0,7,c
 12609   004D12  EF8F  F026         	goto	u12620
 12610   004D16  EF8D  F026         	goto	u12621
 12611   004D1A                     u12621:
 12612   004D1A  EF9E  F026         	goto	l12233
 12613   004D1E                     u12620:
 12614   004D1E  0E00               	movlw	0
 12615   004D20  0101               	movlb	1	; () banked
 12616   004D22  6FE7               	movwf	(_errno+1)& (0+255),b
 12617   004D24  0E21               	movlw	33
 12618   004D26  6FE6               	movwf	_errno& (0+255),b
 12619   004D28  0EFF               	movlw	255
 12620   004D2A  6E22               	movwf	sqrtf@ix^0,c
 12621   004D2C  0EFF               	movlw	255
 12622   004D2E  6E23               	movwf	(sqrtf@ix+1)^0,c
 12623   004D30  0EFF               	movlw	255
 12624   004D32  6E24               	movwf	(sqrtf@ix+2)^0,c
 12625   004D34  0E7F               	movlw	127
 12626   004D36  6E25               	movwf	(sqrtf@ix+3)^0,c
 12627   004D38  EF4E  F026         	goto	l12213
 12628   004D3C                     l12233:
 12629   004D3C  0E17               	movlw	23
 12630   004D3E  6E05               	movwf	??_sqrtf^0,c
 12631   004D40  C022  F006         	movff	sqrtf@ix,??_sqrtf+1
 12632   004D44  C023  F007         	movff	sqrtf@ix+1,??_sqrtf+2
 12633   004D48  C024  F008         	movff	sqrtf@ix+2,??_sqrtf+3
 12634   004D4C  C025  F009         	movff	sqrtf@ix+3,??_sqrtf+4
 12635   004D50                     u12635:
 12636   004D50  6605               	tstfsz	??_sqrtf^0,c
 12637   004D52  EFAD  F026         	goto	u12636
 12638   004D56  EFB5  F026         	goto	u12637
 12639   004D5A                     u12636:
 12640   004D5A  3409               	rlcf	(??_sqrtf+4)^0,w,c
 12641   004D5C  3209               	rrcf	(??_sqrtf+4)^0,f,c
 12642   004D5E  3208               	rrcf	(??_sqrtf+3)^0,f,c
 12643   004D60  3207               	rrcf	(??_sqrtf+2)^0,f,c
 12644   004D62  3206               	rrcf	(??_sqrtf+1)^0,f,c
 12645   004D64  2E05               	decfsz	??_sqrtf^0,f,c
 12646   004D66  EFA8  F026         	goto	u12635
 12647   004D6A                     u12637:
 12648   004D6A  C006  F01A         	movff	??_sqrtf+1,sqrtf@m
 12649   004D6E  C007  F01B         	movff	??_sqrtf+2,sqrtf@m+1
 12650   004D72  C008  F01C         	movff	??_sqrtf+3,sqrtf@m+2
 12651   004D76  C009  F01D         	movff	??_sqrtf+4,sqrtf@m+3
 12652   004D7A  501A               	movf	sqrtf@m^0,w,c
 12653   004D7C  101B               	iorwf	(sqrtf@m+1)^0,w,c
 12654   004D7E  101C               	iorwf	(sqrtf@m+2)^0,w,c
 12655   004D80  101D               	iorwf	(sqrtf@m+3)^0,w,c
 12656   004D82  A4D8               	btfss	status,2,c
 12657   004D84  EFC6  F026         	goto	u12641
 12658   004D88  EFC8  F026         	goto	u12640
 12659   004D8C                     u12641:
 12660   004D8C  EFF8  F026         	goto	l1734
 12661   004D90                     u12640:
 12662   004D90  0E00               	movlw	0
 12663   004D92  6E0E               	movwf	sqrtf@i^0,c
 12664   004D94  0E00               	movlw	0
 12665   004D96  6E0F               	movwf	(sqrtf@i+1)^0,c
 12666   004D98  0E00               	movlw	0
 12667   004D9A  6E10               	movwf	(sqrtf@i+2)^0,c
 12668   004D9C  0E00               	movlw	0
 12669   004D9E  6E11               	movwf	(sqrtf@i+3)^0,c
 12670   004DA0  EFDD  F026         	goto	l12241
 12671   004DA4                     l12237:
 12672   004DA4  90D8               	bcf	status,0,c
 12673   004DA6  3622               	rlcf	sqrtf@ix^0,f,c
 12674   004DA8  3623               	rlcf	(sqrtf@ix+1)^0,f,c
 12675   004DAA  3624               	rlcf	(sqrtf@ix+2)^0,f,c
 12676   004DAC  3625               	rlcf	(sqrtf@ix+3)^0,f,c
 12677   004DAE  0E01               	movlw	1
 12678   004DB0  260E               	addwf	sqrtf@i^0,f,c
 12679   004DB2  0E00               	movlw	0
 12680   004DB4  220F               	addwfc	(sqrtf@i+1)^0,f,c
 12681   004DB6  2210               	addwfc	(sqrtf@i+2)^0,f,c
 12682   004DB8  2211               	addwfc	(sqrtf@i+3)^0,f,c
 12683   004DBA                     l12241:
 12684   004DBA  AE24               	btfss	(sqrtf@ix+2)^0,7,c
 12685   004DBC  EFE2  F026         	goto	u12651
 12686   004DC0  EFE4  F026         	goto	u12650
 12687   004DC4                     u12651:
 12688   004DC4  EFD2  F026         	goto	l12237
 12689   004DC8                     u12650:
 12690   004DC8  0EFF               	movlw	255
 12691   004DCA  240E               	addwf	sqrtf@i^0,w,c
 12692   004DCC  6E05               	movwf	??_sqrtf^0,c
 12693   004DCE  0EFF               	movlw	255
 12694   004DD0  200F               	addwfc	(sqrtf@i+1)^0,w,c
 12695   004DD2  6E06               	movwf	(??_sqrtf+1)^0,c
 12696   004DD4  0EFF               	movlw	255
 12697   004DD6  2010               	addwfc	(sqrtf@i+2)^0,w,c
 12698   004DD8  6E07               	movwf	(??_sqrtf+2)^0,c
 12699   004DDA  0EFF               	movlw	255
 12700   004DDC  2011               	addwfc	(sqrtf@i+3)^0,w,c
 12701   004DDE  6E08               	movwf	(??_sqrtf+3)^0,c
 12702   004DE0  5005               	movf	??_sqrtf^0,w,c
 12703   004DE2  5E1A               	subwf	sqrtf@m^0,f,c
 12704   004DE4  5006               	movf	(??_sqrtf+1)^0,w,c
 12705   004DE6  5A1B               	subwfb	(sqrtf@m+1)^0,f,c
 12706   004DE8  5007               	movf	(??_sqrtf+2)^0,w,c
 12707   004DEA  5A1C               	subwfb	(sqrtf@m+2)^0,f,c
 12708   004DEC  5008               	movf	(??_sqrtf+3)^0,w,c
 12709   004DEE  5A1D               	subwfb	(sqrtf@m+3)^0,f,c
 12710   004DF0                     l1734:
 12711   004DF0  0E81               	movlw	129
 12712   004DF2  261A               	addwf	sqrtf@m^0,f,c
 12713   004DF4  0EFF               	movlw	255
 12714   004DF6  221B               	addwfc	(sqrtf@m+1)^0,f,c
 12715   004DF8  0EFF               	movlw	255
 12716   004DFA  221C               	addwfc	(sqrtf@m+2)^0,f,c
 12717   004DFC  0EFF               	movlw	255
 12718   004DFE  221D               	addwfc	(sqrtf@m+3)^0,f,c
 12719   004E00  0EFF               	movlw	255
 12720   004E02  1422               	andwf	sqrtf@ix^0,w,c
 12721   004E04  6E05               	movwf	??_sqrtf^0,c
 12722   004E06  0EFF               	movlw	255
 12723   004E08  1423               	andwf	(sqrtf@ix+1)^0,w,c
 12724   004E0A  6E06               	movwf	(??_sqrtf+1)^0,c
 12725   004E0C  0E7F               	movlw	127
 12726   004E0E  1424               	andwf	(sqrtf@ix+2)^0,w,c
 12727   004E10  6E07               	movwf	(??_sqrtf+2)^0,c
 12728   004E12  0E00               	movlw	0
 12729   004E14  1425               	andwf	(sqrtf@ix+3)^0,w,c
 12730   004E16  6E08               	movwf	(??_sqrtf+3)^0,c
 12731   004E18  0E00               	movlw	0
 12732   004E1A  1005               	iorwf	??_sqrtf^0,w,c
 12733   004E1C  6E22               	movwf	sqrtf@ix^0,c
 12734   004E1E  0E00               	movlw	0
 12735   004E20  1006               	iorwf	(??_sqrtf+1)^0,w,c
 12736   004E22  6E23               	movwf	(sqrtf@ix+1)^0,c
 12737   004E24  0E80               	movlw	128
 12738   004E26  1007               	iorwf	(??_sqrtf+2)^0,w,c
 12739   004E28  6E24               	movwf	(sqrtf@ix+2)^0,c
 12740   004E2A  0E00               	movlw	0
 12741   004E2C  1008               	iorwf	(??_sqrtf+3)^0,w,c
 12742   004E2E  6E25               	movwf	(sqrtf@ix+3)^0,c
 12743   004E30  A01A               	btfss	sqrtf@m^0,0,c
 12744   004E32  EF1D  F027         	goto	u12661
 12745   004E36  EF1F  F027         	goto	u12660
 12746   004E3A                     u12661:
 12747   004E3A  EF27  F027         	goto	l1738
 12748   004E3E                     u12660:
 12749   004E3E  5022               	movf	sqrtf@ix^0,w,c
 12750   004E40  2622               	addwf	sqrtf@ix^0,f,c
 12751   004E42  5023               	movf	(sqrtf@ix+1)^0,w,c
 12752   004E44  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12753   004E46  5024               	movf	(sqrtf@ix+2)^0,w,c
 12754   004E48  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12755   004E4A  5025               	movf	(sqrtf@ix+3)^0,w,c
 12756   004E4C  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12757   004E4E                     l1738:
 12758   004E4E  341D               	rlcf	(sqrtf@m+3)^0,w,c
 12759   004E50  321D               	rrcf	(sqrtf@m+3)^0,f,c
 12760   004E52  321C               	rrcf	(sqrtf@m+2)^0,f,c
 12761   004E54  321B               	rrcf	(sqrtf@m+1)^0,f,c
 12762   004E56  321A               	rrcf	sqrtf@m^0,f,c
 12763   004E58  5022               	movf	sqrtf@ix^0,w,c
 12764   004E5A  2622               	addwf	sqrtf@ix^0,f,c
 12765   004E5C  5023               	movf	(sqrtf@ix+1)^0,w,c
 12766   004E5E  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12767   004E60  5024               	movf	(sqrtf@ix+2)^0,w,c
 12768   004E62  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12769   004E64  5025               	movf	(sqrtf@ix+3)^0,w,c
 12770   004E66  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12771   004E68  0E00               	movlw	0
 12772   004E6A  6E0A               	movwf	sqrtf@s^0,c
 12773   004E6C  0E00               	movlw	0
 12774   004E6E  6E0B               	movwf	(sqrtf@s+1)^0,c
 12775   004E70  0E00               	movlw	0
 12776   004E72  6E0C               	movwf	(sqrtf@s+2)^0,c
 12777   004E74  0E00               	movlw	0
 12778   004E76  6E0D               	movwf	(sqrtf@s+3)^0,c
 12779   004E78  C00A  F012         	movff	sqrtf@s,sqrtf@q
 12780   004E7C  C00B  F013         	movff	sqrtf@s+1,sqrtf@q+1
 12781   004E80  C00C  F014         	movff	sqrtf@s+2,sqrtf@q+2
 12782   004E84  C00D  F015         	movff	sqrtf@s+3,sqrtf@q+3
 12783   004E88  0E00               	movlw	0
 12784   004E8A  6E1E               	movwf	sqrtf@r^0,c
 12785   004E8C  0E00               	movlw	0
 12786   004E8E  6E1F               	movwf	(sqrtf@r+1)^0,c
 12787   004E90  0E00               	movlw	0
 12788   004E92  6E20               	movwf	(sqrtf@r+2)^0,c
 12789   004E94  0E01               	movlw	1
 12790   004E96  6E21               	movwf	(sqrtf@r+3)^0,c
 12791   004E98  EF96  F027         	goto	l12259
 12792   004E9C                     l12253:
 12793   004E9C  500A               	movf	sqrtf@s^0,w,c
 12794   004E9E  241E               	addwf	sqrtf@r^0,w,c
 12795   004EA0  6E16               	movwf	sqrtf@t^0,c
 12796   004EA2  500B               	movf	(sqrtf@s+1)^0,w,c
 12797   004EA4  201F               	addwfc	(sqrtf@r+1)^0,w,c
 12798   004EA6  6E17               	movwf	(sqrtf@t+1)^0,c
 12799   004EA8  500C               	movf	(sqrtf@s+2)^0,w,c
 12800   004EAA  2020               	addwfc	(sqrtf@r+2)^0,w,c
 12801   004EAC  6E18               	movwf	(sqrtf@t+2)^0,c
 12802   004EAE  500D               	movf	(sqrtf@s+3)^0,w,c
 12803   004EB0  2021               	addwfc	(sqrtf@r+3)^0,w,c
 12804   004EB2  6E19               	movwf	(sqrtf@t+3)^0,c
 12805   004EB4  5016               	movf	sqrtf@t^0,w,c
 12806   004EB6  5C22               	subwf	sqrtf@ix^0,w,c
 12807   004EB8  5017               	movf	(sqrtf@t+1)^0,w,c
 12808   004EBA  5823               	subwfb	(sqrtf@ix+1)^0,w,c
 12809   004EBC  5018               	movf	(sqrtf@t+2)^0,w,c
 12810   004EBE  5824               	subwfb	(sqrtf@ix+2)^0,w,c
 12811   004EC0  5025               	movf	(sqrtf@ix+3)^0,w,c
 12812   004EC2  0A80               	xorlw	128
 12813   004EC4  6E05               	movwf	??_sqrtf^0,c
 12814   004EC6  5019               	movf	(sqrtf@t+3)^0,w,c
 12815   004EC8  0A80               	xorlw	128
 12816   004ECA  5805               	subwfb	??_sqrtf^0,w,c
 12817   004ECC  A0D8               	btfss	status,0,c
 12818   004ECE  EF6B  F027         	goto	u12671
 12819   004ED2  EF6D  F027         	goto	u12670
 12820   004ED6                     u12671:
 12821   004ED6  EF89  F027         	goto	l1741
 12822   004EDA                     u12670:
 12823   004EDA  5016               	movf	sqrtf@t^0,w,c
 12824   004EDC  241E               	addwf	sqrtf@r^0,w,c
 12825   004EDE  6E0A               	movwf	sqrtf@s^0,c
 12826   004EE0  5017               	movf	(sqrtf@t+1)^0,w,c
 12827   004EE2  201F               	addwfc	(sqrtf@r+1)^0,w,c
 12828   004EE4  6E0B               	movwf	(sqrtf@s+1)^0,c
 12829   004EE6  5018               	movf	(sqrtf@t+2)^0,w,c
 12830   004EE8  2020               	addwfc	(sqrtf@r+2)^0,w,c
 12831   004EEA  6E0C               	movwf	(sqrtf@s+2)^0,c
 12832   004EEC  5019               	movf	(sqrtf@t+3)^0,w,c
 12833   004EEE  2021               	addwfc	(sqrtf@r+3)^0,w,c
 12834   004EF0  6E0D               	movwf	(sqrtf@s+3)^0,c
 12835   004EF2  5016               	movf	sqrtf@t^0,w,c
 12836   004EF4  5E22               	subwf	sqrtf@ix^0,f,c
 12837   004EF6  5017               	movf	(sqrtf@t+1)^0,w,c
 12838   004EF8  5A23               	subwfb	(sqrtf@ix+1)^0,f,c
 12839   004EFA  5018               	movf	(sqrtf@t+2)^0,w,c
 12840   004EFC  5A24               	subwfb	(sqrtf@ix+2)^0,f,c
 12841   004EFE  5019               	movf	(sqrtf@t+3)^0,w,c
 12842   004F00  5A25               	subwfb	(sqrtf@ix+3)^0,f,c
 12843   004F02  501E               	movf	sqrtf@r^0,w,c
 12844   004F04  2612               	addwf	sqrtf@q^0,f,c
 12845   004F06  501F               	movf	(sqrtf@r+1)^0,w,c
 12846   004F08  2213               	addwfc	(sqrtf@q+1)^0,f,c
 12847   004F0A  5020               	movf	(sqrtf@r+2)^0,w,c
 12848   004F0C  2214               	addwfc	(sqrtf@q+2)^0,f,c
 12849   004F0E  5021               	movf	(sqrtf@r+3)^0,w,c
 12850   004F10  2215               	addwfc	(sqrtf@q+3)^0,f,c
 12851   004F12                     l1741:
 12852   004F12  5022               	movf	sqrtf@ix^0,w,c
 12853   004F14  2622               	addwf	sqrtf@ix^0,f,c
 12854   004F16  5023               	movf	(sqrtf@ix+1)^0,w,c
 12855   004F18  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12856   004F1A  5024               	movf	(sqrtf@ix+2)^0,w,c
 12857   004F1C  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12858   004F1E  5025               	movf	(sqrtf@ix+3)^0,w,c
 12859   004F20  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12860   004F22  90D8               	bcf	status,0,c
 12861   004F24  3221               	rrcf	(sqrtf@r+3)^0,f,c
 12862   004F26  3220               	rrcf	(sqrtf@r+2)^0,f,c
 12863   004F28  321F               	rrcf	(sqrtf@r+1)^0,f,c
 12864   004F2A  321E               	rrcf	sqrtf@r^0,f,c
 12865   004F2C                     l12259:
 12866   004F2C  501E               	movf	sqrtf@r^0,w,c
 12867   004F2E  101F               	iorwf	(sqrtf@r+1)^0,w,c
 12868   004F30  1020               	iorwf	(sqrtf@r+2)^0,w,c
 12869   004F32  1021               	iorwf	(sqrtf@r+3)^0,w,c
 12870   004F34  A4D8               	btfss	status,2,c
 12871   004F36  EF9F  F027         	goto	u12681
 12872   004F3A  EFA1  F027         	goto	u12680
 12873   004F3E                     u12681:
 12874   004F3E  EF4E  F027         	goto	l12253
 12875   004F42                     u12680:
 12876   004F42  5022               	movf	sqrtf@ix^0,w,c
 12877   004F44  1023               	iorwf	(sqrtf@ix+1)^0,w,c
 12878   004F46  1024               	iorwf	(sqrtf@ix+2)^0,w,c
 12879   004F48  1025               	iorwf	(sqrtf@ix+3)^0,w,c
 12880   004F4A  B4D8               	btfsc	status,2,c
 12881   004F4C  EFAA  F027         	goto	u12691
 12882   004F50  EFAC  F027         	goto	u12690
 12883   004F54                     u12691:
 12884   004F54  EFC0  F027         	goto	l1743
 12885   004F58                     u12690:
 12886   004F58  0E01               	movlw	1
 12887   004F5A  1412               	andwf	sqrtf@q^0,w,c
 12888   004F5C  6E05               	movwf	??_sqrtf^0,c
 12889   004F5E  0E00               	movlw	0
 12890   004F60  1413               	andwf	(sqrtf@q+1)^0,w,c
 12891   004F62  6E06               	movwf	(??_sqrtf+1)^0,c
 12892   004F64  0E00               	movlw	0
 12893   004F66  1414               	andwf	(sqrtf@q+2)^0,w,c
 12894   004F68  6E07               	movwf	(??_sqrtf+2)^0,c
 12895   004F6A  0E00               	movlw	0
 12896   004F6C  1415               	andwf	(sqrtf@q+3)^0,w,c
 12897   004F6E  6E08               	movwf	(??_sqrtf+3)^0,c
 12898   004F70  5005               	movf	??_sqrtf^0,w,c
 12899   004F72  2612               	addwf	sqrtf@q^0,f,c
 12900   004F74  5006               	movf	(??_sqrtf+1)^0,w,c
 12901   004F76  2213               	addwfc	(sqrtf@q+1)^0,f,c
 12902   004F78  5007               	movf	(??_sqrtf+2)^0,w,c
 12903   004F7A  2214               	addwfc	(sqrtf@q+2)^0,f,c
 12904   004F7C  5008               	movf	(??_sqrtf+3)^0,w,c
 12905   004F7E  2215               	addwfc	(sqrtf@q+3)^0,f,c
 12906   004F80                     l1743:
 12907   004F80  C012  F005         	movff	sqrtf@q,??_sqrtf
 12908   004F84  C013  F006         	movff	sqrtf@q+1,??_sqrtf+1
 12909   004F88  C014  F007         	movff	sqrtf@q+2,??_sqrtf+2
 12910   004F8C  C015  F008         	movff	sqrtf@q+3,??_sqrtf+3
 12911   004F90  3408               	rlcf	(??_sqrtf+3)^0,w,c
 12912   004F92  3208               	rrcf	(??_sqrtf+3)^0,f,c
 12913   004F94  3207               	rrcf	(??_sqrtf+2)^0,f,c
 12914   004F96  3206               	rrcf	(??_sqrtf+1)^0,f,c
 12915   004F98  3205               	rrcf	??_sqrtf^0,f,c
 12916   004F9A  0E00               	movlw	0
 12917   004F9C  2405               	addwf	??_sqrtf^0,w,c
 12918   004F9E  6E22               	movwf	sqrtf@ix^0,c
 12919   004FA0  0E00               	movlw	0
 12920   004FA2  2006               	addwfc	(??_sqrtf+1)^0,w,c
 12921   004FA4  6E23               	movwf	(sqrtf@ix+1)^0,c
 12922   004FA6  0E00               	movlw	0
 12923   004FA8  2007               	addwfc	(??_sqrtf+2)^0,w,c
 12924   004FAA  6E24               	movwf	(sqrtf@ix+2)^0,c
 12925   004FAC  0E3F               	movlw	63
 12926   004FAE  2008               	addwfc	(??_sqrtf+3)^0,w,c
 12927   004FB0  6E25               	movwf	(sqrtf@ix+3)^0,c
 12928   004FB2  C01A  F005         	movff	sqrtf@m,??_sqrtf
 12929   004FB6  C01B  F006         	movff	sqrtf@m+1,??_sqrtf+1
 12930   004FBA  C01C  F007         	movff	sqrtf@m+2,??_sqrtf+2
 12931   004FBE  C01D  F008         	movff	sqrtf@m+3,??_sqrtf+3
 12932   004FC2  0E17               	movlw	23
 12933   004FC4                     u12705:
 12934   004FC4  90D8               	bcf	status,0,c
 12935   004FC6  3605               	rlcf	??_sqrtf^0,f,c
 12936   004FC8  3606               	rlcf	(??_sqrtf+1)^0,f,c
 12937   004FCA  3607               	rlcf	(??_sqrtf+2)^0,f,c
 12938   004FCC  3608               	rlcf	(??_sqrtf+3)^0,f,c
 12939   004FCE  2EE8               	decfsz	wreg,f,c
 12940   004FD0  EFE2  F027         	goto	u12705
 12941   004FD4  5005               	movf	??_sqrtf^0,w,c
 12942   004FD6  2622               	addwf	sqrtf@ix^0,f,c
 12943   004FD8  5006               	movf	(??_sqrtf+1)^0,w,c
 12944   004FDA  2223               	addwfc	(sqrtf@ix+1)^0,f,c
 12945   004FDC  5007               	movf	(??_sqrtf+2)^0,w,c
 12946   004FDE  2224               	addwfc	(sqrtf@ix+2)^0,f,c
 12947   004FE0  5008               	movf	(??_sqrtf+3)^0,w,c
 12948   004FE2  2225               	addwfc	(sqrtf@ix+3)^0,f,c
 12949   004FE4  EF4E  F026         	goto	l12213
 12950   004FE8                     l1730:
 12951   004FE8  0012               	return		;funcret
 12952   004FEA                     __end_of_sqrtf:
 12953                           	callstack 0
 12954                           
 12955 ;; *************** function _scalbnf *****************
 12956 ;; Defined at:
 12957 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\scalbnf.c"
 12958 ;; Parameters:    Size  Location     Type
 12959 ;;  x               4   49[COMRAM] float 
 12960 ;;  n               2   53[COMRAM] int 
 12961 ;; Auto vars:     Size  Location     Type
 12962 ;;  y               4   63[COMRAM] float 
 12963 ;;  u               4   59[COMRAM] struct .
 12964 ;; Return value:  Size  Location     Type
 12965 ;;                  4   49[COMRAM] float 
 12966 ;; Registers used:
 12967 ;;		wreg, status,2, status,0, prodl, prodh, cstack
 12968 ;; Tracked objects:
 12969 ;;		On entry : 0/0
 12970 ;;		On exit  : 0/0
 12971 ;;		Unchanged: 0/0
 12972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 12973 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12974 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12975 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12976 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 12977 ;;Total ram usage:       18 bytes
 12978 ;; Hardware stack levels used: 1
 12979 ;; Hardware stack levels required when called: 1
 12980 ;; This function calls:
 12981 ;;		___flmul
 12982 ;; This function is called by:
 12983 ;;		_powf
 12984 ;; This function uses a non-reentrant model
 12985 ;;
 12986                           
 12987                           	psect	text41
 12988   005B3E                     __ptext41:
 12989                           	callstack 0
 12990   005B3E                     _scalbnf:
 12991                           	callstack 27
 12992   005B3E  C032  F040         	movff	scalbnf@x,scalbnf@y
 12993   005B42  C033  F041         	movff	scalbnf@x+1,scalbnf@y+1
 12994   005B46  C034  F042         	movff	scalbnf@x+2,scalbnf@y+2
 12995   005B4A  C035  F043         	movff	scalbnf@x+3,scalbnf@y+3
 12996   005B4E  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 12997   005B50  EFB3  F02D         	goto	u12711
 12998   005B54  5037               	movf	(scalbnf@n+1)^0,w,c
 12999   005B56  E109               	bnz	u12710
 13000   005B58  0E80               	movlw	128
 13001   005B5A  5C36               	subwf	scalbnf@n^0,w,c
 13002   005B5C  A0D8               	btfss	status,0,c
 13003   005B5E  EFB3  F02D         	goto	u12711
 13004   005B62  EFB5  F02D         	goto	u12710
 13005   005B66                     u12711:
 13006   005B66  EF13  F02E         	goto	l12287
 13007   005B6A                     u12710:
 13008   005B6A  C040  F019         	movff	scalbnf@y,___flmul@b
 13009   005B6E  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13010   005B72  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13011   005B76  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13012   005B7A  0E00               	movlw	0
 13013   005B7C  6E1D               	movwf	___flmul@a^0,c
 13014   005B7E  0E00               	movlw	0
 13015   005B80  6E1E               	movwf	(___flmul@a+1)^0,c
 13016   005B82  0E00               	movlw	0
 13017   005B84  6E1F               	movwf	(___flmul@a+2)^0,c
 13018   005B86  0E7F               	movlw	127
 13019   005B88  6E20               	movwf	(___flmul@a+3)^0,c
 13020   005B8A  ECF1  F023         	call	___flmul	;wreg free
 13021   005B8E  C019  F040         	movff	?___flmul,scalbnf@y
 13022   005B92  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13023   005B96  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13024   005B9A  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13025   005B9E  0E81               	movlw	129
 13026   005BA0  2636               	addwf	scalbnf@n^0,f,c
 13027   005BA2  0EFF               	movlw	255
 13028   005BA4  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13029   005BA6  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 13030   005BA8  EFDF  F02D         	goto	u12721
 13031   005BAC  5037               	movf	(scalbnf@n+1)^0,w,c
 13032   005BAE  E109               	bnz	u12720
 13033   005BB0  0E80               	movlw	128
 13034   005BB2  5C36               	subwf	scalbnf@n^0,w,c
 13035   005BB4  A0D8               	btfss	status,0,c
 13036   005BB6  EFDF  F02D         	goto	u12721
 13037   005BBA  EFE1  F02D         	goto	u12720
 13038   005BBE                     u12721:
 13039   005BBE  EF7D  F02E         	goto	l12303
 13040   005BC2                     u12720:
 13041   005BC2  C040  F019         	movff	scalbnf@y,___flmul@b
 13042   005BC6  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13043   005BCA  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13044   005BCE  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13045   005BD2  0E00               	movlw	0
 13046   005BD4  6E1D               	movwf	___flmul@a^0,c
 13047   005BD6  0E00               	movlw	0
 13048   005BD8  6E1E               	movwf	(___flmul@a+1)^0,c
 13049   005BDA  0E00               	movlw	0
 13050   005BDC  6E1F               	movwf	(___flmul@a+2)^0,c
 13051   005BDE  0E7F               	movlw	127
 13052   005BE0  6E20               	movwf	(___flmul@a+3)^0,c
 13053   005BE2  ECF1  F023         	call	___flmul	;wreg free
 13054   005BE6  C019  F040         	movff	?___flmul,scalbnf@y
 13055   005BEA  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13056   005BEE  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13057   005BF2  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13058   005BF6  0E81               	movlw	129
 13059   005BF8  2636               	addwf	scalbnf@n^0,f,c
 13060   005BFA  0EFF               	movlw	255
 13061   005BFC  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13062   005BFE  BE37               	btfsc	(scalbnf@n+1)^0,7,c
 13063   005C00  EF0B  F02E         	goto	u12731
 13064   005C04  5037               	movf	(scalbnf@n+1)^0,w,c
 13065   005C06  E109               	bnz	u12730
 13066   005C08  0E80               	movlw	128
 13067   005C0A  5C36               	subwf	scalbnf@n^0,w,c
 13068   005C0C  A0D8               	btfss	status,0,c
 13069   005C0E  EF0B  F02E         	goto	u12731
 13070   005C12  EF0D  F02E         	goto	u12730
 13071   005C16                     u12731:
 13072   005C16  EF7D  F02E         	goto	l12303
 13073   005C1A                     u12730:
 13074   005C1A  0E00               	movlw	0
 13075   005C1C  6E37               	movwf	(scalbnf@n+1)^0,c
 13076   005C1E  0E7F               	movlw	127
 13077   005C20  6E36               	movwf	scalbnf@n^0,c
 13078   005C22  EF7D  F02E         	goto	l12303
 13079   005C26                     l12287:
 13080   005C26  AE37               	btfss	(scalbnf@n+1)^0,7,c
 13081   005C28  EF1F  F02E         	goto	u12741
 13082   005C2C  0E82               	movlw	130
 13083   005C2E  5C36               	subwf	scalbnf@n^0,w,c
 13084   005C30  0EFF               	movlw	255
 13085   005C32  5837               	subwfb	(scalbnf@n+1)^0,w,c
 13086   005C34  B0D8               	btfsc	status,0,c
 13087   005C36  EF1F  F02E         	goto	u12741
 13088   005C3A  EF21  F02E         	goto	u12740
 13089   005C3E                     u12741:
 13090   005C3E  EF7D  F02E         	goto	l12303
 13091   005C42                     u12740:
 13092   005C42  C040  F019         	movff	scalbnf@y,___flmul@b
 13093   005C46  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13094   005C4A  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13095   005C4E  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13096   005C52  0E00               	movlw	0
 13097   005C54  6E1D               	movwf	___flmul@a^0,c
 13098   005C56  0E00               	movlw	0
 13099   005C58  6E1E               	movwf	(___flmul@a+1)^0,c
 13100   005C5A  0E80               	movlw	128
 13101   005C5C  6E1F               	movwf	(___flmul@a+2)^0,c
 13102   005C5E  0E0C               	movlw	12
 13103   005C60  6E20               	movwf	(___flmul@a+3)^0,c
 13104   005C62  ECF1  F023         	call	___flmul	;wreg free
 13105   005C66  C019  F040         	movff	?___flmul,scalbnf@y
 13106   005C6A  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13107   005C6E  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13108   005C72  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13109   005C76  0E66               	movlw	102
 13110   005C78  2636               	addwf	scalbnf@n^0,f,c
 13111   005C7A  0E00               	movlw	0
 13112   005C7C  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13113   005C7E  AE37               	btfss	(scalbnf@n+1)^0,7,c
 13114   005C80  EF4B  F02E         	goto	u12751
 13115   005C84  0E82               	movlw	130
 13116   005C86  5C36               	subwf	scalbnf@n^0,w,c
 13117   005C88  0EFF               	movlw	255
 13118   005C8A  5837               	subwfb	(scalbnf@n+1)^0,w,c
 13119   005C8C  B0D8               	btfsc	status,0,c
 13120   005C8E  EF4B  F02E         	goto	u12751
 13121   005C92  EF4D  F02E         	goto	u12750
 13122   005C96                     u12751:
 13123   005C96  EF7D  F02E         	goto	l12303
 13124   005C9A                     u12750:
 13125   005C9A  C040  F019         	movff	scalbnf@y,___flmul@b
 13126   005C9E  C041  F01A         	movff	scalbnf@y+1,___flmul@b+1
 13127   005CA2  C042  F01B         	movff	scalbnf@y+2,___flmul@b+2
 13128   005CA6  C043  F01C         	movff	scalbnf@y+3,___flmul@b+3
 13129   005CAA  0E00               	movlw	0
 13130   005CAC  6E1D               	movwf	___flmul@a^0,c
 13131   005CAE  0E00               	movlw	0
 13132   005CB0  6E1E               	movwf	(___flmul@a+1)^0,c
 13133   005CB2  0E80               	movlw	128
 13134   005CB4  6E1F               	movwf	(___flmul@a+2)^0,c
 13135   005CB6  0E0C               	movlw	12
 13136   005CB8  6E20               	movwf	(___flmul@a+3)^0,c
 13137   005CBA  ECF1  F023         	call	___flmul	;wreg free
 13138   005CBE  C019  F040         	movff	?___flmul,scalbnf@y
 13139   005CC2  C01A  F041         	movff	?___flmul+1,scalbnf@y+1
 13140   005CC6  C01B  F042         	movff	?___flmul+2,scalbnf@y+2
 13141   005CCA  C01C  F043         	movff	?___flmul+3,scalbnf@y+3
 13142   005CCE  0E66               	movlw	102
 13143   005CD0  2636               	addwf	scalbnf@n^0,f,c
 13144   005CD2  0E00               	movlw	0
 13145   005CD4  2237               	addwfc	(scalbnf@n+1)^0,f,c
 13146   005CD6  AE37               	btfss	(scalbnf@n+1)^0,7,c
 13147   005CD8  EF77  F02E         	goto	u12761
 13148   005CDC  0E82               	movlw	130
 13149   005CDE  5C36               	subwf	scalbnf@n^0,w,c
 13150   005CE0  0EFF               	movlw	255
 13151   005CE2  5837               	subwfb	(scalbnf@n+1)^0,w,c
 13152   005CE4  B0D8               	btfsc	status,0,c
 13153   005CE6  EF77  F02E         	goto	u12761
 13154   005CEA  EF79  F02E         	goto	u12760
 13155   005CEE                     u12761:
 13156   005CEE  EF7D  F02E         	goto	l12303
 13157   005CF2                     u12760:
 13158   005CF2  0EFF               	movlw	255
 13159   005CF4  6E37               	movwf	(scalbnf@n+1)^0,c
 13160   005CF6  0E82               	movlw	130
 13161   005CF8  6E36               	movwf	scalbnf@n^0,c
 13162   005CFA                     l12303:
 13163   005CFA  0E7F               	movlw	127
 13164   005CFC  2436               	addwf	scalbnf@n^0,w,c
 13165   005CFE  6E38               	movwf	??_scalbnf^0,c
 13166   005D00  0E00               	movlw	0
 13167   005D02  2037               	addwfc	(scalbnf@n+1)^0,w,c
 13168   005D04  6E39               	movwf	(??_scalbnf+1)^0,c
 13169   005D06  6A3A               	clrf	(??_scalbnf+2)^0,c
 13170   005D08  6A3B               	clrf	(??_scalbnf+3)^0,c
 13171   005D0A  0E17               	movlw	23
 13172   005D0C                     u12775:
 13173   005D0C  90D8               	bcf	status,0,c
 13174   005D0E  3638               	rlcf	??_scalbnf^0,f,c
 13175   005D10  3639               	rlcf	(??_scalbnf+1)^0,f,c
 13176   005D12  363A               	rlcf	(??_scalbnf+2)^0,f,c
 13177   005D14  363B               	rlcf	(??_scalbnf+3)^0,f,c
 13178   005D16  2EE8               	decfsz	wreg,f,c
 13179   005D18  EF86  F02E         	goto	u12775
 13180   005D1C  C038  F03C         	movff	??_scalbnf,scalbnf@u
 13181   005D20  C039  F03D         	movff	??_scalbnf+1,scalbnf@u+1
 13182   005D24  C03A  F03E         	movff	??_scalbnf+2,scalbnf@u+2
 13183   005D28  C03B  F03F         	movff	??_scalbnf+3,scalbnf@u+3
 13184   005D2C  C03C  F019         	movff	scalbnf@u,___flmul@b
 13185   005D30  C03D  F01A         	movff	scalbnf@u+1,___flmul@b+1
 13186   005D34  C03E  F01B         	movff	scalbnf@u+2,___flmul@b+2
 13187   005D38  C03F  F01C         	movff	scalbnf@u+3,___flmul@b+3
 13188   005D3C  C040  F01D         	movff	scalbnf@y,___flmul@a
 13189   005D40  C041  F01E         	movff	scalbnf@y+1,___flmul@a+1
 13190   005D44  C042  F01F         	movff	scalbnf@y+2,___flmul@a+2
 13191   005D48  C043  F020         	movff	scalbnf@y+3,___flmul@a+3
 13192   005D4C  ECF1  F023         	call	___flmul	;wreg free
 13193   005D50  C019  F032         	movff	?___flmul,scalbnf@x
 13194   005D54  C01A  F033         	movff	?___flmul+1,scalbnf@x+1
 13195   005D58  C01B  F034         	movff	?___flmul+2,scalbnf@x+2
 13196   005D5C  C01C  F035         	movff	?___flmul+3,scalbnf@x+3
 13197   005D60  C032  F032         	movff	scalbnf@x,?_scalbnf
 13198   005D64  C033  F033         	movff	scalbnf@x+1,?_scalbnf+1
 13199   005D68  C034  F034         	movff	scalbnf@x+2,?_scalbnf+2
 13200   005D6C  C035  F035         	movff	scalbnf@x+3,?_scalbnf+3
 13201   005D70  0012               	return		;funcret
 13202   005D72                     __end_of_scalbnf:
 13203                           	callstack 0
 13204                           
 13205 ;; *************** function ___flmul *****************
 13206 ;; Defined at:
 13207 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcmul.c"
 13208 ;; Parameters:    Size  Location     Type
 13209 ;;  b               4   24[COMRAM] float 
 13210 ;;  a               4   28[COMRAM] float 
 13211 ;; Auto vars:     Size  Location     Type
 13212 ;;  prod            4   43[COMRAM] struct .
 13213 ;;  grs             4   39[COMRAM] unsigned long 
 13214 ;;  temp            2   47[COMRAM] struct .
 13215 ;;  bexp            1   38[COMRAM] unsigned char 
 13216 ;;  aexp            1   37[COMRAM] unsigned char 
 13217 ;;  sign            1   36[COMRAM] unsigned char 
 13218 ;; Return value:  Size  Location     Type
 13219 ;;                  4   24[COMRAM] unsigned char 
 13220 ;; Registers used:
 13221 ;;		wreg, status,2, status,0, prodl, prodh
 13222 ;; Tracked objects:
 13223 ;;		On entry : 0/0
 13224 ;;		On exit  : 0/0
 13225 ;;		Unchanged: 0/0
 13226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13227 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13228 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13229 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13230 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13231 ;;Total ram usage:       25 bytes
 13232 ;; Hardware stack levels used: 1
 13233 ;; This function calls:
 13234 ;;		Nothing
 13235 ;; This function is called by:
 13236 ;;		_convert_arr_to_float
 13237 ;;		_multiplication_operation
 13238 ;;		_efgtoa
 13239 ;;		_powf
 13240 ;;		_scalbnf
 13241 ;; This function uses a non-reentrant model
 13242 ;;
 13243                           
 13244                           	psect	text42
 13245   0047E2                     __ptext42:
 13246                           	callstack 0
 13247   0047E2                     ___flmul:
 13248                           	callstack 24
 13249   0047E2  501C               	movf	(___flmul@b+3)^0,w,c
 13250   0047E4  0B80               	andlw	128
 13251   0047E6  6E25               	movwf	___flmul@sign^0,c
 13252   0047E8  501C               	movf	(___flmul@b+3)^0,w,c
 13253   0047EA  241C               	addwf	(___flmul@b+3)^0,w,c
 13254   0047EC  6E27               	movwf	___flmul@bexp^0,c
 13255   0047EE  AE1B               	btfss	(___flmul@b+2)^0,7,c
 13256   0047F0  EFFC  F023         	goto	u11841
 13257   0047F4  EFFE  F023         	goto	u11840
 13258   0047F8                     u11841:
 13259   0047F8  EFFF  F023         	goto	l11663
 13260   0047FC                     u11840:
 13261   0047FC  8027               	bsf	___flmul@bexp^0,0,c
 13262   0047FE                     l11663:
 13263   0047FE  5027               	movf	___flmul@bexp^0,w,c
 13264   004800  B4D8               	btfsc	status,2,c
 13265   004802  EF05  F024         	goto	u11851
 13266   004806  EF07  F024         	goto	u11850
 13267   00480A                     u11851:
 13268   00480A  EF1A  F024         	goto	l11671
 13269   00480E                     u11850:
 13270   00480E  2827               	incf	___flmul@bexp^0,w,c
 13271   004810  A4D8               	btfss	status,2,c
 13272   004812  EF0D  F024         	goto	u11861
 13273   004816  EF0F  F024         	goto	u11860
 13274   00481A                     u11861:
 13275   00481A  EF17  F024         	goto	l11669
 13276   00481E                     u11860:
 13277   00481E  0E00               	movlw	0
 13278   004820  6E19               	movwf	___flmul@b^0,c
 13279   004822  0E00               	movlw	0
 13280   004824  6E1A               	movwf	(___flmul@b+1)^0,c
 13281   004826  0E00               	movlw	0
 13282   004828  6E1B               	movwf	(___flmul@b+2)^0,c
 13283   00482A  0E00               	movlw	0
 13284   00482C  6E1C               	movwf	(___flmul@b+3)^0,c
 13285   00482E                     l11669:
 13286   00482E  8E1B               	bsf	(___flmul@b+2)^0,7,c
 13287   004830  EF22  F024         	goto	l11673
 13288   004834                     l11671:
 13289   004834  0E00               	movlw	0
 13290   004836  6E19               	movwf	___flmul@b^0,c
 13291   004838  0E00               	movlw	0
 13292   00483A  6E1A               	movwf	(___flmul@b+1)^0,c
 13293   00483C  0E00               	movlw	0
 13294   00483E  6E1B               	movwf	(___flmul@b+2)^0,c
 13295   004840  0E00               	movlw	0
 13296   004842  6E1C               	movwf	(___flmul@b+3)^0,c
 13297   004844                     l11673:
 13298   004844  5020               	movf	(___flmul@a+3)^0,w,c
 13299   004846  0B80               	andlw	128
 13300   004848  1A25               	xorwf	___flmul@sign^0,f,c
 13301   00484A  5020               	movf	(___flmul@a+3)^0,w,c
 13302   00484C  2420               	addwf	(___flmul@a+3)^0,w,c
 13303   00484E  6E26               	movwf	___flmul@aexp^0,c
 13304   004850  AE1F               	btfss	(___flmul@a+2)^0,7,c
 13305   004852  EF2D  F024         	goto	u11871
 13306   004856  EF2F  F024         	goto	u11870
 13307   00485A                     u11871:
 13308   00485A  EF30  F024         	goto	l11681
 13309   00485E                     u11870:
 13310   00485E  8026               	bsf	___flmul@aexp^0,0,c
 13311   004860                     l11681:
 13312   004860  5026               	movf	___flmul@aexp^0,w,c
 13313   004862  B4D8               	btfsc	status,2,c
 13314   004864  EF36  F024         	goto	u11881
 13315   004868  EF38  F024         	goto	u11880
 13316   00486C                     u11881:
 13317   00486C  EF4B  F024         	goto	l11689
 13318   004870                     u11880:
 13319   004870  2826               	incf	___flmul@aexp^0,w,c
 13320   004872  A4D8               	btfss	status,2,c
 13321   004874  EF3E  F024         	goto	u11891
 13322   004878  EF40  F024         	goto	u11890
 13323   00487C                     u11891:
 13324   00487C  EF48  F024         	goto	l11687
 13325   004880                     u11890:
 13326   004880  0E00               	movlw	0
 13327   004882  6E1D               	movwf	___flmul@a^0,c
 13328   004884  0E00               	movlw	0
 13329   004886  6E1E               	movwf	(___flmul@a+1)^0,c
 13330   004888  0E00               	movlw	0
 13331   00488A  6E1F               	movwf	(___flmul@a+2)^0,c
 13332   00488C  0E00               	movlw	0
 13333   00488E  6E20               	movwf	(___flmul@a+3)^0,c
 13334   004890                     l11687:
 13335   004890  8E1F               	bsf	(___flmul@a+2)^0,7,c
 13336   004892  EF53  F024         	goto	l1303
 13337   004896                     l11689:
 13338   004896  0E00               	movlw	0
 13339   004898  6E1D               	movwf	___flmul@a^0,c
 13340   00489A  0E00               	movlw	0
 13341   00489C  6E1E               	movwf	(___flmul@a+1)^0,c
 13342   00489E  0E00               	movlw	0
 13343   0048A0  6E1F               	movwf	(___flmul@a+2)^0,c
 13344   0048A2  0E00               	movlw	0
 13345   0048A4  6E20               	movwf	(___flmul@a+3)^0,c
 13346   0048A6                     l1303:
 13347   0048A6  5026               	movf	___flmul@aexp^0,w,c
 13348   0048A8  B4D8               	btfsc	status,2,c
 13349   0048AA  EF59  F024         	goto	u11901
 13350   0048AE  EF5B  F024         	goto	u11900
 13351   0048B2                     u11901:
 13352   0048B2  EF63  F024         	goto	l11693
 13353   0048B6                     u11900:
 13354   0048B6  5027               	movf	___flmul@bexp^0,w,c
 13355   0048B8  A4D8               	btfss	status,2,c
 13356   0048BA  EF61  F024         	goto	u11911
 13357   0048BE  EF63  F024         	goto	u11910
 13358   0048C2                     u11911:
 13359   0048C2  EF6D  F024         	goto	l11697
 13360   0048C6                     u11910:
 13361   0048C6                     l11693:
 13362   0048C6  0E00               	movlw	0
 13363   0048C8  6E19               	movwf	?___flmul^0,c
 13364   0048CA  0E00               	movlw	0
 13365   0048CC  6E1A               	movwf	(?___flmul+1)^0,c
 13366   0048CE  0E00               	movlw	0
 13367   0048D0  6E1B               	movwf	(?___flmul+2)^0,c
 13368   0048D2  0E00               	movlw	0
 13369   0048D4  6E1C               	movwf	(?___flmul+3)^0,c
 13370   0048D6  EF05  F026         	goto	l1307
 13371   0048DA                     l11697:
 13372   0048DA  501F               	movf	(___flmul@a+2)^0,w,c
 13373   0048DC  0219               	mulwf	___flmul@b^0,c
 13374   0048DE  CFF3 F030          	movff	prodl,___flmul@temp
 13375   0048E2  CFF4 F031          	movff	prodh,___flmul@temp+1
 13376   0048E6  5030               	movf	___flmul@temp^0,w,c
 13377   0048E8  6E28               	movwf	___flmul@grs^0,c
 13378   0048EA  6A29               	clrf	(___flmul@grs+1)^0,c
 13379   0048EC  6A2A               	clrf	(___flmul@grs+2)^0,c
 13380   0048EE  6A2B               	clrf	(___flmul@grs+3)^0,c
 13381   0048F0  5031               	movf	(___flmul@temp+1)^0,w,c
 13382   0048F2  6E2C               	movwf	___flmul@prod^0,c
 13383   0048F4  6A2D               	clrf	(___flmul@prod+1)^0,c
 13384   0048F6  6A2E               	clrf	(___flmul@prod+2)^0,c
 13385   0048F8  6A2F               	clrf	(___flmul@prod+3)^0,c
 13386   0048FA  501E               	movf	(___flmul@a+1)^0,w,c
 13387   0048FC  021A               	mulwf	(___flmul@b+1)^0,c
 13388   0048FE  CFF3 F030          	movff	prodl,___flmul@temp
 13389   004902  CFF4 F031          	movff	prodh,___flmul@temp+1
 13390   004906  5030               	movf	___flmul@temp^0,w,c
 13391   004908  2628               	addwf	___flmul@grs^0,f,c
 13392   00490A  0E00               	movlw	0
 13393   00490C  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13394   00490E  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13395   004910  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13396   004912  5031               	movf	(___flmul@temp+1)^0,w,c
 13397   004914  262C               	addwf	___flmul@prod^0,f,c
 13398   004916  0E00               	movlw	0
 13399   004918  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13400   00491A  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13401   00491C  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13402   00491E  501D               	movf	___flmul@a^0,w,c
 13403   004920  021B               	mulwf	(___flmul@b+2)^0,c
 13404   004922  CFF3 F030          	movff	prodl,___flmul@temp
 13405   004926  CFF4 F031          	movff	prodh,___flmul@temp+1
 13406   00492A  5030               	movf	___flmul@temp^0,w,c
 13407   00492C  2628               	addwf	___flmul@grs^0,f,c
 13408   00492E  0E00               	movlw	0
 13409   004930  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13410   004932  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13411   004934  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13412   004936  5031               	movf	(___flmul@temp+1)^0,w,c
 13413   004938  262C               	addwf	___flmul@prod^0,f,c
 13414   00493A  0E00               	movlw	0
 13415   00493C  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13416   00493E  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13417   004940  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13418   004942  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13419   004946  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13420   00494A  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13421   00494E  6A28               	clrf	___flmul@grs^0,c
 13422   004950  501D               	movf	___flmul@a^0,w,c
 13423   004952  021A               	mulwf	(___flmul@b+1)^0,c
 13424   004954  CFF3 F030          	movff	prodl,___flmul@temp
 13425   004958  CFF4 F031          	movff	prodh,___flmul@temp+1
 13426   00495C  5030               	movf	___flmul@temp^0,w,c
 13427   00495E  2628               	addwf	___flmul@grs^0,f,c
 13428   004960  5031               	movf	(___flmul@temp+1)^0,w,c
 13429   004962  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13430   004964  0E00               	movlw	0
 13431   004966  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13432   004968  0E00               	movlw	0
 13433   00496A  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13434   00496C  501E               	movf	(___flmul@a+1)^0,w,c
 13435   00496E  0219               	mulwf	___flmul@b^0,c
 13436   004970  CFF3 F030          	movff	prodl,___flmul@temp
 13437   004974  CFF4 F031          	movff	prodh,___flmul@temp+1
 13438   004978  5030               	movf	___flmul@temp^0,w,c
 13439   00497A  2628               	addwf	___flmul@grs^0,f,c
 13440   00497C  5031               	movf	(___flmul@temp+1)^0,w,c
 13441   00497E  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13442   004980  0E00               	movlw	0
 13443   004982  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13444   004984  0E00               	movlw	0
 13445   004986  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13446   004988  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13447   00498C  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13448   004990  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13449   004994  6A28               	clrf	___flmul@grs^0,c
 13450   004996  501D               	movf	___flmul@a^0,w,c
 13451   004998  0219               	mulwf	___flmul@b^0,c
 13452   00499A  CFF3 F030          	movff	prodl,___flmul@temp
 13453   00499E  CFF4 F031          	movff	prodh,___flmul@temp+1
 13454   0049A2  5030               	movf	___flmul@temp^0,w,c
 13455   0049A4  2628               	addwf	___flmul@grs^0,f,c
 13456   0049A6  5031               	movf	(___flmul@temp+1)^0,w,c
 13457   0049A8  2229               	addwfc	(___flmul@grs+1)^0,f,c
 13458   0049AA  0E00               	movlw	0
 13459   0049AC  222A               	addwfc	(___flmul@grs+2)^0,f,c
 13460   0049AE  0E00               	movlw	0
 13461   0049B0  222B               	addwfc	(___flmul@grs+3)^0,f,c
 13462   0049B2  501F               	movf	(___flmul@a+2)^0,w,c
 13463   0049B4  021A               	mulwf	(___flmul@b+1)^0,c
 13464   0049B6  CFF3 F030          	movff	prodl,___flmul@temp
 13465   0049BA  CFF4 F031          	movff	prodh,___flmul@temp+1
 13466   0049BE  5030               	movf	___flmul@temp^0,w,c
 13467   0049C0  262C               	addwf	___flmul@prod^0,f,c
 13468   0049C2  5031               	movf	(___flmul@temp+1)^0,w,c
 13469   0049C4  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13470   0049C6  0E00               	movlw	0
 13471   0049C8  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13472   0049CA  0E00               	movlw	0
 13473   0049CC  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13474   0049CE  501E               	movf	(___flmul@a+1)^0,w,c
 13475   0049D0  021B               	mulwf	(___flmul@b+2)^0,c
 13476   0049D2  CFF3 F030          	movff	prodl,___flmul@temp
 13477   0049D6  CFF4 F031          	movff	prodh,___flmul@temp+1
 13478   0049DA  5030               	movf	___flmul@temp^0,w,c
 13479   0049DC  262C               	addwf	___flmul@prod^0,f,c
 13480   0049DE  5031               	movf	(___flmul@temp+1)^0,w,c
 13481   0049E0  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13482   0049E2  0E00               	movlw	0
 13483   0049E4  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13484   0049E6  0E00               	movlw	0
 13485   0049E8  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13486   0049EA  501F               	movf	(___flmul@a+2)^0,w,c
 13487   0049EC  021B               	mulwf	(___flmul@b+2)^0,c
 13488   0049EE  CFF3 F030          	movff	prodl,___flmul@temp
 13489   0049F2  CFF4 F031          	movff	prodh,___flmul@temp+1
 13490   0049F6  5030               	movf	___flmul@temp^0,w,c
 13491   0049F8  6E21               	movwf	??___flmul^0,c
 13492   0049FA  5031               	movf	(___flmul@temp+1)^0,w,c
 13493   0049FC  6E22               	movwf	(??___flmul+1)^0,c
 13494   0049FE  6A23               	clrf	(??___flmul+2)^0,c
 13495   004A00  6A24               	clrf	(??___flmul+3)^0,c
 13496   004A02  C023  F024         	movff	??___flmul+2,??___flmul+3
 13497   004A06  C022  F023         	movff	??___flmul+1,??___flmul+2
 13498   004A0A  C021  F022         	movff	??___flmul,??___flmul+1
 13499   004A0E  6A21               	clrf	??___flmul^0,c
 13500   004A10  5021               	movf	??___flmul^0,w,c
 13501   004A12  262C               	addwf	___flmul@prod^0,f,c
 13502   004A14  5022               	movf	(??___flmul+1)^0,w,c
 13503   004A16  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13504   004A18  5023               	movf	(??___flmul+2)^0,w,c
 13505   004A1A  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13506   004A1C  5024               	movf	(??___flmul+3)^0,w,c
 13507   004A1E  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13508   004A20  C028  F021         	movff	___flmul@grs,??___flmul
 13509   004A24  C029  F022         	movff	___flmul@grs+1,??___flmul+1
 13510   004A28  C02A  F023         	movff	___flmul@grs+2,??___flmul+2
 13511   004A2C  C02B  F024         	movff	___flmul@grs+3,??___flmul+3
 13512   004A30  0E19               	movlw	25
 13513   004A32  EF20  F025         	goto	u11920
 13514   004A36                     u11925:
 13515   004A36  90D8               	bcf	status,0,c
 13516   004A38  3224               	rrcf	(??___flmul+3)^0,f,c
 13517   004A3A  3223               	rrcf	(??___flmul+2)^0,f,c
 13518   004A3C  3222               	rrcf	(??___flmul+1)^0,f,c
 13519   004A3E  3221               	rrcf	??___flmul^0,f,c
 13520   004A40                     u11920:
 13521   004A40  2EE8               	decfsz	wreg,f,c
 13522   004A42  EF1B  F025         	goto	u11925
 13523   004A46  5021               	movf	??___flmul^0,w,c
 13524   004A48  262C               	addwf	___flmul@prod^0,f,c
 13525   004A4A  5022               	movf	(??___flmul+1)^0,w,c
 13526   004A4C  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13527   004A4E  5023               	movf	(??___flmul+2)^0,w,c
 13528   004A50  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13529   004A52  5024               	movf	(??___flmul+3)^0,w,c
 13530   004A54  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13531   004A56  C02A  F02B         	movff	___flmul@grs+2,___flmul@grs+3
 13532   004A5A  C029  F02A         	movff	___flmul@grs+1,___flmul@grs+2
 13533   004A5E  C028  F029         	movff	___flmul@grs,___flmul@grs+1
 13534   004A62  6A28               	clrf	___flmul@grs^0,c
 13535   004A64  5026               	movf	___flmul@aexp^0,w,c
 13536   004A66  C027  F021         	movff	___flmul@bexp,??___flmul
 13537   004A6A  6A22               	clrf	(??___flmul+1)^0,c
 13538   004A6C  2621               	addwf	??___flmul^0,f,c
 13539   004A6E  0E00               	movlw	0
 13540   004A70  2222               	addwfc	(??___flmul+1)^0,f,c
 13541   004A72  0E82               	movlw	130
 13542   004A74  2421               	addwf	??___flmul^0,w,c
 13543   004A76  6E30               	movwf	___flmul@temp^0,c
 13544   004A78  0EFF               	movlw	255
 13545   004A7A  2022               	addwfc	(??___flmul+1)^0,w,c
 13546   004A7C  6E31               	movwf	(___flmul@temp+1)^0,c
 13547   004A7E  EF56  F025         	goto	l11745
 13548   004A82                     l11739:
 13549   004A82  90D8               	bcf	status,0,c
 13550   004A84  362C               	rlcf	___flmul@prod^0,f,c
 13551   004A86  362D               	rlcf	(___flmul@prod+1)^0,f,c
 13552   004A88  362E               	rlcf	(___flmul@prod+2)^0,f,c
 13553   004A8A  362F               	rlcf	(___flmul@prod+3)^0,f,c
 13554   004A8C  AE2B               	btfss	(___flmul@grs+3)^0,7,c
 13555   004A8E  EF4B  F025         	goto	u11931
 13556   004A92  EF4D  F025         	goto	u11930
 13557   004A96                     u11931:
 13558   004A96  EF4E  F025         	goto	l1310
 13559   004A9A                     u11930:
 13560   004A9A  802C               	bsf	___flmul@prod^0,0,c
 13561   004A9C                     l1310:
 13562   004A9C  90D8               	bcf	status,0,c
 13563   004A9E  3628               	rlcf	___flmul@grs^0,f,c
 13564   004AA0  3629               	rlcf	(___flmul@grs+1)^0,f,c
 13565   004AA2  362A               	rlcf	(___flmul@grs+2)^0,f,c
 13566   004AA4  362B               	rlcf	(___flmul@grs+3)^0,f,c
 13567   004AA6  0630               	decf	___flmul@temp^0,f,c
 13568   004AA8  A0D8               	btfss	status,0,c
 13569   004AAA  0631               	decf	(___flmul@temp+1)^0,f,c
 13570   004AAC                     l11745:
 13571   004AAC  AE2E               	btfss	(___flmul@prod+2)^0,7,c
 13572   004AAE  EF5B  F025         	goto	u11941
 13573   004AB2  EF5D  F025         	goto	u11940
 13574   004AB6                     u11941:
 13575   004AB6  EF41  F025         	goto	l11739
 13576   004ABA                     u11940:
 13577   004ABA  0E00               	movlw	0
 13578   004ABC  6E26               	movwf	___flmul@aexp^0,c
 13579   004ABE  AE2B               	btfss	(___flmul@grs+3)^0,7,c
 13580   004AC0  EF64  F025         	goto	u11951
 13581   004AC4  EF66  F025         	goto	u11950
 13582   004AC8                     u11951:
 13583   004AC8  EF8A  F025         	goto	l1312
 13584   004ACC                     u11950:
 13585   004ACC  0EFF               	movlw	255
 13586   004ACE  1428               	andwf	___flmul@grs^0,w,c
 13587   004AD0  6E21               	movwf	??___flmul^0,c
 13588   004AD2  0EFF               	movlw	255
 13589   004AD4  1429               	andwf	(___flmul@grs+1)^0,w,c
 13590   004AD6  6E22               	movwf	(??___flmul+1)^0,c
 13591   004AD8  0EFF               	movlw	255
 13592   004ADA  142A               	andwf	(___flmul@grs+2)^0,w,c
 13593   004ADC  6E23               	movwf	(??___flmul+2)^0,c
 13594   004ADE  0E7F               	movlw	127
 13595   004AE0  142B               	andwf	(___flmul@grs+3)^0,w,c
 13596   004AE2  6E24               	movwf	(??___flmul+3)^0,c
 13597   004AE4  5021               	movf	??___flmul^0,w,c
 13598   004AE6  1022               	iorwf	(??___flmul+1)^0,w,c
 13599   004AE8  1023               	iorwf	(??___flmul+2)^0,w,c
 13600   004AEA  1024               	iorwf	(??___flmul+3)^0,w,c
 13601   004AEC  B4D8               	btfsc	status,2,c
 13602   004AEE  EF7B  F025         	goto	u11961
 13603   004AF2  EF7D  F025         	goto	u11960
 13604   004AF6                     u11961:
 13605   004AF6  EF81  F025         	goto	l1313
 13606   004AFA                     u11960:
 13607   004AFA                     l11753:
 13608   004AFA  0E01               	movlw	1
 13609   004AFC  6E26               	movwf	___flmul@aexp^0,c
 13610   004AFE  EF8A  F025         	goto	l1312
 13611   004B02                     l1313:
 13612   004B02  A02C               	btfss	___flmul@prod^0,0,c
 13613   004B04  EF86  F025         	goto	u11971
 13614   004B08  EF88  F025         	goto	u11970
 13615   004B0C                     u11971:
 13616   004B0C  EF8A  F025         	goto	l1312
 13617   004B10                     u11970:
 13618   004B10  EF7D  F025         	goto	l11753
 13619   004B14                     l1312:
 13620   004B14  5026               	movf	___flmul@aexp^0,w,c
 13621   004B16  B4D8               	btfsc	status,2,c
 13622   004B18  EF90  F025         	goto	u11981
 13623   004B1C  EF92  F025         	goto	u11980
 13624   004B20                     u11981:
 13625   004B20  EFB6  F025         	goto	l11765
 13626   004B24                     u11980:
 13627   004B24  0E01               	movlw	1
 13628   004B26  262C               	addwf	___flmul@prod^0,f,c
 13629   004B28  0E00               	movlw	0
 13630   004B2A  222D               	addwfc	(___flmul@prod+1)^0,f,c
 13631   004B2C  222E               	addwfc	(___flmul@prod+2)^0,f,c
 13632   004B2E  222F               	addwfc	(___flmul@prod+3)^0,f,c
 13633   004B30  A02F               	btfss	(___flmul@prod+3)^0,0,c
 13634   004B32  EF9D  F025         	goto	u11991
 13635   004B36  EF9F  F025         	goto	u11990
 13636   004B3A                     u11991:
 13637   004B3A  EFB6  F025         	goto	l11765
 13638   004B3E                     u11990:
 13639   004B3E  C02C  F021         	movff	___flmul@prod,??___flmul
 13640   004B42  C02D  F022         	movff	___flmul@prod+1,??___flmul+1
 13641   004B46  C02E  F023         	movff	___flmul@prod+2,??___flmul+2
 13642   004B4A  C02F  F024         	movff	___flmul@prod+3,??___flmul+3
 13643   004B4E  3424               	rlcf	(??___flmul+3)^0,w,c
 13644   004B50  3224               	rrcf	(??___flmul+3)^0,f,c
 13645   004B52  3223               	rrcf	(??___flmul+2)^0,f,c
 13646   004B54  3222               	rrcf	(??___flmul+1)^0,f,c
 13647   004B56  3221               	rrcf	??___flmul^0,f,c
 13648   004B58  C021  F02C         	movff	??___flmul,___flmul@prod
 13649   004B5C  C022  F02D         	movff	??___flmul+1,___flmul@prod+1
 13650   004B60  C023  F02E         	movff	??___flmul+2,___flmul@prod+2
 13651   004B64  C024  F02F         	movff	??___flmul+3,___flmul@prod+3
 13652   004B68  4A30               	infsnz	___flmul@temp^0,f,c
 13653   004B6A  2A31               	incf	(___flmul@temp+1)^0,f,c
 13654   004B6C                     l11765:
 13655   004B6C  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 13656   004B6E  EFC1  F025         	goto	u12001
 13657   004B72  5031               	movf	(___flmul@temp+1)^0,w,c
 13658   004B74  E108               	bnz	u12000
 13659   004B76  2830               	incf	___flmul@temp^0,w,c
 13660   004B78  A0D8               	btfss	status,0,c
 13661   004B7A  EFC1  F025         	goto	u12001
 13662   004B7E  EFC3  F025         	goto	u12000
 13663   004B82                     u12001:
 13664   004B82  EFCD  F025         	goto	l11769
 13665   004B86                     u12000:
 13666   004B86  0E00               	movlw	0
 13667   004B88  6E2C               	movwf	___flmul@prod^0,c
 13668   004B8A  0E00               	movlw	0
 13669   004B8C  6E2D               	movwf	(___flmul@prod+1)^0,c
 13670   004B8E  0E80               	movlw	128
 13671   004B90  6E2E               	movwf	(___flmul@prod+2)^0,c
 13672   004B92  0E7F               	movlw	127
 13673   004B94  6E2F               	movwf	(___flmul@prod+3)^0,c
 13674   004B96  EFFB  F025         	goto	l11781
 13675   004B9A                     l11769:
 13676   004B9A  BE31               	btfsc	(___flmul@temp+1)^0,7,c
 13677   004B9C  EFDA  F025         	goto	u12010
 13678   004BA0  5031               	movf	(___flmul@temp+1)^0,w,c
 13679   004BA2  E106               	bnz	u12011
 13680   004BA4  0430               	decf	___flmul@temp^0,w,c
 13681   004BA6  B0D8               	btfsc	status,0,c
 13682   004BA8  EFD8  F025         	goto	u12011
 13683   004BAC  EFDA  F025         	goto	u12010
 13684   004BB0                     u12011:
 13685   004BB0  EFE6  F025         	goto	l1320
 13686   004BB4                     u12010:
 13687   004BB4  0E00               	movlw	0
 13688   004BB6  6E2C               	movwf	___flmul@prod^0,c
 13689   004BB8  0E00               	movlw	0
 13690   004BBA  6E2D               	movwf	(___flmul@prod+1)^0,c
 13691   004BBC  0E00               	movlw	0
 13692   004BBE  6E2E               	movwf	(___flmul@prod+2)^0,c
 13693   004BC0  0E00               	movlw	0
 13694   004BC2  6E2F               	movwf	(___flmul@prod+3)^0,c
 13695   004BC4  0E00               	movlw	0
 13696   004BC6  6E25               	movwf	___flmul@sign^0,c
 13697   004BC8  EFFB  F025         	goto	l11781
 13698   004BCC                     l1320:
 13699   004BCC  C030  F027         	movff	___flmul@temp,___flmul@bexp
 13700   004BD0  0EFF               	movlw	255
 13701   004BD2  162C               	andwf	___flmul@prod^0,f,c
 13702   004BD4  0EFF               	movlw	255
 13703   004BD6  162D               	andwf	(___flmul@prod+1)^0,f,c
 13704   004BD8  0E7F               	movlw	127
 13705   004BDA  162E               	andwf	(___flmul@prod+2)^0,f,c
 13706   004BDC  0E00               	movlw	0
 13707   004BDE  162F               	andwf	(___flmul@prod+3)^0,f,c
 13708   004BE0  A027               	btfss	___flmul@bexp^0,0,c
 13709   004BE2  EFF5  F025         	goto	u12021
 13710   004BE6  EFF7  F025         	goto	u12020
 13711   004BEA                     u12021:
 13712   004BEA  EFF8  F025         	goto	l11779
 13713   004BEE                     u12020:
 13714   004BEE  8E2E               	bsf	(___flmul@prod+2)^0,7,c
 13715   004BF0                     l11779:
 13716   004BF0  90D8               	bcf	status,0,c
 13717   004BF2  3027               	rrcf	___flmul@bexp^0,w,c
 13718   004BF4  6E2F               	movwf	(___flmul@prod+3)^0,c
 13719   004BF6                     l11781:
 13720   004BF6  5025               	movf	___flmul@sign^0,w,c
 13721   004BF8  122F               	iorwf	(___flmul@prod+3)^0,f,c
 13722   004BFA  C02C  F019         	movff	___flmul@prod,?___flmul
 13723   004BFE  C02D  F01A         	movff	___flmul@prod+1,?___flmul+1
 13724   004C02  C02E  F01B         	movff	___flmul@prod+2,?___flmul+2
 13725   004C06  C02F  F01C         	movff	___flmul@prod+3,?___flmul+3
 13726   004C0A                     l1307:
 13727   004C0A  0012               	return		;funcret
 13728   004C0C                     __end_of___flmul:
 13729                           	callstack 0
 13730                           
 13731 ;; *************** function ___xxtofl *****************
 13732 ;; Defined at:
 13733 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\xxtofl.c"
 13734 ;; Parameters:    Size  Location     Type
 13735 ;;  sign            1    wreg     unsigned char 
 13736 ;;  val             4   10[COMRAM] long 
 13737 ;; Auto vars:     Size  Location     Type
 13738 ;;  sign            1   18[COMRAM] unsigned char 
 13739 ;;  arg             4   20[COMRAM] unsigned long 
 13740 ;;  exp             1   19[COMRAM] unsigned char 
 13741 ;; Return value:  Size  Location     Type
 13742 ;;                  4   10[COMRAM] unsigned char 
 13743 ;; Registers used:
 13744 ;;		wreg, status,2, status,0
 13745 ;; Tracked objects:
 13746 ;;		On entry : 0/0
 13747 ;;		On exit  : 0/0
 13748 ;;		Unchanged: 0/0
 13749 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13750 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13751 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13752 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13753 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13754 ;;Total ram usage:       14 bytes
 13755 ;; Hardware stack levels used: 1
 13756 ;; This function calls:
 13757 ;;		Nothing
 13758 ;; This function is called by:
 13759 ;;		_convert_arr_to_float
 13760 ;;		_send_the_result_to_LCD
 13761 ;;		_powf
 13762 ;; This function uses a non-reentrant model
 13763 ;;
 13764                           
 13765                           	psect	text43
 13766   005F84                     __ptext43:
 13767                           	callstack 0
 13768   005F84                     ___xxtofl:
 13769                           	callstack 29
 13770                           
 13771                           ;incstack = 0
 13772                           ;___xxtofl@sign stored from wreg
 13773   005F84  6E13               	movwf	___xxtofl@sign^0,c
 13774   005F86  5013               	movf	___xxtofl@sign^0,w,c
 13775   005F88  B4D8               	btfsc	status,2,c
 13776   005F8A  EFC9  F02F         	goto	u12471
 13777   005F8E  EFCB  F02F         	goto	u12470
 13778   005F92                     u12471:
 13779   005F92  EFED  F02F         	goto	l1344
 13780   005F96                     u12470:
 13781   005F96  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 13782   005F98  EFD2  F02F         	goto	u12480
 13783   005F9C  EFD0  F02F         	goto	u12481
 13784   005FA0                     u12481:
 13785   005FA0  EFED  F02F         	goto	l1344
 13786   005FA4                     u12480:
 13787   005FA4  C00B  F00F         	movff	___xxtofl@val,??___xxtofl
 13788   005FA8  C00C  F010         	movff	___xxtofl@val+1,??___xxtofl+1
 13789   005FAC  C00D  F011         	movff	___xxtofl@val+2,??___xxtofl+2
 13790   005FB0  C00E  F012         	movff	___xxtofl@val+3,??___xxtofl+3
 13791   005FB4  1E0F               	comf	??___xxtofl^0,f,c
 13792   005FB6  1E10               	comf	(??___xxtofl+1)^0,f,c
 13793   005FB8  1E11               	comf	(??___xxtofl+2)^0,f,c
 13794   005FBA  1E12               	comf	(??___xxtofl+3)^0,f,c
 13795   005FBC  2A0F               	incf	??___xxtofl^0,f,c
 13796   005FBE  0E00               	movlw	0
 13797   005FC0  2210               	addwfc	(??___xxtofl+1)^0,f,c
 13798   005FC2  2211               	addwfc	(??___xxtofl+2)^0,f,c
 13799   005FC4  2212               	addwfc	(??___xxtofl+3)^0,f,c
 13800   005FC6  C00F  F015         	movff	??___xxtofl,___xxtofl@arg
 13801   005FCA  C010  F016         	movff	??___xxtofl+1,___xxtofl@arg+1
 13802   005FCE  C011  F017         	movff	??___xxtofl+2,___xxtofl@arg+2
 13803   005FD2  C012  F018         	movff	??___xxtofl+3,___xxtofl@arg+3
 13804   005FD6  EFF5  F02F         	goto	l12163
 13805   005FDA                     l1344:
 13806   005FDA  C00B  F015         	movff	___xxtofl@val,___xxtofl@arg
 13807   005FDE  C00C  F016         	movff	___xxtofl@val+1,___xxtofl@arg+1
 13808   005FE2  C00D  F017         	movff	___xxtofl@val+2,___xxtofl@arg+2
 13809   005FE6  C00E  F018         	movff	___xxtofl@val+3,___xxtofl@arg+3
 13810   005FEA                     l12163:
 13811   005FEA  500B               	movf	___xxtofl@val^0,w,c
 13812   005FEC  100C               	iorwf	(___xxtofl@val+1)^0,w,c
 13813   005FEE  100D               	iorwf	(___xxtofl@val+2)^0,w,c
 13814   005FF0  100E               	iorwf	(___xxtofl@val+3)^0,w,c
 13815   005FF2  A4D8               	btfss	status,2,c
 13816   005FF4  EFFE  F02F         	goto	u12491
 13817   005FF8  EF00  F030         	goto	u12490
 13818   005FFC                     u12491:
 13819   005FFC  EF0A  F030         	goto	l12169
 13820   006000                     u12490:
 13821   006000  0E00               	movlw	0
 13822   006002  6E0B               	movwf	?___xxtofl^0,c
 13823   006004  0E00               	movlw	0
 13824   006006  6E0C               	movwf	(?___xxtofl+1)^0,c
 13825   006008  0E00               	movlw	0
 13826   00600A  6E0D               	movwf	(?___xxtofl+2)^0,c
 13827   00600C  0E00               	movlw	0
 13828   00600E  6E0E               	movwf	(?___xxtofl+3)^0,c
 13829   006010  EF9B  F030         	goto	l1347
 13830   006014                     l12169:
 13831   006014  0E96               	movlw	150
 13832   006016  6E14               	movwf	___xxtofl@exp^0,c
 13833   006018  EF14  F030         	goto	l12173
 13834   00601C                     l12171:
 13835   00601C  2A14               	incf	___xxtofl@exp^0,f,c
 13836   00601E  90D8               	bcf	status,0,c
 13837   006020  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 13838   006022  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 13839   006024  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 13840   006026  3215               	rrcf	___xxtofl@arg^0,f,c
 13841   006028                     l12173:
 13842   006028  0E00               	movlw	0
 13843   00602A  1415               	andwf	___xxtofl@arg^0,w,c
 13844   00602C  6E0F               	movwf	??___xxtofl^0,c
 13845   00602E  0E00               	movlw	0
 13846   006030  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 13847   006032  6E10               	movwf	(??___xxtofl+1)^0,c
 13848   006034  0E00               	movlw	0
 13849   006036  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 13850   006038  6E11               	movwf	(??___xxtofl+2)^0,c
 13851   00603A  0EFE               	movlw	254
 13852   00603C  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 13853   00603E  6E12               	movwf	(??___xxtofl+3)^0,c
 13854   006040  500F               	movf	??___xxtofl^0,w,c
 13855   006042  1010               	iorwf	(??___xxtofl+1)^0,w,c
 13856   006044  1011               	iorwf	(??___xxtofl+2)^0,w,c
 13857   006046  1012               	iorwf	(??___xxtofl+3)^0,w,c
 13858   006048  A4D8               	btfss	status,2,c
 13859   00604A  EF29  F030         	goto	u12501
 13860   00604E  EF2B  F030         	goto	u12500
 13861   006052                     u12501:
 13862   006052  EF0E  F030         	goto	l12171
 13863   006056                     u12500:
 13864   006056  EF39  F030         	goto	l1351
 13865   00605A                     l12175:
 13866   00605A  2A14               	incf	___xxtofl@exp^0,f,c
 13867   00605C  0E01               	movlw	1
 13868   00605E  2615               	addwf	___xxtofl@arg^0,f,c
 13869   006060  0E00               	movlw	0
 13870   006062  2216               	addwfc	(___xxtofl@arg+1)^0,f,c
 13871   006064  2217               	addwfc	(___xxtofl@arg+2)^0,f,c
 13872   006066  2218               	addwfc	(___xxtofl@arg+3)^0,f,c
 13873   006068  90D8               	bcf	status,0,c
 13874   00606A  3218               	rrcf	(___xxtofl@arg+3)^0,f,c
 13875   00606C  3217               	rrcf	(___xxtofl@arg+2)^0,f,c
 13876   00606E  3216               	rrcf	(___xxtofl@arg+1)^0,f,c
 13877   006070  3215               	rrcf	___xxtofl@arg^0,f,c
 13878   006072                     l1351:
 13879   006072  0E00               	movlw	0
 13880   006074  1415               	andwf	___xxtofl@arg^0,w,c
 13881   006076  6E0F               	movwf	??___xxtofl^0,c
 13882   006078  0E00               	movlw	0
 13883   00607A  1416               	andwf	(___xxtofl@arg+1)^0,w,c
 13884   00607C  6E10               	movwf	(??___xxtofl+1)^0,c
 13885   00607E  0E00               	movlw	0
 13886   006080  1417               	andwf	(___xxtofl@arg+2)^0,w,c
 13887   006082  6E11               	movwf	(??___xxtofl+2)^0,c
 13888   006084  0EFF               	movlw	255
 13889   006086  1418               	andwf	(___xxtofl@arg+3)^0,w,c
 13890   006088  6E12               	movwf	(??___xxtofl+3)^0,c
 13891   00608A  500F               	movf	??___xxtofl^0,w,c
 13892   00608C  1010               	iorwf	(??___xxtofl+1)^0,w,c
 13893   00608E  1011               	iorwf	(??___xxtofl+2)^0,w,c
 13894   006090  1012               	iorwf	(??___xxtofl+3)^0,w,c
 13895   006092  A4D8               	btfss	status,2,c
 13896   006094  EF4E  F030         	goto	u12511
 13897   006098  EF50  F030         	goto	u12510
 13898   00609C                     u12511:
 13899   00609C  EF2D  F030         	goto	l12175
 13900   0060A0                     u12510:
 13901   0060A0  EF58  F030         	goto	l12183
 13902   0060A4                     l12181:
 13903   0060A4  0614               	decf	___xxtofl@exp^0,f,c
 13904   0060A6  90D8               	bcf	status,0,c
 13905   0060A8  3615               	rlcf	___xxtofl@arg^0,f,c
 13906   0060AA  3616               	rlcf	(___xxtofl@arg+1)^0,f,c
 13907   0060AC  3617               	rlcf	(___xxtofl@arg+2)^0,f,c
 13908   0060AE  3618               	rlcf	(___xxtofl@arg+3)^0,f,c
 13909   0060B0                     l12183:
 13910   0060B0  BE17               	btfsc	(___xxtofl@arg+2)^0,7,c
 13911   0060B2  EF5D  F030         	goto	u12521
 13912   0060B6  EF5F  F030         	goto	u12520
 13913   0060BA                     u12521:
 13914   0060BA  EF67  F030         	goto	l1358
 13915   0060BE                     u12520:
 13916   0060BE  0E02               	movlw	2
 13917   0060C0  6014               	cpfslt	___xxtofl@exp^0,c
 13918   0060C2  EF65  F030         	goto	u12531
 13919   0060C6  EF67  F030         	goto	u12530
 13920   0060CA                     u12531:
 13921   0060CA  EF52  F030         	goto	l12181
 13922   0060CE                     u12530:
 13923   0060CE                     l1358:
 13924   0060CE  B014               	btfsc	___xxtofl@exp^0,0,c
 13925   0060D0  EF6C  F030         	goto	u12541
 13926   0060D4  EF6E  F030         	goto	u12540
 13927   0060D8                     u12541:
 13928   0060D8  EF6F  F030         	goto	l12189
 13929   0060DC                     u12540:
 13930   0060DC  9E17               	bcf	(___xxtofl@arg+2)^0,7,c
 13931   0060DE                     l12189:
 13932   0060DE  90D8               	bcf	status,0,c
 13933   0060E0  3214               	rrcf	___xxtofl@exp^0,f,c
 13934   0060E2  C014  F00F         	movff	___xxtofl@exp,??___xxtofl
 13935   0060E6  6A10               	clrf	(??___xxtofl+1)^0,c
 13936   0060E8  6A11               	clrf	(??___xxtofl+2)^0,c
 13937   0060EA  6A12               	clrf	(??___xxtofl+3)^0,c
 13938   0060EC  C00F  F012         	movff	??___xxtofl,??___xxtofl+3
 13939   0060F0  6A11               	clrf	(??___xxtofl+2)^0,c
 13940   0060F2  6A10               	clrf	(??___xxtofl+1)^0,c
 13941   0060F4  6A0F               	clrf	??___xxtofl^0,c
 13942   0060F6  500F               	movf	??___xxtofl^0,w,c
 13943   0060F8  1215               	iorwf	___xxtofl@arg^0,f,c
 13944   0060FA  5010               	movf	(??___xxtofl+1)^0,w,c
 13945   0060FC  1216               	iorwf	(___xxtofl@arg+1)^0,f,c
 13946   0060FE  5011               	movf	(??___xxtofl+2)^0,w,c
 13947   006100  1217               	iorwf	(___xxtofl@arg+2)^0,f,c
 13948   006102  5012               	movf	(??___xxtofl+3)^0,w,c
 13949   006104  1218               	iorwf	(___xxtofl@arg+3)^0,f,c
 13950   006106  5013               	movf	___xxtofl@sign^0,w,c
 13951   006108  B4D8               	btfsc	status,2,c
 13952   00610A  EF89  F030         	goto	u12551
 13953   00610E  EF8B  F030         	goto	u12550
 13954   006112                     u12551:
 13955   006112  EF93  F030         	goto	l12199
 13956   006116                     u12550:
 13957   006116  BE0E               	btfsc	(___xxtofl@val+3)^0,7,c
 13958   006118  EF92  F030         	goto	u12560
 13959   00611C  EF90  F030         	goto	u12561
 13960   006120                     u12561:
 13961   006120  EF93  F030         	goto	l12199
 13962   006124                     u12560:
 13963   006124  8E18               	bsf	(___xxtofl@arg+3)^0,7,c
 13964   006126                     l12199:
 13965   006126  C015  F00B         	movff	___xxtofl@arg,?___xxtofl
 13966   00612A  C016  F00C         	movff	___xxtofl@arg+1,?___xxtofl+1
 13967   00612E  C017  F00D         	movff	___xxtofl@arg+2,?___xxtofl+2
 13968   006132  C018  F00E         	movff	___xxtofl@arg+3,?___xxtofl+3
 13969   006136                     l1347:
 13970   006136  0012               	return		;funcret
 13971   006138                     __end_of___xxtofl:
 13972                           	callstack 0
 13973                           
 13974 ;; *************** function ___flsub *****************
 13975 ;; Defined at:
 13976 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 13977 ;; Parameters:    Size  Location     Type
 13978 ;;  b               4   90[COMRAM] unsigned char 
 13979 ;;  a               4   94[COMRAM] unsigned char 
 13980 ;; Auto vars:     Size  Location     Type
 13981 ;;		None
 13982 ;; Return value:  Size  Location     Type
 13983 ;;                  4   90[COMRAM] unsigned char 
 13984 ;; Registers used:
 13985 ;;		wreg, status,2, status,0, cstack
 13986 ;; Tracked objects:
 13987 ;;		On entry : 0/0
 13988 ;;		On exit  : 0/0
 13989 ;;		Unchanged: 0/0
 13990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 13991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13992 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13994 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 13995 ;;Total ram usage:        8 bytes
 13996 ;; Hardware stack levels used: 1
 13997 ;; Hardware stack levels required when called: 1
 13998 ;; This function calls:
 13999 ;;		___fladd
 14000 ;; This function is called by:
 14001 ;;		_subtraction_operation
 14002 ;;		_efgtoa
 14003 ;;		_powf
 14004 ;; This function uses a non-reentrant model
 14005 ;;
 14006                           
 14007                           	psect	text44
 14008   007668                     __ptext44:
 14009                           	callstack 0
 14010   007668                     ___flsub:
 14011                           	callstack 28
 14012   007668  0E00               	movlw	0
 14013   00766A  1A5F               	xorwf	___flsub@a^0,f,c
 14014   00766C  0E00               	movlw	0
 14015   00766E  1A60               	xorwf	(___flsub@a+1)^0,f,c
 14016   007670  0E00               	movlw	0
 14017   007672  1A61               	xorwf	(___flsub@a+2)^0,f,c
 14018   007674  0E80               	movlw	128
 14019   007676  1A62               	xorwf	(___flsub@a+3)^0,f,c
 14020   007678  C05B  F032         	movff	___flsub@b,___fladd@b
 14021   00767C  C05C  F033         	movff	___flsub@b+1,___fladd@b+1
 14022   007680  C05D  F034         	movff	___flsub@b+2,___fladd@b+2
 14023   007684  C05E  F035         	movff	___flsub@b+3,___fladd@b+3
 14024   007688  C05F  F036         	movff	___flsub@a,___fladd@a
 14025   00768C  C060  F037         	movff	___flsub@a+1,___fladd@a+1
 14026   007690  C061  F038         	movff	___flsub@a+2,___fladd@a+2
 14027   007694  C062  F039         	movff	___flsub@a+3,___fladd@a+3
 14028   007698  EC91  F021         	call	___fladd	;wreg free
 14029   00769C  C032  F05B         	movff	?___fladd,?___flsub
 14030   0076A0  C033  F05C         	movff	?___fladd+1,?___flsub+1
 14031   0076A4  C034  F05D         	movff	?___fladd+2,?___flsub+2
 14032   0076A8  C035  F05E         	movff	?___fladd+3,?___flsub+3
 14033   0076AC  0012               	return		;funcret
 14034   0076AE                     __end_of___flsub:
 14035                           	callstack 0
 14036                           
 14037 ;; *************** function ___fladd *****************
 14038 ;; Defined at:
 14039 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcadd.c"
 14040 ;; Parameters:    Size  Location     Type
 14041 ;;  b               4   49[COMRAM] unsigned char 
 14042 ;;  a               4   53[COMRAM] unsigned char 
 14043 ;; Auto vars:     Size  Location     Type
 14044 ;;  grs             1   64[COMRAM] unsigned char 
 14045 ;;  bexp            1   63[COMRAM] unsigned char 
 14046 ;;  aexp            1   62[COMRAM] unsigned char 
 14047 ;;  signs           1   61[COMRAM] unsigned char 
 14048 ;; Return value:  Size  Location     Type
 14049 ;;                  4   49[COMRAM] unsigned char 
 14050 ;; Registers used:
 14051 ;;		wreg, status,2, status,0
 14052 ;; Tracked objects:
 14053 ;;		On entry : 0/0
 14054 ;;		On exit  : 0/0
 14055 ;;		Unchanged: 0/0
 14056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14057 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14058 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14059 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14060 ;;      Totals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14061 ;;Total ram usage:       16 bytes
 14062 ;; Hardware stack levels used: 1
 14063 ;; This function calls:
 14064 ;;		Nothing
 14065 ;; This function is called by:
 14066 ;;		_convert_arr_to_float
 14067 ;;		_sum_operation
 14068 ;;		___flsub
 14069 ;;		_efgtoa
 14070 ;;		_powf
 14071 ;; This function uses a non-reentrant model
 14072 ;;
 14073                           
 14074                           	psect	text45
 14075   004322                     __ptext45:
 14076                           	callstack 0
 14077   004322                     ___fladd:
 14078                           	callstack 29
 14079   004322  5035               	movf	(___fladd@b+3)^0,w,c
 14080   004324  0B80               	andlw	128
 14081   004326  6E3E               	movwf	___fladd@signs^0,c
 14082   004328  5035               	movf	(___fladd@b+3)^0,w,c
 14083   00432A  2435               	addwf	(___fladd@b+3)^0,w,c
 14084   00432C  6E40               	movwf	___fladd@bexp^0,c
 14085   00432E  AE34               	btfss	(___fladd@b+2)^0,7,c
 14086   004330  EF9C  F021         	goto	u11221
 14087   004334  EF9E  F021         	goto	u11220
 14088   004338                     u11221:
 14089   004338  EF9F  F021         	goto	l11323
 14090   00433C                     u11220:
 14091   00433C  8040               	bsf	___fladd@bexp^0,0,c
 14092   00433E                     l11323:
 14093   00433E  5040               	movf	___fladd@bexp^0,w,c
 14094   004340  B4D8               	btfsc	status,2,c
 14095   004342  EFA5  F021         	goto	u11231
 14096   004346  EFA7  F021         	goto	u11230
 14097   00434A                     u11231:
 14098   00434A  EFBC  F021         	goto	l11333
 14099   00434E                     u11230:
 14100   00434E  2840               	incf	___fladd@bexp^0,w,c
 14101   004350  A4D8               	btfss	status,2,c
 14102   004352  EFAD  F021         	goto	u11241
 14103   004356  EFAF  F021         	goto	u11240
 14104   00435A                     u11241:
 14105   00435A  EFB7  F021         	goto	l11329
 14106   00435E                     u11240:
 14107   00435E  0E00               	movlw	0
 14108   004360  6E32               	movwf	___fladd@b^0,c
 14109   004362  0E00               	movlw	0
 14110   004364  6E33               	movwf	(___fladd@b+1)^0,c
 14111   004366  0E00               	movlw	0
 14112   004368  6E34               	movwf	(___fladd@b+2)^0,c
 14113   00436A  0E00               	movlw	0
 14114   00436C  6E35               	movwf	(___fladd@b+3)^0,c
 14115   00436E                     l11329:
 14116   00436E  8E34               	bsf	(___fladd@b+2)^0,7,c
 14117   004370  0E00               	movlw	0
 14118   004372  6E35               	movwf	(___fladd@b+3)^0,c
 14119   004374  EFC4  F021         	goto	l11335
 14120   004378                     l11333:
 14121   004378  0E00               	movlw	0
 14122   00437A  6E32               	movwf	___fladd@b^0,c
 14123   00437C  0E00               	movlw	0
 14124   00437E  6E33               	movwf	(___fladd@b+1)^0,c
 14125   004380  0E00               	movlw	0
 14126   004382  6E34               	movwf	(___fladd@b+2)^0,c
 14127   004384  0E00               	movlw	0
 14128   004386  6E35               	movwf	(___fladd@b+3)^0,c
 14129   004388                     l11335:
 14130   004388  5039               	movf	(___fladd@a+3)^0,w,c
 14131   00438A  0B80               	andlw	128
 14132   00438C  6E3F               	movwf	___fladd@aexp^0,c
 14133   00438E  503E               	movf	___fladd@signs^0,w,c
 14134   004390  183F               	xorwf	___fladd@aexp^0,w,c
 14135   004392  B4D8               	btfsc	status,2,c
 14136   004394  EFCE  F021         	goto	u11251
 14137   004398  EFD0  F021         	goto	u11250
 14138   00439C                     u11251:
 14139   00439C  EFD1  F021         	goto	l11341
 14140   0043A0                     u11250:
 14141   0043A0  8C3E               	bsf	___fladd@signs^0,6,c
 14142   0043A2                     l11341:
 14143   0043A2  5039               	movf	(___fladd@a+3)^0,w,c
 14144   0043A4  2439               	addwf	(___fladd@a+3)^0,w,c
 14145   0043A6  6E3F               	movwf	___fladd@aexp^0,c
 14146   0043A8  AE38               	btfss	(___fladd@a+2)^0,7,c
 14147   0043AA  EFD9  F021         	goto	u11261
 14148   0043AE  EFDB  F021         	goto	u11260
 14149   0043B2                     u11261:
 14150   0043B2  EFDC  F021         	goto	l11347
 14151   0043B6                     u11260:
 14152   0043B6  803F               	bsf	___fladd@aexp^0,0,c
 14153   0043B8                     l11347:
 14154   0043B8  503F               	movf	___fladd@aexp^0,w,c
 14155   0043BA  B4D8               	btfsc	status,2,c
 14156   0043BC  EFE2  F021         	goto	u11271
 14157   0043C0  EFE4  F021         	goto	u11270
 14158   0043C4                     u11271:
 14159   0043C4  EFF9  F021         	goto	l11357
 14160   0043C8                     u11270:
 14161   0043C8  283F               	incf	___fladd@aexp^0,w,c
 14162   0043CA  A4D8               	btfss	status,2,c
 14163   0043CC  EFEA  F021         	goto	u11281
 14164   0043D0  EFEC  F021         	goto	u11280
 14165   0043D4                     u11281:
 14166   0043D4  EFF4  F021         	goto	l11353
 14167   0043D8                     u11280:
 14168   0043D8  0E00               	movlw	0
 14169   0043DA  6E36               	movwf	___fladd@a^0,c
 14170   0043DC  0E00               	movlw	0
 14171   0043DE  6E37               	movwf	(___fladd@a+1)^0,c
 14172   0043E0  0E00               	movlw	0
 14173   0043E2  6E38               	movwf	(___fladd@a+2)^0,c
 14174   0043E4  0E00               	movlw	0
 14175   0043E6  6E39               	movwf	(___fladd@a+3)^0,c
 14176   0043E8                     l11353:
 14177   0043E8  8E38               	bsf	(___fladd@a+2)^0,7,c
 14178   0043EA  0E00               	movlw	0
 14179   0043EC  6E39               	movwf	(___fladd@a+3)^0,c
 14180   0043EE  EF01  F022         	goto	l11359
 14181   0043F2                     l11357:
 14182   0043F2  0E00               	movlw	0
 14183   0043F4  6E36               	movwf	___fladd@a^0,c
 14184   0043F6  0E00               	movlw	0
 14185   0043F8  6E37               	movwf	(___fladd@a+1)^0,c
 14186   0043FA  0E00               	movlw	0
 14187   0043FC  6E38               	movwf	(___fladd@a+2)^0,c
 14188   0043FE  0E00               	movlw	0
 14189   004400  6E39               	movwf	(___fladd@a+3)^0,c
 14190   004402                     l11359:
 14191   004402  5040               	movf	___fladd@bexp^0,w,c
 14192   004404  5C3F               	subwf	___fladd@aexp^0,w,c
 14193   004406  B0D8               	btfsc	status,0,c
 14194   004408  EF08  F022         	goto	u11291
 14195   00440C  EF0A  F022         	goto	u11290
 14196   004410                     u11291:
 14197   004410  EF31  F022         	goto	l11395
 14198   004414                     u11290:
 14199   004414  AC3E               	btfss	___fladd@signs^0,6,c
 14200   004416  EF0F  F022         	goto	u11301
 14201   00441A  EF11  F022         	goto	u11300
 14202   00441E                     u11301:
 14203   00441E  EF13  F022         	goto	l11365
 14204   004422                     u11300:
 14205   004422  0E80               	movlw	128
 14206   004424  1A3E               	xorwf	___fladd@signs^0,f,c
 14207   004426                     l11365:
 14208   004426  C040  F041         	movff	___fladd@bexp,___fladd@grs
 14209   00442A  C03F  F040         	movff	___fladd@aexp,___fladd@bexp
 14210   00442E  C041  F03F         	movff	___fladd@grs,___fladd@aexp
 14211   004432  C032  F041         	movff	___fladd@b,___fladd@grs
 14212   004436  C036  F032         	movff	___fladd@a,___fladd@b
 14213   00443A  C041  F036         	movff	___fladd@grs,___fladd@a
 14214   00443E  C033  F041         	movff	___fladd@b+1,___fladd@grs
 14215   004442  C037  F033         	movff	___fladd@a+1,___fladd@b+1
 14216   004446  C041  F037         	movff	___fladd@grs,___fladd@a+1
 14217   00444A  C034  F041         	movff	___fladd@b+2,___fladd@grs
 14218   00444E  C038  F034         	movff	___fladd@a+2,___fladd@b+2
 14219   004452  C041  F038         	movff	___fladd@grs,___fladd@a+2
 14220   004456  C035  F041         	movff	___fladd@b+3,___fladd@grs
 14221   00445A  C039  F035         	movff	___fladd@a+3,___fladd@b+3
 14222   00445E  C041  F039         	movff	___fladd@grs,___fladd@a+3
 14223   004462                     l11395:
 14224   004462  0E00               	movlw	0
 14225   004464  6E41               	movwf	___fladd@grs^0,c
 14226   004466  5040               	movf	___fladd@bexp^0,w,c
 14227   004468  C03F  F03A         	movff	___fladd@aexp,??___fladd
 14228   00446C  6A3B               	clrf	(??___fladd+1)^0,c
 14229   00446E  5E3A               	subwf	??___fladd^0,f,c
 14230   004470  0E00               	movlw	0
 14231   004472  5A3B               	subwfb	(??___fladd+1)^0,f,c
 14232   004474  BE3B               	btfsc	(??___fladd+1)^0,7,c
 14233   004476  EF46  F022         	goto	u11311
 14234   00447A  503B               	movf	(??___fladd+1)^0,w,c
 14235   00447C  E109               	bnz	u11310
 14236   00447E  0E1A               	movlw	26
 14237   004480  5C3A               	subwf	??___fladd^0,w,c
 14238   004482  A0D8               	btfss	status,0,c
 14239   004484  EF46  F022         	goto	u11311
 14240   004488  EF48  F022         	goto	u11310
 14241   00448C                     u11311:
 14242   00448C  EF7F  F022         	goto	l1218
 14243   004490                     u11310:
 14244   004490  5032               	movf	___fladd@b^0,w,c
 14245   004492  1033               	iorwf	(___fladd@b+1)^0,w,c
 14246   004494  1034               	iorwf	(___fladd@b+2)^0,w,c
 14247   004496  1035               	iorwf	(___fladd@b+3)^0,w,c
 14248   004498  A4D8               	btfss	status,2,c
 14249   00449A  EF51  F022         	goto	u11321
 14250   00449E  EF54  F022         	goto	u11320
 14251   0044A2                     u11321:
 14252   0044A2  0E01               	movlw	1
 14253   0044A4  EF55  F022         	goto	u11330
 14254   0044A8                     u11320:
 14255   0044A8  0E00               	movlw	0
 14256   0044AA                     u11330:
 14257   0044AA  6E41               	movwf	___fladd@grs^0,c
 14258   0044AC  0E00               	movlw	0
 14259   0044AE  6E32               	movwf	___fladd@b^0,c
 14260   0044B0  0E00               	movlw	0
 14261   0044B2  6E33               	movwf	(___fladd@b+1)^0,c
 14262   0044B4  0E00               	movlw	0
 14263   0044B6  6E34               	movwf	(___fladd@b+2)^0,c
 14264   0044B8  0E00               	movlw	0
 14265   0044BA  6E35               	movwf	(___fladd@b+3)^0,c
 14266   0044BC  C03F  F040         	movff	___fladd@aexp,___fladd@bexp
 14267   0044C0  EF88  F022         	goto	l1217
 14268   0044C4                     l1219:
 14269   0044C4  A041               	btfss	___fladd@grs^0,0,c
 14270   0044C6  EF67  F022         	goto	u11341
 14271   0044CA  EF69  F022         	goto	u11340
 14272   0044CE                     u11341:
 14273   0044CE  EF6F  F022         	goto	l11407
 14274   0044D2                     u11340:
 14275   0044D2  90D8               	bcf	status,0,c
 14276   0044D4  3041               	rrcf	___fladd@grs^0,w,c
 14277   0044D6  0901               	iorlw	1
 14278   0044D8  6E41               	movwf	___fladd@grs^0,c
 14279   0044DA  EF71  F022         	goto	l11409
 14280   0044DE                     l11407:
 14281   0044DE  90D8               	bcf	status,0,c
 14282   0044E0  3241               	rrcf	___fladd@grs^0,f,c
 14283   0044E2                     l11409:
 14284   0044E2  A032               	btfss	___fladd@b^0,0,c
 14285   0044E4  EF76  F022         	goto	u11351
 14286   0044E8  EF78  F022         	goto	u11350
 14287   0044EC                     u11351:
 14288   0044EC  EF79  F022         	goto	l11413
 14289   0044F0                     u11350:
 14290   0044F0  8E41               	bsf	___fladd@grs^0,7,c
 14291   0044F2                     l11413:
 14292   0044F2  3435               	rlcf	(___fladd@b+3)^0,w,c
 14293   0044F4  3235               	rrcf	(___fladd@b+3)^0,f,c
 14294   0044F6  3234               	rrcf	(___fladd@b+2)^0,f,c
 14295   0044F8  3233               	rrcf	(___fladd@b+1)^0,f,c
 14296   0044FA  3232               	rrcf	___fladd@b^0,f,c
 14297   0044FC  2A40               	incf	___fladd@bexp^0,f,c
 14298   0044FE                     l1218:
 14299   0044FE  503F               	movf	___fladd@aexp^0,w,c
 14300   004500  5C40               	subwf	___fladd@bexp^0,w,c
 14301   004502  A0D8               	btfss	status,0,c
 14302   004504  EF86  F022         	goto	u11361
 14303   004508  EF88  F022         	goto	u11360
 14304   00450C                     u11361:
 14305   00450C  EF62  F022         	goto	l1219
 14306   004510                     u11360:
 14307   004510                     l1217:
 14308   004510  BC3E               	btfsc	___fladd@signs^0,6,c
 14309   004512  EF8D  F022         	goto	u11371
 14310   004516  EF8F  F022         	goto	u11370
 14311   00451A                     u11371:
 14312   00451A  EFCF  F022         	goto	l11441
 14313   00451E                     u11370:
 14314   00451E  5040               	movf	___fladd@bexp^0,w,c
 14315   004520  A4D8               	btfss	status,2,c
 14316   004522  EF95  F022         	goto	u11381
 14317   004526  EF97  F022         	goto	u11380
 14318   00452A                     u11381:
 14319   00452A  EFA1  F022         	goto	l11423
 14320   00452E                     u11380:
 14321   00452E  0E00               	movlw	0
 14322   004530  6E32               	movwf	?___fladd^0,c
 14323   004532  0E00               	movlw	0
 14324   004534  6E33               	movwf	(?___fladd+1)^0,c
 14325   004536  0E00               	movlw	0
 14326   004538  6E34               	movwf	(?___fladd+2)^0,c
 14327   00453A  0E00               	movlw	0
 14328   00453C  6E35               	movwf	(?___fladd+3)^0,c
 14329   00453E  EFF0  F023         	goto	l1226
 14330   004542                     l11423:
 14331   004542  5036               	movf	___fladd@a^0,w,c
 14332   004544  2632               	addwf	___fladd@b^0,f,c
 14333   004546  5037               	movf	(___fladd@a+1)^0,w,c
 14334   004548  2233               	addwfc	(___fladd@b+1)^0,f,c
 14335   00454A  5038               	movf	(___fladd@a+2)^0,w,c
 14336   00454C  2234               	addwfc	(___fladd@b+2)^0,f,c
 14337   00454E  5039               	movf	(___fladd@a+3)^0,w,c
 14338   004550  2235               	addwfc	(___fladd@b+3)^0,f,c
 14339   004552  A035               	btfss	(___fladd@b+3)^0,0,c
 14340   004554  EFAE  F022         	goto	u11391
 14341   004558  EFB0  F022         	goto	u11390
 14342   00455C                     u11391:
 14343   00455C  EF5C  F023         	goto	l11477
 14344   004560                     u11390:
 14345   004560  A041               	btfss	___fladd@grs^0,0,c
 14346   004562  EFB5  F022         	goto	u11401
 14347   004566  EFB7  F022         	goto	u11400
 14348   00456A                     u11401:
 14349   00456A  EFBD  F022         	goto	l11431
 14350   00456E                     u11400:
 14351   00456E  90D8               	bcf	status,0,c
 14352   004570  3041               	rrcf	___fladd@grs^0,w,c
 14353   004572  0901               	iorlw	1
 14354   004574  6E41               	movwf	___fladd@grs^0,c
 14355   004576  EFBF  F022         	goto	l11433
 14356   00457A                     l11431:
 14357   00457A  90D8               	bcf	status,0,c
 14358   00457C  3241               	rrcf	___fladd@grs^0,f,c
 14359   00457E                     l11433:
 14360   00457E  A032               	btfss	___fladd@b^0,0,c
 14361   004580  EFC4  F022         	goto	u11411
 14362   004584  EFC6  F022         	goto	u11410
 14363   004588                     u11411:
 14364   004588  EFC7  F022         	goto	l11437
 14365   00458C                     u11410:
 14366   00458C  8E41               	bsf	___fladd@grs^0,7,c
 14367   00458E                     l11437:
 14368   00458E  3435               	rlcf	(___fladd@b+3)^0,w,c
 14369   004590  3235               	rrcf	(___fladd@b+3)^0,f,c
 14370   004592  3234               	rrcf	(___fladd@b+2)^0,f,c
 14371   004594  3233               	rrcf	(___fladd@b+1)^0,f,c
 14372   004596  3232               	rrcf	___fladd@b^0,f,c
 14373   004598  2A40               	incf	___fladd@bexp^0,f,c
 14374   00459A  EF5C  F023         	goto	l11477
 14375   00459E                     l11441:
 14376   00459E  5036               	movf	___fladd@a^0,w,c
 14377   0045A0  5C32               	subwf	___fladd@b^0,w,c
 14378   0045A2  5037               	movf	(___fladd@a+1)^0,w,c
 14379   0045A4  5833               	subwfb	(___fladd@b+1)^0,w,c
 14380   0045A6  5038               	movf	(___fladd@a+2)^0,w,c
 14381   0045A8  5834               	subwfb	(___fladd@b+2)^0,w,c
 14382   0045AA  5035               	movf	(___fladd@b+3)^0,w,c
 14383   0045AC  0A80               	xorlw	128
 14384   0045AE  6E3A               	movwf	??___fladd^0,c
 14385   0045B0  5039               	movf	(___fladd@a+3)^0,w,c
 14386   0045B2  0A80               	xorlw	128
 14387   0045B4  583A               	subwfb	??___fladd^0,w,c
 14388   0045B6  B0D8               	btfsc	status,0,c
 14389   0045B8  EFE0  F022         	goto	u11421
 14390   0045BC  EFE2  F022         	goto	u11420
 14391   0045C0                     u11421:
 14392   0045C0  EF0D  F023         	goto	l11451
 14393   0045C4                     u11420:
 14394   0045C4  5032               	movf	___fladd@b^0,w,c
 14395   0045C6  5C36               	subwf	___fladd@a^0,w,c
 14396   0045C8  6E3A               	movwf	??___fladd^0,c
 14397   0045CA  5033               	movf	(___fladd@b+1)^0,w,c
 14398   0045CC  5837               	subwfb	(___fladd@a+1)^0,w,c
 14399   0045CE  6E3B               	movwf	(??___fladd+1)^0,c
 14400   0045D0  5034               	movf	(___fladd@b+2)^0,w,c
 14401   0045D2  5838               	subwfb	(___fladd@a+2)^0,w,c
 14402   0045D4  6E3C               	movwf	(??___fladd+2)^0,c
 14403   0045D6  5035               	movf	(___fladd@b+3)^0,w,c
 14404   0045D8  5839               	subwfb	(___fladd@a+3)^0,w,c
 14405   0045DA  6E3D               	movwf	(??___fladd+3)^0,c
 14406   0045DC  0EFF               	movlw	255
 14407   0045DE  243A               	addwf	??___fladd^0,w,c
 14408   0045E0  6E32               	movwf	___fladd@b^0,c
 14409   0045E2  0EFF               	movlw	255
 14410   0045E4  203B               	addwfc	(??___fladd+1)^0,w,c
 14411   0045E6  6E33               	movwf	(___fladd@b+1)^0,c
 14412   0045E8  0EFF               	movlw	255
 14413   0045EA  203C               	addwfc	(??___fladd+2)^0,w,c
 14414   0045EC  6E34               	movwf	(___fladd@b+2)^0,c
 14415   0045EE  0EFF               	movlw	255
 14416   0045F0  203D               	addwfc	(??___fladd+3)^0,w,c
 14417   0045F2  6E35               	movwf	(___fladd@b+3)^0,c
 14418   0045F4  0E80               	movlw	128
 14419   0045F6  1A3E               	xorwf	___fladd@signs^0,f,c
 14420   0045F8  6C41               	negf	___fladd@grs^0,c
 14421   0045FA  5041               	movf	___fladd@grs^0,w,c
 14422   0045FC  A4D8               	btfss	status,2,c
 14423   0045FE  EF03  F023         	goto	u11431
 14424   004602  EF05  F023         	goto	u11430
 14425   004606                     u11431:
 14426   004606  EF15  F023         	goto	l1234
 14427   00460A                     u11430:
 14428   00460A  0E01               	movlw	1
 14429   00460C  2632               	addwf	___fladd@b^0,f,c
 14430   00460E  0E00               	movlw	0
 14431   004610  2233               	addwfc	(___fladd@b+1)^0,f,c
 14432   004612  2234               	addwfc	(___fladd@b+2)^0,f,c
 14433   004614  2235               	addwfc	(___fladd@b+3)^0,f,c
 14434   004616  EF15  F023         	goto	l1234
 14435   00461A                     l11451:
 14436   00461A  5036               	movf	___fladd@a^0,w,c
 14437   00461C  5E32               	subwf	___fladd@b^0,f,c
 14438   00461E  5037               	movf	(___fladd@a+1)^0,w,c
 14439   004620  5A33               	subwfb	(___fladd@b+1)^0,f,c
 14440   004622  5038               	movf	(___fladd@a+2)^0,w,c
 14441   004624  5A34               	subwfb	(___fladd@b+2)^0,f,c
 14442   004626  5039               	movf	(___fladd@a+3)^0,w,c
 14443   004628  5A35               	subwfb	(___fladd@b+3)^0,f,c
 14444   00462A                     l1234:
 14445   00462A  5032               	movf	___fladd@b^0,w,c
 14446   00462C  1033               	iorwf	(___fladd@b+1)^0,w,c
 14447   00462E  1034               	iorwf	(___fladd@b+2)^0,w,c
 14448   004630  1035               	iorwf	(___fladd@b+3)^0,w,c
 14449   004632  A4D8               	btfss	status,2,c
 14450   004634  EF1E  F023         	goto	u11441
 14451   004638  EF20  F023         	goto	u11440
 14452   00463C                     u11441:
 14453   00463C  EF55  F023         	goto	l11475
 14454   004640                     u11440:
 14455   004640  5041               	movf	___fladd@grs^0,w,c
 14456   004642  A4D8               	btfss	status,2,c
 14457   004644  EF26  F023         	goto	u11451
 14458   004648  EF28  F023         	goto	u11450
 14459   00464C                     u11451:
 14460   00464C  EF55  F023         	goto	l11475
 14461   004650                     u11450:
 14462   004650  0E00               	movlw	0
 14463   004652  6E32               	movwf	?___fladd^0,c
 14464   004654  0E00               	movlw	0
 14465   004656  6E33               	movwf	(?___fladd+1)^0,c
 14466   004658  0E00               	movlw	0
 14467   00465A  6E34               	movwf	(?___fladd+2)^0,c
 14468   00465C  0E00               	movlw	0
 14469   00465E  6E35               	movwf	(?___fladd+3)^0,c
 14470   004660  EFF0  F023         	goto	l1226
 14471   004664                     l11459:
 14472   004664  90D8               	bcf	status,0,c
 14473   004666  3632               	rlcf	___fladd@b^0,f,c
 14474   004668  3633               	rlcf	(___fladd@b+1)^0,f,c
 14475   00466A  3634               	rlcf	(___fladd@b+2)^0,f,c
 14476   00466C  3635               	rlcf	(___fladd@b+3)^0,f,c
 14477   00466E  AE41               	btfss	___fladd@grs^0,7,c
 14478   004670  EF3C  F023         	goto	u11461
 14479   004674  EF3E  F023         	goto	u11460
 14480   004678                     u11461:
 14481   004678  EF3F  F023         	goto	l11465
 14482   00467C                     u11460:
 14483   00467C  8032               	bsf	___fladd@b^0,0,c
 14484   00467E                     l11465:
 14485   00467E  A041               	btfss	___fladd@grs^0,0,c
 14486   004680  EF44  F023         	goto	u11471
 14487   004684  EF46  F023         	goto	u11470
 14488   004688                     u11471:
 14489   004688  EF4A  F023         	goto	l11469
 14490   00468C                     u11470:
 14491   00468C  80D8               	bsf	status,0,c
 14492   00468E  3641               	rlcf	___fladd@grs^0,f,c
 14493   004690  EF4C  F023         	goto	l11471
 14494   004694                     l11469:
 14495   004694  90D8               	bcf	status,0,c
 14496   004696  3641               	rlcf	___fladd@grs^0,f,c
 14497   004698                     l11471:
 14498   004698  5040               	movf	___fladd@bexp^0,w,c
 14499   00469A  B4D8               	btfsc	status,2,c
 14500   00469C  EF52  F023         	goto	u11481
 14501   0046A0  EF54  F023         	goto	u11480
 14502   0046A4                     u11481:
 14503   0046A4  EF55  F023         	goto	l11475
 14504   0046A8                     u11480:
 14505   0046A8  0640               	decf	___fladd@bexp^0,f,c
 14506   0046AA                     l11475:
 14507   0046AA  AE34               	btfss	(___fladd@b+2)^0,7,c
 14508   0046AC  EF5A  F023         	goto	u11491
 14509   0046B0  EF5C  F023         	goto	u11490
 14510   0046B4                     u11491:
 14511   0046B4  EF32  F023         	goto	l11459
 14512   0046B8                     u11490:
 14513   0046B8                     l11477:
 14514   0046B8  0E00               	movlw	0
 14515   0046BA  6E3F               	movwf	___fladd@aexp^0,c
 14516   0046BC  AE41               	btfss	___fladd@grs^0,7,c
 14517   0046BE  EF63  F023         	goto	u11501
 14518   0046C2  EF65  F023         	goto	u11500
 14519   0046C6                     u11501:
 14520   0046C6  EF7D  F023         	goto	l1243
 14521   0046CA                     u11500:
 14522   0046CA  C041  F03A         	movff	___fladd@grs,??___fladd
 14523   0046CE  0E7F               	movlw	127
 14524   0046D0  163A               	andwf	??___fladd^0,f,c
 14525   0046D2  B4D8               	btfsc	status,2,c
 14526   0046D4  EF6E  F023         	goto	u11511
 14527   0046D8  EF70  F023         	goto	u11510
 14528   0046DC                     u11511:
 14529   0046DC  EF74  F023         	goto	l1244
 14530   0046E0                     u11510:
 14531   0046E0                     l11483:
 14532   0046E0  0E01               	movlw	1
 14533   0046E2  6E3F               	movwf	___fladd@aexp^0,c
 14534   0046E4  EF7D  F023         	goto	l1243
 14535   0046E8                     l1244:
 14536   0046E8  A032               	btfss	___fladd@b^0,0,c
 14537   0046EA  EF79  F023         	goto	u11521
 14538   0046EE  EF7B  F023         	goto	u11520
 14539   0046F2                     u11521:
 14540   0046F2  EF7D  F023         	goto	l1243
 14541   0046F6                     u11520:
 14542   0046F6  EF70  F023         	goto	l11483
 14543   0046FA                     l1243:
 14544   0046FA  503F               	movf	___fladd@aexp^0,w,c
 14545   0046FC  B4D8               	btfsc	status,2,c
 14546   0046FE  EF83  F023         	goto	u11531
 14547   004702  EF85  F023         	goto	u11530
 14548   004706                     u11531:
 14549   004706  EFB0  F023         	goto	l11495
 14550   00470A                     u11530:
 14551   00470A  0E01               	movlw	1
 14552   00470C  2632               	addwf	___fladd@b^0,f,c
 14553   00470E  0E00               	movlw	0
 14554   004710  2233               	addwfc	(___fladd@b+1)^0,f,c
 14555   004712  2234               	addwfc	(___fladd@b+2)^0,f,c
 14556   004714  2235               	addwfc	(___fladd@b+3)^0,f,c
 14557   004716  A035               	btfss	(___fladd@b+3)^0,0,c
 14558   004718  EF90  F023         	goto	u11541
 14559   00471C  EF92  F023         	goto	u11540
 14560   004720                     u11541:
 14561   004720  EFB0  F023         	goto	l11495
 14562   004724                     u11540:
 14563   004724  C032  F03A         	movff	___fladd@b,??___fladd
 14564   004728  C033  F03B         	movff	___fladd@b+1,??___fladd+1
 14565   00472C  C034  F03C         	movff	___fladd@b+2,??___fladd+2
 14566   004730  C035  F03D         	movff	___fladd@b+3,??___fladd+3
 14567   004734  343D               	rlcf	(??___fladd+3)^0,w,c
 14568   004736  323D               	rrcf	(??___fladd+3)^0,f,c
 14569   004738  323C               	rrcf	(??___fladd+2)^0,f,c
 14570   00473A  323B               	rrcf	(??___fladd+1)^0,f,c
 14571   00473C  323A               	rrcf	??___fladd^0,f,c
 14572   00473E  C03A  F032         	movff	??___fladd,___fladd@b
 14573   004742  C03B  F033         	movff	??___fladd+1,___fladd@b+1
 14574   004746  C03C  F034         	movff	??___fladd+2,___fladd@b+2
 14575   00474A  C03D  F035         	movff	??___fladd+3,___fladd@b+3
 14576   00474E  2840               	incf	___fladd@bexp^0,w,c
 14577   004750  B4D8               	btfsc	status,2,c
 14578   004752  EFAD  F023         	goto	u11551
 14579   004756  EFAF  F023         	goto	u11550
 14580   00475A                     u11551:
 14581   00475A  EFB0  F023         	goto	l11495
 14582   00475E                     u11550:
 14583   00475E  2A40               	incf	___fladd@bexp^0,f,c
 14584   004760                     l11495:
 14585   004760  2840               	incf	___fladd@bexp^0,w,c
 14586   004762  B4D8               	btfsc	status,2,c
 14587   004764  EFB6  F023         	goto	u11561
 14588   004768  EFB8  F023         	goto	u11560
 14589   00476C                     u11561:
 14590   00476C  EFC0  F023         	goto	l11499
 14591   004770                     u11560:
 14592   004770  5040               	movf	___fladd@bexp^0,w,c
 14593   004772  A4D8               	btfss	status,2,c
 14594   004774  EFBE  F023         	goto	u11571
 14595   004778  EFC0  F023         	goto	u11570
 14596   00477C                     u11571:
 14597   00477C  EFD2  F023         	goto	l11503
 14598   004780                     u11570:
 14599   004780                     l11499:
 14600   004780  0E00               	movlw	0
 14601   004782  6E32               	movwf	___fladd@b^0,c
 14602   004784  0E00               	movlw	0
 14603   004786  6E33               	movwf	(___fladd@b+1)^0,c
 14604   004788  0E00               	movlw	0
 14605   00478A  6E34               	movwf	(___fladd@b+2)^0,c
 14606   00478C  0E00               	movlw	0
 14607   00478E  6E35               	movwf	(___fladd@b+3)^0,c
 14608   004790  5040               	movf	___fladd@bexp^0,w,c
 14609   004792  A4D8               	btfss	status,2,c
 14610   004794  EFCE  F023         	goto	u11581
 14611   004798  EFD0  F023         	goto	u11580
 14612   00479C                     u11581:
 14613   00479C  EFD2  F023         	goto	l11503
 14614   0047A0                     u11580:
 14615   0047A0  0E00               	movlw	0
 14616   0047A2  6E3E               	movwf	___fladd@signs^0,c
 14617   0047A4                     l11503:
 14618   0047A4  A040               	btfss	___fladd@bexp^0,0,c
 14619   0047A6  EFD7  F023         	goto	u11591
 14620   0047AA  EFD9  F023         	goto	u11590
 14621   0047AE                     u11591:
 14622   0047AE  EFDC  F023         	goto	l11507
 14623   0047B2                     u11590:
 14624   0047B2  8E34               	bsf	(___fladd@b+2)^0,7,c
 14625   0047B4  EFDD  F023         	goto	l11509
 14626   0047B8                     l11507:
 14627   0047B8  9E34               	bcf	(___fladd@b+2)^0,7,c
 14628   0047BA                     l11509:
 14629   0047BA  90D8               	bcf	status,0,c
 14630   0047BC  3040               	rrcf	___fladd@bexp^0,w,c
 14631   0047BE  6E35               	movwf	(___fladd@b+3)^0,c
 14632   0047C0  AE3E               	btfss	___fladd@signs^0,7,c
 14633   0047C2  EFE5  F023         	goto	u11601
 14634   0047C6  EFE7  F023         	goto	u11600
 14635   0047CA                     u11601:
 14636   0047CA  EFE8  F023         	goto	l11515
 14637   0047CE                     u11600:
 14638   0047CE  8E35               	bsf	(___fladd@b+3)^0,7,c
 14639   0047D0                     l11515:
 14640   0047D0  C032  F032         	movff	___fladd@b,?___fladd
 14641   0047D4  C033  F033         	movff	___fladd@b+1,?___fladd+1
 14642   0047D8  C034  F034         	movff	___fladd@b+2,?___fladd+2
 14643   0047DC  C035  F035         	movff	___fladd@b+3,?___fladd+3
 14644   0047E0                     l1226:
 14645   0047E0  0012               	return		;funcret
 14646   0047E2                     __end_of___fladd:
 14647                           	callstack 0
 14648                           
 14649 ;; *************** function ___flneg *****************
 14650 ;; Defined at:
 14651 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flneg.c"
 14652 ;; Parameters:    Size  Location     Type
 14653 ;;  f1              4    0[COMRAM] unsigned char 
 14654 ;; Auto vars:     Size  Location     Type
 14655 ;;		None
 14656 ;; Return value:  Size  Location     Type
 14657 ;;                  4    0[COMRAM] unsigned char 
 14658 ;; Registers used:
 14659 ;;		wreg, status,2, status,0
 14660 ;; Tracked objects:
 14661 ;;		On entry : 0/0
 14662 ;;		On exit  : 0/0
 14663 ;;		Unchanged: 0/0
 14664 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14665 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14666 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14667 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14668 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14669 ;;Total ram usage:        4 bytes
 14670 ;; Hardware stack levels used: 1
 14671 ;; This function calls:
 14672 ;;		Nothing
 14673 ;; This function is called by:
 14674 ;;		_efgtoa
 14675 ;;		_powf
 14676 ;; This function uses a non-reentrant model
 14677 ;;
 14678                           
 14679                           	psect	text46
 14680   007984                     __ptext46:
 14681                           	callstack 0
 14682   007984                     ___flneg:
 14683                           	callstack 24
 14684   007984  5001               	movf	___flneg@f1^0,w,c
 14685   007986  1002               	iorwf	(___flneg@f1+1)^0,w,c
 14686   007988  1003               	iorwf	(___flneg@f1+2)^0,w,c
 14687   00798A  1004               	iorwf	(___flneg@f1+3)^0,w,c
 14688   00798C  B4D8               	btfsc	status,2,c
 14689   00798E  EFCB  F03C         	goto	u12081
 14690   007992  EFCD  F03C         	goto	u12080
 14691   007996                     u12081:
 14692   007996  EFD5  F03C         	goto	l11819
 14693   00799A                     u12080:
 14694   00799A  0E00               	movlw	0
 14695   00799C  1A01               	xorwf	___flneg@f1^0,f,c
 14696   00799E  0E00               	movlw	0
 14697   0079A0  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 14698   0079A2  0E00               	movlw	0
 14699   0079A4  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 14700   0079A6  0E80               	movlw	128
 14701   0079A8  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 14702   0079AA                     l11819:
 14703   0079AA  C001  F001         	movff	___flneg@f1,?___flneg
 14704   0079AE  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 14705   0079B2  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 14706   0079B6  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 14707   0079BA  0012               	return		;funcret
 14708   0079BC                     __end_of___flneg:
 14709                           	callstack 0
 14710                           
 14711 ;; *************** function ___flge *****************
 14712 ;; Defined at:
 14713 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\flge.c"
 14714 ;; Parameters:    Size  Location     Type
 14715 ;;  ff1             4   98[COMRAM] unsigned char 
 14716 ;;  ff2             4  102[COMRAM] unsigned char 
 14717 ;; Auto vars:     Size  Location     Type
 14718 ;;		None
 14719 ;; Return value:  Size  Location     Type
 14720 ;;		None               void
 14721 ;; Registers used:
 14722 ;;		wreg, status,2, status,0
 14723 ;; Tracked objects:
 14724 ;;		On entry : 0/0
 14725 ;;		On exit  : 0/0
 14726 ;;		Unchanged: 0/0
 14727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14728 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14730 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14731 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14732 ;;Total ram usage:       12 bytes
 14733 ;; Hardware stack levels used: 1
 14734 ;; This function calls:
 14735 ;;		Nothing
 14736 ;; This function is called by:
 14737 ;;		_send_the_result_to_LCD
 14738 ;;		_efgtoa
 14739 ;;		_powf
 14740 ;; This function uses a non-reentrant model
 14741 ;;
 14742                           
 14743                           	psect	text47
 14744   00696E                     __ptext47:
 14745                           	callstack 0
 14746   00696E                     ___flge:
 14747                           	callstack 24
 14748   00696E  0E00               	movlw	0
 14749   006970  1463               	andwf	___flge@ff1^0,w,c
 14750   006972  6E6B               	movwf	??___flge^0,c
 14751   006974  0E00               	movlw	0
 14752   006976  1464               	andwf	(___flge@ff1+1)^0,w,c
 14753   006978  6E6C               	movwf	(??___flge+1)^0,c
 14754   00697A  0E80               	movlw	128
 14755   00697C  1465               	andwf	(___flge@ff1+2)^0,w,c
 14756   00697E  6E6D               	movwf	(??___flge+2)^0,c
 14757   006980  0E7F               	movlw	127
 14758   006982  1466               	andwf	(___flge@ff1+3)^0,w,c
 14759   006984  6E6E               	movwf	(??___flge+3)^0,c
 14760   006986  506B               	movf	??___flge^0,w,c
 14761   006988  106C               	iorwf	(??___flge+1)^0,w,c
 14762   00698A  106D               	iorwf	(??___flge+2)^0,w,c
 14763   00698C  106E               	iorwf	(??___flge+3)^0,w,c
 14764   00698E  A4D8               	btfss	status,2,c
 14765   006990  EFCC  F034         	goto	u12031
 14766   006994  EFCE  F034         	goto	u12030
 14767   006998                     u12031:
 14768   006998  EFD6  F034         	goto	l11797
 14769   00699C                     u12030:
 14770   00699C  0E00               	movlw	0
 14771   00699E  6E63               	movwf	___flge@ff1^0,c
 14772   0069A0  0E00               	movlw	0
 14773   0069A2  6E64               	movwf	(___flge@ff1+1)^0,c
 14774   0069A4  0E00               	movlw	0
 14775   0069A6  6E65               	movwf	(___flge@ff1+2)^0,c
 14776   0069A8  0E00               	movlw	0
 14777   0069AA  6E66               	movwf	(___flge@ff1+3)^0,c
 14778   0069AC                     l11797:
 14779   0069AC  0E00               	movlw	0
 14780   0069AE  1467               	andwf	___flge@ff2^0,w,c
 14781   0069B0  6E6B               	movwf	??___flge^0,c
 14782   0069B2  0E00               	movlw	0
 14783   0069B4  1468               	andwf	(___flge@ff2+1)^0,w,c
 14784   0069B6  6E6C               	movwf	(??___flge+1)^0,c
 14785   0069B8  0E80               	movlw	128
 14786   0069BA  1469               	andwf	(___flge@ff2+2)^0,w,c
 14787   0069BC  6E6D               	movwf	(??___flge+2)^0,c
 14788   0069BE  0E7F               	movlw	127
 14789   0069C0  146A               	andwf	(___flge@ff2+3)^0,w,c
 14790   0069C2  6E6E               	movwf	(??___flge+3)^0,c
 14791   0069C4  506B               	movf	??___flge^0,w,c
 14792   0069C6  106C               	iorwf	(??___flge+1)^0,w,c
 14793   0069C8  106D               	iorwf	(??___flge+2)^0,w,c
 14794   0069CA  106E               	iorwf	(??___flge+3)^0,w,c
 14795   0069CC  A4D8               	btfss	status,2,c
 14796   0069CE  EFEB  F034         	goto	u12041
 14797   0069D2  EFED  F034         	goto	u12040
 14798   0069D6                     u12041:
 14799   0069D6  EFF5  F034         	goto	l11801
 14800   0069DA                     u12040:
 14801   0069DA  0E00               	movlw	0
 14802   0069DC  6E67               	movwf	___flge@ff2^0,c
 14803   0069DE  0E00               	movlw	0
 14804   0069E0  6E68               	movwf	(___flge@ff2+1)^0,c
 14805   0069E2  0E00               	movlw	0
 14806   0069E4  6E69               	movwf	(___flge@ff2+2)^0,c
 14807   0069E6  0E00               	movlw	0
 14808   0069E8  6E6A               	movwf	(___flge@ff2+3)^0,c
 14809   0069EA                     l11801:
 14810   0069EA  AE66               	btfss	(___flge@ff1+3)^0,7,c
 14811   0069EC  EFFA  F034         	goto	u12051
 14812   0069F0  EFFC  F034         	goto	u12050
 14813   0069F4                     u12051:
 14814   0069F4  EF05  F035         	goto	l11805
 14815   0069F8                     u12050:
 14816   0069F8  6C63               	negf	___flge@ff1^0,c
 14817   0069FA  1E64               	comf	(___flge@ff1+1)^0,f,c
 14818   0069FC  B0D8               	btfsc	status,0,c
 14819   0069FE  2A64               	incf	(___flge@ff1+1)^0,f,c
 14820   006A00  1E65               	comf	(___flge@ff1+2)^0,f,c
 14821   006A02  B0D8               	btfsc	status,0,c
 14822   006A04  2A65               	incf	(___flge@ff1+2)^0,f,c
 14823   006A06  0E80               	movlw	128
 14824   006A08  5666               	subfwb	(___flge@ff1+3)^0,f,c
 14825   006A0A                     l11805:
 14826   006A0A  AE6A               	btfss	(___flge@ff2+3)^0,7,c
 14827   006A0C  EF0A  F035         	goto	u12061
 14828   006A10  EF0C  F035         	goto	u12060
 14829   006A14                     u12061:
 14830   006A14  EF15  F035         	goto	l954
 14831   006A18                     u12060:
 14832   006A18  6C67               	negf	___flge@ff2^0,c
 14833   006A1A  1E68               	comf	(___flge@ff2+1)^0,f,c
 14834   006A1C  B0D8               	btfsc	status,0,c
 14835   006A1E  2A68               	incf	(___flge@ff2+1)^0,f,c
 14836   006A20  1E69               	comf	(___flge@ff2+2)^0,f,c
 14837   006A22  B0D8               	btfsc	status,0,c
 14838   006A24  2A69               	incf	(___flge@ff2+2)^0,f,c
 14839   006A26  0E80               	movlw	128
 14840   006A28  566A               	subfwb	(___flge@ff2+3)^0,f,c
 14841   006A2A                     l954:
 14842   006A2A  0E00               	movlw	0
 14843   006A2C  1A63               	xorwf	___flge@ff1^0,f,c
 14844   006A2E  0E00               	movlw	0
 14845   006A30  1A64               	xorwf	(___flge@ff1+1)^0,f,c
 14846   006A32  0E00               	movlw	0
 14847   006A34  1A65               	xorwf	(___flge@ff1+2)^0,f,c
 14848   006A36  0E80               	movlw	128
 14849   006A38  1A66               	xorwf	(___flge@ff1+3)^0,f,c
 14850   006A3A  0E00               	movlw	0
 14851   006A3C  1A67               	xorwf	___flge@ff2^0,f,c
 14852   006A3E  0E00               	movlw	0
 14853   006A40  1A68               	xorwf	(___flge@ff2+1)^0,f,c
 14854   006A42  0E00               	movlw	0
 14855   006A44  1A69               	xorwf	(___flge@ff2+2)^0,f,c
 14856   006A46  0E80               	movlw	128
 14857   006A48  1A6A               	xorwf	(___flge@ff2+3)^0,f,c
 14858   006A4A  5067               	movf	___flge@ff2^0,w,c
 14859   006A4C  5C63               	subwf	___flge@ff1^0,w,c
 14860   006A4E  5068               	movf	(___flge@ff2+1)^0,w,c
 14861   006A50  5864               	subwfb	(___flge@ff1+1)^0,w,c
 14862   006A52  5069               	movf	(___flge@ff2+2)^0,w,c
 14863   006A54  5865               	subwfb	(___flge@ff1+2)^0,w,c
 14864   006A56  506A               	movf	(___flge@ff2+3)^0,w,c
 14865   006A58  5866               	subwfb	(___flge@ff1+3)^0,w,c
 14866   006A5A  B0D8               	btfsc	status,0,c
 14867   006A5C  EF32  F035         	goto	u12071
 14868   006A60  EF34  F035         	goto	u12070
 14869   006A64                     u12071:
 14870   006A64  EF37  F035         	goto	l11811
 14871   006A68                     u12070:
 14872   006A68  90D8               	bcf	status,0,c
 14873   006A6A  EF38  F035         	goto	l959
 14874   006A6E                     l11811:
 14875   006A6E  80D8               	bsf	status,0,c
 14876   006A70                     l959:
 14877   006A70  0012               	return		;funcret
 14878   006A72                     __end_of___flge:
 14879                           	callstack 0
 14880                           
 14881 ;; *************** function _Division_operation *****************
 14882 ;; Defined at:
 14883 ;;		line 195 in file "calculator_function/calculator_functions.c"
 14884 ;; Parameters:    Size  Location     Type
 14885 ;;  num1_val        4   90[COMRAM] float 
 14886 ;;  num2_val        4   94[COMRAM] float 
 14887 ;;  result          1   98[COMRAM] PTR float 
 14888 ;;		 -> total_result(4), result(4), 
 14889 ;; Auto vars:     Size  Location     Type
 14890 ;;		None
 14891 ;; Return value:  Size  Location     Type
 14892 ;;                  1    wreg      void 
 14893 ;; Registers used:
 14894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14895 ;; Tracked objects:
 14896 ;;		On entry : 0/0
 14897 ;;		On exit  : 0/0
 14898 ;;		Unchanged: 0/0
 14899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14900 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14901 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14903 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14904 ;;Total ram usage:        9 bytes
 14905 ;; Hardware stack levels used: 1
 14906 ;; Hardware stack levels required when called: 1
 14907 ;; This function calls:
 14908 ;;		___fldiv
 14909 ;; This function is called by:
 14910 ;;		_main
 14911 ;; This function uses a non-reentrant model
 14912 ;;
 14913                           
 14914                           	psect	text48
 14915   00789C                     __ptext48:
 14916                           	callstack 0
 14917   00789C                     _Division_operation:
 14918                           	callstack 29
 14919   00789C                     
 14920                           ;calculator_function/calculator_functions.c: 196: *result = num1_val/num2_val;
 14921   00789C  C05B  F042         	movff	Division_operation@num1_val,___fldiv@b
 14922   0078A0  C05C  F043         	movff	Division_operation@num1_val+1,___fldiv@b+1
 14923   0078A4  C05D  F044         	movff	Division_operation@num1_val+2,___fldiv@b+2
 14924   0078A8  C05E  F045         	movff	Division_operation@num1_val+3,___fldiv@b+3
 14925   0078AC  C05F  F046         	movff	Division_operation@num2_val,___fldiv@a
 14926   0078B0  C060  F047         	movff	Division_operation@num2_val+1,___fldiv@a+1
 14927   0078B4  C061  F048         	movff	Division_operation@num2_val+2,___fldiv@a+2
 14928   0078B8  C062  F049         	movff	Division_operation@num2_val+3,___fldiv@a+3
 14929   0078BC  ECF5  F027         	call	___fldiv	;wreg free
 14930   0078C0  5063               	movf	Division_operation@result^0,w,c
 14931   0078C2  6ED9               	movwf	fsr2l,c
 14932   0078C4  6ADA               	clrf	fsr2h,c
 14933   0078C6  C042  FFDE         	movff	?___fldiv,postinc2
 14934   0078CA  C043  FFDE         	movff	?___fldiv+1,postinc2
 14935   0078CE  C044  FFDE         	movff	?___fldiv+2,postinc2
 14936   0078D2  C045  FFDE         	movff	?___fldiv+3,postinc2
 14937   0078D6  0012               	return		;funcret
 14938   0078D8                     __end_of_Division_operation:
 14939                           	callstack 0
 14940                           
 14941 ;; *************** function ___fldiv *****************
 14942 ;; Defined at:
 14943 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.45\pic\sources\c99\common\sprcdiv.c"
 14944 ;; Parameters:    Size  Location     Type
 14945 ;;  b               4   65[COMRAM] void 
 14946 ;;  a               4   69[COMRAM] void 
 14947 ;; Auto vars:     Size  Location     Type
 14948 ;;  grs             4   84[COMRAM] unsigned long 
 14949 ;;  rem             4   77[COMRAM] unsigned long 
 14950 ;;  new_exp         2   82[COMRAM] short 
 14951 ;;  aexp            1   89[COMRAM] unsigned char 
 14952 ;;  bexp            1   88[COMRAM] unsigned char 
 14953 ;;  sign            1   81[COMRAM] unsigned char 
 14954 ;; Return value:  Size  Location     Type
 14955 ;;                  4   65[COMRAM] unsigned char 
 14956 ;; Registers used:
 14957 ;;		wreg, status,2, status,0
 14958 ;; Tracked objects:
 14959 ;;		On entry : 0/0
 14960 ;;		On exit  : 0/0
 14961 ;;		Unchanged: 0/0
 14962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14963 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14964 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14966 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14967 ;;Total ram usage:       25 bytes
 14968 ;; Hardware stack levels used: 1
 14969 ;; This function calls:
 14970 ;;		Nothing
 14971 ;; This function is called by:
 14972 ;;		_Division_operation
 14973 ;;		_efgtoa
 14974 ;;		_powf
 14975 ;; This function uses a non-reentrant model
 14976 ;;
 14977                           
 14978                           	psect	text49
 14979   004FEA                     __ptext49:
 14980                           	callstack 0
 14981   004FEA                     ___fldiv:
 14982                           	callstack 24
 14983   004FEA  5045               	movf	(___fldiv@b+3)^0,w,c
 14984   004FEC  0B80               	andlw	128
 14985   004FEE  6E52               	movwf	___fldiv@sign^0,c
 14986   004FF0  5045               	movf	(___fldiv@b+3)^0,w,c
 14987   004FF2  2445               	addwf	(___fldiv@b+3)^0,w,c
 14988   004FF4  6E59               	movwf	___fldiv@bexp^0,c
 14989   004FF6  AE44               	btfss	(___fldiv@b+2)^0,7,c
 14990   004FF8  EF00  F028         	goto	u11611
 14991   004FFC  EF02  F028         	goto	u11610
 14992   005000                     u11611:
 14993   005000  EF03  F028         	goto	l11525
 14994   005004                     u11610:
 14995   005004  8059               	bsf	___fldiv@bexp^0,0,c
 14996   005006                     l11525:
 14997   005006  5059               	movf	___fldiv@bexp^0,w,c
 14998   005008  B4D8               	btfsc	status,2,c
 14999   00500A  EF09  F028         	goto	u11621
 15000   00500E  EF0B  F028         	goto	u11620
 15001   005012                     u11621:
 15002   005012  EF20  F028         	goto	l11535
 15003   005016                     u11620:
 15004   005016  2859               	incf	___fldiv@bexp^0,w,c
 15005   005018  A4D8               	btfss	status,2,c
 15006   00501A  EF11  F028         	goto	u11631
 15007   00501E  EF13  F028         	goto	u11630
 15008   005022                     u11631:
 15009   005022  EF1B  F028         	goto	l11531
 15010   005026                     u11630:
 15011   005026  0E00               	movlw	0
 15012   005028  6E42               	movwf	___fldiv@b^0,c
 15013   00502A  0E00               	movlw	0
 15014   00502C  6E43               	movwf	(___fldiv@b+1)^0,c
 15015   00502E  0E00               	movlw	0
 15016   005030  6E44               	movwf	(___fldiv@b+2)^0,c
 15017   005032  0E00               	movlw	0
 15018   005034  6E45               	movwf	(___fldiv@b+3)^0,c
 15019   005036                     l11531:
 15020   005036  8E44               	bsf	(___fldiv@b+2)^0,7,c
 15021   005038  0E00               	movlw	0
 15022   00503A  6E45               	movwf	(___fldiv@b+3)^0,c
 15023   00503C  EF28  F028         	goto	l11537
 15024   005040                     l11535:
 15025   005040  0E00               	movlw	0
 15026   005042  6E42               	movwf	___fldiv@b^0,c
 15027   005044  0E00               	movlw	0
 15028   005046  6E43               	movwf	(___fldiv@b+1)^0,c
 15029   005048  0E00               	movlw	0
 15030   00504A  6E44               	movwf	(___fldiv@b+2)^0,c
 15031   00504C  0E00               	movlw	0
 15032   00504E  6E45               	movwf	(___fldiv@b+3)^0,c
 15033   005050                     l11537:
 15034   005050  5049               	movf	(___fldiv@a+3)^0,w,c
 15035   005052  0B80               	andlw	128
 15036   005054  1A52               	xorwf	___fldiv@sign^0,f,c
 15037   005056  5049               	movf	(___fldiv@a+3)^0,w,c
 15038   005058  2449               	addwf	(___fldiv@a+3)^0,w,c
 15039   00505A  6E5A               	movwf	___fldiv@aexp^0,c
 15040   00505C  AE48               	btfss	(___fldiv@a+2)^0,7,c
 15041   00505E  EF33  F028         	goto	u11641
 15042   005062  EF35  F028         	goto	u11640
 15043   005066                     u11641:
 15044   005066  EF36  F028         	goto	l11545
 15045   00506A                     u11640:
 15046   00506A  805A               	bsf	___fldiv@aexp^0,0,c
 15047   00506C                     l11545:
 15048   00506C  505A               	movf	___fldiv@aexp^0,w,c
 15049   00506E  B4D8               	btfsc	status,2,c
 15050   005070  EF3C  F028         	goto	u11651
 15051   005074  EF3E  F028         	goto	u11650
 15052   005078                     u11651:
 15053   005078  EF53  F028         	goto	l11555
 15054   00507C                     u11650:
 15055   00507C  285A               	incf	___fldiv@aexp^0,w,c
 15056   00507E  A4D8               	btfss	status,2,c
 15057   005080  EF44  F028         	goto	u11661
 15058   005084  EF46  F028         	goto	u11660
 15059   005088                     u11661:
 15060   005088  EF4E  F028         	goto	l11551
 15061   00508C                     u11660:
 15062   00508C  0E00               	movlw	0
 15063   00508E  6E46               	movwf	___fldiv@a^0,c
 15064   005090  0E00               	movlw	0
 15065   005092  6E47               	movwf	(___fldiv@a+1)^0,c
 15066   005094  0E00               	movlw	0
 15067   005096  6E48               	movwf	(___fldiv@a+2)^0,c
 15068   005098  0E00               	movlw	0
 15069   00509A  6E49               	movwf	(___fldiv@a+3)^0,c
 15070   00509C                     l11551:
 15071   00509C  8E48               	bsf	(___fldiv@a+2)^0,7,c
 15072   00509E  0E00               	movlw	0
 15073   0050A0  6E49               	movwf	(___fldiv@a+3)^0,c
 15074   0050A2  EF5B  F028         	goto	l11557
 15075   0050A6                     l11555:
 15076   0050A6  0E00               	movlw	0
 15077   0050A8  6E46               	movwf	___fldiv@a^0,c
 15078   0050AA  0E00               	movlw	0
 15079   0050AC  6E47               	movwf	(___fldiv@a+1)^0,c
 15080   0050AE  0E00               	movlw	0
 15081   0050B0  6E48               	movwf	(___fldiv@a+2)^0,c
 15082   0050B2  0E00               	movlw	0
 15083   0050B4  6E49               	movwf	(___fldiv@a+3)^0,c
 15084   0050B6                     l11557:
 15085   0050B6  5046               	movf	___fldiv@a^0,w,c
 15086   0050B8  1047               	iorwf	(___fldiv@a+1)^0,w,c
 15087   0050BA  1048               	iorwf	(___fldiv@a+2)^0,w,c
 15088   0050BC  1049               	iorwf	(___fldiv@a+3)^0,w,c
 15089   0050BE  A4D8               	btfss	status,2,c
 15090   0050C0  EF64  F028         	goto	u11671
 15091   0050C4  EF66  F028         	goto	u11670
 15092   0050C8                     u11671:
 15093   0050C8  EF7E  F028         	goto	l11569
 15094   0050CC                     u11670:
 15095   0050CC  0E00               	movlw	0
 15096   0050CE  6E42               	movwf	___fldiv@b^0,c
 15097   0050D0  0E00               	movlw	0
 15098   0050D2  6E43               	movwf	(___fldiv@b+1)^0,c
 15099   0050D4  0E00               	movlw	0
 15100   0050D6  6E44               	movwf	(___fldiv@b+2)^0,c
 15101   0050D8  0E00               	movlw	0
 15102   0050DA  6E45               	movwf	(___fldiv@b+3)^0,c
 15103   0050DC  0E80               	movlw	128
 15104   0050DE  1244               	iorwf	(___fldiv@b+2)^0,f,c
 15105   0050E0  0E7F               	movlw	127
 15106   0050E2  1245               	iorwf	(___fldiv@b+3)^0,f,c
 15107   0050E4                     l11563:
 15108   0050E4  5052               	movf	___fldiv@sign^0,w,c
 15109   0050E6  1245               	iorwf	(___fldiv@b+3)^0,f,c
 15110   0050E8  C042  F042         	movff	___fldiv@b,?___fldiv
 15111   0050EC  C043  F043         	movff	___fldiv@b+1,?___fldiv+1
 15112   0050F0  C044  F044         	movff	___fldiv@b+2,?___fldiv+2
 15113   0050F4  C045  F045         	movff	___fldiv@b+3,?___fldiv+3
 15114   0050F8  EFC1  F029         	goto	l1271
 15115   0050FC                     l11569:
 15116   0050FC  5059               	movf	___fldiv@bexp^0,w,c
 15117   0050FE  A4D8               	btfss	status,2,c
 15118   005100  EF84  F028         	goto	u11681
 15119   005104  EF86  F028         	goto	u11680
 15120   005108                     u11681:
 15121   005108  EF90  F028         	goto	l11577
 15122   00510C                     u11680:
 15123   00510C  0E00               	movlw	0
 15124   00510E  6E42               	movwf	?___fldiv^0,c
 15125   005110  0E00               	movlw	0
 15126   005112  6E43               	movwf	(?___fldiv+1)^0,c
 15127   005114  0E00               	movlw	0
 15128   005116  6E44               	movwf	(?___fldiv+2)^0,c
 15129   005118  0E00               	movlw	0
 15130   00511A  6E45               	movwf	(?___fldiv+3)^0,c
 15131   00511C  EFC1  F029         	goto	l1271
 15132   005120                     l11577:
 15133   005120  505A               	movf	___fldiv@aexp^0,w,c
 15134   005122  C059  F04A         	movff	___fldiv@bexp,??___fldiv
 15135   005126  6A4B               	clrf	(??___fldiv+1)^0,c
 15136   005128  5E4A               	subwf	??___fldiv^0,f,c
 15137   00512A  0E00               	movlw	0
 15138   00512C  5A4B               	subwfb	(??___fldiv+1)^0,f,c
 15139   00512E  0E7F               	movlw	127
 15140   005130  244A               	addwf	??___fldiv^0,w,c
 15141   005132  6E53               	movwf	___fldiv@new_exp^0,c
 15142   005134  0E00               	movlw	0
 15143   005136  204B               	addwfc	(??___fldiv+1)^0,w,c
 15144   005138  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15145   00513A  C042  F04E         	movff	___fldiv@b,___fldiv@rem
 15146   00513E  C043  F04F         	movff	___fldiv@b+1,___fldiv@rem+1
 15147   005142  C044  F050         	movff	___fldiv@b+2,___fldiv@rem+2
 15148   005146  C045  F051         	movff	___fldiv@b+3,___fldiv@rem+3
 15149   00514A  0E00               	movlw	0
 15150   00514C  6E42               	movwf	___fldiv@b^0,c
 15151   00514E  0E00               	movlw	0
 15152   005150  6E43               	movwf	(___fldiv@b+1)^0,c
 15153   005152  0E00               	movlw	0
 15154   005154  6E44               	movwf	(___fldiv@b+2)^0,c
 15155   005156  0E00               	movlw	0
 15156   005158  6E45               	movwf	(___fldiv@b+3)^0,c
 15157   00515A  0E00               	movlw	0
 15158   00515C  6E55               	movwf	___fldiv@grs^0,c
 15159   00515E  0E00               	movlw	0
 15160   005160  6E56               	movwf	(___fldiv@grs+1)^0,c
 15161   005162  0E00               	movlw	0
 15162   005164  6E57               	movwf	(___fldiv@grs+2)^0,c
 15163   005166  0E00               	movlw	0
 15164   005168  6E58               	movwf	(___fldiv@grs+3)^0,c
 15165   00516A  0E00               	movlw	0
 15166   00516C  6E5A               	movwf	___fldiv@aexp^0,c
 15167   00516E  EFF1  F028         	goto	l1273
 15168   005172                     l11587:
 15169   005172  505A               	movf	___fldiv@aexp^0,w,c
 15170   005174  B4D8               	btfsc	status,2,c
 15171   005176  EFBF  F028         	goto	u11691
 15172   00517A  EFC1  F028         	goto	u11690
 15173   00517E                     u11691:
 15174   00517E  EFD8  F028         	goto	l11595
 15175   005182                     u11690:
 15176   005182  90D8               	bcf	status,0,c
 15177   005184  364E               	rlcf	___fldiv@rem^0,f,c
 15178   005186  364F               	rlcf	(___fldiv@rem+1)^0,f,c
 15179   005188  3650               	rlcf	(___fldiv@rem+2)^0,f,c
 15180   00518A  3651               	rlcf	(___fldiv@rem+3)^0,f,c
 15181   00518C  90D8               	bcf	status,0,c
 15182   00518E  3642               	rlcf	___fldiv@b^0,f,c
 15183   005190  3643               	rlcf	(___fldiv@b+1)^0,f,c
 15184   005192  3644               	rlcf	(___fldiv@b+2)^0,f,c
 15185   005194  3645               	rlcf	(___fldiv@b+3)^0,f,c
 15186   005196  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15187   005198  EFD0  F028         	goto	u11701
 15188   00519C  EFD2  F028         	goto	u11700
 15189   0051A0                     u11701:
 15190   0051A0  EFD3  F028         	goto	l1276
 15191   0051A4                     u11700:
 15192   0051A4  8042               	bsf	___fldiv@b^0,0,c
 15193   0051A6                     l1276:
 15194   0051A6  90D8               	bcf	status,0,c
 15195   0051A8  3655               	rlcf	___fldiv@grs^0,f,c
 15196   0051AA  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 15197   0051AC  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 15198   0051AE  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 15199   0051B0                     l11595:
 15200   0051B0  5046               	movf	___fldiv@a^0,w,c
 15201   0051B2  5C4E               	subwf	___fldiv@rem^0,w,c
 15202   0051B4  5047               	movf	(___fldiv@a+1)^0,w,c
 15203   0051B6  584F               	subwfb	(___fldiv@rem+1)^0,w,c
 15204   0051B8  5048               	movf	(___fldiv@a+2)^0,w,c
 15205   0051BA  5850               	subwfb	(___fldiv@rem+2)^0,w,c
 15206   0051BC  5049               	movf	(___fldiv@a+3)^0,w,c
 15207   0051BE  5851               	subwfb	(___fldiv@rem+3)^0,w,c
 15208   0051C0  A0D8               	btfss	status,0,c
 15209   0051C2  EFE5  F028         	goto	u11711
 15210   0051C6  EFE7  F028         	goto	u11710
 15211   0051CA                     u11711:
 15212   0051CA  EFF0  F028         	goto	l11601
 15213   0051CE                     u11710:
 15214   0051CE  8C58               	bsf	(___fldiv@grs+3)^0,6,c
 15215   0051D0  5046               	movf	___fldiv@a^0,w,c
 15216   0051D2  5E4E               	subwf	___fldiv@rem^0,f,c
 15217   0051D4  5047               	movf	(___fldiv@a+1)^0,w,c
 15218   0051D6  5A4F               	subwfb	(___fldiv@rem+1)^0,f,c
 15219   0051D8  5048               	movf	(___fldiv@a+2)^0,w,c
 15220   0051DA  5A50               	subwfb	(___fldiv@rem+2)^0,f,c
 15221   0051DC  5049               	movf	(___fldiv@a+3)^0,w,c
 15222   0051DE  5A51               	subwfb	(___fldiv@rem+3)^0,f,c
 15223   0051E0                     l11601:
 15224   0051E0  2A5A               	incf	___fldiv@aexp^0,f,c
 15225   0051E2                     l1273:
 15226   0051E2  0E19               	movlw	25
 15227   0051E4  645A               	cpfsgt	___fldiv@aexp^0,c
 15228   0051E6  EFF7  F028         	goto	u11721
 15229   0051EA  EFF9  F028         	goto	u11720
 15230   0051EE                     u11721:
 15231   0051EE  EFB9  F028         	goto	l11587
 15232   0051F2                     u11720:
 15233   0051F2  504E               	movf	___fldiv@rem^0,w,c
 15234   0051F4  104F               	iorwf	(___fldiv@rem+1)^0,w,c
 15235   0051F6  1050               	iorwf	(___fldiv@rem+2)^0,w,c
 15236   0051F8  1051               	iorwf	(___fldiv@rem+3)^0,w,c
 15237   0051FA  B4D8               	btfsc	status,2,c
 15238   0051FC  EF02  F029         	goto	u11731
 15239   005200  EF04  F029         	goto	u11730
 15240   005204                     u11731:
 15241   005204  EF1C  F029         	goto	l11613
 15242   005208                     u11730:
 15243   005208  8055               	bsf	___fldiv@grs^0,0,c
 15244   00520A  EF1C  F029         	goto	l11613
 15245   00520E                     l11607:
 15246   00520E  90D8               	bcf	status,0,c
 15247   005210  3642               	rlcf	___fldiv@b^0,f,c
 15248   005212  3643               	rlcf	(___fldiv@b+1)^0,f,c
 15249   005214  3644               	rlcf	(___fldiv@b+2)^0,f,c
 15250   005216  3645               	rlcf	(___fldiv@b+3)^0,f,c
 15251   005218  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15252   00521A  EF11  F029         	goto	u11741
 15253   00521E  EF13  F029         	goto	u11740
 15254   005222                     u11741:
 15255   005222  EF14  F029         	goto	l1282
 15256   005226                     u11740:
 15257   005226  8042               	bsf	___fldiv@b^0,0,c
 15258   005228                     l1282:
 15259   005228  90D8               	bcf	status,0,c
 15260   00522A  3655               	rlcf	___fldiv@grs^0,f,c
 15261   00522C  3656               	rlcf	(___fldiv@grs+1)^0,f,c
 15262   00522E  3657               	rlcf	(___fldiv@grs+2)^0,f,c
 15263   005230  3658               	rlcf	(___fldiv@grs+3)^0,f,c
 15264   005232  0653               	decf	___fldiv@new_exp^0,f,c
 15265   005234  A0D8               	btfss	status,0,c
 15266   005236  0654               	decf	(___fldiv@new_exp+1)^0,f,c
 15267   005238                     l11613:
 15268   005238  AE44               	btfss	(___fldiv@b+2)^0,7,c
 15269   00523A  EF21  F029         	goto	u11751
 15270   00523E  EF23  F029         	goto	u11750
 15271   005242                     u11751:
 15272   005242  EF07  F029         	goto	l11607
 15273   005246                     u11750:
 15274   005246  0E00               	movlw	0
 15275   005248  6E5A               	movwf	___fldiv@aexp^0,c
 15276   00524A  AE58               	btfss	(___fldiv@grs+3)^0,7,c
 15277   00524C  EF2A  F029         	goto	u11761
 15278   005250  EF2C  F029         	goto	u11760
 15279   005254                     u11761:
 15280   005254  EF50  F029         	goto	l1284
 15281   005258                     u11760:
 15282   005258  0EFF               	movlw	255
 15283   00525A  1455               	andwf	___fldiv@grs^0,w,c
 15284   00525C  6E4A               	movwf	??___fldiv^0,c
 15285   00525E  0EFF               	movlw	255
 15286   005260  1456               	andwf	(___fldiv@grs+1)^0,w,c
 15287   005262  6E4B               	movwf	(??___fldiv+1)^0,c
 15288   005264  0EFF               	movlw	255
 15289   005266  1457               	andwf	(___fldiv@grs+2)^0,w,c
 15290   005268  6E4C               	movwf	(??___fldiv+2)^0,c
 15291   00526A  0E7F               	movlw	127
 15292   00526C  1458               	andwf	(___fldiv@grs+3)^0,w,c
 15293   00526E  6E4D               	movwf	(??___fldiv+3)^0,c
 15294   005270  504A               	movf	??___fldiv^0,w,c
 15295   005272  104B               	iorwf	(??___fldiv+1)^0,w,c
 15296   005274  104C               	iorwf	(??___fldiv+2)^0,w,c
 15297   005276  104D               	iorwf	(??___fldiv+3)^0,w,c
 15298   005278  B4D8               	btfsc	status,2,c
 15299   00527A  EF41  F029         	goto	u11771
 15300   00527E  EF43  F029         	goto	u11770
 15301   005282                     u11771:
 15302   005282  EF47  F029         	goto	l1285
 15303   005286                     u11770:
 15304   005286                     l11621:
 15305   005286  0E01               	movlw	1
 15306   005288  6E5A               	movwf	___fldiv@aexp^0,c
 15307   00528A  EF50  F029         	goto	l1284
 15308   00528E                     l1285:
 15309   00528E  A042               	btfss	___fldiv@b^0,0,c
 15310   005290  EF4C  F029         	goto	u11781
 15311   005294  EF4E  F029         	goto	u11780
 15312   005298                     u11781:
 15313   005298  EF50  F029         	goto	l1284
 15314   00529C                     u11780:
 15315   00529C  EF43  F029         	goto	l11621
 15316   0052A0                     l1284:
 15317   0052A0  505A               	movf	___fldiv@aexp^0,w,c
 15318   0052A2  B4D8               	btfsc	status,2,c
 15319   0052A4  EF56  F029         	goto	u11791
 15320   0052A8  EF58  F029         	goto	u11790
 15321   0052AC                     u11791:
 15322   0052AC  EF7C  F029         	goto	l11633
 15323   0052B0                     u11790:
 15324   0052B0  0E01               	movlw	1
 15325   0052B2  2642               	addwf	___fldiv@b^0,f,c
 15326   0052B4  0E00               	movlw	0
 15327   0052B6  2243               	addwfc	(___fldiv@b+1)^0,f,c
 15328   0052B8  2244               	addwfc	(___fldiv@b+2)^0,f,c
 15329   0052BA  2245               	addwfc	(___fldiv@b+3)^0,f,c
 15330   0052BC  A045               	btfss	(___fldiv@b+3)^0,0,c
 15331   0052BE  EF63  F029         	goto	u11801
 15332   0052C2  EF65  F029         	goto	u11800
 15333   0052C6                     u11801:
 15334   0052C6  EF7C  F029         	goto	l11633
 15335   0052CA                     u11800:
 15336   0052CA  C042  F04A         	movff	___fldiv@b,??___fldiv
 15337   0052CE  C043  F04B         	movff	___fldiv@b+1,??___fldiv+1
 15338   0052D2  C044  F04C         	movff	___fldiv@b+2,??___fldiv+2
 15339   0052D6  C045  F04D         	movff	___fldiv@b+3,??___fldiv+3
 15340   0052DA  344D               	rlcf	(??___fldiv+3)^0,w,c
 15341   0052DC  324D               	rrcf	(??___fldiv+3)^0,f,c
 15342   0052DE  324C               	rrcf	(??___fldiv+2)^0,f,c
 15343   0052E0  324B               	rrcf	(??___fldiv+1)^0,f,c
 15344   0052E2  324A               	rrcf	??___fldiv^0,f,c
 15345   0052E4  C04A  F042         	movff	??___fldiv,___fldiv@b
 15346   0052E8  C04B  F043         	movff	??___fldiv+1,___fldiv@b+1
 15347   0052EC  C04C  F044         	movff	??___fldiv+2,___fldiv@b+2
 15348   0052F0  C04D  F045         	movff	??___fldiv+3,___fldiv@b+3
 15349   0052F4  4A53               	infsnz	___fldiv@new_exp^0,f,c
 15350   0052F6  2A54               	incf	(___fldiv@new_exp+1)^0,f,c
 15351   0052F8                     l11633:
 15352   0052F8  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15353   0052FA  EF87  F029         	goto	u11811
 15354   0052FE  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 15355   005300  E108               	bnz	u11810
 15356   005302  2853               	incf	___fldiv@new_exp^0,w,c
 15357   005304  A0D8               	btfss	status,0,c
 15358   005306  EF87  F029         	goto	u11811
 15359   00530A  EF89  F029         	goto	u11810
 15360   00530E                     u11811:
 15361   00530E  EF94  F029         	goto	l11637
 15362   005312                     u11810:
 15363   005312  0E00               	movlw	0
 15364   005314  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15365   005316  6853               	setf	___fldiv@new_exp^0,c
 15366   005318  0E00               	movlw	0
 15367   00531A  6E42               	movwf	___fldiv@b^0,c
 15368   00531C  0E00               	movlw	0
 15369   00531E  6E43               	movwf	(___fldiv@b+1)^0,c
 15370   005320  0E00               	movlw	0
 15371   005322  6E44               	movwf	(___fldiv@b+2)^0,c
 15372   005324  0E00               	movlw	0
 15373   005326  6E45               	movwf	(___fldiv@b+3)^0,c
 15374   005328                     l11637:
 15375   005328  BE54               	btfsc	(___fldiv@new_exp+1)^0,7,c
 15376   00532A  EFA1  F029         	goto	u11820
 15377   00532E  5054               	movf	(___fldiv@new_exp+1)^0,w,c
 15378   005330  E106               	bnz	u11821
 15379   005332  0453               	decf	___fldiv@new_exp^0,w,c
 15380   005334  B0D8               	btfsc	status,0,c
 15381   005336  EF9F  F029         	goto	u11821
 15382   00533A  EFA1  F029         	goto	u11820
 15383   00533E                     u11821:
 15384   00533E  EFAF  F029         	goto	l11641
 15385   005342                     u11820:
 15386   005342  0E00               	movlw	0
 15387   005344  6E54               	movwf	(___fldiv@new_exp+1)^0,c
 15388   005346  0E00               	movlw	0
 15389   005348  6E53               	movwf	___fldiv@new_exp^0,c
 15390   00534A  0E00               	movlw	0
 15391   00534C  6E42               	movwf	___fldiv@b^0,c
 15392   00534E  0E00               	movlw	0
 15393   005350  6E43               	movwf	(___fldiv@b+1)^0,c
 15394   005352  0E00               	movlw	0
 15395   005354  6E44               	movwf	(___fldiv@b+2)^0,c
 15396   005356  0E00               	movlw	0
 15397   005358  6E45               	movwf	(___fldiv@b+3)^0,c
 15398   00535A  0E00               	movlw	0
 15399   00535C  6E52               	movwf	___fldiv@sign^0,c
 15400   00535E                     l11641:
 15401   00535E  C053  F059         	movff	___fldiv@new_exp,___fldiv@bexp
 15402   005362  A059               	btfss	___fldiv@bexp^0,0,c
 15403   005364  EFB6  F029         	goto	u11831
 15404   005368  EFB8  F029         	goto	u11830
 15405   00536C                     u11831:
 15406   00536C  EFBB  F029         	goto	l11647
 15407   005370                     u11830:
 15408   005370  8E44               	bsf	(___fldiv@b+2)^0,7,c
 15409   005372  EFBC  F029         	goto	l11649
 15410   005376                     l11647:
 15411   005376  9E44               	bcf	(___fldiv@b+2)^0,7,c
 15412   005378                     l11649:
 15413   005378  90D8               	bcf	status,0,c
 15414   00537A  3059               	rrcf	___fldiv@bexp^0,w,c
 15415   00537C  6E45               	movwf	(___fldiv@b+3)^0,c
 15416   00537E  EF72  F028         	goto	l11563
 15417   005382                     l1271:
 15418   005382  0012               	return		;funcret
 15419   005384                     __end_of___fldiv:
 15420                           	callstack 0
 15421                           
 15422 ;; *************** function _Application_Initialization *****************
 15423 ;; Defined at:
 15424 ;;		line 91 in file "newmain.c"
 15425 ;; Parameters:    Size  Location     Type
 15426 ;;		None
 15427 ;; Auto vars:     Size  Location     Type
 15428 ;;		None
 15429 ;; Return value:  Size  Location     Type
 15430 ;;                  1    wreg      void 
 15431 ;; Registers used:
 15432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15433 ;; Tracked objects:
 15434 ;;		On entry : 0/0
 15435 ;;		On exit  : 0/0
 15436 ;;		Unchanged: 0/0
 15437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15438 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15439 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15441 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15442 ;;Total ram usage:        0 bytes
 15443 ;; Hardware stack levels used: 1
 15444 ;; Hardware stack levels required when called: 5
 15445 ;; This function calls:
 15446 ;;		_ecu_layer_Initialization
 15447 ;; This function is called by:
 15448 ;;		_main
 15449 ;; This function uses a non-reentrant model
 15450 ;;
 15451                           
 15452                           	psect	text50
 15453   007A6A                     __ptext50:
 15454                           	callstack 0
 15455   007A6A                     _Application_Initialization:
 15456                           	callstack 25
 15457   007A6A                     
 15458                           ;newmain.c: 93: ecu_layer_Initialization();
 15459   007A6A  EC1E  F03D         	call	_ecu_layer_Initialization	;wreg free
 15460   007A6E  0012               	return		;funcret
 15461   007A70                     __end_of_Application_Initialization:
 15462                           	callstack 0
 15463                           
 15464 ;; *************** function _ecu_layer_Initialization *****************
 15465 ;; Defined at:
 15466 ;;		line 79 in file "ECU_layer/ecu_layer_init.c"
 15467 ;; Parameters:    Size  Location     Type
 15468 ;;		None
 15469 ;; Auto vars:     Size  Location     Type
 15470 ;;		None
 15471 ;; Return value:  Size  Location     Type
 15472 ;;                  1    wreg      void 
 15473 ;; Registers used:
 15474 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15475 ;; Tracked objects:
 15476 ;;		On entry : 0/0
 15477 ;;		On exit  : 0/0
 15478 ;;		Unchanged: 0/0
 15479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15480 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15481 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15482 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15483 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15484 ;;Total ram usage:        0 bytes
 15485 ;; Hardware stack levels used: 1
 15486 ;; Hardware stack levels required when called: 4
 15487 ;; This function calls:
 15488 ;;		_ecu_keypad_initialize
 15489 ;;		_lcd_4bit_initialize
 15490 ;; This function is called by:
 15491 ;;		_Application_Initialization
 15492 ;; This function uses a non-reentrant model
 15493 ;;
 15494                           
 15495                           	psect	text51
 15496   007A3C                     __ptext51:
 15497                           	callstack 0
 15498   007A3C                     _ecu_layer_Initialization:
 15499                           	callstack 25
 15500   007A3C                     
 15501                           ;ECU_layer/ecu_layer_init.c: 81:     lcd_4bit_initialize(&lcd1);
 15502   007A3C  0EF9               	movlw	low _lcd1
 15503   007A3E  6E12               	movwf	lcd_4bit_initialize@lcd^0,c
 15504   007A40  ECB8  F035         	call	_lcd_4bit_initialize	;wreg free
 15505                           
 15506                           ;ECU_layer/ecu_layer_init.c: 82:     ecu_keypad_initialize(&keypad);
 15507   007A44  0ED6               	movlw	low _keypad
 15508   007A46  6E0F               	movwf	ecu_keypad_initialize@keypad^0,c
 15509   007A48  0E01               	movlw	high _keypad
 15510   007A4A  6E10               	movwf	(ecu_keypad_initialize@keypad+1)^0,c
 15511   007A4C  ECBA  F039         	call	_ecu_keypad_initialize	;wreg free
 15512   007A50  0012               	return		;funcret
 15513   007A52                     __end_of_ecu_layer_Initialization:
 15514                           	callstack 0
 15515                           
 15516 ;; *************** function _lcd_4bit_initialize *****************
 15517 ;; Defined at:
 15518 ;;		line 25 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15519 ;; Parameters:    Size  Location     Type
 15520 ;;  lcd             1   17[COMRAM] PTR const struct .
 15521 ;;		 -> lcd1(6), 
 15522 ;; Auto vars:     Size  Location     Type
 15523 ;;  ret             1   20[COMRAM] unsigned char 
 15524 ;;  counter         1   19[COMRAM] unsigned char 
 15525 ;; Return value:  Size  Location     Type
 15526 ;;                  1    wreg      unsigned char 
 15527 ;; Registers used:
 15528 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15529 ;; Tracked objects:
 15530 ;;		On entry : 0/0
 15531 ;;		On exit  : 0/0
 15532 ;;		Unchanged: 0/0
 15533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15534 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15535 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15536 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15537 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15538 ;;Total ram usage:        4 bytes
 15539 ;; Hardware stack levels used: 1
 15540 ;; Hardware stack levels required when called: 3
 15541 ;; This function calls:
 15542 ;;		_gpio_pin_initialize
 15543 ;;		_lcd_4bit_send_command
 15544 ;; This function is called by:
 15545 ;;		_ecu_layer_Initialization
 15546 ;; This function uses a non-reentrant model
 15547 ;;
 15548                           
 15549                           	psect	text52
 15550   006B70                     __ptext52:
 15551                           	callstack 0
 15552   006B70                     _lcd_4bit_initialize:
 15553                           	callstack 25
 15554   006B70                     
 15555                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 27: uint8 counter = 0 ;
 15556   006B70  0E00               	movlw	0
 15557   006B72  6E14               	movwf	lcd_4bit_initialize@counter^0,c
 15558                           
 15559                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 28:     if(((void*)0) == lcd)
 15560   006B74  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
 15561   006B76  A4D8               	btfss	status,2,c
 15562   006B78  EFC0  F035         	goto	u8561
 15563   006B7C  EFC2  F035         	goto	u8560
 15564   006B80                     u8561:
 15565   006B80  EFC4  F035         	goto	l8565
 15566   006B84                     u8560:
 15567   006B84                     
 15568                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 31:     }
 15569   006B84  EF30  F036         	goto	l192
 15570   006B88                     l8565:
 15571                           
 15572                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 33:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 34:        
      +                           ret = gpio_pin_initialize(&(lcd->rs));
 15573   006B88  C012  F00B         	movff	lcd_4bit_initialize@lcd,gpio_pin_initialize@_pin_config
 15574   006B8C  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15575   006B8E  ECF2  F039         	call	_gpio_pin_initialize	;wreg free
 15576   006B92  6E15               	movwf	lcd_4bit_initialize@ret^0,c
 15577                           
 15578                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 35:         ret = gpio_pin_initialize(&(lcd->en));
 15579   006B94  C012  F013         	movff	lcd_4bit_initialize@lcd,??_lcd_4bit_initialize
 15580   006B98  0E01               	movlw	1
 15581   006B9A  2613               	addwf	??_lcd_4bit_initialize^0,f,c
 15582   006B9C  C013  F00B         	movff	??_lcd_4bit_initialize,gpio_pin_initialize@_pin_config
 15583   006BA0  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15584   006BA2  ECF2  F039         	call	_gpio_pin_initialize	;wreg free
 15585   006BA6  6E15               	movwf	lcd_4bit_initialize@ret^0,c
 15586   006BA8                     
 15587                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 36:         for(counter=0 ;counter < 4 ;counter++)
 15588   006BA8  0E00               	movlw	0
 15589   006BAA  6E14               	movwf	lcd_4bit_initialize@counter^0,c
 15590   006BAC                     l8573:
 15591   006BAC  5012               	movf	lcd_4bit_initialize@lcd^0,w,c
 15592   006BAE  2414               	addwf	lcd_4bit_initialize@counter^0,w,c
 15593   006BB0  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15594   006BB2  0E02               	movlw	2
 15595   006BB4  2613               	addwf	??_lcd_4bit_initialize^0,f,c
 15596   006BB6  C013  F00B         	movff	??_lcd_4bit_initialize,gpio_pin_initialize@_pin_config
 15597   006BBA  6A0C               	clrf	(gpio_pin_initialize@_pin_config+1)^0,c
 15598   006BBC  ECF2  F039         	call	_gpio_pin_initialize	;wreg free
 15599   006BC0                     
 15600                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 39:         }
 15601   006BC0  2A14               	incf	lcd_4bit_initialize@counter^0,f,c
 15602   006BC2  0E03               	movlw	3
 15603   006BC4  6414               	cpfsgt	lcd_4bit_initialize@counter^0,c
 15604   006BC6  EFE7  F035         	goto	u8571
 15605   006BCA  EFE9  F035         	goto	u8570
 15606   006BCE                     u8571:
 15607   006BCE  EFD6  F035         	goto	l8573
 15608   006BD2                     u8570:
 15609   006BD2                     
 15610                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 40:          _delay((unsigned long)((20)*(8000000ul/40
      +                          00.0)));
 15611   006BD2  0E34               	movlw	52
 15612   006BD4  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15613   006BD6  0EF2               	movlw	242
 15614   006BD8                     u13627:
 15615   006BD8  2EE8               	decfsz	wreg,f,c
 15616   006BDA  D7FE               	bra	u13627
 15617   006BDC  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
 15618   006BDE  D7FC               	bra	u13627
 15619   006BE0  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15620   006BE4  0E38               	movlw	56
 15621   006BE6  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15622   006BE8  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15623   006BEC                     
 15624                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 42:         _delay((unsigned long)((5)*(8000000ul/4000
      +                          .0)));
 15625   006BEC  0E0D               	movlw	13
 15626   006BEE  6E13               	movwf	??_lcd_4bit_initialize^0,c
 15627   006BF0  0EFC               	movlw	252
 15628   006BF2                     u13637:
 15629   006BF2  2EE8               	decfsz	wreg,f,c
 15630   006BF4  D7FE               	bra	u13637
 15631   006BF6  2E13               	decfsz	??_lcd_4bit_initialize^0,f,c
 15632   006BF8  D7FC               	bra	u13637
 15633   006BFA  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15634   006BFE  0E38               	movlw	56
 15635   006C00  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15636   006C02  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15637   006C06                     
 15638                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 44:         _delay((unsigned long)((150)*(8000000ul/40
      +                          00000.0)));
 15639   006C06  0E64               	movlw	100
 15640   006C08                     u13647:
 15641   006C08  2EE8               	decfsz	wreg,f,c
 15642   006C0A  D7FE               	bra	u13647
 15643   006C0C  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15644   006C10  0E38               	movlw	56
 15645   006C12  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15646   006C14  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15647   006C18  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15648   006C1C  0E01               	movlw	1
 15649   006C1E  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15650   006C20  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15651   006C24  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15652   006C28  0E02               	movlw	2
 15653   006C2A  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15654   006C2C  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15655   006C30  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15656   006C34  0E06               	movlw	6
 15657   006C36  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15658   006C38  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15659   006C3C  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15660   006C40  0E0C               	movlw	12
 15661   006C42  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15662   006C44  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15663   006C48  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15664   006C4C  0E28               	movlw	40
 15665   006C4E  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15666   006C50  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15667   006C54  C012  F00F         	movff	lcd_4bit_initialize@lcd,lcd_4bit_send_command@lcd
 15668   006C58  0E80               	movlw	128
 15669   006C5A  6E10               	movwf	lcd_4bit_send_command@command^0,c
 15670   006C5C  EC8A  F03A         	call	_lcd_4bit_send_command	;wreg free
 15671   006C60                     l192:
 15672   006C60  0012               	return		;funcret
 15673   006C62                     __end_of_lcd_4bit_initialize:
 15674                           	callstack 0
 15675                           
 15676 ;; *************** function _lcd_4bit_send_command *****************
 15677 ;; Defined at:
 15678 ;;		line 65 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15679 ;; Parameters:    Size  Location     Type
 15680 ;;  lcd             1   14[COMRAM] PTR const struct .
 15681 ;;		 -> lcd1(6), 
 15682 ;;  command         1   15[COMRAM] unsigned char 
 15683 ;; Auto vars:     Size  Location     Type
 15684 ;;  ret             1   16[COMRAM] unsigned char 
 15685 ;; Return value:  Size  Location     Type
 15686 ;;                  1    wreg      unsigned char 
 15687 ;; Registers used:
 15688 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15689 ;; Tracked objects:
 15690 ;;		On entry : 0/0
 15691 ;;		On exit  : 0/0
 15692 ;;		Unchanged: 0/0
 15693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15694 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15695 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15696 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15697 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15698 ;;Total ram usage:        3 bytes
 15699 ;; Hardware stack levels used: 1
 15700 ;; Hardware stack levels required when called: 2
 15701 ;; This function calls:
 15702 ;;		_gpio_pin_write_logic
 15703 ;;		_lcd_4bit_send_enable_enable
 15704 ;;		_lcd_send_4bit
 15705 ;; This function is called by:
 15706 ;;		_send_the_result_to_LCD
 15707 ;;		_lcd_4bit_initialize
 15708 ;;		_lcd_4bit_set_curser
 15709 ;;		_main
 15710 ;;		_lcd_4bit_send_custome_char
 15711 ;; This function uses a non-reentrant model
 15712 ;;
 15713                           
 15714                           	psect	text53
 15715   007514                     __ptext53:
 15716                           	callstack 0
 15717   007514                     _lcd_4bit_send_command:
 15718                           	callstack 25
 15719   007514                     
 15720                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 68:     if(((void*)0) == lcd)
 15721   007514  500F               	movf	lcd_4bit_send_command@lcd^0,w,c
 15722   007516  A4D8               	btfss	status,2,c
 15723   007518  EF90  F03A         	goto	u8541
 15724   00751C  EF92  F03A         	goto	u8540
 15725   007520                     u8541:
 15726   007520  EF96  F03A         	goto	l8533
 15727   007524                     u8540:
 15728   007524                     
 15729                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 69:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 70:        
      +                           ret = (STD_ReturnType)0x00;
 15730   007524  0E00               	movlw	0
 15731   007526  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15732                           
 15733                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 71:     }
 15734   007528  EFB7  F03A         	goto	l8535
 15735   00752C                     l8533:
 15736                           
 15737                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 73:     {;ECU_layer/chr_LCD/ecu_chr_LCD.c: 75:        
      +                           ret = gpio_pin_write_logic(&(lcd->rs),LOW);
 15738   00752C  C00F  F001         	movff	lcd_4bit_send_command@lcd,gpio_pin_write_logic@_pin_config
 15739   007530  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15740   007532  0E00               	movlw	0
 15741   007534  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15742   007536  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 15743   00753A  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15744                           
 15745                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 76:         ret = lcd_send_4bit(lcd,command >>4);
 15746   00753C  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
 15747   007540  3810               	swapf	lcd_4bit_send_command@command^0,w,c
 15748   007542  0B0F               	andlw	15
 15749   007544  6E0C               	movwf	lcd_send_4bit@command_data^0,c
 15750   007546  EC82  F039         	call	_lcd_send_4bit	;wreg free
 15751   00754A  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15752                           
 15753                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 77:         ret = lcd_4bit_send_enable_enable(lcd);
 15754   00754C  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_enable@lcd
 15755   007550  EC89  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
 15756   007554  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15757                           
 15758                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 78:         ret = lcd_send_4bit(lcd,command);
 15759   007556  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_send_4bit@lcd
 15760   00755A  C010  F00C         	movff	lcd_4bit_send_command@command,lcd_send_4bit@command_data
 15761   00755E  EC82  F039         	call	_lcd_send_4bit	;wreg free
 15762   007562  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15763                           
 15764                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 79:         ret = lcd_4bit_send_enable_enable(lcd);
 15765   007564  C00F  F00B         	movff	lcd_4bit_send_command@lcd,lcd_4bit_send_enable_enable@lcd
 15766   007568  EC89  F03C         	call	_lcd_4bit_send_enable_enable	;wreg free
 15767   00756C  6E11               	movwf	lcd_4bit_send_command@ret^0,c
 15768   00756E                     l8535:
 15769                           
 15770                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 84:      return ret;
 15771   00756E  5011               	movf	lcd_4bit_send_command@ret^0,w,c
 15772   007570  0012               	return		;funcret
 15773   007572                     __end_of_lcd_4bit_send_command:
 15774                           	callstack 0
 15775                           
 15776 ;; *************** function _lcd_send_4bit *****************
 15777 ;; Defined at:
 15778 ;;		line 493 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15779 ;; Parameters:    Size  Location     Type
 15780 ;;  lcd             1   10[COMRAM] PTR const struct .
 15781 ;;		 -> lcd1(6), 
 15782 ;;  command_data    1   11[COMRAM] unsigned char 
 15783 ;; Auto vars:     Size  Location     Type
 15784 ;;  ret             1   13[COMRAM] unsigned char 
 15785 ;; Return value:  Size  Location     Type
 15786 ;;                  1    wreg      unsigned char 
 15787 ;; Registers used:
 15788 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15789 ;; Tracked objects:
 15790 ;;		On entry : 0/0
 15791 ;;		On exit  : 0/0
 15792 ;;		Unchanged: 0/0
 15793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15794 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15795 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15796 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15797 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15798 ;;Total ram usage:        4 bytes
 15799 ;; Hardware stack levels used: 1
 15800 ;; Hardware stack levels required when called: 1
 15801 ;; This function calls:
 15802 ;;		_gpio_pin_write_logic
 15803 ;; This function is called by:
 15804 ;;		_lcd_4bit_send_command
 15805 ;;		_lcd_4bit_send_char_data
 15806 ;; This function uses a non-reentrant model
 15807 ;;
 15808                           
 15809                           	psect	text54
 15810   007304                     __ptext54:
 15811                           	callstack 0
 15812   007304                     _lcd_send_4bit:
 15813                           	callstack 25
 15814   007304  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15815   007308  0E02               	movlw	2
 15816   00730A  260D               	addwf	??_lcd_send_4bit^0,f,c
 15817   00730C  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15818   007310  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15819   007312  500C               	movf	lcd_send_4bit@command_data^0,w,c
 15820   007314  0B01               	andlw	1
 15821   007316  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15822   007318  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 15823   00731C  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15824   007320  0E03               	movlw	3
 15825   007322  260D               	addwf	??_lcd_send_4bit^0,f,c
 15826   007324  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15827   007328  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15828   00732A  90D8               	bcf	status,0,c
 15829   00732C  300C               	rrcf	lcd_send_4bit@command_data^0,w,c
 15830   00732E  0B01               	andlw	1
 15831   007330  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15832   007332  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 15833   007336  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15834   00733A  0E04               	movlw	4
 15835   00733C  260D               	addwf	??_lcd_send_4bit^0,f,c
 15836   00733E  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15837   007342  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15838   007344  400C               	rrncf	lcd_send_4bit@command_data^0,w,c
 15839   007346  42E8               	rrncf	wreg,f,c
 15840   007348  0B3F               	andlw	63
 15841   00734A  0B01               	andlw	1
 15842   00734C  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15843   00734E  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 15844   007352                     
 15845                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 498: ret = gpio_pin_write_logic(&(lcd->data[3]),(comma
      +                          nd_data >> 3) & 0x01);
 15846   007352  C00B  F00D         	movff	lcd_send_4bit@lcd,??_lcd_send_4bit
 15847   007356  0E05               	movlw	5
 15848   007358  260D               	addwf	??_lcd_send_4bit^0,f,c
 15849   00735A  C00D  F001         	movff	??_lcd_send_4bit,gpio_pin_write_logic@_pin_config
 15850   00735E  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15851   007360  380C               	swapf	lcd_send_4bit@command_data^0,w,c
 15852   007362  46E8               	rlncf	wreg,f,c
 15853   007364  0B1F               	andlw	31
 15854   007366  0B01               	andlw	1
 15855   007368  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15856   00736A  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 15857   00736E  6E0E               	movwf	lcd_send_4bit@ret^0,c
 15858                           
 15859                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 500: return ret;
 15860   007370  500E               	movf	lcd_send_4bit@ret^0,w,c
 15861   007372  0012               	return		;funcret
 15862   007374                     __end_of_lcd_send_4bit:
 15863                           	callstack 0
 15864                           
 15865 ;; *************** function _lcd_4bit_send_enable_enable *****************
 15866 ;; Defined at:
 15867 ;;		line 509 in file "ECU_layer/chr_LCD/ecu_chr_LCD.c"
 15868 ;; Parameters:    Size  Location     Type
 15869 ;;  lcd             1   10[COMRAM] PTR const struct .
 15870 ;;		 -> lcd1(6), 
 15871 ;; Auto vars:     Size  Location     Type
 15872 ;;  ret             1   12[COMRAM] unsigned char 
 15873 ;; Return value:  Size  Location     Type
 15874 ;;                  1    wreg      unsigned char 
 15875 ;; Registers used:
 15876 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15877 ;; Tracked objects:
 15878 ;;		On entry : 0/0
 15879 ;;		On exit  : 0/0
 15880 ;;		Unchanged: 0/0
 15881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15882 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15883 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15884 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15885 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15886 ;;Total ram usage:        3 bytes
 15887 ;; Hardware stack levels used: 1
 15888 ;; Hardware stack levels required when called: 1
 15889 ;; This function calls:
 15890 ;;		_gpio_pin_write_logic
 15891 ;; This function is called by:
 15892 ;;		_lcd_4bit_send_command
 15893 ;;		_lcd_4bit_send_char_data
 15894 ;; This function uses a non-reentrant model
 15895 ;;
 15896                           
 15897                           	psect	text55
 15898   007912                     __ptext55:
 15899                           	callstack 0
 15900   007912                     _lcd_4bit_send_enable_enable:
 15901                           	callstack 25
 15902   007912  C00B  F00C         	movff	lcd_4bit_send_enable_enable@lcd,??_lcd_4bit_send_enable_enable
 15903   007916  0E01               	movlw	1
 15904   007918  260C               	addwf	??_lcd_4bit_send_enable_enable^0,f,c
 15905   00791A  C00C  F001         	movff	??_lcd_4bit_send_enable_enable,gpio_pin_write_logic@_pin_config
 15906   00791E  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15907   007920  0E01               	movlw	1
 15908   007922  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15909   007924  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 15910   007928                     
 15911                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 512: _delay((unsigned long)((5)*(8000000ul/4000000.0))
      +                          );
 15912   007928  0E03               	movlw	3
 15913   00792A                     u13657:
 15914   00792A  2EE8               	decfsz	wreg,f,c
 15915   00792C  D7FE               	bra	u13657
 15916   00792E  0000               	nop	
 15917   007930                     
 15918                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 513: ret = gpio_pin_write_logic(&(lcd->en),LOW);
 15919   007930  C00B  F00C         	movff	lcd_4bit_send_enable_enable@lcd,??_lcd_4bit_send_enable_enable
 15920   007934  0E01               	movlw	1
 15921   007936  260C               	addwf	??_lcd_4bit_send_enable_enable^0,f,c
 15922   007938  C00C  F001         	movff	??_lcd_4bit_send_enable_enable,gpio_pin_write_logic@_pin_config
 15923   00793C  6A02               	clrf	(gpio_pin_write_logic@_pin_config+1)^0,c
 15924   00793E  0E00               	movlw	0
 15925   007940  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 15926   007942  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 15927   007946  6E0D               	movwf	lcd_4bit_send_enable_enable@ret^0,c
 15928   007948                     
 15929                           ;ECU_layer/chr_LCD/ecu_chr_LCD.c: 515: return ret;
 15930   007948  500D               	movf	lcd_4bit_send_enable_enable@ret^0,w,c
 15931   00794A  0012               	return		;funcret
 15932   00794C                     __end_of_lcd_4bit_send_enable_enable:
 15933                           	callstack 0
 15934                           
 15935 ;; *************** function _ecu_keypad_initialize *****************
 15936 ;; Defined at:
 15937 ;;		line 25 in file "ECU_layer/Keypad/ecu_keypad.c"
 15938 ;; Parameters:    Size  Location     Type
 15939 ;;  keypad          2   14[COMRAM] PTR const struct .
 15940 ;;		 -> keypad(8), 
 15941 ;; Auto vars:     Size  Location     Type
 15942 ;;  columns         1   19[COMRAM] unsigned char 
 15943 ;;  rows            1   18[COMRAM] unsigned char 
 15944 ;;  ret             1    0        unsigned char 
 15945 ;; Return value:  Size  Location     Type
 15946 ;;                  1    wreg      unsigned char 
 15947 ;; Registers used:
 15948 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15949 ;; Tracked objects:
 15950 ;;		On entry : 0/0
 15951 ;;		On exit  : 0/0
 15952 ;;		Unchanged: 0/0
 15953 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15954 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15955 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15956 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15957 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15958 ;;Total ram usage:        6 bytes
 15959 ;; Hardware stack levels used: 1
 15960 ;; Hardware stack levels required when called: 2
 15961 ;; This function calls:
 15962 ;;		_gpio_pin_direction_initialize
 15963 ;;		_gpio_pin_initialize
 15964 ;; This function is called by:
 15965 ;;		_ecu_layer_Initialization
 15966 ;; This function uses a non-reentrant model
 15967 ;;
 15968                           
 15969                           	psect	text56
 15970   007374                     __ptext56:
 15971                           	callstack 0
 15972   007374                     _ecu_keypad_initialize:
 15973                           	callstack 26
 15974   007374                     
 15975                           ;ECU_layer/Keypad/ecu_keypad.c: 27: uint8 rows,columns;;ECU_layer/Keypad/ecu_keypad.c: 2
      +                          8:     if(((void*)0) == keypad)
 15976   007374  500F               	movf	ecu_keypad_initialize@keypad^0,w,c
 15977   007376  1010               	iorwf	(ecu_keypad_initialize@keypad+1)^0,w,c
 15978   007378  A4D8               	btfss	status,2,c
 15979   00737A  EFC1  F039         	goto	u6091
 15980   00737E  EFC3  F039         	goto	u6090
 15981   007382                     u6091:
 15982   007382  EFC5  F039         	goto	l6239
 15983   007386                     u6090:
 15984   007386                     
 15985                           ;ECU_layer/Keypad/ecu_keypad.c: 31:     }
 15986   007386  EFF1  F039         	goto	l368
 15987   00738A                     l6239:
 15988                           
 15989                           ;ECU_layer/Keypad/ecu_keypad.c: 33:     {;ECU_layer/Keypad/ecu_keypad.c: 34:         for
      +                          (rows = 0;rows < 4 ;rows++)
 15990   00738A  0E00               	movlw	0
 15991   00738C  6E13               	movwf	ecu_keypad_initialize@rows^0,c
 15992   00738E                     l6245:
 15993                           
 15994                           ;ECU_layer/Keypad/ecu_keypad.c: 35:         {;ECU_layer/Keypad/ecu_keypad.c: 36:        
      +                               gpio_pin_initialize(&(keypad->keypad_rows_pins[rows]));
 15995   00738E  5013               	movf	ecu_keypad_initialize@rows^0,w,c
 15996   007390  240F               	addwf	ecu_keypad_initialize@keypad^0,w,c
 15997   007392  6E0B               	movwf	gpio_pin_initialize@_pin_config^0,c
 15998   007394  0E00               	movlw	0
 15999   007396  2010               	addwfc	(ecu_keypad_initialize@keypad+1)^0,w,c
 16000   007398  6E0C               	movwf	(gpio_pin_initialize@_pin_config+1)^0,c
 16001   00739A  ECF2  F039         	call	_gpio_pin_initialize	;wreg free
 16002   00739E                     
 16003                           ;ECU_layer/Keypad/ecu_keypad.c: 38:         }
 16004   00739E  2A13               	incf	ecu_keypad_initialize@rows^0,f,c
 16005   0073A0  0E03               	movlw	3
 16006   0073A2  6413               	cpfsgt	ecu_keypad_initialize@rows^0,c
 16007   0073A4  EFD6  F039         	goto	u6101
 16008   0073A8  EFD8  F039         	goto	u6100
 16009   0073AC                     u6101:
 16010   0073AC  EFC7  F039         	goto	l6245
 16011   0073B0                     u6100:
 16012   0073B0                     
 16013                           ;ECU_layer/Keypad/ecu_keypad.c: 39:         for(columns = 0;columns < 4 ;columns++){
 16014   0073B0  0E00               	movlw	0
 16015   0073B2  6E14               	movwf	ecu_keypad_initialize@columns^0,c
 16016   0073B4                     l6257:
 16017                           
 16018                           ;ECU_layer/Keypad/ecu_keypad.c: 40:                 gpio_pin_direction_initialize(&(keyp
      +                          ad->keypad_columns_pins[columns]));
 16019   0073B4  5014               	movf	ecu_keypad_initialize@columns^0,w,c
 16020   0073B6  240F               	addwf	ecu_keypad_initialize@keypad^0,w,c
 16021   0073B8  6E11               	movwf	??_ecu_keypad_initialize^0,c
 16022   0073BA  0E00               	movlw	0
 16023   0073BC  2010               	addwfc	(ecu_keypad_initialize@keypad+1)^0,w,c
 16024   0073BE  6E12               	movwf	(??_ecu_keypad_initialize+1)^0,c
 16025   0073C0  0E04               	movlw	4
 16026   0073C2  2411               	addwf	??_ecu_keypad_initialize^0,w,c
 16027   0073C4  6E01               	movwf	gpio_pin_direction_initialize@_pin_config^0,c
 16028   0073C6  0E00               	movlw	0
 16029   0073C8  2012               	addwfc	(??_ecu_keypad_initialize+1)^0,w,c
 16030   0073CA  6E02               	movwf	(gpio_pin_direction_initialize@_pin_config+1)^0,c
 16031   0073CC  EC59  F031         	call	_gpio_pin_direction_initialize	;wreg free
 16032   0073D0                     
 16033                           ;ECU_layer/Keypad/ecu_keypad.c: 41:             }
 16034   0073D0  2A14               	incf	ecu_keypad_initialize@columns^0,f,c
 16035   0073D2  0E03               	movlw	3
 16036   0073D4  6414               	cpfsgt	ecu_keypad_initialize@columns^0,c
 16037   0073D6  EFEF  F039         	goto	u6111
 16038   0073DA  EFF1  F039         	goto	u6110
 16039   0073DE                     u6111:
 16040   0073DE  EFDA  F039         	goto	l6257
 16041   0073E2                     u6110:
 16042   0073E2                     l368:
 16043   0073E2  0012               	return		;funcret
 16044   0073E4                     __end_of_ecu_keypad_initialize:
 16045                           	callstack 0
 16046                           
 16047 ;; *************** function _gpio_pin_initialize *****************
 16048 ;; Defined at:
 16049 ;;		line 164 in file "MCAL_layer/GPIO/hal_gpio.c"
 16050 ;; Parameters:    Size  Location     Type
 16051 ;;  _pin_config     2   10[COMRAM] PTR const struct .
 16052 ;;		 -> keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_initialize@relay_pin(1), ecu_led_initialize@led_pin(1), 
 16053 ;;		 -> lcd1(6), keypad(8), 
 16054 ;; Auto vars:     Size  Location     Type
 16055 ;;  ret             1   13[COMRAM] unsigned char 
 16056 ;; Return value:  Size  Location     Type
 16057 ;;                  1    wreg      unsigned char 
 16058 ;; Registers used:
 16059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16060 ;; Tracked objects:
 16061 ;;		On entry : 0/0
 16062 ;;		On exit  : 0/0
 16063 ;;		Unchanged: 0/0
 16064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16065 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16067 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16069 ;;Total ram usage:        4 bytes
 16070 ;; Hardware stack levels used: 1
 16071 ;; Hardware stack levels required when called: 1
 16072 ;; This function calls:
 16073 ;;		_gpio_pin_direction_initialize
 16074 ;;		_gpio_pin_write_logic
 16075 ;; This function is called by:
 16076 ;;		_lcd_4bit_initialize
 16077 ;;		_ecu_keypad_initialize
 16078 ;;		_ecu_seven_segment_initialize
 16079 ;;		_lcd_8bit_initialize
 16080 ;;		_ecu_dc_motor_initialize
 16081 ;;		_ecu_led_initialize
 16082 ;;		_ecu_relay_initialize
 16083 ;; This function uses a non-reentrant model
 16084 ;;
 16085                           
 16086                           	psect	text57
 16087   0073E4                     __ptext57:
 16088                           	callstack 0
 16089   0073E4                     _gpio_pin_initialize:
 16090                           	callstack 26
 16091   0073E4                     
 16092                           ;MCAL_layer/GPIO/hal_gpio.c: 167:     if(((void*)0) == _pin_config || _pin_config->pin >
      +                           8 -1)
 16093   0073E4  500B               	movf	gpio_pin_initialize@_pin_config^0,w,c
 16094   0073E6  100C               	iorwf	(gpio_pin_initialize@_pin_config+1)^0,w,c
 16095   0073E8  B4D8               	btfsc	status,2,c
 16096   0073EA  EFF9  F039         	goto	u5981
 16097   0073EE  EFFB  F039         	goto	u5980
 16098   0073F2                     u5981:
 16099   0073F2  EF0C  F03A         	goto	l6107
 16100   0073F6                     u5980:
 16101   0073F6  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
 16102   0073FA  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
 16103   0073FE  30DF               	rrcf	223,w,c
 16104   007400  32E8               	rrcf	wreg,f,c
 16105   007402  32E8               	rrcf	wreg,f,c
 16106   007404  0B07               	andlw	7
 16107   007406  6E0D               	movwf	??_gpio_pin_initialize^0,c
 16108   007408  0E07               	movlw	7
 16109   00740A  640D               	cpfsgt	??_gpio_pin_initialize^0,c
 16110   00740C  EF0A  F03A         	goto	u5991
 16111   007410  EF0C  F03A         	goto	u5990
 16112   007414                     u5991:
 16113   007414  EF10  F03A         	goto	l6109
 16114   007418                     u5990:
 16115   007418                     l6107:
 16116                           
 16117                           ;MCAL_layer/GPIO/hal_gpio.c: 168:     {;MCAL_layer/GPIO/hal_gpio.c: 169:         ret = (
      +                          STD_ReturnType)0x00;
 16118   007418  0E00               	movlw	0
 16119   00741A  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 16120                           
 16121                           ;MCAL_layer/GPIO/hal_gpio.c: 170:     }
 16122   00741C  EF26  F03A         	goto	l6111
 16123   007420                     l6109:
 16124                           
 16125                           ;MCAL_layer/GPIO/hal_gpio.c: 172:     {;MCAL_layer/GPIO/hal_gpio.c: 173:         ret = g
      +                          pio_pin_direction_initialize(_pin_config);
 16126   007420  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_direction_initialize@_pin_config
 16127   007424  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_direction_initialize@_pin_config+1
 16128   007428  EC59  F031         	call	_gpio_pin_direction_initialize	;wreg free
 16129   00742C  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 16130                           
 16131                           ;MCAL_layer/GPIO/hal_gpio.c: 174:         ret = gpio_pin_write_logic(_pin_config, _pin_c
      +                          onfig->logic);
 16132   00742E  C00B  F001         	movff	gpio_pin_initialize@_pin_config,gpio_pin_write_logic@_pin_config
 16133   007432  C00C  F002         	movff	gpio_pin_initialize@_pin_config+1,gpio_pin_write_logic@_pin_config+1
 16134   007436  C00B  FFD9         	movff	gpio_pin_initialize@_pin_config,fsr2l
 16135   00743A  C00C  FFDA         	movff	gpio_pin_initialize@_pin_config+1,fsr2h
 16136   00743E  0E00               	movlw	0
 16137   007440  BEDF               	btfsc	indf2,7,c
 16138   007442  0E01               	movlw	1
 16139   007444  6E03               	movwf	gpio_pin_write_logic@logic^0,c
 16140   007446  ECFB  F031         	call	_gpio_pin_write_logic	;wreg free
 16141   00744A  6E0E               	movwf	gpio_pin_initialize@ret^0,c
 16142   00744C                     l6111:
 16143                           
 16144                           ;MCAL_layer/GPIO/hal_gpio.c: 177:      return ret;
 16145   00744C  500E               	movf	gpio_pin_initialize@ret^0,w,c
 16146   00744E  0012               	return		;funcret
 16147   007450                     __end_of_gpio_pin_initialize:
 16148                           	callstack 0
 16149                           
 16150 ;; *************** function _gpio_pin_write_logic *****************
 16151 ;; Defined at:
 16152 ;;		line 83 in file "MCAL_layer/GPIO/hal_gpio.c"
 16153 ;; Parameters:    Size  Location     Type
 16154 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16155 ;;		 -> keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_off@relay_pin(1), ecu_relay_on@relay_pin(1), 
 16156 ;;		 -> ecu_relay_initialize@relay_pin(1), ecu_led_turn_off@led_pin(1), ecu_led_turn_on@led_pin(1), ecu_led_initialize@l
      +ed_pin(1), 
 16157 ;;		 -> lcd1(6), keypad(8), 
 16158 ;;  logic           1    2[COMRAM] enum E3403
 16159 ;; Auto vars:     Size  Location     Type
 16160 ;;  ret             1    9[COMRAM] unsigned char 
 16161 ;; Return value:  Size  Location     Type
 16162 ;;                  1    wreg      unsigned char 
 16163 ;; Registers used:
 16164 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16165 ;; Tracked objects:
 16166 ;;		On entry : 0/0
 16167 ;;		On exit  : 0/0
 16168 ;;		Unchanged: 0/0
 16169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16170 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16171 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16172 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16173 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16174 ;;Total ram usage:       10 bytes
 16175 ;; Hardware stack levels used: 1
 16176 ;; This function calls:
 16177 ;;		Nothing
 16178 ;; This function is called by:
 16179 ;;		_lcd_4bit_send_command
 16180 ;;		_lcd_4bit_send_char_data
 16181 ;;		_lcd_send_4bit
 16182 ;;		_lcd_4bit_send_enable_enable
 16183 ;;		_ecu_keypad_get_value
 16184 ;;		_gpio_pin_initialize
 16185 ;;		_ecu_seven_segment_write_number
 16186 ;;		_lcd_8bit_send_command
 16187 ;;		_lcd_8bit_send_char_data
 16188 ;;		_lcd_8bit_send_enable_enable
 16189 ;;		_ecu_dc_motor_move_right
 16190 ;;		_ecu_dc_motor_move_left
 16191 ;;		_ecu_dc_motor_stop
 16192 ;;		_ecu_led_turn_on
 16193 ;;		_ecu_led_turn_off
 16194 ;;		_ecu_relay_on
 16195 ;;		_ecu_relay_off
 16196 ;; This function uses a non-reentrant model
 16197 ;;
 16198                           
 16199                           	psect	text58
 16200   0063F6                     __ptext58:
 16201                           	callstack 0
 16202   0063F6                     _gpio_pin_write_logic:
 16203                           	callstack 25
 16204   0063F6                     
 16205                           ;MCAL_layer/GPIO/hal_gpio.c: 83: STD_ReturnType gpio_pin_write_logic(const pin_config_t*
      +                           _pin_config, logic_t logic);MCAL_layer/GPIO/hal_gpio.c: 84: {;MCAL_layer/GPIO/hal_gpio.
      +                          c: 85:     STD_ReturnType ret = (STD_ReturnType)0x01;
 16206   0063F6  0E01               	movlw	1
 16207   0063F8  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 16208   0063FA                     
 16209                           ;MCAL_layer/GPIO/hal_gpio.c: 86:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
 16210   0063FA  5001               	movf	gpio_pin_write_logic@_pin_config^0,w,c
 16211   0063FC  1002               	iorwf	(gpio_pin_write_logic@_pin_config+1)^0,w,c
 16212   0063FE  B4D8               	btfsc	status,2,c
 16213   006400  EF04  F032         	goto	u5391
 16214   006404  EF06  F032         	goto	u5390
 16215   006408                     u5391:
 16216   006408  EF17  F032         	goto	l5655
 16217   00640C                     u5390:
 16218   00640C  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16219   006410  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16220   006414  30DF               	rrcf	223,w,c
 16221   006416  32E8               	rrcf	wreg,f,c
 16222   006418  32E8               	rrcf	wreg,f,c
 16223   00641A  0B07               	andlw	7
 16224   00641C  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16225   00641E  0E07               	movlw	7
 16226   006420  6404               	cpfsgt	??_gpio_pin_write_logic^0,c
 16227   006422  EF15  F032         	goto	u5401
 16228   006426  EF17  F032         	goto	u5400
 16229   00642A                     u5401:
 16230   00642A  EF7A  F032         	goto	l5663
 16231   00642E                     u5400:
 16232   00642E                     l5655:
 16233                           
 16234                           ;MCAL_layer/GPIO/hal_gpio.c: 87:     {;MCAL_layer/GPIO/hal_gpio.c: 88:         ret = (ST
      +                          D_ReturnType)0x00;
 16235   00642E  0E00               	movlw	0
 16236   006430  6E0A               	movwf	gpio_pin_write_logic@ret^0,c
 16237                           
 16238                           ;MCAL_layer/GPIO/hal_gpio.c: 89:     }
 16239   006432  EF8F  F032         	goto	l5665
 16240   006436                     l5657:
 16241                           
 16242                           ;MCAL_layer/GPIO/hal_gpio.c: 95:             (*lat_registers[_pin_config->port] &= ~((ui
      +                          nt8)1 << _pin_config->pin));
 16243   006436  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16244   00643A  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16245   00643E  30DF               	rrcf	223,w,c
 16246   006440  32E8               	rrcf	wreg,f,c
 16247   006442  32E8               	rrcf	wreg,f,c
 16248   006444  0B07               	andlw	7
 16249   006446  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16250   006448  0E01               	movlw	1
 16251   00644A  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 16252   00644C  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 16253   00644E  EF2B  F032         	goto	u5414
 16254   006452                     u5415:
 16255   006452  90D8               	bcf	status,0,c
 16256   006454  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 16257   006456                     u5414:
 16258   006456  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 16259   006458  EF29  F032         	goto	u5415
 16260   00645C  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16261   00645E  0AFF               	xorlw	255
 16262   006460  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 16263   006462  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16264   006466  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16265   00646A  50DF               	movf	223,w,c
 16266   00646C  0B07               	andlw	7
 16267   00646E  6E07               	movwf	(??_gpio_pin_write_logic+3)^0,c
 16268   006470  5007               	movf	(??_gpio_pin_write_logic+3)^0,w,c
 16269   006472  0D02               	mullw	2
 16270   006474  0EC2               	movlw	low _lat_registers
 16271   006476  24F3               	addwf	243,w,c
 16272   006478  6ED9               	movwf	fsr2l,c
 16273   00647A  0E01               	movlw	high _lat_registers
 16274   00647C  20F4               	addwfc	prodh,w,c
 16275   00647E  6EDA               	movwf	fsr2h,c
 16276   006480  CFDE F008          	movff	postinc2,??_gpio_pin_write_logic+4
 16277   006484  CFDD F009          	movff	postdec2,??_gpio_pin_write_logic+5
 16278   006488  C008  FFD9         	movff	??_gpio_pin_write_logic+4,fsr2l
 16279   00648C  C009  FFDA         	movff	??_gpio_pin_write_logic+5,fsr2h
 16280   006490  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 16281   006492  16DF               	andwf	indf2,f,c
 16282                           
 16283                           ;MCAL_layer/GPIO/hal_gpio.c: 96:             break;
 16284   006494  EF8F  F032         	goto	l5665
 16285   006498                     l5659:
 16286                           
 16287                           ;MCAL_layer/GPIO/hal_gpio.c: 98:             (*lat_registers[_pin_config->port] |= ((uin
      +                          t8)1 << _pin_config->pin));
 16288   006498  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16289   00649C  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16290   0064A0  30DF               	rrcf	223,w,c
 16291   0064A2  32E8               	rrcf	wreg,f,c
 16292   0064A4  32E8               	rrcf	wreg,f,c
 16293   0064A6  0B07               	andlw	7
 16294   0064A8  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16295   0064AA  0E01               	movlw	1
 16296   0064AC  6E05               	movwf	(??_gpio_pin_write_logic+1)^0,c
 16297   0064AE  2A04               	incf	??_gpio_pin_write_logic^0,f,c
 16298   0064B0  EF5C  F032         	goto	u5424
 16299   0064B4                     u5425:
 16300   0064B4  90D8               	bcf	status,0,c
 16301   0064B6  3605               	rlcf	(??_gpio_pin_write_logic+1)^0,f,c
 16302   0064B8                     u5424:
 16303   0064B8  2E04               	decfsz	??_gpio_pin_write_logic^0,f,c
 16304   0064BA  EF5A  F032         	goto	u5425
 16305   0064BE  C001  FFD9         	movff	gpio_pin_write_logic@_pin_config,fsr2l
 16306   0064C2  C002  FFDA         	movff	gpio_pin_write_logic@_pin_config+1,fsr2h
 16307   0064C6  50DF               	movf	223,w,c
 16308   0064C8  0B07               	andlw	7
 16309   0064CA  6E06               	movwf	(??_gpio_pin_write_logic+2)^0,c
 16310   0064CC  5006               	movf	(??_gpio_pin_write_logic+2)^0,w,c
 16311   0064CE  0D02               	mullw	2
 16312   0064D0  0EC2               	movlw	low _lat_registers
 16313   0064D2  24F3               	addwf	243,w,c
 16314   0064D4  6ED9               	movwf	fsr2l,c
 16315   0064D6  0E01               	movlw	high _lat_registers
 16316   0064D8  20F4               	addwfc	prodh,w,c
 16317   0064DA  6EDA               	movwf	fsr2h,c
 16318   0064DC  CFDE F007          	movff	postinc2,??_gpio_pin_write_logic+3
 16319   0064E0  CFDD F008          	movff	postdec2,??_gpio_pin_write_logic+4
 16320   0064E4  C007  FFD9         	movff	??_gpio_pin_write_logic+3,fsr2l
 16321   0064E8  C008  FFDA         	movff	??_gpio_pin_write_logic+4,fsr2h
 16322   0064EC  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16323   0064EE  12DF               	iorwf	indf2,f,c
 16324                           
 16325                           ;MCAL_layer/GPIO/hal_gpio.c: 99:             break;
 16326   0064F0  EF8F  F032         	goto	l5665
 16327   0064F4                     l5663:
 16328   0064F4  5003               	movf	gpio_pin_write_logic@logic^0,w,c
 16329   0064F6  6E04               	movwf	??_gpio_pin_write_logic^0,c
 16330   0064F8  6A05               	clrf	(??_gpio_pin_write_logic+1)^0,c
 16331                           
 16332                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16333                           ; Switch size 1, requested type "simple"
 16334                           ; Number of cases is 1, Range of values is 0 to 0
 16335                           ; switch strategies available:
 16336                           ; Name         Instructions Cycles
 16337                           ; simple_byte            4     3 (average)
 16338                           ;	Chosen strategy is simple_byte
 16339   0064FA  5005               	movf	(??_gpio_pin_write_logic+1)^0,w,c
 16340   0064FC  0A00               	xorlw	0	; case 0
 16341   0064FE  B4D8               	btfsc	status,2,c
 16342   006500  EF84  F032         	goto	l13301
 16343   006504  EF17  F032         	goto	l5655
 16344   006508                     l13301:
 16345                           
 16346                           ; Switch size 1, requested type "simple"
 16347                           ; Number of cases is 2, Range of values is 0 to 1
 16348                           ; switch strategies available:
 16349                           ; Name         Instructions Cycles
 16350                           ; simple_byte            7     4 (average)
 16351                           ;	Chosen strategy is simple_byte
 16352   006508  5004               	movf	??_gpio_pin_write_logic^0,w,c
 16353   00650A  0A00               	xorlw	0	; case 0
 16354   00650C  B4D8               	btfsc	status,2,c
 16355   00650E  EF1B  F032         	goto	l5657
 16356   006512  0A01               	xorlw	1	; case 1
 16357   006514  B4D8               	btfsc	status,2,c
 16358   006516  EF4C  F032         	goto	l5659
 16359   00651A  EF17  F032         	goto	l5655
 16360   00651E                     l5665:
 16361                           
 16362                           ;MCAL_layer/GPIO/hal_gpio.c: 104:      return ret;
 16363   00651E  500A               	movf	gpio_pin_write_logic@ret^0,w,c
 16364   006520  0012               	return		;funcret
 16365   006522                     __end_of_gpio_pin_write_logic:
 16366                           	callstack 0
 16367                           
 16368 ;; *************** function _gpio_pin_direction_initialize *****************
 16369 ;; Defined at:
 16370 ;;		line 24 in file "MCAL_layer/GPIO/hal_gpio.c"
 16371 ;; Parameters:    Size  Location     Type
 16372 ;;  _pin_config     2    0[COMRAM] PTR const struct .
 16373 ;;		 -> keypad$keypad_columns_pins(4), keypad$keypad_rows_pins(4), lcd1$data(4), ecu_relay_initialize@relay_pin(1), 
 16374 ;;		 -> ecu_led_initialize@led_pin(1), lcd1(6), keypad(8), 
 16375 ;; Auto vars:     Size  Location     Type
 16376 ;;  ret             1    8[COMRAM] unsigned char 
 16377 ;; Return value:  Size  Location     Type
 16378 ;;                  1    wreg      unsigned char 
 16379 ;; Registers used:
 16380 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16381 ;; Tracked objects:
 16382 ;;		On entry : 0/0
 16383 ;;		On exit  : 0/0
 16384 ;;		Unchanged: 0/0
 16385 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16386 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16387 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16388 ;;      Temps:          6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16389 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16390 ;;Total ram usage:        9 bytes
 16391 ;; Hardware stack levels used: 1
 16392 ;; This function calls:
 16393 ;;		Nothing
 16394 ;; This function is called by:
 16395 ;;		_ecu_keypad_initialize
 16396 ;;		_gpio_pin_initialize
 16397 ;;		_ecu_button_initialize
 16398 ;; This function uses a non-reentrant model
 16399 ;;
 16400                           
 16401                           	psect	text59
 16402   0062B2                     __ptext59:
 16403                           	callstack 0
 16404   0062B2                     _gpio_pin_direction_initialize:
 16405                           	callstack 26
 16406   0062B2                     
 16407                           ;MCAL_layer/GPIO/hal_gpio.c: 24: STD_ReturnType gpio_pin_direction_initialize(const pin_
      +                          config_t* _pin_config);MCAL_layer/GPIO/hal_gpio.c: 25: {;MCAL_layer/GPIO/hal_gpio.c: 26:
      +                               STD_ReturnType ret = (STD_ReturnType)0x01;
 16408   0062B2  0E01               	movlw	1
 16409   0062B4  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
 16410   0062B6                     
 16411                           ;MCAL_layer/GPIO/hal_gpio.c: 27:     if(((void*)0) == _pin_config || _pin_config->pin > 
      +                          8 -1)
 16412   0062B6  5001               	movf	gpio_pin_direction_initialize@_pin_config^0,w,c
 16413   0062B8  1002               	iorwf	(gpio_pin_direction_initialize@_pin_config+1)^0,w,c
 16414   0062BA  B4D8               	btfsc	status,2,c
 16415   0062BC  EF62  F031         	goto	u5861
 16416   0062C0  EF64  F031         	goto	u5860
 16417   0062C4                     u5861:
 16418   0062C4  EF75  F031         	goto	l5959
 16419   0062C8                     u5860:
 16420   0062C8  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16421   0062CC  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16422   0062D0  30DF               	rrcf	223,w,c
 16423   0062D2  32E8               	rrcf	wreg,f,c
 16424   0062D4  32E8               	rrcf	wreg,f,c
 16425   0062D6  0B07               	andlw	7
 16426   0062D8  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16427   0062DA  0E07               	movlw	7
 16428   0062DC  6403               	cpfsgt	??_gpio_pin_direction_initialize^0,c
 16429   0062DE  EF73  F031         	goto	u5871
 16430   0062E2  EF75  F031         	goto	u5870
 16431   0062E6                     u5871:
 16432   0062E6  EFD8  F031         	goto	l5967
 16433   0062EA                     u5870:
 16434   0062EA                     l5959:
 16435                           
 16436                           ;MCAL_layer/GPIO/hal_gpio.c: 28:     {;MCAL_layer/GPIO/hal_gpio.c: 29:         ret = (ST
      +                          D_ReturnType)0x00;
 16437   0062EA  0E00               	movlw	0
 16438   0062EC  6E09               	movwf	gpio_pin_direction_initialize@ret^0,c
 16439                           
 16440                           ;MCAL_layer/GPIO/hal_gpio.c: 30:     }
 16441   0062EE  EFF9  F031         	goto	l5969
 16442   0062F2                     l5961:
 16443                           
 16444                           ;MCAL_layer/GPIO/hal_gpio.c: 36:             (*tris_registers[_pin_config->port] &= ~((u
      +                          int8)1 << _pin_config->pin));
 16445   0062F2  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16446   0062F6  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16447   0062FA  30DF               	rrcf	223,w,c
 16448   0062FC  32E8               	rrcf	wreg,f,c
 16449   0062FE  32E8               	rrcf	wreg,f,c
 16450   006300  0B07               	andlw	7
 16451   006302  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16452   006304  0E01               	movlw	1
 16453   006306  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 16454   006308  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
 16455   00630A  EF89  F031         	goto	u5884
 16456   00630E                     u5885:
 16457   00630E  90D8               	bcf	status,0,c
 16458   006310  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 16459   006312                     u5884:
 16460   006312  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 16461   006314  EF87  F031         	goto	u5885
 16462   006318  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16463   00631A  0AFF               	xorlw	255
 16464   00631C  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
 16465   00631E  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16466   006322  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16467   006326  50DF               	movf	223,w,c
 16468   006328  0B07               	andlw	7
 16469   00632A  6E06               	movwf	(??_gpio_pin_direction_initialize+3)^0,c
 16470   00632C  5006               	movf	(??_gpio_pin_direction_initialize+3)^0,w,c
 16471   00632E  0D02               	mullw	2
 16472   006330  0ECC               	movlw	low _tris_registers
 16473   006332  24F3               	addwf	243,w,c
 16474   006334  6ED9               	movwf	fsr2l,c
 16475   006336  0E01               	movlw	high _tris_registers
 16476   006338  20F4               	addwfc	prodh,w,c
 16477   00633A  6EDA               	movwf	fsr2h,c
 16478   00633C  CFDE F007          	movff	postinc2,??_gpio_pin_direction_initialize+4
 16479   006340  CFDD F008          	movff	postdec2,??_gpio_pin_direction_initialize+5
 16480   006344  C007  FFD9         	movff	??_gpio_pin_direction_initialize+4,fsr2l
 16481   006348  C008  FFDA         	movff	??_gpio_pin_direction_initialize+5,fsr2h
 16482   00634C  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
 16483   00634E  16DF               	andwf	indf2,f,c
 16484                           
 16485                           ;MCAL_layer/GPIO/hal_gpio.c: 37:             break;
 16486   006350  EFF9  F031         	goto	l5969
 16487   006354                     l5963:
 16488                           
 16489                           ;MCAL_layer/GPIO/hal_gpio.c: 39:             (*tris_registers[_pin_config->port] |= ((ui
      +                          nt8)1 << _pin_config->pin));
 16490   006354  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16491   006358  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16492   00635C  30DF               	rrcf	223,w,c
 16493   00635E  32E8               	rrcf	wreg,f,c
 16494   006360  32E8               	rrcf	wreg,f,c
 16495   006362  0B07               	andlw	7
 16496   006364  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16497   006366  0E01               	movlw	1
 16498   006368  6E04               	movwf	(??_gpio_pin_direction_initialize+1)^0,c
 16499   00636A  2A03               	incf	??_gpio_pin_direction_initialize^0,f,c
 16500   00636C  EFBA  F031         	goto	u5894
 16501   006370                     u5895:
 16502   006370  90D8               	bcf	status,0,c
 16503   006372  3604               	rlcf	(??_gpio_pin_direction_initialize+1)^0,f,c
 16504   006374                     u5894:
 16505   006374  2E03               	decfsz	??_gpio_pin_direction_initialize^0,f,c
 16506   006376  EFB8  F031         	goto	u5895
 16507   00637A  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16508   00637E  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16509   006382  50DF               	movf	223,w,c
 16510   006384  0B07               	andlw	7
 16511   006386  6E05               	movwf	(??_gpio_pin_direction_initialize+2)^0,c
 16512   006388  5005               	movf	(??_gpio_pin_direction_initialize+2)^0,w,c
 16513   00638A  0D02               	mullw	2
 16514   00638C  0ECC               	movlw	low _tris_registers
 16515   00638E  24F3               	addwf	243,w,c
 16516   006390  6ED9               	movwf	fsr2l,c
 16517   006392  0E01               	movlw	high _tris_registers
 16518   006394  20F4               	addwfc	prodh,w,c
 16519   006396  6EDA               	movwf	fsr2h,c
 16520   006398  CFDE F006          	movff	postinc2,??_gpio_pin_direction_initialize+3
 16521   00639C  CFDD F007          	movff	postdec2,??_gpio_pin_direction_initialize+4
 16522   0063A0  C006  FFD9         	movff	??_gpio_pin_direction_initialize+3,fsr2l
 16523   0063A4  C007  FFDA         	movff	??_gpio_pin_direction_initialize+4,fsr2h
 16524   0063A8  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16525   0063AA  12DF               	iorwf	indf2,f,c
 16526                           
 16527                           ;MCAL_layer/GPIO/hal_gpio.c: 40:             break;
 16528   0063AC  EFF9  F031         	goto	l5969
 16529   0063B0                     l5967:
 16530   0063B0  C001  FFD9         	movff	gpio_pin_direction_initialize@_pin_config,fsr2l
 16531   0063B4  C002  FFDA         	movff	gpio_pin_direction_initialize@_pin_config+1,fsr2h
 16532   0063B8  BCDF               	btfsc	indf2,6,c
 16533   0063BA  EFE1  F031         	goto	u5901
 16534   0063BE  EFE4  F031         	goto	u5900
 16535   0063C2                     u5901:
 16536   0063C2  0E01               	movlw	1
 16537   0063C4  EFE5  F031         	goto	u5910
 16538   0063C8                     u5900:
 16539   0063C8  0E00               	movlw	0
 16540   0063CA                     u5910:
 16541   0063CA  6E03               	movwf	??_gpio_pin_direction_initialize^0,c
 16542   0063CC  6A04               	clrf	(??_gpio_pin_direction_initialize+1)^0,c
 16543                           
 16544                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 16545                           ; Switch size 1, requested type "simple"
 16546                           ; Number of cases is 1, Range of values is 0 to 0
 16547                           ; switch strategies available:
 16548                           ; Name         Instructions Cycles
 16549                           ; simple_byte            4     3 (average)
 16550                           ;	Chosen strategy is simple_byte
 16551   0063CE  5004               	movf	(??_gpio_pin_direction_initialize+1)^0,w,c
 16552   0063D0  0A00               	xorlw	0	; case 0
 16553   0063D2  B4D8               	btfsc	status,2,c
 16554   0063D4  EFEE  F031         	goto	l13303
 16555   0063D8  EF75  F031         	goto	l5959
 16556   0063DC                     l13303:
 16557                           
 16558                           ; Switch size 1, requested type "simple"
 16559                           ; Number of cases is 2, Range of values is 0 to 1
 16560                           ; switch strategies available:
 16561                           ; Name         Instructions Cycles
 16562                           ; simple_byte            7     4 (average)
 16563                           ;	Chosen strategy is simple_byte
 16564   0063DC  5003               	movf	??_gpio_pin_direction_initialize^0,w,c
 16565   0063DE  0A00               	xorlw	0	; case 0
 16566   0063E0  B4D8               	btfsc	status,2,c
 16567   0063E2  EF79  F031         	goto	l5961
 16568   0063E6  0A01               	xorlw	1	; case 1
 16569   0063E8  B4D8               	btfsc	status,2,c
 16570   0063EA  EFAA  F031         	goto	l5963
 16571   0063EE  EF75  F031         	goto	l5959
 16572   0063F2                     l5969:
 16573                           
 16574                           ;MCAL_layer/GPIO/hal_gpio.c: 45:      return ret;
 16575   0063F2  5009               	movf	gpio_pin_direction_initialize@ret^0,w,c
 16576   0063F4  0012               	return		;funcret
 16577   0063F6                     __end_of_gpio_pin_direction_initialize:
 16578                           	callstack 0
 16579                           
 16580                           	psect	rparam
 16581   000000                     
 16582                           	psect	config
 16583                           
 16584                           ; Padding undefined space
 16585   300000                     	org	3145728
 16586   300000  FF                 	db	255
 16587                           
 16588                           ;Config register CONFIG1H @ 0x300001
 16589                           ;	Oscillator Selection bits
 16590                           ;	OSC = EC, EC oscillator, CLKOUT function on RA6
 16591                           ;	Fail-Safe Clock Monitor Enable bit
 16592                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16593                           ;	Internal/External Oscillator Switchover bit
 16594                           ;	IESO = OFF, Oscillator Switchover mode disabled
 16595   300001                     	org	3145729
 16596   300001  04                 	db	4
 16597                           
 16598                           ;Config register CONFIG2L @ 0x300002
 16599                           ;	Power-up Timer Enable bit
 16600                           ;	PWRT = OFF, PWRT disabled
 16601                           ;	Brown-out Reset Enable bits
 16602                           ;	BOREN = OFF, Brown-out Reset disabled in hardware and software
 16603                           ;	Brown Out Reset Voltage bits
 16604                           ;	BORV = 1, 
 16605   300002                     	org	3145730
 16606   300002  09                 	db	9
 16607                           
 16608                           ;Config register CONFIG2H @ 0x300003
 16609                           ;	Watchdog Timer Enable bit
 16610                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
 16611                           ;	Watchdog Timer Postscale Select bits
 16612                           ;	WDTPS = 32768, 1:32768
 16613   300003                     	org	3145731
 16614   300003  1E                 	db	30
 16615                           
 16616                           ; Padding undefined space
 16617   300004                     	org	3145732
 16618   300004  FF                 	db	255
 16619                           
 16620                           ;Config register CONFIG3H @ 0x300005
 16621                           ;	CCP2 MUX bit
 16622                           ;	CCP2MX = PORTC, CCP2 input/output is multiplexed with RC1
 16623                           ;	PORTB A/D Enable bit
 16624                           ;	PBADEN = OFF, PORTB<4:0> pins are configured as digital I/O on Reset
 16625                           ;	Low-Power Timer1 Oscillator Enable bit
 16626                           ;	LPT1OSC = OFF, Timer1 configured for higher power operation
 16627                           ;	MCLR Pin Enable bit
 16628                           ;	MCLRE = ON, MCLR pin enabled; RE3 input pin disabled
 16629   300005                     	org	3145733
 16630   300005  81                 	db	129
 16631                           
 16632                           ;Config register CONFIG4L @ 0x300006
 16633                           ;	Stack Full/Underflow Reset Enable bit
 16634                           ;	STVREN = ON, Stack full/underflow will cause Reset
 16635                           ;	Single-Supply ICSP Enable bit
 16636                           ;	LVP = OFF, Single-Supply ICSP disabled
 16637                           ;	Extended Instruction Set Enable bit
 16638                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16639                           ;	Background Debugger Enable bit
 16640                           ;	DEBUG = 0x1, unprogrammed default
 16641   300006                     	org	3145734
 16642   300006  81                 	db	129
 16643                           
 16644                           ; Padding undefined space
 16645   300007                     	org	3145735
 16646   300007  FF                 	db	255
 16647                           
 16648                           ;Config register CONFIG5L @ 0x300008
 16649                           ;	Code Protection bit
 16650                           ;	CP0 = OFF, Block 0 (000800-003FFFh) not code-protected
 16651                           ;	Code Protection bit
 16652                           ;	CP1 = OFF, Block 1 (004000-007FFFh) not code-protected
 16653                           ;	Code Protection bit
 16654                           ;	CP2 = OFF, Block 2 (008000-00BFFFh) not code-protected
 16655                           ;	Code Protection bit
 16656                           ;	CP3 = OFF, Block 3 (00C000-00FFFFh) not code-protected
 16657   300008                     	org	3145736
 16658   300008  0F                 	db	15
 16659                           
 16660                           ;Config register CONFIG5H @ 0x300009
 16661                           ;	Boot Block Code Protection bit
 16662                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16663                           ;	Data EEPROM Code Protection bit
 16664                           ;	CPD = OFF, Data EEPROM not code-protected
 16665   300009                     	org	3145737
 16666   300009  C0                 	db	192
 16667                           
 16668                           ;Config register CONFIG6L @ 0x30000A
 16669                           ;	Write Protection bit
 16670                           ;	WRT0 = OFF, Block 0 (000800-003FFFh) not write-protected
 16671                           ;	Write Protection bit
 16672                           ;	WRT1 = OFF, Block 1 (004000-007FFFh) not write-protected
 16673                           ;	Write Protection bit
 16674                           ;	WRT2 = OFF, Block 2 (008000-00BFFFh) not write-protected
 16675                           ;	Write Protection bit
 16676                           ;	WRT3 = OFF, Block 3 (00C000-00FFFFh) not write-protected
 16677   30000A                     	org	3145738
 16678   30000A  0F                 	db	15
 16679                           
 16680                           ;Config register CONFIG6H @ 0x30000B
 16681                           ;	Configuration Register Write Protection bit
 16682                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16683                           ;	Boot Block Write Protection bit
 16684                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16685                           ;	Data EEPROM Write Protection bit
 16686                           ;	WRTD = OFF, Data EEPROM not write-protected
 16687   30000B                     	org	3145739
 16688   30000B  E0                 	db	224
 16689                           
 16690                           ;Config register CONFIG7L @ 0x30000C
 16691                           ;	Table Read Protection bit
 16692                           ;	EBTR0 = OFF, Block 0 (000800-003FFFh) not protected from table reads executed in other
      +                           blocks
 16693                           ;	Table Read Protection bit
 16694                           ;	EBTR1 = OFF, Block 1 (004000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16695                           ;	Table Read Protection bit
 16696                           ;	EBTR2 = OFF, Block 2 (008000-00BFFFh) not protected from table reads executed in other
      +                           blocks
 16697                           ;	Table Read Protection bit
 16698                           ;	EBTR3 = OFF, Block 3 (00C000-00FFFFh) not protected from table reads executed in other
      +                           blocks
 16699   30000C                     	org	3145740
 16700   30000C  0F                 	db	15
 16701                           
 16702                           ;Config register CONFIG7H @ 0x30000D
 16703                           ;	Boot Block Table Read Protection bit
 16704                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16705   30000D                     	org	3145741
 16706   30000D  40                 	db	64
 16707                           tosu	equ	0xFFF
 16708                           tosh	equ	0xFFE
 16709                           tosl	equ	0xFFD
 16710                           stkptr	equ	0xFFC
 16711                           pclatu	equ	0xFFB
 16712                           pclath	equ	0xFFA
 16713                           pcl	equ	0xFF9
 16714                           tblptru	equ	0xFF8
 16715                           tblptrh	equ	0xFF7
 16716                           tblptrl	equ	0xFF6
 16717                           tablat	equ	0xFF5
 16718                           prodh	equ	0xFF4
 16719                           prodl	equ	0xFF3
 16720                           indf0	equ	0xFEF
 16721                           postinc0	equ	0xFEE
 16722                           postdec0	equ	0xFED
 16723                           preinc0	equ	0xFEC
 16724                           plusw0	equ	0xFEB
 16725                           fsr0h	equ	0xFEA
 16726                           fsr0l	equ	0xFE9
 16727                           wreg	equ	0xFE8
 16728                           indf1	equ	0xFE7
 16729                           postinc1	equ	0xFE6
 16730                           postdec1	equ	0xFE5
 16731                           preinc1	equ	0xFE4
 16732                           plusw1	equ	0xFE3
 16733                           fsr1h	equ	0xFE2
 16734                           fsr1l	equ	0xFE1
 16735                           bsr	equ	0xFE0
 16736                           indf2	equ	0xFDF
 16737                           postinc2	equ	0xFDE
 16738                           postdec2	equ	0xFDD
 16739                           preinc2	equ	0xFDC
 16740                           plusw2	equ	0xFDB
 16741                           fsr2h	equ	0xFDA
 16742                           fsr2l	equ	0xFD9
 16743                           status	equ	0xFD8

Data Sizes:
    Strings     114
    Constant    112
    Data        61
    BSS         141
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128     82     128
    BANK1           256    184     244
    BANK2           256      0      96
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    convert_arr_to_float@arr	PTR const unsigned char  size(2) Largest target is 4
		 -> num1(BANK1[4]), num2(BANK1[4]), num3(BANK1[4]), 

    convert_arr_to_float@num_value	PTR float  size(1) Largest target is 4
		 -> num1_val(BANK0[4]), num2_val(BANK0[4]), num3_val(BANK0[4]), 

    convert_float_to_string@str	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), 

    convert_int_to_string@str	PTR unsigned char  size(2) Largest target is 40
		 -> send_the_result_to_LCD@result_str_179(BANK1[40]), 

    Division_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    dtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    ecu_keypad_get_value@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 

    ecu_keypad_get_value@value	PTR unsigned char  size(1) Largest target is 1
		 -> get_number_and_operartion@keypad_value(COMRAM[1]), get_third_number_and_third_operartion@keypad_value(COMRAM[1]), 

    ecu_keypad_initialize@keypad	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), 

    efgtoa@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    f$.$buffer	PTR unsigned char  size(2) Largest target is 0

    f$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputc@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputc@fp$.$buffer	PTR unsigned char  size(2) Largest target is 0

    fputc@fp$.$source	PTR const unsigned char  size(2) Largest target is 0

    fputs@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    get_number_and_operartion@counter_num	PTR unsigned char  size(1) Largest target is 1
		 -> counter_num1(BANK0[1]), counter_num2(BANK0[1]), 

    get_number_and_operartion@lcd_counter	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_counter(BANK0[1]), 

    get_number_and_operartion@num	PTR unsigned char  size(2) Largest target is 4
		 -> num1(BANK1[4]), num2(BANK1[4]), 

    get_number_and_operartion@operation	PTR unsigned char  size(1) Largest target is 1
		 -> operation(BANK0[1]), operation2(BANK0[1]), 

    get_third_number_and_third_operartion@counter_num	PTR unsigned char  size(1) Largest target is 1
		 -> counter_num3(BANK0[1]), 

    get_third_number_and_third_operartion@lcd_counter	PTR unsigned char  size(1) Largest target is 1
		 -> lcd_counter(BANK0[1]), 

    get_third_number_and_third_operartion@num	PTR unsigned char  size(2) Largest target is 4
		 -> num3(BANK1[4]), 

    get_third_number_and_third_operartion@operation	PTR unsigned char  size(1) Largest target is 1
		 -> operation3(BANK0[1]), 

    gpio_pin_direction_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_columns_pins(BANK1[4]), 
		 -> keypad$keypad_rows_pins(BANK1[4]), lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    gpio_pin_initialize@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_rows_pins(BANK1[4]), 
		 -> lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    gpio_pin_read_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> keypad(BANK1[8]), keypad$keypad_columns_pins(BANK1[4]), 

    gpio_pin_read_logic@logic	PTR enum E3403 size(1) Largest target is 1
		 -> ecu_button_read_state@btn_logic(COMRAM[1]), ecu_keypad_get_value@column_val(COMRAM[1]), 

    gpio_pin_write_logic@_pin_config	PTR const struct . size(2) Largest target is 8
		 -> ecu_led_initialize@led_pin(COMRAM[1]), ecu_led_turn_off@led_pin(COMRAM[1]), ecu_led_turn_on@led_pin(COMRAM[1]), ecu_relay_initialize@relay_pin(COMRAM[1]), 
		 -> ecu_relay_off@relay_pin(COMRAM[1]), ecu_relay_on@relay_pin(COMRAM[1]), keypad(BANK1[8]), keypad$keypad_rows_pins(BANK1[4]), 
		 -> lcd1(BANK0[6]), lcd1$data(BANK0[4]), 

    lat_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> LATA(BITBIGSFRll[1]), LATB(BITBIGSFRlh[1]), LATC(BITBIGSFRlh[1]), LATD(BITBIGSFRlh[1]), 
		 -> LATE(BITBIGSFRlh[1]), 

    lcd_4bit_initialize@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_char_data_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_command@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_enable_enable@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_4bit_send_string_pos@str	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), send_the_result_to_LCD@result_str_179(BANK1[40]), STR_1(CODE[15]), STR_10(CODE[19]), 
		 -> STR_15(CODE[14]), STR_2(CODE[19]), STR_3(CODE[18]), STR_4(CODE[19]), 
		 -> STR_5(CODE[15]), STR_6(CODE[19]), STR_7(CODE[23]), STR_8(CODE[28]), 
		 -> STR_9(CODE[18]), 

    lcd_4bit_set_curser@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    lcd_send_4bit@lcd	PTR const struct . size(1) Largest target is 6
		 -> lcd1(BANK0[6]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@d1	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memcpy@s1	PTR const void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    memset@dest	PTR void  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), send_the_result_to_LCD@result_str_179(BANK1[40]), 

    memset@p	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), send_the_result_to_LCD@result_str_179(BANK1[40]), 

    multiplication_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    pad@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    port_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> PORTA(BITBIGSFRll[1]), PORTB(BITBIGSFRll[1]), PORTC(BITBIGSFRll[1]), PORTD(BITBIGSFRll[1]), 
		 -> PORTE(BITBIGSFRll[1]), 

    read_prec_or_width@ap	PTR PTR void [1] size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    read_prec_or_width@fmt	PTR PTR const unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    S1397$buffer	PTR unsigned char  size(2) Largest target is 0

    S1397$source	PTR const unsigned char  size(2) Largest target is 0

    sp__memcpy	PTR void  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sp__memset	PTR void  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), send_the_result_to_LCD@result_str_179(BANK1[40]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    sprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 80
		 -> send_the_result_to_LCD@result_str(BANK1[80]), send_the_result_to_LCD@result_str_179(BANK1[40]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(1) Largest target is 4
		 -> STR_16(CODE[4]), STR_19(CODE[4]), 

    subtraction_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    sum_operation@result	PTR float  size(1) Largest target is 4
		 -> result(BANK0[4]), total_result(BANK0[4]), 

    tris_registers	PTR volatile unsigned char [5] size(2) Largest target is 1
		 -> TRISA(BITBIGSFRll[1]), TRISB(BITBIGSFRh[1]), TRISC(BITBIGSFRh[1]), TRISD(BITBIGSFRh[1]), 
		 -> TRISE(BITBIGSFRh[1]), 

    vfpfcnvrt@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfpfcnvrt@cp	PTR unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(1) Largest target is 1
		 -> vfprintf@cfmt(COMRAM[1]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 

    vfprintf@ap	PTR PTR void  size(1) Largest target is 1
		 -> sprintf@ap(BANK0[1]), 

    vfprintf@cfmt	PTR unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    vfprintf@fmt	PTR const unsigned char  size(1) Largest target is 5
		 -> STR_11(CODE[5]), STR_12(CODE[3]), STR_13(CODE[3]), STR_14(CODE[3]), 

    vfprintf@fp	PTR struct _IO_FILE size(1) Largest target is 12
		 -> sprintf@f(BANK0[12]), 


Critical Paths under _main in COMRAM

    _sum_operation->___fladd
    _subtraction_operation->___flsub
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _read_prec_or_width->___wmul
    _efgtoa->___flge
    _efgtoa->_floorf
    _floorf->___fldiv
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___awmod
    _multiplication_operation->___flmul
    _get_third_number_and_third_operartion->_lcd_4bit_send_char_data_pos
    _get_third_number_and_third_operartion->_lcd_4bit_send_string_pos
    _get_number_and_operartion->_lcd_4bit_send_char_data_pos
    _get_number_and_operartion->_lcd_4bit_send_string_pos
    _lcd_4bit_send_string_pos->_lcd_4bit_set_curser
    _lcd_4bit_send_char_data_pos->_lcd_4bit_set_curser
    _lcd_4bit_set_curser->_lcd_4bit_send_command
    _lcd_4bit_send_char_data->_lcd_send_4bit
    _ecu_keypad_get_value->_gpio_pin_write_logic
    _convert_arr_to_float->_powf
    _powf->___flge
    _scalbnf->___flmul
    ___flmul->___xxtofl
    ___xxtofl->___fltol
    ___flsub->___fldiv
    ___fladd->___flmul
    ___flge->___flsub
    _Division_operation->___fldiv
    ___fldiv->___fladd
    _ecu_layer_Initialization->_lcd_4bit_initialize
    _lcd_4bit_initialize->_lcd_4bit_send_command
    _lcd_4bit_send_command->_lcd_send_4bit
    _lcd_send_4bit->_gpio_pin_write_logic
    _lcd_4bit_send_enable_enable->_gpio_pin_write_logic
    _ecu_keypad_initialize->_gpio_pin_initialize
    _gpio_pin_initialize->_gpio_pin_write_logic

Critical Paths under _main in BANK0

    _main->_send_the_result_to_LCD
    _send_the_result_to_LCD->_convert_float_to_string
    _convert_int_to_string->_sprintf
    _convert_float_to_string->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _main in BANK1

    _convert_arr_to_float->_powf

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0  679738
                                             80 BANK0      2     2      0
         _Application_Initialization
                 _Division_operation
               _convert_arr_to_float
          _get_number_and_operartion
_get_third_number_and_third_operarti
                     _initialize_var
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
           _multiplication_operation
             _send_the_result_to_LCD
              _subtraction_operation
                      _sum_operation
 ---------------------------------------------------------------------------------
 (1) _sum_operation                                        9     0      9   13294
                                             65 COMRAM     9     0      9
                            ___fladd
 ---------------------------------------------------------------------------------
 (1) _subtraction_operation                                9     0      9   20550
                                             98 COMRAM     9     0      9
                            ___flsub
 ---------------------------------------------------------------------------------
 (1) _send_the_result_to_LCD                             126   122      4  226584
                                             76 BANK0      4     0      4
                                              0 BANK1    122   122      0
                             ___flge
                            ___fltol
                           ___xxtofl
            _convert_float_to_string
              _convert_int_to_string
              _lcd_4bit_send_command
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _convert_int_to_string                                5     1      4   79316
                                             70 BANK0      4     0      4
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (2) _convert_float_to_string                              6     0      6   79232
                                             70 BANK0      6     0      6
                             _memset
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    15      7   77811
                                             50 BANK0     20    13      7
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             4     1      3   76167
                                            123 COMRAM     4     1      3
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           12     9      3   75298
                                            118 COMRAM     5     2      3
                                             44 BANK0      6     6      0
                               _dtoa
                             _efgtoa
                              _fputc
                 _read_prec_or_width
 ---------------------------------------------------------------------------------
 (6) _read_prec_or_width                                   5     3      2    1143
                                              6 COMRAM     5     3      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     811
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              53    47      6   66556
                                            110 COMRAM     8     2      6
                                              0 BANK0     44    44      0
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                               _labs
                             _memcpy
                                _pad
                             _strcpy
 ---------------------------------------------------------------------------------
 (7) _strcpy                                               6     3      3     463
                                              0 COMRAM     6     3      3
 ---------------------------------------------------------------------------------
 (7) _memcpy                                              11     5      6     478
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _labs                                                 8     4      4     294
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             90 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4     609
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                12     9      3    4750
                                             22 COMRAM    12     9      3
                            ___awdiv
                            ___awmod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                  8     3      5    2959
                                             14 COMRAM     8     3      5
                              _fputc
                              _fputs
 ---------------------------------------------------------------------------------
 (8) _fputs                                                6     3      3    1002
                                              8 COMRAM     6     3      3
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                8     5      3     682
                                              0 COMRAM     8     5      3
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                              6 COMRAM     4     2      2
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1008
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _multiplication_operation                             9     0      9   16324
                                             49 COMRAM     9     0      9
                            ___flmul
 ---------------------------------------------------------------------------------
 (1) _initialize_var                                       2     2      0     112
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_third_number_and_third_operartion                8     3      5   91511
                                             28 COMRAM     8     3      5
               _ecu_keypad_get_value
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (1) _get_number_and_operartion                            8     3      5   91871
                                             28 COMRAM     8     3      5
               _ecu_keypad_get_value
        _lcd_4bit_send_char_data_pos
           _lcd_4bit_send_string_pos
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_string_pos                             6     1      5   43185
                                             23 COMRAM     5     0      5
            _lcd_4bit_send_char_data
                _lcd_4bit_set_curser
 ---------------------------------------------------------------------------------
 (2) _lcd_4bit_send_char_data_pos                          5     1      4   41015
                                             23 COMRAM     5     1      4
            _lcd_4bit_send_char_data
                _lcd_4bit_set_curser
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_set_curser                                  6     3      3   21097
                                             17 COMRAM     6     3      3
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_send_char_data                              3     1      2   17169
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (2) _ecu_keypad_get_value                                10     7      3    6099
                                             10 COMRAM     9     6      3
                _gpio_pin_read_logic
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _gpio_pin_read_logic                                  9     6      3     444
                                              0 COMRAM     8     5      3
 ---------------------------------------------------------------------------------
 (1) _convert_arr_to_float                                17    13      4  115528
                                              0 BANK0     17    13      4
                            ___fladd
                            ___flmul
                           ___xxtofl
                               _powf
 ---------------------------------------------------------------------------------
 (2) _powf                                               201   193      8   85198
                                            110 COMRAM    17     9      8
                                              0 BANK1    184   184      0
                            ___fladd
                            ___fldiv
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                           ___xxtofl
                            _scalbnf
                              _sqrtf
 ---------------------------------------------------------------------------------
 (3) _sqrtf                                               41    37      4    1600
                                              0 COMRAM    37    33      4
 ---------------------------------------------------------------------------------
 (3) _scalbnf                                             18    12      6   16128
                                             49 COMRAM    18    12      6
                            ___flmul
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8   15208
                                             24 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (2) ___xxtofl                                            14    10      4    1108
                                             10 COMRAM    14    10      4
                            ___fltol (ARG)
 ---------------------------------------------------------------------------------
 (2) ___flsub                                              8     0      8   19434
                                             90 COMRAM     8     0      8
                            ___fladd
                            ___fldiv (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (2) ___fladd                                             16     8      8   12178
                                             49 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     412
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8    1896
                                             98 COMRAM    12     4      8
                            ___fladd (ARG)
                            ___flmul (ARG)
                            ___flsub (ARG)
                            ___fltol (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (1) _Division_operation                                   9     0      9    5836
                                             90 COMRAM     9     0      9
                            ___fldiv
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    4720
                                             65 COMRAM    25    17      8
                            ___fladd (ARG)
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (1) _Application_Initialization                           0     0      0   34714
           _ecu_layer_Initialization
 ---------------------------------------------------------------------------------
 (2) _ecu_layer_Initialization                             0     0      0   34714
              _ecu_keypad_initialize
                _lcd_4bit_initialize
 ---------------------------------------------------------------------------------
 (3) _lcd_4bit_initialize                                  4     3      1   27447
                                             17 COMRAM     4     3      1
                _gpio_pin_initialize
              _lcd_4bit_send_command
 ---------------------------------------------------------------------------------
 (4) _lcd_4bit_send_command                                3     1      2   20229
                                             14 COMRAM     3     1      2
               _gpio_pin_write_logic
        _lcd_4bit_send_enable_enable
                      _lcd_send_4bit
 ---------------------------------------------------------------------------------
 (5) _lcd_send_4bit                                        4     2      2    5905
                                             10 COMRAM     4     2      2
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (5) _lcd_4bit_send_enable_enable                          3     2      1    5353
                                             10 COMRAM     3     2      1
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (3) _ecu_keypad_initialize                                7     5      2    7267
                                             14 COMRAM     6     4      2
      _gpio_pin_direction_initialize
                _gpio_pin_initialize
 ---------------------------------------------------------------------------------
 (4) _gpio_pin_initialize                                  4     2      2    6574
                                             10 COMRAM     4     2      2
      _gpio_pin_direction_initialize
               _gpio_pin_write_logic
 ---------------------------------------------------------------------------------
 (6) _gpio_pin_write_logic                                10     7      3    4891
                                              0 COMRAM    10     7      3
 ---------------------------------------------------------------------------------
 (5) _gpio_pin_direction_initialize                        9     7      2     407
                                              0 COMRAM     9     7      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Application_Initialization
     _ecu_layer_Initialization
       _ecu_keypad_initialize
         _gpio_pin_direction_initialize
         _gpio_pin_initialize
           _gpio_pin_direction_initialize
           _gpio_pin_write_logic
       _lcd_4bit_initialize
         _gpio_pin_initialize
         _lcd_4bit_send_command
           _gpio_pin_write_logic
           _lcd_4bit_send_enable_enable
             _gpio_pin_write_logic
           _lcd_send_4bit
             _gpio_pin_write_logic
   _Division_operation
     ___fldiv
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___fltol (ARG)
         ___xxtofl (ARG)
       ___flmul (ARG)
   _convert_arr_to_float
     ___fladd
     ___flmul
     ___xxtofl
     _powf
       ___fladd
       ___fldiv
       ___flge
         ___fladd (ARG)
         ___flmul (ARG)
         ___flsub (ARG)
           ___fladd
           ___fldiv (ARG)
           ___flmul (ARG)
         ___fltol (ARG)
         ___xxtofl (ARG)
       ___flmul
       ___flneg
       ___flsub
       ___xxtofl
       _scalbnf
         ___flmul
       _sqrtf
   _get_number_and_operartion
     _ecu_keypad_get_value
       _gpio_pin_read_logic
       _gpio_pin_write_logic
     _lcd_4bit_send_char_data_pos
       _lcd_4bit_send_char_data
         _gpio_pin_write_logic
         _lcd_4bit_send_enable_enable
         _lcd_send_4bit
       _lcd_4bit_set_curser
         _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
       _lcd_4bit_send_char_data
       _lcd_4bit_set_curser
   _get_third_number_and_third_operartion
     _ecu_keypad_get_value
     _lcd_4bit_send_char_data_pos
     _lcd_4bit_send_string_pos
   _initialize_var
   _lcd_4bit_send_command
   _lcd_4bit_send_string_pos
   _multiplication_operation
     ___flmul
   _send_the_result_to_LCD
     ___flge
     ___fltol
     ___xxtofl
     _convert_float_to_string
       _memset
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _dtoa
               ___awdiv
               ___awmod
               _abs
                 ___awmod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
             _efgtoa
               ___fladd
               ___fldiv
               ___fleq
               ___flge
               ___flmul
               ___flneg
               ___flsub
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _labs
               _memcpy
               _pad
               _strcpy
             _fputc
             _read_prec_or_width
               ___wmul
     _convert_int_to_string
       _memset
       _sprintf
     _lcd_4bit_send_command
     _lcd_4bit_send_string_pos
   _subtraction_operation
     ___flsub
   _sum_operation
     ___fladd

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0       0      40        0.0%
EEDATA             400      0       0       0        0.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      60       9       37.5%
BITBANK1           100      0       0       6        0.0%
BANK1              100     B8      F4       7       95.3%
BITBANK15           80      0       0      34        0.0%
BANK15              80      0       0      35        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     52      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITBIGSFRh          69      0       0      36        0.0%
BITBIGSFRlh          4      0       0      37        0.0%
BITBIGSFRll          4      0       0      38        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     253      39        0.0%
DATA                 0      0     253       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.45 build 20230818022343 
Symbol Table                                                                                   Mon Feb 05 18:20:55 2024

                                   ?_lcd_send_4bit 000B                                       ___fldiv@aexp 005A  
                                     ___fldiv@bexp 0059                                       ___fldiv@sign 0052  
                                               _L1 105D                                                 _L2 1059  
                                               _L3 1055                                                 _L4 1051  
                                               _L5 104D                                                 _L6 1049  
                                               _P1 1045                                                 _P2 1041  
                                               _P3 103D                                                 l72 5B3C  
                                               _P4 1039                                                 _P5 1035  
                                               l92 5650                                                 l97 6648  
                                     ___awdiv@sign 0006                                                 _bp 1011  
                                               _cp 1021                                ___wmul@multiplicand 0003  
              __end_of_lcd_4bit_send_enable_enable 794C                        _lcd_4bit_send_enable_enable 7912  
                                              l100 76EC                                                l103 77E6  
                                              l112 78D6                                                l202 7512  
                                              l122 6D28                                                l106 7822  
                                              l300 794A                                                l109 785E  
                                              l117 6866                                                l207 789A  
                                              l223 7302                                                l323 71E8  
                                              l500 63F4                                                l192 6C60  
                                              l540 744E                                                l452 7A50  
                                              l197 7570                                                l526 70AA  
                                              l382 6758                                                l294 7616  
                                              l519 6520                                                l368 73E2  
                                              l297 7372                                                l920 6DEC  
                                              l666 414E                                                l933 6F56  
                                              l686 7A6E                                                l689 7A3A  
                                              l954 6A2A                                                l963 79BA  
                                              l948 7000                                                l959 6A70  
                                              l986 696C                   send_the_result_to_LCD@result_str 0100  
                                              _lg2 1031                                                _abs 79BC  
                                              _pad 7450                                                _ovt 1025  
                                     ___awmod@sign 0006                                                prod 0FF3  
                           ?_subtraction_operation 0063                                                wreg 0FE8  
                                     ___flmul@aexp 0026                                       ___flmul@bexp 0027  
                          _convert_float_to_string 76AE                                       ___flmul@sign 0025  
                                     ___flmul@temp 0030                                       ___flmul@prod 002C  
                    ??_lcd_4bit_send_enable_enable 000C                                       ___fltol@exp1 000A  
                                             ?_abs 0007                                               l1310 4A9C  
                                             l1303 48A6                                               l1320 4BCC  
                                             l1312 4B14                                               l1217 4510  
                                             l1313 4B02                                               l1234 462A  
                                             l1226 47E0                                               l1218 44FE  
                                             l1402 7466                                               l1410 6168  
                                             l1243 46FA                                               l1219 44C4  
                                             l1307 4C0A                                               l1244 46E8  
                                             l1412 6170                                               l1413 61B6  
                                             l1406 74B4                                               l1271 5382  
                                             l1351 6072                                               l1344 5FDA  
                                             l1424 62B0                                               l1440 35DA  
                                             l1273 51E2                                               l1282 5228  
                                             l1514 77AA                                               l1259 76AC  
                                             l1347 6136                                               l1435 3DF4  
                                             l1284 52A0                                               l1276 51A6  
                                             l1532 79EE                                               l1524 6B6E  
                                             l1285 528E                                               l1541 5EC6  
                                             l1373 772C                                               l1358 60CE  
                                             l1366 7982                                               l1438 3794  
                                             l1711 7A70                                               l1704 33D0  
                                             l1552 75C6                                               l1480 7148  
                                             l1721 5D70                                               l1529 79D6  
                                             l1730 4FE8                                               l1570 6EA6  
                                             l1538 5F82                                               l1643 1380  
                                             l1468 3BDC                                               l1484 7150  
                                             l1492 58D6                                               l1741 4F12  
                                             l1653 1410                                               l1734 4DF0  
                                             l1638 340C                                               l1558 7666  
                                             l1743 4F80                                               l1671 15E0  
                                             l1663 14D0                                               l5111 7A32  
                                             l1738 4E4E                                               l1578 776C  
                                             l1667 1582                                               l6101 73E4  
                                             l1749 7910                                               l5109 7A16  
                                             l6111 744C                                               l6103 73E4  
                                             l6105 73F6                                               l5401 6D5E  
                                             l6107 7418                                               l6131 7968  
                                             l5411 6D8C                                               l5403 6D62  
                                             l6109 7420                                               l6125 794C  
                                             l5421 6DC0                                               l5413 6D9A  
                                             l5405 6D6A                                               ?_pad 000F  
                                             l6151 7024                                               l6127 7958  
                                             l5423 6DC6                                               l5415 6DA0  
                                             l5407 6D7C                                               l6233 7374  
                                             l6153 7046                                               l6145 7002  
                                             l6129 7964                                               l5417 6DB6  
                                             l5409 6D84                                               l5425 6DCC  
                                             l5441 6EC6                                               l5433 6EA8  
                                             l5521 6892                                               l5601 7572  
                                             l6251 73B0                                               l6235 7374  
                                             l6155 704A                                               l6147 7002  
                                             l5427 6DDC                                               l5419 6DBE  
                                             l5451 6EFE                                               l5443 6ED4  
                                             l5435 6EAC                                               l5531 68E0  
                                             l5523 68BC                                               l5515 6868  
                                             l5611 5D92                                               l5603 7580  
                                             l6261 73D2                                               l6245 738E  
                                             l6237 7386                                               l6149 7014  
                                             l6421 6662                                               l7141 6CB6  
                                             l7133 6C62                                               l5429 6DE4  
                                             l5453 6F0C                                               l5461 6F36  
                                             l5445 6EDC                                               l5437 6EBA  
                                             l5541 690C                                               l5525 68BE  
                                             l5517 687E                                               l5621 5E7A  
                                             l5613 5DE8                                               l5605 7594  
                                             l6247 739E                                               l6239 738A  
                                             l6423 6674                                               l7143 6CBA  
                                             l5391 6D2E                                               l5463 6F46  
                                             l5455 6F22                                               l5447 6EEE  
                                             l5439 6EC2                                               l5471 6F86  
                                             l5551 693C                                               l5527 68CE  
                                             l5631 5F62                                               l5623 5EB6  
                                             l5615 5DFC                                               l6257 73B4  
                                             l6249 73A0                                               l6441 66A4  
                                             l6433 668C                                               l6425 6684  
                                             l6417 664A                                               l7145 6CD6  
                                             l5393 6D3C                                               l5465 6F4E  
                                             l5457 6F2A                                               l5449 6EF6  
                                             l8113 772E                                               l8121 7450  
                                             l5481 6FFE                                               l5473 6F96  
                                             l5553 694C                                               l5537 68F8  
                                             l5529 68D2                                               l5633 5F72  
                                             l5617 5E0A                                               l5625 5EEA  
                                             l5609 5D72                                               l5651 63FA  
                                             l6259 73D0                                               l6443 66A6  
                                             l6427 6688                                               l6419 665A  
                                             l7139 6C8C                                               l5395 6D44  
                                             l5459 6F30                                               l5571 79BC  
                                             l8115 773A                                               l8131 74A4  
                                             l8123 745E                                               l5475 6FC4  
                                             l5555 695C                                               l5547 6920  
                                             l5539 6902                                               l5627 5F26  
                                             l5653 640C                                               l6461 6734  
                                             l6445 66B6                                               l5397 6D48  
                                             l5389 6D2A                                               l5573 79CA  
                                             l8117 7748                                               l8125 7472  
                                             l5477 6FD4                                               l5469 6F58  
                                             l5549 692C                                               l5581 6AF8  
                                             l5629 5F3A                                               l8141 7638  
                                             l8133 78D8                                               l5663 64F4  
                                             l5655 642E                                               l6463 6736  
                                             l6455 66DE                                               l6447 66CA  
                                             l6439 6690                                               l5399 6D56  
                                             l8119 774C                                               l8127 7482  
                                             l8151 615C                                               l5479 6FF8  
                                             l5583 6B04                                               l5575 6A72  
                                             l8143 763C                                               l8135 78E0  
                                             l5657 6436                                               l5665 651E  
                                             l5649 63F6                                               l6465 6746  
                                             l6457 66FE                                               l6449 66DA  
                                             l8129 7486                                               l8161 61AA  
                                             l8153 6178                                               l5593 6B66  
                                             l5577 6A92                                               l8145 7648  
                                             l8137 7618                                               l5659 6498  
                                             l6467 6748                                               l6459 670E  
                                             l4891 6E18                                               l8171 6200  
                                             l8163 61B2                                               l8155 6188  
                                             l5579 6AD0                                               l5587 6B10  
                                             l8139 762C                                               l8147 764C  
                                             l8421 7336                                               l4893 6E34  
                                             l4885 6DEE                                               l8181 6254  
                                             l8173 6206                                               l8165 61BE  
                                             l8157 618E                                               l8149 6138  
                                             l5589 6B22                                               l5941 70B4  
                                             l8431 7928                                               l8423 7352  
                                             l8415 7304                                               l4895 6E66  
                                             l4887 6DFE                                               l8183 626E  
                                             l8175 620C                                               l8167 61C8  
                                             l8159 619E                                               l5943 70D6  
                                             l5951 7122                                               l5961 62F2  
                                             l5953 62B2                                               l8433 7930  
                                             l8417 7304                                               l4889 6E0E  
                                             l8185 627E                                               l8169 61CE  
                                             l8177 6228                                               l5945 70DE  
                                             l5963 6354                                               l5955 62B6  
                                             l8435 7948                                               l8427 7912  
                                             l8419 731C                                               l8531 7524  
                                             l8603 74B6                                               l8187 6284  
                                             l8179 6242                                               l5947 70FA  
                                             l5939 70AC                                               l5957 62C8  
                                             l8429 7912                                               l8533 752C  
                                             l8605 74C6                                               l8621 7184  
                                             l8613 7152                                               l8701 59DE  
                                             l8189 6294                                               l5949 711A  
                                             l5967 63B0                                               l5959 62EA  
                                             l8535 756E                                               l8607 74CE  
                                             l8623 7198                                               l8615 7156  
                                             l8711 5A6A                                               l8703 59FA  
                                             l5969 63F2                                               l8529 7514  
                                             l8561 6B70                                               l8609 7510  
                                             l8617 715C                                               l8625 71AC  
                                             l8641 7898                                               l8721 5AC8  
                                             l8705 5A10                                               l8713 5A76  
                                             l8563 6B84                                               l8619 7170  
                                             l8627 71E6                                               l8635 7860  
                                             l8651 72A0                                               l8715 5A8C  
                                             l8723 5AD4                                               l8707 5A46  
                                             l8731 5388                                               l8581 6BE0  
                                             l8573 6BAC                                               l8565 6B88  
                                             l8637 7870                                               l8653 72CC  
                                             l8645 7278                                               l8725 5AF0  
                                             l8717 5AA6                                               l8709 5A50  
                                             l8741 53FA                                               l8733 5398  
                                             l8591 6C24                                               l8583 6BEC  
                                             l8575 6BC0                                               l8567 6BA8  
                                             l8831 7A6A                                               l8639 7878  
                                             l8655 72D0                                               l8647 7288  
                                             l8727 5B06                                               l8719 5AC0  
                                             l8751 5460                                               l8743 5418  
                                             l8735 53B0                                               l8593 6C30  
                                             l8585 6C06                                               l8577 6BC2  
                                             l8673 7A3C                                               l8649 728C  
                                             l8681 5904                                               l8761 54FC  
                                             l8753 5478                                               l8745 542A  
                                             l8737 53C0                                               l8729 5384  
                                             l8595 6C3C                                               l8587 6C0C  
                                             l8579 6BD2                                               l8691 597E  
                                             l8683 5914                                               l8675 58D8  
                                             l8771 557E                                               l8763 5512  
                                             l8755 5494                                               l8747 543C  
                                             l8739 53D2                                               l8597 6C48  
                                             l8589 6C18                                               l8693 5990  
                                             l8685 5926                                               l8677 58DC  
                                             l8781 55D4                                               l8757 54AA  
                                             l8765 5548                                               l8749 544E  
                                             l8599 6C54                                               l8695 59A2  
                                             l8687 594E                                               l8679 58EC  
                                             l8783 55DC                                               l8767 555A  
                                             l8775 558A                                               l8759 54E0  
                                             l8697 59B4                                               l8689 596C  
                                             l8777 55A0                                               l8785 55E8  
                                             l8769 5564                                               l8699 59C6  
                                             l8787 5604                                               l8779 55BA  
                                             l8789 561A                                               STR_1 10B6  
                                             STR_2 107A                                               STR_3 10A4  
                                             STR_4 107A                                               STR_5 10B6  
                                             STR_6 107A                                               STR_7 108D  
                                             STR_8 1071                                               STR_9 10A4  
                                             _LATA 0F89                                               _LATB 0F8A  
                                             _LATC 0F8B                                               _LATD 0F8C  
                                             _LATE 0F8D                                               u4020 6DFE  
                                             u4021 6DFA                                               u4030 6E0E  
                                             u4031 6E0A                                               u4040 6E34  
                                             u5000 6F86                                               u4041 6E30  
                                             u5001 6F82                                               u4050 6E66  
                                             u5010 6FC4                                               u4051 6E62  
                                             u5011 6FC0                                               u5020 6FF8  
                                             u5100 68B2                                               u5021 6FF4  
                                             u5110 68E0                                               u5111 68DC  
                                             u5120 68F4                                               u5200 6AD0  
                                             u5121 68F0                                               u5105 68A8  
                                             u5201 6ACC                                               u6010 7982  
                                             u5130 691C                                               u5210 6AF8  
                                             u6011 797E                                               u5131 6918  
                                             u5211 6AF4                                               u6100 73B0  
                                             u6020 7014                                               u5140 693C  
                                             u5220 6B22                                               u5300 5E0A  
                                             u6101 73AC                                               u6021 7010  
                                             u5141 6938                                               u5221 6B1E  
                                             u5301 5E06                                               u6110 73E2  
                                             u6030 7024                                               u5150 694C  
                                             u6111 73DE                                               u6031 7020  
                                             u5151 6948                                               u5400 642E  
                                             u6040 7046                                               u5240 6B5C  
                                             u5320 5E76                                               u5401 642A  
                                             u6041 7042                                               u5241 6B56  
                                             u5321 5E72                                               u5090 687E  
                                             u5250 6B5E                                               u5330 5E9A  
                                             u5091 687A                                               u5235 6B34  
                                             u5315 5E1E                                               u5180 79CA  
                                             u5340 5EB6                                               u5316 5E28  
                                             u5181 79C6                                               u5341 5EB2  
                                             u5317 5E38                                               u5414 6456  
                                             u6054 709E                                               u5190 6AB2  
                                             u5350 5F0A                                               u5270 7580  
                                             u5415 6452                                               u6055 709A  
                                             u5335 5E90                                               u5271 757C  
                                             u5424 64B8                                               u5360 5F26  
                                             u5280 5DBA                                               u5425 64B4  
                                             u5361 5F22                                               u6090 7386  
                                             u5370 5F62                                               u5290 5DE8  
                                             u6091 7382                                               u5195 6AA8  
                                             u5371 5F5E                                               u5355 5F00  
                                             u5291 5DE4                                               u4900 6D7C  
                                             u8100 615C                                               u4901 6D78  
                                             u8101 6158                                               u5285 5DB0  
                                             u5390 640C                                               u6430 6674  
                                             u4910 6D9A                                               u8030 776C  
                                             u8110 6188                                               u5391 6408  
                                             u6431 6670                                               u4911 6D96  
                                             u8031 7768                                               u8111 6184  
                                             u6440 6684                                               u4920 6DB6  
                                             u8040 745E                                               u8120 619E  
                                             u6441 6680                                               u4921 6DB2  
                                             u8041 745A                                               u8121 619A  
                                             u6450 66B6                                               u4930 6DDC  
                                             u8050 74A4                                               u8130 6242  
                                             u6451 66B2                                               u4931 6DD8  
                                             u8051 74A0                                               u8131 623E  
                                             u5900 63C8                                               u6460 670E  
                                             u4940 6EBA                                               u8140 6254  
                                             u8060 7910                                               u5901 63C2  
                                             u6461 670A                                               u4941 6EB6  
                                             u8141 6250                                               u8061 790C  
                                             u5910 63CA                                               u6470 6746  
                                             u4950 6ED4                                               u8150 626E  
                                             u8070 7666                                               u6471 6742  
                                             u4951 6ED0                                               u8151 626A  
                                             u8071 7662                                               u6480 6758  
                                             u4880 6D3C                                               u4960 6EEE  
                                             u8160 627E                                               u8080 6148  
                                             u5840 70D6                                               u6481 6754  
                                             u4881 6D38                                               u4961 6EEA  
                                             u8161 627A                                               u8081 6142  
                                             u5841 70D2                                               u7370 6CD6  
                                             u4890 6D56                                               u4970 6F0C  
                                             u8090 614A                                               u5850 7148  
                                             u7371 6CD2                                               u4891 6D52  
                                             u4971 6F08                                               u5851 7144  
                                             u5860 62C8                                               u4980 6F22  
                                             u5861 62C4                                               u4981 6F1E  
                                             u5870 62EA                                               u4990 6F46  
                                             u5871 62E6                                               u4991 6F42  
                                             u8600 7288                                               u8601 7284  
                                             u8610 72C6                                               u5884 6312  
                                             u5980 73F6                                               u8540 7524  
                                             u8620 72F2                                               u8700 59B4  
                                             u5885 630E                                               u5981 73F2  
                                             u8541 7520                                               u8701 59B0  
                                             u5894 6374                                               u5990 7418  
                                             u8630 7302                                               u8710 59C6  
                                             u5895 6370                                               u5991 7414  
                                             u8631 72FE                                               u8711 59C2  
                                             u8560 6B84                                               u8720 59DE  
                                             u8800 5478                                               u8561 6B80  
                                             u8617 72BC                                               u8721 59DA  
                                             u8801 5474                                               u8570 6BD2  
                                             u8730 5A8C                                               u8650 5914  
                                             u8810 555A                                               u8571 6BCE  
                                             u8627 72E8                                               u8731 5A88  
                                             u8651 5910                                               u8811 5556  
                                             u8580 74C6                                               u8660 5926  
                                             u8820 55A0                                               u8740 53C0  
                                             u8581 74C2                                               u8661 5922  
                                             u8821 559C                                               u8741 53BC  
                                             u8590 7870                                               u8670 597E  
                                             u8750 53D2                                               u8591 786C  
                                             u8671 597A                                               u8751 53CE  
                                             u8680 5990                                               u8760 542A  
                                             u8681 598C                                               u8761 5426  
                                             u8690 59A2                                               u8770 543C  
                                             u8691 599E                                               u8771 5438  
                                             u8780 544E                                               u8781 544A  
                                             u8790 5460                                               u8791 545C  
                                 ??_initialize_var 0001                                               abs@a 0007  
                                             _lcd1 00F9                                               _dbuf 0200  
                   gpio_pin_read_logic@_pin_config 0001                                               _cp_h 106D  
                                             _cp_l 1069                                               _dp_h 1009  
                                             _dp_l 1001                                               _labs 7572  
                                             _main 3DF6                                               _dtoa 6138  
                                             _num1 01F0                                               _num2 01EC  
                                             _num3 01E8                          lcd_4bit_set_curser@column 0014  
                                             _prec 00D4                                               _powf 10E4  
                                             pad@i 0015                                               pad@p 0012  
                                             fsr0h 0FEA                                               fsr1h 0FE2  
                                             indf0 0FEF                                               fsr2h 0FDA  
                                             fsr0l 0FE9                                               indf1 0FE7  
                                             indf2 0FDF                                               fsr1l 0FE1  
                                             fsr2l 0FD9                  lcd_4bit_send_char_data_pos@column 001A  
                                    ___fpclassifyf 6A72                                               prodh 0FF4  
                                             prodl 0FF3                                               start 0000  
                                  ___fldiv@new_exp 0053                         ecu_keypad_get_value@keypad 000B  
                        lcd_send_4bit@command_data 000C                                       ___param_bank 0000  
                       ??_multiplication_operation 003B                              _lcd_4bit_send_command 7514  
                                            ??_abs 0009                               _gpio_pin_write_logic 63F6  
                   lcd_4bit_send_string_pos@column 001A                                              ??_pad 0014  
                                     _total_result 00DF                                              l12001 3C32  
                                            l12011 3C66                                              l12003 3C38  
                                            l12013 3C6C                                              l12005 3C3E  
                                            l12021 3D04                                              l12031 3D84  
                                            l12023 3D22                                              l12015 3CC4  
                                            l12007 3C50                                              l12111 58B4  
                                            l11401 44AC                                              l11321 433C  
                                            l12041 3DD8                                              l12033 3D92  
                                            l12025 3D3E                                              l12017 3CF8  
                                            l12009 3C62                                              l12105 587C  
                                            l11411 44F0                                              l11403 44BC  
                                            l11331 4370                                              l11323 433E  
                                            l12211 4C8C                                              l12203 4C0C  
                                            l12035 3DAA                                              l12027 3D46  
                                            l12019 3D00                                              l12107 58A8  
                                            l12051 568A                                              l11501 47A0  
                                            l11413 44F2                                              l11405 44D2  
                                            l11341 43A2                                              l11325 434E  
                                            l11333 4378                                              l11317 4322  
                                            l12301 5CF2                                              l12221 4CFC  
                                            l12213 4C9C                                              l12205 4C1C  
                                            l12037 3DBA                                              l12029 3D54  
                                            l12061 56D8                                              l12053 568E  
                                            l12045 5652                                              l12141 77A2  
                                            l11511 47C0                                              l11503 47A4  
                                            l11431 457A                                              l11423 4542  
                                            l11415 44FC                                              l11407 44DE  
                                            l11351 43D8                                              l11343 43A8  
                                            l11335 4388                                              l11327 435E  
                                            l11319 432E                                              l12303 5CFA  
                                            l12207 4C50                                              l12311 10E4  
                                            l12039 3DD0                                              l12063 56F4  
                                            l12055 56B0                                              l12047 5674  
                                            l12135 776E                                              l12151 770C  
                                            l11601 51E0                                              l11521 4FF6  
                                            l11513 47CE                                              l11505 47B2  
                                            l11433 457E                                              l11425 4552  
                                            l11417 451E                                              l11441 459E  
                                            l11409 44E2                                              l11361 4414  
                                            l11353 43E8                                              l11345 43B6  
                                            l11337 438E                                              l11329 436E  
                                            l12161 5FA4                                              l12305 5D2C  
                                            l12241 4DBA                                              l12225 4D10  
                                            l12233 4D3C                                              l12209 4C7E  
                                            l12217 4CB0                                              l12401 1632  
                                            l12321 117C                                              l12313 1104  
                                            l12081 5770                                              l12073 5746  
                                            l12065 5710                                              l12057 56B8  
                                            l12049 567C                                              l12137 7776  
                                            l12153 771C                                              l12145 76EE  
                                            l11611 5226                                              l11603 51F2  
                                            l11531 5036                                              l11523 5004  
                                            l11515 47D0                                              l11507 47B8  
                                            l11443 45C4                                              l11451 461A  
                                            l11435 458C                                              l11427 4560  
                                            l11419 452E                                              l11371 4432  
                                            l11363 4422                                              l11355 43EA  
                                            l11347 43B8                                              l11339 43A0  
                                            l12171 601C                                              l12163 5FEA  
                                            l12307 5D60                                              l12251 4E88  
                                            l12243 4DC8                                              l12235 4D90  
                                            l12227 4D1E                                              l12219 4CCE  
                                            l12403 1642                                              l12411 16DE  
                                            l12315 114C                                              l12091 57F2  
                                            l12075 5750                                              l12067 5728  
                                            l12059 56CC                                              l12139 7786  
                                            l12147 76FC                                              l13301 6508  
                                            l11621 5286                                              l11605 5208  
                                            l11613 5238                                              l11541 505C  
                                            l11533 5038                                              l11525 5006  
                                            l11509 47BA                                              l11461 466E  
                                            l11453 4640                                              l11445 45F8  
                                            l11437 458E                                              l11429 456E  
                                            l11381 4446                                              l11373 4436  
                                            l11365 4426                                              l11349 43C8  
                                            l11357 43F2                                              l12181 60A4  
                                            l12173 6028                                              l12165 6000  
                                            l12157 5F86                                              l11701 48F0  
                                            l12261 4F42                                              l12253 4E9C  
                                            l12245 4E30                                              l12237 4DA4  
                                            l12501 1BE8                                              l12405 1688  
                                            l12341 125A                                              l12333 120C  
                                            l12325 1190                                              l12077 5762  
                                            l12085 5778                                              l12069 5732  
                                            l12149 7704                                              l13303 63DC  
                                            l11631 52F4                                              l11615 5246  
                                            l11607 520E                                              l11551 509C  
                                            l11543 506A                                              l11527 5016  
                                            l11535 5040                                              l11519 4FEA  
                                            l11471 4698                                              l11463 467C  
                                            l11455 4650                                              l11447 45FA  
                                            l11439 4598                                              l11391 445A  
                                            l11383 444A                                              l11375 443A  
                                            l11367 442A                                              l11359 4402  
                                            l12191 60E2                                              l12183 60B0  
                                            l12175 605A                                              l12159 5F96  
                                            l11711 4942                                              l11703 4906  
                                            l12271 5B4E                                              l12263 4F58  
                                            l12255 4EDA                                              l12247 4E3E  
                                            l12239 4DAE                                              l12511 1C5C  
                                            l12503 1BF8                                              l12431 1750  
                                            l12407 16A4                                              l12415 16F2  
                                            l12343 1276                                              l12335 121C  
                                            l12327 11B2                                              l12319 1160  
                                            l12095 581A                                              l12079 5768  
                                            l12087 57AA                                              l11641 535E  
                                            l11625 52B0                                              l11633 52F8  
                                            l11617 524A                                              l11609 5218  
                                            l11561 50DC                                              l11553 509E  
                                            l11545 506C                                              l11537 5050  
                                            l11529 5026                                              l11801 69EA  
                                            l11481 46CA                                              l11473 46A8  
                                            l11465 467E                                              l11449 460A  
                                            l11393 445E                                              l11385 444E  
                                            l11377 443E                                              l11369 442E  
                                            l12193 6106                                              l12185 60BE  
                                            l12177 605C                                              l12169 6014  
                                            l11721 4988                                              l11713 4950  
                                            l11705 4912                                              l12281 5BF6  
                                            l12273 5B6A                                              l12257 4F22  
                                            l12249 4E68                                              l12601 2730  
                                            l12521 1D5E                                              l12513 1C70  
                                            l12505 1C10                                              l12433 1772  
                                            l12417 1702                                              l12409 16BA  
                                            l12345 1350                                              l12337 122A  
                                            l12329 11D4                                              l12097 5844  
                                            l12089 57CA                                              l11643 5362  
                                            l11635 5312                                              l11627 52BC  
                                            l11619 5258                                              l11571 510C  
                                            l11563 50E4                                              l11547 507C  
                                            l11555 50A6                                              l11539 5056  
                                            l11811 6A6E                                              l11803 69F8  
                                            l11491 4724                                              l11483 46E0  
                                            l11467 468C                                              l11459 4664  
                                            l11475 46AA                                              l11387 4452  
                                            l11379 4442                                              l11395 4462  
                                            l12195 6116                                              l12187 60DC  
                                            l12179 6068                                              l11731 49F6  
                                            l11723 49A2                                              l11715 495C  
                                            l11707 492A                                              l12291 5C76  
                                            l12283 5BFE                                              l12275 5B9E  
                                            l12259 4F2C                                              l12611 2812  
                                            l12603 2764                                              l12531 1E16  
                                            l12523 1D92                                              l12515 1C8C  
                                            l12451 17FA                                              l12435 1796  
                                            l12427 172A                                              l12419 1710  
                                            l12363 1424                                              l12355 13CC  
                                            l12347 139C                                              l12371 146E  
                                            l12339 1246                                              l12099 5852  
                                            l11645 5370                                              l11637 5328  
                                            l11629 52CA                                              l11581 514A  
                                            l11573 510C                                              l11565 50E8  
                                            l11557 50B6                                              l11549 508C  
                                            l11805 6A0A                                              l11493 475E  
                                            l11469 4694                                              l11477 46B8  
                                            l11397 4466                                              l11389 4456  
                                            l12197 6124                                              l12189 60DE  
                                            l11741 4A8C                                              l11733 4A20  
                                            l11725 49B2                                              l11717 496C  
                                            l11709 4936                                              l11661 47FC  
                                            l12293 5C7E                                              l12285 5C1A  
                                            l12277 5BA6                                              l12269 5B3E  
                                            l12701 3098                                              l12621 2954  
                                            l12613 2846                                              l12605 2774  
                                            l12541 1F9A                                              l12533 1E68  
                                            l12525 1DA2                                              l12517 1C9C  
                                            l12509 1C38                                              l12461 181C  
                                            l12437 17A4                                              l12445 17C2  
                                            l12429 1740                                              l12373 148A  
                                            l12365 1432                                              l12357 13EE  
                                            l12349 13B8                                              l11901 36E6  
                                            l11647 5376                                              l11639 5342  
                                            l11591 5196                                              l11583 515A  
                                            l11559 50CC                                              l11807 6A18  
                                            l11815 7984                                              l11487 470A  
                                            l11495 4760                                              l11479 46BC  
                                            l11399 4490                                              l12199 6126  
                                            l11751 4ACC                                              l11743 4A9A  
                                            l11735 4A56                                              l11727 49CE  
                                            l11719 4978                                              l11671 4834  
                                            l11663 47FE                                              l12295 5C9A  
                                            l12279 5BC2                                              l12287 5C26  
                                            l12711 3274                                              l12703 30F0  
                                            l12623 2988                                              l12607 278E  
                                            l12551 210A                                              l12543 1FCE  
                                            l12535 1EB6                                              l12527 1DB2  
                                            l12519 1CEA                                              l12615 287A  
                                            l12471 18F0                                              l12391 1592  
                                            l12383 1534                                              l12375 1498  
                                            l12367 145A                                              l12359 13FC  
                                            l11911 379C                                              l11903 371A  
                                            l11831 3436                                              l11823 340E  
                                            l11649 5378                                              l11593 51A4  
                                            l11585 516A                                              l11577 5120  
                                            l11569 50FC                                              l11809 6A68  
                                            l11817 799A                                              l11497 4770  
                                            l11489 4716                                              l11761 4B3E  
                                            l11753 4AFA                                              l11745 4AAC  
                                            l11737 4A64                                              l11729 49DA  
                                            l11681 4860                                              l11673 4844  
                                            l11665 480E                                              l11657 47E2  
                                            l12297 5CCE                                              l12289 5C42  
                                            l12721 3354                                              l12713 32A8  
                                            l12705 3148                                              l12625 29BC  
                                            l12617 28A4                                              l12609 27C2  
                                            l12561 227A                                              l12553 2162  
                                            l12545 2002                                              l12537 1EEA  
                                            l12529 1DCC                                              l12481 1A70  
                                            l12473 1948                                              l12465 1830  
                                            l12449 17D6                                              l12393 15AE  
                                            l12385 154C                                              l12377 14E4  
                                            l11921 37CC                                              l11913 37AC  
                                            l11905 3722                                              l11841 348C  
                                            l11833 345A                                              l11825 3414  
                                            l13281 3FA8                                              l11595 51B0  
                                            l11587 5172                                              l11579 513A  
                                            l11819 79AA                                              l11499 4780  
                                            l11771 4BB4                                              l11763 4B68  
                                            l11747 4ABA                                              l11739 4A82  
                                            l11691 48B6                                              l11683 4870  
                                            l11675 484A                                              l11667 481E  
                                            l11659 47EE                                              l12299 5CD6  
                                            l12723 33A0                                              l12715 32DC  
                                            l12707 31A0                                              l12627 29CC  
                                            l12619 28FC                                              l12571 235A  
                                            l12563 22AE                                              l12555 21BA  
                                            l12547 205A                                              l12539 1F42  
                                            l12491 1B22                                              l12483 1A8A  
                                            l12475 197C                                              l12467 1864  
                                            l12395 15C4                                              l12387 155A  
                                            l12379 14FC                                              l11923 37DE  
                                            l11931 381E                                              l11915 37B8  
                                            l11851 34DC                                              l11843 3498  
                                            l11835 3464                                              l11827 3424  
                                            l13291 42C6                                              l13283 402C  
                                            l11597 51CE                                              l11589 5182  
                                            l11773 4BD0                                              l11781 4BF6  
                                            l11757 4B24                                              l11765 4B6C  
                                            l11749 4ABE                                              l11693 48C6  
                                            l11685 4880                                              l11677 4850  
                                            l11669 482E                                              l12725 33E0  
                                            l12717 3310                                              l12709 321C  
                                            l12637 29F4                                              l12581 2444  
                                            l12573 2374                                              l12565 22E2  
                                            l12557 21EE                                              l12549 20B2  
                                            l12493 1B56                                              l12485 1ABE  
                                            l12477 19B0                                              l12469 18BC  
                                            l12397 15F0                                              l11941 3906  
                                            l11933 3826                                              l11925 37EC  
                                            l11917 37C0                                              l11909 3762  
                                            l11861 350C                                              l11853 34E0  
                                            l11845 34A0                                              l11837 346C  
                                            l11829 3432                                              l13293 578C  
                                            l12733 76AE                                              l12741 75DC  
                                            l13285 4070                                              l12821 3DF6  
                                            l11599 51D0                                              l11783 4BFA  
                                            l11775 4BE0                                              l11767 4B86  
                                            l11759 4B30                                              l11687 4890  
                                            l11679 485E                                              l12727 33F8  
                                            l12719 3320                                              l12671 2D5E  
                                            l12655 2AD8                                              l12663 2B5E  
                                            l12639 2A0C                                              l12647 2A8A  
                                            l12591 2552                                              l12583 24C0  
                                            l12575 23A8                                              l12567 2316  
                                            l12559 2222                                              l12495 1B68  
                                            l12479 1A60                                              l12487 1AF6  
                                            l12399 15FE                                              l12751 6528  
                                            l11951 39C4                                              l11943 393A  
                                            l11935 3836                                              l11927 3804  
                                            l11919 37C8                                              l11871 3564  
                                            l11855 34E6                                              l11839 347C  
                                            l11847 34A4                                              l13295 582E  
                                            l12735 76CA                                              l12743 75E0  
                                            l13287 4176                                              l12903 426C  
                                            l12911 42F4                                              l12831 3E40  
                                            l12823 3DFA                                              l11793 696E  
                                            l11777 4BEE                                              l11769 4B9A  
                                            l11697 48DA                                              l11689 4896  
                                            l12681 2E00                                              l12673 2D6E  
                                            l12665 2BC0                                              l12657 2AF4  
                                            l12649 2AC4                                              l12593 2586  
                                            l12585 24F4                                              l12577 23DC  
                                            l12569 234A                                              l12497 1B78  
                                            l12489 1B06                                              l12761 6594  
                                            l12753 652C                                              l11961 3A60  
                                            l11953 39DA                                              l11937 384A  
                                            l11945 3940                                              l11929 3816  
                                            l11873 356A                                              l11857 34EE  
                                            l11849 34CA                                              l11865 3528  
                                            l13297 589A                                              l12745 75FC  
                                            l12737 75C8                                              l12913 430E  
                                            l13289 4282                                              l12841 3EA8  
                                            l12833 3E4C                                              l12825 3DFE  
                                            l11795 699C                                              l11787 7668  
                                            l11779 4BF0                                              l11699 48E6  
                                            l12691 2F4C                                              l12683 2E34  
                                            l12675 2DA2                                              l12667 2BD0  
                                            l12659 2B4A                                              l12595 25BA  
                                            l12587 2504                                              l12579 2410  
                                            l12499 1BD0                                              l12763 6632  
                                            l13299 71C0                                              l11963 3AB6  
                                            l11971 3B08                                              l11955 3A0C  
                                            l11947 395E                                              l11939 38AE  
                                            l11891 35F0                                              l11875 3572  
                                            l11867 354E                                              l11883 358A  
                                            l11859 3502                                              l12739 75C8  
                                            l12771 77E8                                              l12851 3F02  
                                            l12835 3E64                                              l12827 3E0A  
                                            l11797 69AC                                              l11789 7678  
                                            l12693 2F80                                              l12685 2E68  
                                            l12677 2DD6                                              l12669 2BF2  
                                            l12597 2686                                              l12589 251E  
                                            l12765 6634                                              l12757 6540  
                                            l12749 6522                                              l12773 7824  
                                            l11981 3B3A                                              l11973 3B18  
                                            l11965 3ABC                                              l11957 3A1C  
                                            l11949 3992                                              l11893 3624  
                                            l11885 35A4                                              l11869 3560  
                                            l12781 67D0                                              l12909 42B0  
                                            l12853 3F14                                              l12845 3EC0  
                                            l12837 3E7A                                              l12829 3E26  
                                            l12775 789C                                              l11799 69DA  
                                            l12695 2FB4                                              l12687 2EC0  
                                            l12679 2DE6                                              l12599 26AC  
                                            l12767 6636                                              l12759 6560  
                                            l11991 3C0C                                              l11983 3BB2  
                                            l11975 3B20                                              l11967 3AF0  
                                            l11959 3A2C                                              l11895 3662  
                                            l12791 6836                                              l12783 67DC  
                                            l12871 4016                                              l12855 3F26  
                                            l12863 3F94                                              l12847 3ED8  
                                            l12839 3E92                                              l12697 2FE8  
                                            l12689 2F18                                              l11993 3C10  
                                            l11985 3BD2                                              l11977 3B26  
                                            l11969 3B04                                              l11897 3694  
                                            l11889 35EA                                              l12793 6842  
                                            l12785 67E8                                              l12777 675A  
                                            l12769 77AC                                              l12881 40CA  
                                            l12873 4042                                              l12865 3FBE  
                                            l12857 3F3C                                              l12849 3EEE  
                                            l12699 3040                                              l11995 3C16  
                                            l11987 3BEE                                              l11979 3B2E  
                                            l11899 36D2                                              l12795 684E  
                                            l12779 67B2                                              l12787 6804  
                                            l12891 41A4                                              l12883 40F6  
                                            l12867 3FEA                                              l12859 3F68  
                                            l11997 3C1E                                              l11989 3BFC  
                                            l12789 6820                                              l12893 41D0  
                                            l12885 4122                                              l12877 405A  
                                            l11999 3C2E                                              l12895 41FC  
                                            l12879 409E                                              l12897 4228  
                                            l12889 4162                                              l12899 4254  
                                    ___fltol@sign1 0009                                              ?_labs 0001  
                                  __end_of___fladd 47E2                                              ?_main 0001  
                                            ?_dtoa 0017                                    __end_of___fldiv 5384  
                                  __end_of___awdiv 6DEE                                    __end_of___flneg 79BC  
                                            STR_10 107A                                              STR_11 10D3  
                                            STR_12 10E0                                              STR_14 10E0  
                                            STR_15 10C5                                              STR_16 10D8  
                                            STR_19 10DC                                    __end_of___awmod 6F58  
                                  __end_of___flmul 4C0C                                              ?_powf 006F  
                                  __end_of___flsub 76AE                                    __end_of___fltol 696E  
                                            u12000 4B86                                              u12001 4B82  
                                            u12010 4BB4                                              u12011 4BB0  
                                            u11300 4422                                              u11220 433C  
                                            u12020 4BEE                                              u12100 347C  
                                            u11301 441E                                              u11221 4338  
                                            u12021 4BEA                                              u12101 3478  
                                            u12030 699C                                              u11310 4490  
                                            u11230 434E                                              u12110 348C  
                                            u12031 6998                                              u11311 448C  
                                            u11231 434A                                              u12111 3488  
                                            u12040 69DA                                              u11400 456E  
                                            u11320 44A8                                              u11240 435E  
                                            u13000 15C4                                              u12200 375E  
                                            u12120 34CA                                              u12041 69D6  
                                            u11401 456A                                              u11321 44A2  
                                            u11241 435A                                              u13001 15C0  
                                            u12201 375A                                              u12121 34C6  
                                            u12050 69F8                                              u11410 458C  
                                            u11330 44AA                                              u11250 43A0  
                                            u13010 15E0                                              u12210 3794  
                                            u12130 34DC                                              u12051 69F4  
                                            u11411 4588                                              u11251 439C  
                                            u13011 15DC                                              u12211 3790  
                                            u12131 34D8                                              u12060 6A18  
                                            u11500 46CA                                              u11420 45C4  
                                            u11340 44D2                                              u11260 43B6  
                                            u13100 1796                                              u13020 15FE  
                                            u12300 3AB6                                              u12220 37AC  
                                            u12140 354E                                    ___awdiv@divisor 0003  
                                            u12061 6A14                                              u11501 46C6  
                                            u11421 45C0                                              u11341 44CE  
                                            u11261 43B2                                              u13101 1792  
                                            u13021 15FA                                              u12301 3AB2  
                                            u12221 37A8                                              u12141 354A  
                                            u12070 6A68                                              u11510 46E0  
                                            u11430 460A                                              u11350 44F0  
                                            u11270 43C8                                              u13110 17A4  
                                            u13030 1642                                              u12310 3B04  
                                            u12230 37DE                                              u12150 3560  
                                            u12071 6A64                                              u11511 46DC  
                                            u11431 4606                                              u11351 44EC  
                                            u11271 43C4                                              u13111 17A0  
                                            u13031 163E                                              u12311 3B00  
                                            u12231 37DA                                              u12151 355C  
                                            u12080 799A                                              u11600 47CE  
                                            u11520 46F6                                              u11440 4640  
                                            u11360 4510                                              u11280 43D8  
                                            u13200 2A0C                                              u13120 17FA  
                                            u13040 1688                                              u12400 3DBA  
                                            u12320 3BB2                                              u12240 37EC  
                                            u12160 35D6                                              u12081 7996  
                                            u11601 47CA                                              u11521 46F2  
                                            u11441 463C                                              u11361 450C  
                                            u11281 43D4                                              u13201 2A08  
                                            u13121 17F6                                              u13041 1684  
                                            u12401 3DB6                                              u12321 3BAE  
                                            u12241 37E8                                              u12161 35D2  
                                            u11610 5004                                              u11530 470A  
                                            u11450 4650                                              u11370 451E  
                                            u11290 4414                                              u13210 2A86  
                                            u13130 1818                                              u13050 16BA  
                                            u12330 3BEE                                              u12250 3816  
                                            u12170 3662                                              u12090 3432  
                                            u12410 5674                                              u11611 5000  
                                            u11531 4706                                              u11451 464C  
                                            u11371 451A                                              u11291 4410  
                                            u13211 2A82                                              u13131 1814  
                                            u13051 16B6                                              u12331 3BEA  
                                            u12251 3812                                              u12171 365E  
                                            u12091 342E                                              u12411 5670  
                                            u11700 51A4                                              u11620 5016  
                                            u11540 4724                                              u11460 467C  
                                            u11380 452E                                              u12500 6056  
                                            u13220 2AC4                                              u13140 1B22  
                                            u13060 1710                                              u12340 3BFC  
                                            u12260 395E                                              u12180 3694  
                                            u12420 56B0                                              u11701 51A0  
                                            u11621 5012                                              u11541 4720  
                                            u11461 4678                                              u11381 452A  
                                            u12501 6052                                              u13221 2AC0  
                                            u13141 1B1E                                              u13061 170C  
                                            u12341 3BF8                                              u12261 395A  
                                            u12181 3690                                              u12421 56AC  
                                            u11710 51CE                                              u11630 5026  
                                            u11550 475E                                              u11470 468C  
                                            u11390 4560                                              u12510 60A0  
                                            u13310 2D5E                                              u13230 2AF4  
                                            u13070 1726                                              u12350 3C50  
                                            u12270 39C4                                              u12190 36D2  
                                            u12430 56F4                                              u11711 51CA  
                                            u11631 5022                                              u11551 475A  
                                            u11471 4688                                              u11391 455C  
                                            u12511 609C                                              u13311 2D5A  
                                            u13231 2AF0                                              u13071 1722  
                                            u12351 3C4C                                              u12271 39C0  
                                            u12191 36CE                                              u12431 56F0  
                                            u11800 52CA                                              u11720 51F2  
                                            u11640 506A                                              u11560 4770  
                                            u11480 46A8                                              u12520 60BE  
                                            u12600 4CCE                                              u13240 2B4A  
                                            u13160 1C34                                              u13080 1740  
                                            u12360 3D22                                              u12280 3A0C  
                                            u12440 5710                                              u11801 52C6  
                                            u11721 51EE                                              u11641 5066  
                                            u11561 476C                                              u11481 46A4  
                                            u12521 60BA                                              u12601 4CCA  
                                            u13305 2D24                                              u13241 2B46  
                                            u13161 1C30                                              u13081 173C  
                                            u12361 3D1E                                              u12281 3A08  
                                            u12441 570C                                              u11810 5312  
                                            u11730 5208                                              u11650 507C  
                                            u11570 4780                                              u11490 46B8  
                                            u12530 60CE                                              u12610 4CFC  
                                            u13306 2D2E                                              u13170 1C5C  
                                            u13090 1772                                              u12370 3D3E  
                                            u12290 3A1C                                              u12450 57C6  
                                            u11811 530E                                              u11731 5204  
                                            u11651 5078                                              u11571 477C  
                                            u11491 46B4                                              u12531 60CA  
                                            u12611 4CF8                                              u13307 2D3E  
                                            u13171 1C58                                              u13155 1B8C  
                                            u13091 176E                                              u12371 3D3A  
                                            u12291 3A18                                              u12451 57C2  
                                            u11820 5342                                              u11740 5226  
                                            u11660 508C                                              u11580 47A0  
                                            u12540 60DC                                              u11900 48B6  
                                            u12620 4D1E                                              u13340 33A0  
                                            u13260 2BF2                                              u13156 1B96  
                                            u12380 3DA4                                              u12460 77A2  
                                            u13420 3EBC                                              u11821 533E  
                                            u11741 5222                                              u11661 5088  
                                            u11581 479C                                              u12541 60D8  
                                            u11901 48B2                                              u12621 4D1A  
                                            u13341 339C                                              u13325 3332  
                                            u13261 2BEE                                              u13157 1BA6  
                                            u12381 3D9E                                              u12461 779E  
                                            u13421 3EB8                                              u11830 5370  
                                            u11750 5246                                              u11670 50CC  
                                            u11590 47B2                                              u12550 6116  
                                            u12470 5F96                                              u11910 48C6  
                                            u12710 5B6A                                              u13350 33F8  
                                            u13190 29F0                                              u12390 3DA6  
                                            u13430 3F02                                              u11831 536C  
                                            u11751 5242                                              u11671 50C8  
                                            u11591 47AE                                              u12551 6112  
                                            u12471 5F92                                              u11911 48C2  
                                            u12711 5B66                                              u13351 33F4  
                                            u13335 3368                                              u13255 2B8C  
                                            u13191 29EC                                              u13431 3EFE  
                                            u11760 5258                                              u11680 510C  
                                            u12560 6124                                              u12480 5FA4  
                                            u11920 4A40                                              u11840 47FC  
                                            u12720 5BC2                                              u12640 4D90  
                                            u13336 3372                                              u13256 2B96  
                                            u12800 11B2                                              u13360 75DC  
                                            u13440 3F14                                              u11761 5254  
                                            u11681 5108                                              u12561 6120  
                                            u12481 5FA0                                              u11841 47F8  
                                            u12721 5BBE                                              u12705 4FC4  
                                            u12641 4D8C                                              u13337 3382  
                                            u13257 2BA6                                              u13185 1E28  
                                            u12801 11AE                                              u13361 75D8  
                                            u13441 3F10                                              u11770 5286  
                                            u11690 5182                                              u12490 6000  
                                            u11930 4A9A                                              u11850 480E  
                                            u12730 5C1A                                              u12650 4DC8  
                                            u12570 4C50                                              u12810 11D4  
                                            u13370 653C                                              u13450 3F26  
                                            u11771 5282                                              u11691 517E  
                                            u12491 5FFC                                              u11931 4A96  
                                            u11851 480A                                              u12731 5C16  
                                            u12651 4DC4                                              u12635 4D50  
                                            u12571 4C4C                                              u13275 2C0A  
                                            u12811 11D0                                              u13371 6538  
                                            u13507 549E                                              u13451 3F22  
                                            u11780 529C                                              u11940 4ABA  
                                            u11860 481E                                              u12740 5C42  
                                            u12660 4E3E                                              u12636 4D5A  
                                            u12580 4C7E                                              u13276 2C14  
                                            u12900 13B8                                              u12820 122A  
                                            u13380 6648                                              u13460 3F38  
                                            u11781 5298                                              u11941 4AB6  
                                            u11925 4A36                                              u11861 481A  
                                            u12741 5C3E                                              u12661 4E3A  
                                            u12637 4D6A                                              u12581 4C7A  
                                            u13285 2C62                                              u13277 2C24  
                                            u12901 13B4                                              u12821 1226  
                                            u13381 6644                                              u13517 54D0  
                                            u13461 3F34                                              u11790 52B0  
                                            u11950 4ACC                                              u11870 485E  
                                            u12750 5C9A                                              u12670 4EDA  
                                            u12590 4C8C                                              u13286 2C6C  
                                            u12910 13EE                                              u12830 1246  
                                            u13390 67B2                                              u11791 52AC  
                                            u11951 4AC8                                              u11871 485A  
                                            u12751 5C96                                              u12671 4ED6  
                                            u12591 4C88                                              u13295 2CAA  
                                            u13287 2C7C                                              u12911 13EA  
                                            u12831 1242                                              u13607 5B2C  
                                            u13527 5506                                              u13391 67AE  
                                            u11960 4AFA                                              u11880 4870  
                                            u12760 5CF2                                              u12680 4F42  
                                            u13296 2CB4                                              u12920 13FC  
                                            u12840 1276                                              u11961 4AF6  
                                            u11881 486C                                              u12761 5CEE  
                                            u12681 4F3E                                              u13297 2CC4  
                                            u12921 13F8                                              u12841 1272  
                                            u13617 66D0                                              u13537 5538  
                                            u11970 4B10                                              u11890 4880  
                                            u12690 4F58                                              u12930 1432  
                                            u13627 6BD8                                              u11971 4B0C  
                                            u11891 487C                                              u12691 4F54  
                                            u12931 142E                                              u13547 560E  
                                            u11980 4B24                                              u12940 148A  
                                            u12780 114C                                              u13637 6BF2  
                                            u11981 4B20                                              u12941 1486  
                                            u12781 1148                                              u13557 5640  
                                            u13477 3E32                                              u11990 4B3E  
                                            u12950 1498                                              u12870 1326  
                                            u12790 117C                                              u13647 6C08  
                                            u11991 4B3A                                              u12775 5D0C  
                                            u12951 1494                                              u12855 128A  
                                            u12791 1178                                              u13567 58F6  
                                            u13487 4300                                              u12960 14FC  
                                            u12880 1350                                              u12856 1294  
                                            u13657 792A                                              u12961 14F8  
                                            u12881 134C                                              u12865 12D4  
                                            u12857 12A4                                              u13577 5A04  
                                            u13497 53A2                                              u12970 154C  
                                            u12890 139C                                              u12866 12DE  
                                            u12971 1548                                              u12891 1398  
                                            u12875 131C                                              u12867 12EE  
                                            u13587 5A36                                              u12980 155A  
                                            u12981 1556                                              u13597 5AFA  
                                            u12990 15AE                                              u12991 15AA  
                                  ___awdiv@counter 0005                                       vfpfcnvrt@fmt 0078  
                                            _PORTA 0F80                                              _PORTB 0F81  
                                            _PORTC 0F82                                              _PORTD 0F83  
                                            _PORTE 0F84                                              _TRISA 0F92  
                                            _TRISB 0F93                                              _TRISC 0F94  
                                            _TRISD 0F95                                              _TRISE 0F96  
                           ?_ecu_keypad_initialize 000F                                              _lg2_h 102D  
                                            _lg2_l 1029                                              _flags 00D6  
                              read_prec_or_width@c 0009                                              _errno 01E6  
                              read_prec_or_width@n 000A                                              _ivln2 101D  
                                            _fputc 6DEE                                              _fputs 772E  
                                  __end_of_ivln2_h 1069                                    __end_of_ivln2_l 101D  
                                            _two24 1061                                    __end_of_scalbnf 5D72  
                                            labs@a 0001                                              pad@fp 000F  
                                            _width 00D2                                              _putch 7A70  
                                            dtoa@d 0018                                              dtoa@i 0021  
                                            dtoa@p 001E                                              _sqrtf 4C0C  
                                            dtoa@s 0020                                              dtoa@w 001C  
                        convert_arr_to_float@count 0090                 __end_of_Application_Initialization 7A70  
                       _Application_Initialization 7A6A                                              tablat 0FF5  
                                            powf@i 0128                                              powf@j 01A8  
                                            powf@k 01A4                                              powf@n 0188  
                                            powf@r 0150                                              powf@s 0158  
                                            powf@t 01B0                                              powf@u 017C  
                                            powf@v 0180                                              powf@w 0144  
                                            powf@x 006F                                              powf@y 0073  
                                            powf@z 01B4                         ?_get_number_and_operartion 001D  
                                            status 0FD8                                    __end_of_sprintf 772E  
                                   ?___fpclassifyf 0001                             _send_the_result_to_LCD 675A  
                      ecu_keypad_get_value@columns 0013                     ?_gpio_pin_direction_initialize 0001  
                                  ??_lcd_send_4bit 000D                                    __initialization 71EA  
                                     __end_of_cp_h 1071                                       __end_of_cp_l 106D  
                                     __end_of_dp_h 1011                                       __end_of_dp_l 1009  
                                     __end_of_labs 75C8                                       __end_of_main 4322  
                                     __end_of_dtoa 62B2                                       __end_of_powf 340E  
                            ?_gpio_pin_write_logic 0001                           gpio_pin_read_logic@logic 0003  
                                    _lat_registers 01C2                                             ??_labs 0005  
                                           ??_main 00D0                                             ??_dtoa 001A  
                                           ??_powf 0077                                      __activetblptr 0002  
                        ??_convert_float_to_string 0080                                 _Division_operation 789C  
                       __end_of_read_prec_or_width 7152                                             ?_fputc 0001  
                                           ?_fputs 0009                                   ___awdiv@dividend 0001  
                                           ?_putch 0001                                             ?_sqrtf 0001  
                      ecu_keypad_initialize@keypad 000F                                ?_Division_operation 005B  
               get_number_and_operartion@operation 0021                                   __end_of___xxtofl 6138  
                                    _sum_operation 77AC                   __end_of_lcd_4bit_send_string_pos 7304  
                           ?_lcd_4bit_send_command 000F                                       vfprintf@cfmt 007F  
                                           ___flge 696E                                             ___fleq 6F58  
                        _convert_arr_to_float$2092 0087                          _convert_arr_to_float$2093 008B  
                                        ??___fladd 003A                                             ___wmul 7A16  
                                        ??___fldiv 004A                                          ??___awdiv 0005  
                                        ??___flneg 0005                                          ??___awmod 0005  
                                        ??___flmul 0021                                          ??___flsub 0063  
                                        ??___fltol 0005                                             _efgtoa 340E  
                             ??_Division_operation 0064                                             _floorf 5D72  
                                           _memcpy 7618                               read_prec_or_width@ap 0008  
                                           _keypad 01D6                                             _memset 794C  
                                           clear_0 7250                                             clear_1 725C  
                                           clear_2 7268                                   ___awdiv@quotient 0007  
                                  ___awmod@divisor 0003                                             isa$std 0001  
                                           _result 00E3                                   lcd_send_4bit@lcd 000B  
                                  ___awmod@counter 0005                                             pad@buf 0010  
                                 lcd_send_4bit@ret 000E                                             dtoa@fp 0017  
                                           _strcpy 78D8                                             fputc@c 0001  
                                           fputs@c 000C                                             fputs@i 000D  
                                           fputs@s 0009                                          ??_scalbnf 0038  
                                  ___fpclassifyf@e 0009                                    ___fpclassifyf@u 000B  
                                  ___fpclassifyf@x 0001                                       __mediumconst 0000  
                                           powf@s2 0190                                             powf@t1 018C  
                                           powf@t2 011C                                             tblptrh 0FF7  
                                           tblptrl 0FF6                                             powf@y1 012C  
                                           tblptru 0FF8                                             powf@ax 0178  
                                           powf@is 0198                                             powf@hx 0168  
                                           powf@hy 0184                                             powf@ix 01AC  
                                           powf@iy 0194                                             powf@sn 0164  
                                           putch@c 0001                                   __end_of_vfprintf 77AC  
                                           sqrtf@i 000E                                             sqrtf@m 001A  
                                           sqrtf@q 0012                                             sqrtf@r 001E  
                                           sqrtf@s 000A                                             sqrtf@t 0016  
                        ecu_keypad_get_value@value 000D                                             sqrtf@x 0001  
                                        ??_sprintf 0080                                         ___flge@ff1 0063  
                                       ___flge@ff2 0067                                    ??___fpclassifyf 0005  
                                     ___xxtofl@arg 0015                            ??_convert_int_to_string 0080  
                                     ___xxtofl@exp 0014                                       ___xxtofl@val 000B  
                                       ___fleq@ff1 0001                                         ___fleq@ff2 0005  
                                       __accesstop 0080                            __end_of__initialization 726E  
            get_number_and_operartion@keypad_value 0024                                         ___flneg@f1 0001  
                                   ?_sum_operation 0042                    __end_of_convert_float_to_string 76EE  
                                    ___rparam_used 0001                                         ___fltol@f1 0001  
                               ecu_relay_off@F3487 00D7                            _lcd_4bit_send_char_data 74B6  
                 __end_of_multiplication_operation 7860                             ??_gpio_pin_write_logic 0004  
                                   __pcstackCOMRAM 0001                                       __pidataBANK0 7A62  
                                     __pidataBANK1 79F0                                       __pidataBANK2 7A52  
                                    __end_of_lg2_h 1031                                      __end_of_lg2_l 102D  
                         _ecu_layer_Initialization 7A3C                                      __end_of_ivln2 1021  
                                    __end_of_fputc 6EA8                                      __end_of_fputs 776E  
                                    __end_of_two24 1065                                      __end_of_putch 7A72  
                                    __end_of_sqrtf 4FEA                                         __end_of_L1 1061  
                                       __end_of_L2 105D                                         __end_of_L3 1059  
                                       __end_of_L4 1055                                         __end_of_L5 1051  
                                       __end_of_L6 104D                                         __end_of_P1 1049  
                                       __end_of_P2 1045                                         __end_of_P3 1041  
                                       __end_of_P4 103D                                         __end_of_P5 1039  
                         lcd_4bit_send_command@lcd 000F                           lcd_4bit_send_command@ret 0011  
                                       __end_of_bp 1019                                         __end_of_cp 1025  
                          ??_subtraction_operation 006C                       __end_of_ecu_keypad_get_value 675A  
         gpio_pin_direction_initialize@_pin_config 0001                       ?_lcd_4bit_send_char_data_pos 0018  
                                          ??_fputc 0004                                            ??_fputs 000C  
                                          ??_putch 0001                                            ??_sqrtf 0005  
                                       __pbssBANK0 00D2                                         __pbssBANK1 01DE  
                                       __pbssBANK2 0200                                initialize_var@count 0001  
                    subtraction_operation@num1_val 0063                      subtraction_operation@num2_val 0067  
                                          ?___flge 0063                                            ?___fleq 0001  
                                          ?___wmul 0001                                            ?_efgtoa 006F  
                                          ?_floorf 005B                                            ?_memcpy 0001  
                                          ?_memset 0001                            ??_ecu_keypad_initialize 0011  
                     ecu_keypad_initialize@columns 0014                                            ?_strcpy 0001  
                                        ?___xxtofl 000B                          ?_lcd_4bit_send_string_pos 0018  
                                    _keypad_values 0250                            ?_send_the_result_to_LCD 00CC  
                                  ??_sum_operation 004B                        ?_Application_Initialization 0001  
                                   _tris_registers 01CC                        ??_get_number_and_operartion 0022  
                        ??_lcd_4bit_send_char_data 0011                                            __Hparam 0000  
                                          __Lparam 0000                                _gpio_pin_initialize 73E4  
                                          ___fladd 4322                                            ___fldiv 4FEA  
                              _gpio_pin_read_logic 7002                                            ___awdiv 6D2A  
                                          ___flneg 7984                                            ___awmod 6EA8  
                                          ___flmul 47E2                                            ___flsub 7668  
                                          ___fltol 6868                                          ?_vfprintf 007C  
                                     __psmallconst 1000                                            __pcinit 71EA  
                                          __ramtop 1000                                            __ptext0 3DF6  
                                          __ptext1 77AC                                            __ptext2 77E8  
                                          __ptext3 675A                                            __ptext4 75C8  
                                          __ptext5 76AE                                            __ptext6 76EE  
                                          __ptext7 776E                                            __ptext8 5652  
                                          __ptext9 70AC                    ??_gpio_pin_direction_initialize 0003  
                            read_prec_or_width@fmt 0007                                            _ivln2_h 1065  
                                          _ivln2_l 1019                                         ??___xxtofl 000F  
                                          _scalbnf 5B3E                                   ___awmod@dividend 0001  
                                          efgtoa@c 0074                                            efgtoa@d 008B  
                                          efgtoa@e 008F                                            efgtoa@f 0070  
                                          efgtoa@g 00A2                                            efgtoa@h 0099  
                                          efgtoa@i 0097                                            efgtoa@l 009D  
                                          efgtoa@m 008D                                            efgtoa@n 00A6  
                                          efgtoa@p 0082                                            efgtoa@t 0084  
                                          efgtoa@u 00A8                                            efgtoa@w 0091  
                        ?_multiplication_operation 0032                               ?_gpio_pin_initialize 000B  
                             ?_gpio_pin_read_logic 0001                     __end_of_send_the_result_to_LCD 6868  
                                          _sprintf 76EE                               end_of_initialization 726E  
                                          floorf@e 0069                                            floorf@m 0065  
                                          floorf@u 006B                                            floorf@x 005B  
                                          memcpy@d 0008                                            memcpy@n 0005  
                                          memcpy@s 000A                                            fputc@fp 0003  
                                          memset@c 0003                                            memset@n 0005  
                                          memset@p 0007                                      __Lmediumconst 0000  
                                          fputs@fp 000B                                 _read_prec_or_width 70AC  
                          ??_lcd_4bit_send_command 0011                               _ecu_keypad_get_value 664A  
                                       _operation2 00F4                                         _operation3 00F3  
                                          powf@p_h 01A0                                            powf@p_l 016C  
                                          powf@s_h 0174                                            powf@t_h 0170  
                                          powf@s_l 0130                                            powf@t_l 0134  
                                          powf@z_h 0120                                            powf@z_l 0124  
                                __end_of_vfpfcnvrt 58D8                                         efgtoa@mode 0089  
                                       efgtoa@sign 00A1                              __end_of_lcd_send_4bit 7374  
                                          postdec1 0FE5                                            postdec2 0FDD  
                              ?_read_prec_or_width 0007                                            postinc0 0FEE  
                                          postinc1 0FE6                                            postinc2 0FDE  
                                 vfpfcnvrt@convarg 00AC                        _send_the_result_to_LCD$2094 0178  
                                       ??_vfprintf 007F                                            sqrtf@ix 0022  
                                          strcpy@d 0005                                _lcd_4bit_initialize 6B70  
                        _get_number_and_operartion 58D8                    __end_of_lcd_4bit_send_char_data 7514  
                                      ___fladd@grs 0041                         lcd_4bit_send_char_data@lcd 000F  
                       lcd_4bit_send_char_data@ret 0011                                      ___xxtofl@sign 0013  
                            ??_gpio_pin_initialize 000D                              ??_gpio_pin_read_logic 0004  
                             ??_read_prec_or_width 0009                                        ___fldiv@grs 0055  
                                      ___fldiv@rem 004E     get_third_number_and_third_operartion@operation 0021  
                     send_the_result_to_LCD@result 00CC                    lcd_4bit_send_char_data_pos@data 001B  
                             ?_lcd_4bit_initialize 0012                                        ___flmul@grs 0028  
                       ??_ecu_layer_Initialization 0016                      __end_of_convert_int_to_string 7618  
                            ?_ecu_keypad_get_value 000B                                _lcd_4bit_set_curser 7152  
                            ecu_led_turn_off@F3493 00DB                       __end_of_convert_arr_to_float 664A  
                      lcd_4bit_send_string_pos@lcd 0018                        lcd_4bit_send_string_pos@row 0019  
                      lcd_4bit_send_string_pos@str 001B                                     __end_of___flge 6A72  
                                   __end_of___fleq 7002                           ?_convert_float_to_string 00C6  
                                      vfpfcnvrt@ap 0079                                        vfpfcnvrt@cp 00B1  
                                      vfpfcnvrt@fp 0077                                     __end_of___wmul 7A3C  
                                   __end_of_efgtoa 3DF6                                     __end_of_floorf 5F84  
                                   __end_of_memcpy 7668                                         floorf@F521 01DE  
                                   __end_of_memset 7984                       ?_lcd_4bit_send_enable_enable 000B  
                    __end_of_subtraction_operation 7824                                     __end_of_strcpy 7912  
                              start_initialization 71EA                               ?_lcd_4bit_set_curser 0012  
                                      __end_of_lg2 1035                                        __end_of_abs 79F0  
                                      __end_of_pad 74B6                                        __end_of_ovt 1029  
            __end_of_gpio_pin_direction_initialize 63F6                      _gpio_pin_direction_initialize 62B2  
                            ??_lcd_4bit_initialize 0013                                       _counter_num1 00F8  
                                     _counter_num2 00F7                                       _counter_num3 00F6  
                            __end_of___fpclassifyf 6B70                        subtraction_operation@result 006B  
                                      vfprintf@fmt 007D                                           ??___flge 006B  
                                         ??___fleq 0009                                           ??___wmul 0005  
                                         ??_efgtoa 0075                                        __pdataBANK0 00F9  
                                      __pdataBANK1 01B8                                        __pdataBANK2 0250  
                                         ??_floorf 005F                                           ??_memcpy 0007  
                                         ??_memset 0007                                         memset@dest 0001  
                     lcd_4bit_send_command@command 0010                                  ecu_relay_on@F3482 00D8  
                                         ??_strcpy 0004                                          ___fladd@a 0036  
                                        ___fladd@b 0032                         convert_int_to_string@value 00C6  
                    __end_of_ecu_keypad_initialize 73E4                                          ___fldiv@a 0046  
                                        ___fldiv@b 0042                                          ___flmul@a 001D  
                                        ___flmul@b 0019                              ??_lcd_4bit_set_curser 0015  
                                        ___flsub@a 005F                                          ___flsub@b 005B  
                                    __pcstackBANK0 0080                                      __pcstackBANK1 0100  
                           ??_ecu_keypad_get_value 000E                                        _efgtoa$1538 0086  
                                        _dtoa$1507 001A                                           ?___fladd 0032  
                                   _initialize_var 6C62                    gpio_pin_write_logic@_pin_config 0001  
                                         ?___fldiv 0042                                           ?___awdiv 0001  
                                         ?___flneg 0001                                           ?___awmod 0001  
                                         ?___flmul 0019                                           ?___flsub 005B  
                                         ?___fltol 0001                          gpio_pin_write_logic@logic 0003  
                                     _keypad_value 00DE                                sum_operation@result 004A  
                   multiplication_operation@result 003A                                        __smallconst 1000  
                                         ?_scalbnf 0032                    convert_arr_to_float@count_power 008F  
                  convert_arr_to_float@counter_num 0082                                           ?_sprintf 00B2  
                             _convert_arr_to_float 6522                                          _powf$2100 0100  
                                        _powf$2101 0104                                          _powf$2102 0160  
                                        _powf$2103 013C                                          _powf$2104 0140  
                                        _powf$2105 0108                                          _powf$2106 010C  
                                        _powf$2107 0110                                          _powf$2108 0114  
                                        _powf$2109 0118                                          _powf$2095 0148  
                                        _powf$2096 015C                                          _powf$2097 014C  
                                        _powf$2098 019C                                          _powf$2099 0138  
                 __end_of_ecu_layer_Initialization 7A52                      convert_arr_to_float@num_value 0083  
                                   ___wmul@product 0005               get_number_and_operartion@lcd_counter 0020  
                            __end_of_sum_operation 77E8                         lcd_4bit_initialize@counter 0014  
                            sum_operation@num1_val 0042                              sum_operation@num2_val 0046  
    __end_of_get_third_number_and_third_operartion 5652            ??_get_third_number_and_third_operartion 0022  
           ?_get_third_number_and_third_operartion 001D              _get_third_number_and_third_operartion 5384  
                        ecu_relay_initialize@F3477 00D9                                        _lcd_counter 00FF  
                    __end_of_lcd_4bit_send_command 7572                             __end_of_initialize_var 6D2A  
                                        _operation 00F5             ecu_keypad_get_value@clear_rows_counter 0011  
             send_the_result_to_LCD@result_str_179 0150                   gpio_pin_direction_initialize@ret 0009  
                                       powf@yisint 0154                                          _vfpfcnvrt 5652  
                         _lcd_4bit_send_string_pos 7278                          ecu_keypad_initialize@rows 0013  
                       Division_operation@num1_val 005B                         Division_operation@num2_val 005F  
                                ___wmul@multiplier 0001                               ecu_led_turn_on@F3488 00DC  
                   lcd_4bit_send_char_data_pos@lcd 0018                     lcd_4bit_send_char_data_pos@ret 001C  
                   lcd_4bit_send_char_data_pos@row 0019                             gpio_pin_initialize@ret 000E  
              __end_of_lcd_4bit_send_char_data_pos 789C                        _lcd_4bit_send_char_data_pos 7860  
                            ?_convert_arr_to_float 0080                                         vfpfcnvrt@c 00B0  
                          gpio_pin_write_logic@ret 000A                           ?_lcd_4bit_send_char_data 000F  
                                        copy_data0 71FE                                          copy_data1 721E  
                                        copy_data2 723E                  __end_of_get_number_and_operartion 5B3E  
                   ecu_keypad_get_value@column_val 0010               get_number_and_operartion@counter_num 001F  
                    ??_lcd_4bit_send_char_data_pos 001C                                           __Hrparam 0000  
                     convert_float_to_string@value 00C6                                    ?_initialize_var 0001  
                   lcd_4bit_send_enable_enable@lcd 000B                                          memcpy@tmp 0007  
                   lcd_4bit_send_enable_enable@ret 000D                                         vfprintf@ap 007E  
                                         __Lrparam 0000                                         vfprintf@fp 007C  
                       convert_float_to_string@str 00CA                            ecu_led_initialize@F3483 00DD  
                           lcd_4bit_set_curser@lcd 0012                             lcd_4bit_set_curser@ret 0017  
                           lcd_4bit_set_curser@row 0013                                         ?_vfpfcnvrt 0077  
                      __end_of_gpio_pin_initialize 7450   get_third_number_and_third_operartion@lcd_counter 0020  
                      __end_of_gpio_pin_read_logic 70AC                           _multiplication_operation 7824  
                   gpio_pin_initialize@_pin_config 000B                                 ___fpclassifyf@F465 01E2  
         get_third_number_and_third_operartion@num 001D                           ecu_keypad_get_value@rows 0012  
                                       sprintf@fmt 00B4                                           ___xxtofl 5F84  
                                         __ptext10 7A16                                           __ptext11 340E  
                                         __ptext20 7450                                           __ptext12 78D8  
                                         __ptext21 772E                                           __ptext13 7618  
                                         __ptext30 5384                                           __ptext22 6DEE  
                                         __ptext14 7572                                           __ptext31 58D8  
                                         __ptext23 7A70                                           __ptext15 5D72  
                                         __ptext40 4C0C                                           __ptext32 7278  
                                         __ptext24 79BC                                           __ptext16 6A72  
                                         __ptext41 5B3E                                           __ptext33 7860  
                                         __ptext25 6EA8                                           __ptext17 6868  
                                         __ptext50 7A6A                                           __ptext42 47E2  
                                         __ptext34 7152                                           __ptext26 6D2A  
                                         __ptext18 6F58                                           __ptext51 7A3C  
                                         __ptext43 5F84                                           __ptext35 74B6  
                                         __ptext27 794C                                           __ptext19 6138  
                                         __ptext52 6B70                                           __ptext44 7668  
                                         __ptext36 664A                                           __ptext28 7824  
                                         __ptext53 7514                                           __ptext45 4322  
                                         __ptext37 7002                                           __ptext29 6C62  
                                         __ptext54 7304                                           __ptext46 7984  
                                         __ptext38 6522                                           __ptext55 7912  
                                         __ptext47 696E                                           __ptext39 10E4  
                                         __ptext56 7374                                           __ptext48 789C  
                                         __ptext57 73E4                                           __ptext49 4FEA  
                                         __ptext58 63F6                                           __ptext59 62B2  
                                       strcpy@dest 0001                                           _num1_val 00EF  
                                         _num2_val 00EB                                           _num3_val 00E7  
get_third_number_and_third_operartion@keypad_value 0024                              _convert_int_to_string 75C8  
                                         efgtoa@fp 006F                                           efgtoa@ne 0080  
                                         efgtoa@pp 0088                                           efgtoa@ou 0093  
                                         isa$xinst 0000                         __end_of_Division_operation 78D8  
                                         _vfprintf 776E                            convert_arr_to_float@arr 0080  
 get_third_number_and_third_operartion@counter_num 001F                          ?_ecu_layer_Initialization 0001  
                         ??_send_the_result_to_LCD 0080                           Division_operation@result 0063  
                      __end_of_lcd_4bit_initialize 6C62                                           memcpy@d1 0001  
                                         memcpy@s1 0003                             ??_convert_arr_to_float 0084  
                            _subtraction_operation 77E8                       __end_of_gpio_pin_write_logic 6522  
                                         scalbnf@n 0036                                           scalbnf@u 003C  
                                         scalbnf@x 0032                                           scalbnf@y 0040  
                                        sprintf@ap 00B9                   multiplication_operation@num1_val 0032  
                 multiplication_operation@num2_val 0036                       ??_Application_Initialization 0016  
                         ecu_led_turn_toggle@F3498 00DA                                          strcpy@src 0003  
                                      efgtoa@nmode 008A                                      _lcd_send_4bit 7304  
                                      ??_vfpfcnvrt 007A                        __end_of_lcd_4bit_set_curser 71EA  
                                         sprintf@f 00BA                                           sprintf@s 00B2  
                                   _port_registers 01B8                           convert_int_to_string@str 00C8  
                            _ecu_keypad_initialize 7374                                      ___fladd@signs 003E  
                                     ___fladd@aexp 003F                                       ___fladd@bexp 0040  
                     get_number_and_operartion@num 001D                        lcd_4bit_send_char_data@data 0010  
                           ?_convert_int_to_string 00C6                         ??_lcd_4bit_send_string_pos 001D  
                           lcd_4bit_initialize@lcd 0012                             lcd_4bit_initialize@ret 0015  
